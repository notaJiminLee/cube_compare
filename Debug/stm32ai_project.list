
stm32ai_project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000eb84  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00067f94  0800ed60  0800ed60  0001ed60  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08076cf4  08076cf4  00094d18  2**0
                  CONTENTS
  4 .ARM          00000008  08076cf4  08076cf4  00086cf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08076cfc  08076cfc  00094d18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08076cfc  08076cfc  00086cfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08076d00  08076d00  00086d00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00004d18  20000000  08076d04  00090000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000360  20004d18  0807ba1c  00094d18  2**2
                  ALLOC
 10 ._user_heap_stack 00001200  20005078  0807ba1c  00095078  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00094d18  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001a7ac  00000000  00000000  00094d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002abd  00000000  00000000  000af4f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00012b10  00000000  00000000  000b1fb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000ae0  00000000  00000000  000c4ac8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000020f8  00000000  00000000  000c55a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00028075  00000000  00000000  000c76a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00019bd8  00000000  00000000  000ef715  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000fe75c  00000000  00000000  001092ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      000000cb  00000000  00000000  00207a49  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003afc  00000000  00000000  00207b14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         000000cc  00000000  00000000  0020b610  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      000001b9  00000000  00000000  0020b6dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20004d18 	.word	0x20004d18
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800ed3c 	.word	0x0800ed3c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20004d1c 	.word	0x20004d1c
 800020c:	0800ed3c 	.word	0x0800ed3c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_uldivmod>:
 8000be8:	b953      	cbnz	r3, 8000c00 <__aeabi_uldivmod+0x18>
 8000bea:	b94a      	cbnz	r2, 8000c00 <__aeabi_uldivmod+0x18>
 8000bec:	2900      	cmp	r1, #0
 8000bee:	bf08      	it	eq
 8000bf0:	2800      	cmpeq	r0, #0
 8000bf2:	bf1c      	itt	ne
 8000bf4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bf8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bfc:	f000 b9a8 	b.w	8000f50 <__aeabi_idiv0>
 8000c00:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c04:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c08:	f000 f83a 	bl	8000c80 <__udivmoddi4>
 8000c0c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c14:	b004      	add	sp, #16
 8000c16:	4770      	bx	lr

08000c18 <__aeabi_f2lz>:
 8000c18:	ee07 0a90 	vmov	s15, r0
 8000c1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8000c20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c24:	d401      	bmi.n	8000c2a <__aeabi_f2lz+0x12>
 8000c26:	f000 b80b 	b.w	8000c40 <__aeabi_f2ulz>
 8000c2a:	eef1 7a67 	vneg.f32	s15, s15
 8000c2e:	b508      	push	{r3, lr}
 8000c30:	ee17 0a90 	vmov	r0, s15
 8000c34:	f000 f804 	bl	8000c40 <__aeabi_f2ulz>
 8000c38:	4240      	negs	r0, r0
 8000c3a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c3e:	bd08      	pop	{r3, pc}

08000c40 <__aeabi_f2ulz>:
 8000c40:	b5d0      	push	{r4, r6, r7, lr}
 8000c42:	f7ff fca1 	bl	8000588 <__aeabi_f2d>
 8000c46:	4b0c      	ldr	r3, [pc, #48]	; (8000c78 <__aeabi_f2ulz+0x38>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	4606      	mov	r6, r0
 8000c4c:	460f      	mov	r7, r1
 8000c4e:	f7ff fcf3 	bl	8000638 <__aeabi_dmul>
 8000c52:	f000 f97f 	bl	8000f54 <__aeabi_d2uiz>
 8000c56:	4604      	mov	r4, r0
 8000c58:	f7ff fc74 	bl	8000544 <__aeabi_ui2d>
 8000c5c:	4b07      	ldr	r3, [pc, #28]	; (8000c7c <__aeabi_f2ulz+0x3c>)
 8000c5e:	2200      	movs	r2, #0
 8000c60:	f7ff fcea 	bl	8000638 <__aeabi_dmul>
 8000c64:	4602      	mov	r2, r0
 8000c66:	460b      	mov	r3, r1
 8000c68:	4630      	mov	r0, r6
 8000c6a:	4639      	mov	r1, r7
 8000c6c:	f7ff fb2c 	bl	80002c8 <__aeabi_dsub>
 8000c70:	f000 f970 	bl	8000f54 <__aeabi_d2uiz>
 8000c74:	4621      	mov	r1, r4
 8000c76:	bdd0      	pop	{r4, r6, r7, pc}
 8000c78:	3df00000 	.word	0x3df00000
 8000c7c:	41f00000 	.word	0x41f00000

08000c80 <__udivmoddi4>:
 8000c80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c84:	9d08      	ldr	r5, [sp, #32]
 8000c86:	4604      	mov	r4, r0
 8000c88:	468e      	mov	lr, r1
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d14d      	bne.n	8000d2a <__udivmoddi4+0xaa>
 8000c8e:	428a      	cmp	r2, r1
 8000c90:	4694      	mov	ip, r2
 8000c92:	d969      	bls.n	8000d68 <__udivmoddi4+0xe8>
 8000c94:	fab2 f282 	clz	r2, r2
 8000c98:	b152      	cbz	r2, 8000cb0 <__udivmoddi4+0x30>
 8000c9a:	fa01 f302 	lsl.w	r3, r1, r2
 8000c9e:	f1c2 0120 	rsb	r1, r2, #32
 8000ca2:	fa20 f101 	lsr.w	r1, r0, r1
 8000ca6:	fa0c fc02 	lsl.w	ip, ip, r2
 8000caa:	ea41 0e03 	orr.w	lr, r1, r3
 8000cae:	4094      	lsls	r4, r2
 8000cb0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cb4:	0c21      	lsrs	r1, r4, #16
 8000cb6:	fbbe f6f8 	udiv	r6, lr, r8
 8000cba:	fa1f f78c 	uxth.w	r7, ip
 8000cbe:	fb08 e316 	mls	r3, r8, r6, lr
 8000cc2:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cc6:	fb06 f107 	mul.w	r1, r6, r7
 8000cca:	4299      	cmp	r1, r3
 8000ccc:	d90a      	bls.n	8000ce4 <__udivmoddi4+0x64>
 8000cce:	eb1c 0303 	adds.w	r3, ip, r3
 8000cd2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000cd6:	f080 811f 	bcs.w	8000f18 <__udivmoddi4+0x298>
 8000cda:	4299      	cmp	r1, r3
 8000cdc:	f240 811c 	bls.w	8000f18 <__udivmoddi4+0x298>
 8000ce0:	3e02      	subs	r6, #2
 8000ce2:	4463      	add	r3, ip
 8000ce4:	1a5b      	subs	r3, r3, r1
 8000ce6:	b2a4      	uxth	r4, r4
 8000ce8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000cec:	fb08 3310 	mls	r3, r8, r0, r3
 8000cf0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000cf4:	fb00 f707 	mul.w	r7, r0, r7
 8000cf8:	42a7      	cmp	r7, r4
 8000cfa:	d90a      	bls.n	8000d12 <__udivmoddi4+0x92>
 8000cfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000d00:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d04:	f080 810a 	bcs.w	8000f1c <__udivmoddi4+0x29c>
 8000d08:	42a7      	cmp	r7, r4
 8000d0a:	f240 8107 	bls.w	8000f1c <__udivmoddi4+0x29c>
 8000d0e:	4464      	add	r4, ip
 8000d10:	3802      	subs	r0, #2
 8000d12:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d16:	1be4      	subs	r4, r4, r7
 8000d18:	2600      	movs	r6, #0
 8000d1a:	b11d      	cbz	r5, 8000d24 <__udivmoddi4+0xa4>
 8000d1c:	40d4      	lsrs	r4, r2
 8000d1e:	2300      	movs	r3, #0
 8000d20:	e9c5 4300 	strd	r4, r3, [r5]
 8000d24:	4631      	mov	r1, r6
 8000d26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d2a:	428b      	cmp	r3, r1
 8000d2c:	d909      	bls.n	8000d42 <__udivmoddi4+0xc2>
 8000d2e:	2d00      	cmp	r5, #0
 8000d30:	f000 80ef 	beq.w	8000f12 <__udivmoddi4+0x292>
 8000d34:	2600      	movs	r6, #0
 8000d36:	e9c5 0100 	strd	r0, r1, [r5]
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	4631      	mov	r1, r6
 8000d3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d42:	fab3 f683 	clz	r6, r3
 8000d46:	2e00      	cmp	r6, #0
 8000d48:	d14a      	bne.n	8000de0 <__udivmoddi4+0x160>
 8000d4a:	428b      	cmp	r3, r1
 8000d4c:	d302      	bcc.n	8000d54 <__udivmoddi4+0xd4>
 8000d4e:	4282      	cmp	r2, r0
 8000d50:	f200 80f9 	bhi.w	8000f46 <__udivmoddi4+0x2c6>
 8000d54:	1a84      	subs	r4, r0, r2
 8000d56:	eb61 0303 	sbc.w	r3, r1, r3
 8000d5a:	2001      	movs	r0, #1
 8000d5c:	469e      	mov	lr, r3
 8000d5e:	2d00      	cmp	r5, #0
 8000d60:	d0e0      	beq.n	8000d24 <__udivmoddi4+0xa4>
 8000d62:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d66:	e7dd      	b.n	8000d24 <__udivmoddi4+0xa4>
 8000d68:	b902      	cbnz	r2, 8000d6c <__udivmoddi4+0xec>
 8000d6a:	deff      	udf	#255	; 0xff
 8000d6c:	fab2 f282 	clz	r2, r2
 8000d70:	2a00      	cmp	r2, #0
 8000d72:	f040 8092 	bne.w	8000e9a <__udivmoddi4+0x21a>
 8000d76:	eba1 010c 	sub.w	r1, r1, ip
 8000d7a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d7e:	fa1f fe8c 	uxth.w	lr, ip
 8000d82:	2601      	movs	r6, #1
 8000d84:	0c20      	lsrs	r0, r4, #16
 8000d86:	fbb1 f3f7 	udiv	r3, r1, r7
 8000d8a:	fb07 1113 	mls	r1, r7, r3, r1
 8000d8e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d92:	fb0e f003 	mul.w	r0, lr, r3
 8000d96:	4288      	cmp	r0, r1
 8000d98:	d908      	bls.n	8000dac <__udivmoddi4+0x12c>
 8000d9a:	eb1c 0101 	adds.w	r1, ip, r1
 8000d9e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000da2:	d202      	bcs.n	8000daa <__udivmoddi4+0x12a>
 8000da4:	4288      	cmp	r0, r1
 8000da6:	f200 80cb 	bhi.w	8000f40 <__udivmoddi4+0x2c0>
 8000daa:	4643      	mov	r3, r8
 8000dac:	1a09      	subs	r1, r1, r0
 8000dae:	b2a4      	uxth	r4, r4
 8000db0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000db4:	fb07 1110 	mls	r1, r7, r0, r1
 8000db8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000dbc:	fb0e fe00 	mul.w	lr, lr, r0
 8000dc0:	45a6      	cmp	lr, r4
 8000dc2:	d908      	bls.n	8000dd6 <__udivmoddi4+0x156>
 8000dc4:	eb1c 0404 	adds.w	r4, ip, r4
 8000dc8:	f100 31ff 	add.w	r1, r0, #4294967295
 8000dcc:	d202      	bcs.n	8000dd4 <__udivmoddi4+0x154>
 8000dce:	45a6      	cmp	lr, r4
 8000dd0:	f200 80bb 	bhi.w	8000f4a <__udivmoddi4+0x2ca>
 8000dd4:	4608      	mov	r0, r1
 8000dd6:	eba4 040e 	sub.w	r4, r4, lr
 8000dda:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000dde:	e79c      	b.n	8000d1a <__udivmoddi4+0x9a>
 8000de0:	f1c6 0720 	rsb	r7, r6, #32
 8000de4:	40b3      	lsls	r3, r6
 8000de6:	fa22 fc07 	lsr.w	ip, r2, r7
 8000dea:	ea4c 0c03 	orr.w	ip, ip, r3
 8000dee:	fa20 f407 	lsr.w	r4, r0, r7
 8000df2:	fa01 f306 	lsl.w	r3, r1, r6
 8000df6:	431c      	orrs	r4, r3
 8000df8:	40f9      	lsrs	r1, r7
 8000dfa:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000dfe:	fa00 f306 	lsl.w	r3, r0, r6
 8000e02:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e06:	0c20      	lsrs	r0, r4, #16
 8000e08:	fa1f fe8c 	uxth.w	lr, ip
 8000e0c:	fb09 1118 	mls	r1, r9, r8, r1
 8000e10:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e14:	fb08 f00e 	mul.w	r0, r8, lr
 8000e18:	4288      	cmp	r0, r1
 8000e1a:	fa02 f206 	lsl.w	r2, r2, r6
 8000e1e:	d90b      	bls.n	8000e38 <__udivmoddi4+0x1b8>
 8000e20:	eb1c 0101 	adds.w	r1, ip, r1
 8000e24:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e28:	f080 8088 	bcs.w	8000f3c <__udivmoddi4+0x2bc>
 8000e2c:	4288      	cmp	r0, r1
 8000e2e:	f240 8085 	bls.w	8000f3c <__udivmoddi4+0x2bc>
 8000e32:	f1a8 0802 	sub.w	r8, r8, #2
 8000e36:	4461      	add	r1, ip
 8000e38:	1a09      	subs	r1, r1, r0
 8000e3a:	b2a4      	uxth	r4, r4
 8000e3c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e40:	fb09 1110 	mls	r1, r9, r0, r1
 8000e44:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e48:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e4c:	458e      	cmp	lr, r1
 8000e4e:	d908      	bls.n	8000e62 <__udivmoddi4+0x1e2>
 8000e50:	eb1c 0101 	adds.w	r1, ip, r1
 8000e54:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e58:	d26c      	bcs.n	8000f34 <__udivmoddi4+0x2b4>
 8000e5a:	458e      	cmp	lr, r1
 8000e5c:	d96a      	bls.n	8000f34 <__udivmoddi4+0x2b4>
 8000e5e:	3802      	subs	r0, #2
 8000e60:	4461      	add	r1, ip
 8000e62:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e66:	fba0 9402 	umull	r9, r4, r0, r2
 8000e6a:	eba1 010e 	sub.w	r1, r1, lr
 8000e6e:	42a1      	cmp	r1, r4
 8000e70:	46c8      	mov	r8, r9
 8000e72:	46a6      	mov	lr, r4
 8000e74:	d356      	bcc.n	8000f24 <__udivmoddi4+0x2a4>
 8000e76:	d053      	beq.n	8000f20 <__udivmoddi4+0x2a0>
 8000e78:	b15d      	cbz	r5, 8000e92 <__udivmoddi4+0x212>
 8000e7a:	ebb3 0208 	subs.w	r2, r3, r8
 8000e7e:	eb61 010e 	sbc.w	r1, r1, lr
 8000e82:	fa01 f707 	lsl.w	r7, r1, r7
 8000e86:	fa22 f306 	lsr.w	r3, r2, r6
 8000e8a:	40f1      	lsrs	r1, r6
 8000e8c:	431f      	orrs	r7, r3
 8000e8e:	e9c5 7100 	strd	r7, r1, [r5]
 8000e92:	2600      	movs	r6, #0
 8000e94:	4631      	mov	r1, r6
 8000e96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e9a:	f1c2 0320 	rsb	r3, r2, #32
 8000e9e:	40d8      	lsrs	r0, r3
 8000ea0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ea4:	fa21 f303 	lsr.w	r3, r1, r3
 8000ea8:	4091      	lsls	r1, r2
 8000eaa:	4301      	orrs	r1, r0
 8000eac:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000eb0:	fa1f fe8c 	uxth.w	lr, ip
 8000eb4:	fbb3 f0f7 	udiv	r0, r3, r7
 8000eb8:	fb07 3610 	mls	r6, r7, r0, r3
 8000ebc:	0c0b      	lsrs	r3, r1, #16
 8000ebe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000ec2:	fb00 f60e 	mul.w	r6, r0, lr
 8000ec6:	429e      	cmp	r6, r3
 8000ec8:	fa04 f402 	lsl.w	r4, r4, r2
 8000ecc:	d908      	bls.n	8000ee0 <__udivmoddi4+0x260>
 8000ece:	eb1c 0303 	adds.w	r3, ip, r3
 8000ed2:	f100 38ff 	add.w	r8, r0, #4294967295
 8000ed6:	d22f      	bcs.n	8000f38 <__udivmoddi4+0x2b8>
 8000ed8:	429e      	cmp	r6, r3
 8000eda:	d92d      	bls.n	8000f38 <__udivmoddi4+0x2b8>
 8000edc:	3802      	subs	r0, #2
 8000ede:	4463      	add	r3, ip
 8000ee0:	1b9b      	subs	r3, r3, r6
 8000ee2:	b289      	uxth	r1, r1
 8000ee4:	fbb3 f6f7 	udiv	r6, r3, r7
 8000ee8:	fb07 3316 	mls	r3, r7, r6, r3
 8000eec:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ef0:	fb06 f30e 	mul.w	r3, r6, lr
 8000ef4:	428b      	cmp	r3, r1
 8000ef6:	d908      	bls.n	8000f0a <__udivmoddi4+0x28a>
 8000ef8:	eb1c 0101 	adds.w	r1, ip, r1
 8000efc:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f00:	d216      	bcs.n	8000f30 <__udivmoddi4+0x2b0>
 8000f02:	428b      	cmp	r3, r1
 8000f04:	d914      	bls.n	8000f30 <__udivmoddi4+0x2b0>
 8000f06:	3e02      	subs	r6, #2
 8000f08:	4461      	add	r1, ip
 8000f0a:	1ac9      	subs	r1, r1, r3
 8000f0c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f10:	e738      	b.n	8000d84 <__udivmoddi4+0x104>
 8000f12:	462e      	mov	r6, r5
 8000f14:	4628      	mov	r0, r5
 8000f16:	e705      	b.n	8000d24 <__udivmoddi4+0xa4>
 8000f18:	4606      	mov	r6, r0
 8000f1a:	e6e3      	b.n	8000ce4 <__udivmoddi4+0x64>
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	e6f8      	b.n	8000d12 <__udivmoddi4+0x92>
 8000f20:	454b      	cmp	r3, r9
 8000f22:	d2a9      	bcs.n	8000e78 <__udivmoddi4+0x1f8>
 8000f24:	ebb9 0802 	subs.w	r8, r9, r2
 8000f28:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f2c:	3801      	subs	r0, #1
 8000f2e:	e7a3      	b.n	8000e78 <__udivmoddi4+0x1f8>
 8000f30:	4646      	mov	r6, r8
 8000f32:	e7ea      	b.n	8000f0a <__udivmoddi4+0x28a>
 8000f34:	4620      	mov	r0, r4
 8000f36:	e794      	b.n	8000e62 <__udivmoddi4+0x1e2>
 8000f38:	4640      	mov	r0, r8
 8000f3a:	e7d1      	b.n	8000ee0 <__udivmoddi4+0x260>
 8000f3c:	46d0      	mov	r8, sl
 8000f3e:	e77b      	b.n	8000e38 <__udivmoddi4+0x1b8>
 8000f40:	3b02      	subs	r3, #2
 8000f42:	4461      	add	r1, ip
 8000f44:	e732      	b.n	8000dac <__udivmoddi4+0x12c>
 8000f46:	4630      	mov	r0, r6
 8000f48:	e709      	b.n	8000d5e <__udivmoddi4+0xde>
 8000f4a:	4464      	add	r4, ip
 8000f4c:	3802      	subs	r0, #2
 8000f4e:	e742      	b.n	8000dd6 <__udivmoddi4+0x156>

08000f50 <__aeabi_idiv0>:
 8000f50:	4770      	bx	lr
 8000f52:	bf00      	nop

08000f54 <__aeabi_d2uiz>:
 8000f54:	004a      	lsls	r2, r1, #1
 8000f56:	d211      	bcs.n	8000f7c <__aeabi_d2uiz+0x28>
 8000f58:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000f5c:	d211      	bcs.n	8000f82 <__aeabi_d2uiz+0x2e>
 8000f5e:	d50d      	bpl.n	8000f7c <__aeabi_d2uiz+0x28>
 8000f60:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000f64:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000f68:	d40e      	bmi.n	8000f88 <__aeabi_d2uiz+0x34>
 8000f6a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000f6e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000f72:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000f76:	fa23 f002 	lsr.w	r0, r3, r2
 8000f7a:	4770      	bx	lr
 8000f7c:	f04f 0000 	mov.w	r0, #0
 8000f80:	4770      	bx	lr
 8000f82:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000f86:	d102      	bne.n	8000f8e <__aeabi_d2uiz+0x3a>
 8000f88:	f04f 30ff 	mov.w	r0, #4294967295
 8000f8c:	4770      	bx	lr
 8000f8e:	f04f 0000 	mov.w	r0, #0
 8000f92:	4770      	bx	lr
 8000f94:	0000      	movs	r0, r0
	...

08000f98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000f98:	b510      	push	{r4, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000f9a:	2300      	movs	r3, #0
{
 8000f9c:	b094      	sub	sp, #80	; 0x50
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f9e:	492c      	ldr	r1, [pc, #176]	; (8001050 <SystemClock_Config+0xb8>)

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000fa0:	2001      	movs	r0, #1
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fa2:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000fa4:	2402      	movs	r4, #2
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fa6:	9302      	str	r3, [sp, #8]
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fa8:	930a      	str	r3, [sp, #40]	; 0x28
 8000faa:	930d      	str	r3, [sp, #52]	; 0x34
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000fac:	4a29      	ldr	r2, [pc, #164]	; (8001054 <SystemClock_Config+0xbc>)
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000fae:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fb2:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8000fb6:	e9cd 3305 	strd	r3, r3, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fba:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000fbc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000fc0:	640b      	str	r3, [r1, #64]	; 0x40
 8000fc2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000fc4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000fc8:	9300      	str	r3, [sp, #0]
 8000fca:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000fcc:	6813      	ldr	r3, [r2, #0]
 8000fce:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000fd2:	6013      	str	r3, [r2, #0]
 8000fd4:	6813      	ldr	r3, [r2, #0]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000fd6:	2210      	movs	r2, #16
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000fd8:	9408      	str	r4, [sp, #32]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000fda:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000fde:	9301      	str	r3, [sp, #4]
 8000fe0:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fe2:	23d8      	movs	r3, #216	; 0xd8
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000fe4:	e9cd 020b 	strd	r0, r2, [sp, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fe8:	2208      	movs	r2, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 216;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 9;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000fea:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fec:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8001040 <SystemClock_Config+0xa8>
 8000ff0:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8000ff4:	2202      	movs	r2, #2
 8000ff6:	2309      	movs	r3, #9
 8000ff8:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8000ffc:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001000:	f000 fdaa 	bl	8001b58 <HAL_RCC_OscConfig>
 8001004:	b108      	cbz	r0, 800100a <SystemClock_Config+0x72>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001006:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001008:	e7fe      	b.n	8001008 <SystemClock_Config+0x70>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800100a:	f000 fd6b 	bl	8001ae4 <HAL_PWREx_EnableOverDrive>
 800100e:	b108      	cbz	r0, 8001014 <SystemClock_Config+0x7c>
 8001010:	b672      	cpsid	i
  while (1)
 8001012:	e7fe      	b.n	8001012 <SystemClock_Config+0x7a>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001014:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001018:	2200      	movs	r2, #0
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800101a:	a802      	add	r0, sp, #8
 800101c:	2107      	movs	r1, #7
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800101e:	ed9f 7b0a 	vldr	d7, [pc, #40]	; 8001048 <SystemClock_Config+0xb0>
 8001022:	e9cd 2304 	strd	r2, r3, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001026:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800102a:	ed8d 7b02 	vstr	d7, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800102e:	9306      	str	r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8001030:	f000 ff80 	bl	8001f34 <HAL_RCC_ClockConfig>
 8001034:	b108      	cbz	r0, 800103a <SystemClock_Config+0xa2>
 8001036:	b672      	cpsid	i
  while (1)
 8001038:	e7fe      	b.n	8001038 <SystemClock_Config+0xa0>
}
 800103a:	b014      	add	sp, #80	; 0x50
 800103c:	bd10      	pop	{r4, pc}
 800103e:	bf00      	nop
 8001040:	00000002 	.word	0x00000002
 8001044:	00000000 	.word	0x00000000
 8001048:	0000000f 	.word	0x0000000f
 800104c:	00000002 	.word	0x00000002
 8001050:	40023800 	.word	0x40023800
 8001054:	40007000 	.word	0x40007000

08001058 <main>:
{
 8001058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800105c:	f5ad 4d7b 	sub.w	sp, sp, #64256	; 0xfb00
  ai_handle network = AI_HANDLE_NULL;
 8001060:	2600      	movs	r6, #0
  ai_network_params ai_params = {
 8001062:	f04f 1a01 	mov.w	sl, #65537	; 0x10001
  ai_buffer ai_input[AI_NETWORK_IN_NUM] = AI_NETWORK_IN;
 8001066:	4da0      	ldr	r5, [pc, #640]	; (80012e8 <main+0x290>)
{
 8001068:	b0af      	sub	sp, #188	; 0xbc
  ai_network_params ai_params = {
 800106a:	2701      	movs	r7, #1
  ai_buffer ai_input[AI_NETWORK_IN_NUM] = AI_NETWORK_IN;
 800106c:	f60d 33b8 	addw	r3, sp, #3000	; 0xbb8
 8001070:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  ai_buffer ai_output[AI_NETWORK_OUT_NUM] = AI_NETWORK_OUT;
 8001074:	f10d 0844 	add.w	r8, sp, #68	; 0x44
  ai_handle network = AI_HANDLE_NULL;
 8001078:	f6a3 33a4 	subw	r3, r3, #2980	; 0xba4
  ai_buffer ai_input[AI_NETWORK_IN_NUM] = AI_NETWORK_IN;
 800107c:	46cb      	mov	fp, r9
  ai_buffer ai_output[AI_NETWORK_OUT_NUM] = AI_NETWORK_OUT;
 800107e:	46c4      	mov	ip, r8
  ai_handle network = AI_HANDLE_NULL;
 8001080:	601e      	str	r6, [r3, #0]
  ai_buffer ai_output[AI_NETWORK_OUT_NUM] = AI_NETWORK_OUT;
 8001082:	f60d 33b8 	addw	r3, sp, #3000	; 0xbb8
  ai_network_params ai_params = {
 8001086:	f6a3 345c 	subw	r4, r3, #2908	; 0xb5c
 800108a:	4b98      	ldr	r3, [pc, #608]	; (80012ec <main+0x294>)
 800108c:	e9c4 3a00 	strd	r3, sl, [r4]
 8001090:	4b97      	ldr	r3, [pc, #604]	; (80012f0 <main+0x298>)
 8001092:	8127      	strh	r7, [r4, #8]
 8001094:	60e3      	str	r3, [r4, #12]
  ai_buffer ai_input[AI_NETWORK_IN_NUM] = AI_NETWORK_IN;
 8001096:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001098:	e8ab 000f 	stmia.w	fp!, {r0, r1, r2, r3}
  ai_buffer ai_output[AI_NETWORK_OUT_NUM] = AI_NETWORK_OUT;
 800109c:	f105 0e08 	add.w	lr, r5, #8
  ai_buffer ai_input[AI_NETWORK_IN_NUM] = AI_NETWORK_IN;
 80010a0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80010a4:	e88b 0003 	stmia.w	fp, {r0, r1}
  ai_buffer ai_output[AI_NETWORK_OUT_NUM] = AI_NETWORK_OUT;
 80010a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80010ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80010b0:	e89e 0003 	ldmia.w	lr, {r0, r1}
 80010b4:	e88c 0003 	stmia.w	ip, {r0, r1}
    AI_NETWORK_DATA_WEIGHTS(ai_network_data_weights_get()),
 80010b8:	f002 ff5c 	bl	8003f74 <ai_network_data_weights_get>
  ai_input[0].data = AI_HANDLE_PTR(in_data);
 80010bc:	ab96      	add	r3, sp, #600	; 0x258
  ai_network_params ai_params = {
 80010be:	f64f 32b8 	movw	r2, #64440	; 0xfbb8
 80010c2:	f8c4 a01c 	str.w	sl, [r4, #28]
  ai_input[0].data = AI_HANDLE_PTR(in_data);
 80010c6:	f8c9 3010 	str.w	r3, [r9, #16]
  ai_network_params ai_params = {
 80010ca:	f64e 5360 	movw	r3, #60768	; 0xed60
 80010ce:	446a      	add	r2, sp
 80010d0:	8427      	strh	r7, [r4, #32]
 80010d2:	6263      	str	r3, [r4, #36]	; 0x24
 80010d4:	1ad3      	subs	r3, r2, r3
 80010d6:	62e6      	str	r6, [r4, #44]	; 0x2c
  ai_input[0].n_batches = 1;
 80010d8:	f8a9 7004 	strh.w	r7, [r9, #4]
  ai_network_params ai_params = {
 80010dc:	9303      	str	r3, [sp, #12]
 80010de:	62a3      	str	r3, [r4, #40]	; 0x28
 80010e0:	4b84      	ldr	r3, [pc, #528]	; (80012f4 <main+0x29c>)
  ai_output[0].n_batches = 1;
 80010e2:	f8a8 7004 	strh.w	r7, [r8, #4]
  ai_network_params ai_params = {
 80010e6:	61a3      	str	r3, [r4, #24]
  ai_output[0].data = AI_HANDLE_PTR(out_data);
 80010e8:	ab32      	add	r3, sp, #200	; 0xc8
  ai_network_params ai_params = {
 80010ea:	e9c4 0604 	strd	r0, r6, [r4, #16]
  ai_output[0].data = AI_HANDLE_PTR(out_data);
 80010ee:	f8c8 3010 	str.w	r3, [r8, #16]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80010f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010f6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80010fa:	487f      	ldr	r0, [pc, #508]	; (80012f8 <main+0x2a0>)
 80010fc:	f8c0 6250 	str.w	r6, [r0, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001100:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001104:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001108:	6943      	ldr	r3, [r0, #20]
 800110a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800110e:	6143      	str	r3, [r0, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001110:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001114:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8001118:	f8c0 6084 	str.w	r6, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800111c:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8001120:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001124:	f643 75e0 	movw	r5, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001128:	f3c3 06c9 	ubfx	r6, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800112c:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001130:	015c      	lsls	r4, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001132:	ea04 0105 	and.w	r1, r4, r5
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001136:	4633      	mov	r3, r6
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001138:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800113c:	3b01      	subs	r3, #1
 800113e:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001140:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
 8001144:	d1f8      	bne.n	8001138 <main+0xe0>
    } while(sets-- != 0U);
 8001146:	3c20      	subs	r4, #32
 8001148:	f114 0f20 	cmn.w	r4, #32
 800114c:	d1f1      	bne.n	8001132 <main+0xda>
 800114e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8001152:	6943      	ldr	r3, [r0, #20]
 8001154:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001158:	6143      	str	r3, [r0, #20]
 800115a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800115e:	f3bf 8f6f 	isb	sy
  HAL_Init();
 8001162:	f000 fa95 	bl	8001690 <HAL_Init>
  SystemClock_Config();
 8001166:	f7ff ff17 	bl	8000f98 <SystemClock_Config>
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800116a:	4b64      	ldr	r3, [pc, #400]	; (80012fc <main+0x2a4>)
 800116c:	aa06      	add	r2, sp, #24
  hcrc.Instance = CRC;
 800116e:	4864      	ldr	r0, [pc, #400]	; (8001300 <main+0x2a8>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001170:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001172:	f041 0101 	orr.w	r1, r1, #1
 8001176:	6319      	str	r1, [r3, #48]	; 0x30
 8001178:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800117a:	f001 0101 	and.w	r1, r1, #1
 800117e:	6011      	str	r1, [r2, #0]
 8001180:	6812      	ldr	r2, [r2, #0]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001182:	aa07      	add	r2, sp, #28
 8001184:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001186:	f041 0102 	orr.w	r1, r1, #2
 800118a:	6319      	str	r1, [r3, #48]	; 0x30
 800118c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800118e:	4613      	mov	r3, r2
 8001190:	f001 0102 	and.w	r1, r1, #2
 8001194:	6011      	str	r1, [r2, #0]
  hcrc.Instance = CRC;
 8001196:	4a5b      	ldr	r2, [pc, #364]	; (8001304 <main+0x2ac>)
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001198:	681b      	ldr	r3, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 800119a:	2300      	movs	r3, #0
  hcrc.Instance = CRC;
 800119c:	6002      	str	r2, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 800119e:	2201      	movs	r2, #1
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80011a0:	8083      	strh	r3, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80011a2:	6202      	str	r2, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80011a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80011a8:	f000 faf6 	bl	8001798 <HAL_CRC_Init>
 80011ac:	b108      	cbz	r0, 80011b2 <main+0x15a>
  __ASM volatile ("cpsid i" : : : "memory");
 80011ae:	b672      	cpsid	i
  while (1)
 80011b0:	e7fe      	b.n	80011b0 <main+0x158>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80011b2:	f60d 33b8 	addw	r3, sp, #3000	; 0xbb8
  htim1.Instance = TIM1;
 80011b6:	4c54      	ldr	r4, [pc, #336]	; (8001308 <main+0x2b0>)
  htim1.Init.Prescaler = 21600;
 80011b8:	4954      	ldr	r1, [pc, #336]	; (800130c <main+0x2b4>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80011ba:	ad23      	add	r5, sp, #140	; 0x8c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011bc:	f6a3 3698 	subw	r6, r3, #2968	; 0xb98
  htim1.Init.Prescaler = 21600;
 80011c0:	f245 4360 	movw	r3, #21600	; 0x5460
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011c4:	60a0      	str	r0, [r4, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011c6:	60b0      	str	r0, [r6, #8]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011c8:	61a0      	str	r0, [r4, #24]
  htim1.Init.Prescaler = 21600;
 80011ca:	e9c4 1300 	strd	r1, r3, [r4]
  htim1.Init.Period = 65535;
 80011ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80011d2:	e9c5 0000 	strd	r0, r0, [r5]
 80011d6:	e9c5 0002 	strd	r0, r0, [r5, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011da:	e9c6 0000 	strd	r0, r0, [r6]
  htim1.Init.RepetitionCounter = 0;
 80011de:	e9c4 0004 	strd	r0, r0, [r4, #16]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80011e2:	4620      	mov	r0, r4
  htim1.Init.Period = 65535;
 80011e4:	60e3      	str	r3, [r4, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80011e6:	f001 fa61 	bl	80026ac <HAL_TIM_Base_Init>
 80011ea:	b108      	cbz	r0, 80011f0 <main+0x198>
 80011ec:	b672      	cpsid	i
  while (1)
 80011ee:	e7fe      	b.n	80011ee <main+0x196>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80011f0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80011f4:	a923      	add	r1, sp, #140	; 0x8c
 80011f6:	4620      	mov	r0, r4
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80011f8:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80011fa:	f001 fb65 	bl	80028c8 <HAL_TIM_ConfigClockSource>
 80011fe:	b108      	cbz	r0, 8001204 <main+0x1ac>
 8001200:	b672      	cpsid	i
  while (1)
 8001202:	e7fe      	b.n	8001202 <main+0x1aa>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001204:	2200      	movs	r2, #0
 8001206:	2300      	movs	r3, #0
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001208:	60b0      	str	r0, [r6, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800120a:	a908      	add	r1, sp, #32
 800120c:	4620      	mov	r0, r4
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800120e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001212:	f001 fc09 	bl	8002a28 <HAL_TIMEx_MasterConfigSynchronization>
 8001216:	b9b8      	cbnz	r0, 8001248 <main+0x1f0>
  huart1.Instance = USART1;
 8001218:	4e3d      	ldr	r6, [pc, #244]	; (8001310 <main+0x2b8>)
  huart1.Init.BaudRate = 115200;
 800121a:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 800121e:	4a3d      	ldr	r2, [pc, #244]	; (8001314 <main+0x2bc>)
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001220:	f04f 090c 	mov.w	r9, #12
  huart1.Init.Parity = UART_PARITY_NONE;
 8001224:	6130      	str	r0, [r6, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001226:	f8c6 9014 	str.w	r9, [r6, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800122a:	e9c6 0002 	strd	r0, r0, [r6, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800122e:	e9c6 0006 	strd	r0, r0, [r6, #24]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001232:	e9c6 0008 	strd	r0, r0, [r6, #32]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001236:	4630      	mov	r0, r6
  huart1.Init.BaudRate = 115200;
 8001238:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800123c:	f001 fe10 	bl	8002e60 <HAL_UART_Init>
 8001240:	4607      	mov	r7, r0
 8001242:	b118      	cbz	r0, 800124c <main+0x1f4>
 8001244:	b672      	cpsid	i
  while (1)
 8001246:	e7fe      	b.n	8001246 <main+0x1ee>
 8001248:	b672      	cpsid	i
 800124a:	e7fe      	b.n	800124a <main+0x1f2>
  HAL_TIM_Base_Start(&htim1);
 800124c:	4620      	mov	r0, r4
  buf_len = sprintf(buf, "creating..\r\n");
 800124e:	ad23      	add	r5, sp, #140	; 0x8c
  HAL_TIM_Base_Start(&htim1);
 8001250:	f001 fae2 	bl	8002818 <HAL_TIM_Base_Start>
  uint32_t init_time = __HAL_TIM_GET_COUNTER(&htim1);
 8001254:	6822      	ldr	r2, [r4, #0]
  buf_len = sprintf(buf, "creating..\r\n");
 8001256:	4b30      	ldr	r3, [pc, #192]	; (8001318 <main+0x2c0>)
  uint32_t init_time = __HAL_TIM_GET_COUNTER(&htim1);
 8001258:	f8d2 8024 	ldr.w	r8, [r2, #36]	; 0x24
  buf_len = sprintf(buf, "creating..\r\n");
 800125c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800125e:	c507      	stmia	r5!, {r0, r1, r2}
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001260:	464a      	mov	r2, r9
  buf_len = sprintf(buf, "creating..\r\n");
 8001262:	702b      	strb	r3, [r5, #0]
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001264:	a923      	add	r1, sp, #140	; 0x8c
 8001266:	2364      	movs	r3, #100	; 0x64
 8001268:	4630      	mov	r0, r6
 800126a:	f001 ff03 	bl	8003074 <HAL_UART_Transmit>
  ai_err = ai_network_create(&network, AI_NETWORK_DATA_CONFIG);
 800126e:	4639      	mov	r1, r7
 8001270:	a805      	add	r0, sp, #20
 8001272:	f001 ffbd 	bl	80031f0 <ai_network_create>
  if (ai_err.type != AI_ERROR_NONE)
 8001276:	f010 05ff 	ands.w	r5, r0, #255	; 0xff
 800127a:	d011      	beq.n	80012a0 <main+0x248>
    buf_len = sprintf(buf, "Error: could not create NN instance\r\n");
 800127c:	4d27      	ldr	r5, [pc, #156]	; (800131c <main+0x2c4>)
 800127e:	ac23      	add	r4, sp, #140	; 0x8c
 8001280:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001282:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001284:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001286:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001288:	e895 0003 	ldmia.w	r5, {r0, r1}
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 800128c:	2364      	movs	r3, #100	; 0x64
 800128e:	2225      	movs	r2, #37	; 0x25
    buf_len = sprintf(buf, "Error: could not create NN instance\r\n");
 8001290:	f844 0b04 	str.w	r0, [r4], #4
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001294:	4630      	mov	r0, r6
    buf_len = sprintf(buf, "Error: could not create NN instance\r\n");
 8001296:	8021      	strh	r1, [r4, #0]
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001298:	a923      	add	r1, sp, #140	; 0x8c
 800129a:	f001 feeb 	bl	8003074 <HAL_UART_Transmit>
    while(1);
 800129e:	e7fe      	b.n	800129e <main+0x246>
  buf_len = sprintf(buf, "created\r\n");
 80012a0:	4a1f      	ldr	r2, [pc, #124]	; (8001320 <main+0x2c8>)
 80012a2:	af23      	add	r7, sp, #140	; 0x8c
  if (!ai_network_init(network, &ai_params))
 80012a4:	f10d 0914 	add.w	r9, sp, #20
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80012a8:	2364      	movs	r3, #100	; 0x64
  buf_len = sprintf(buf, "created\r\n");
 80012aa:	ca07      	ldmia	r2, {r0, r1, r2}
 80012ac:	c703      	stmia	r7!, {r0, r1}
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80012ae:	a923      	add	r1, sp, #140	; 0x8c
  buf_len = sprintf(buf, "created\r\n");
 80012b0:	803a      	strh	r2, [r7, #0]
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80012b2:	4630      	mov	r0, r6
 80012b4:	2209      	movs	r2, #9
 80012b6:	f001 fedd 	bl	8003074 <HAL_UART_Transmit>
  if (!ai_network_init(network, &ai_params))
 80012ba:	a917      	add	r1, sp, #92	; 0x5c
 80012bc:	f8d9 0000 	ldr.w	r0, [r9]
 80012c0:	f001 ffa6 	bl	8003210 <ai_network_init>
 80012c4:	bb80      	cbnz	r0, 8001328 <main+0x2d0>
    ai_err = ai_network_get_error(network);
 80012c6:	f8d9 0000 	ldr.w	r0, [r9]
 80012ca:	f001 ff8f 	bl	80031ec <ai_network_get_error>
    buf_len = sprintf(buf, "ai_network_init error - type=%d code=%d\r\n", ai_err.type, ai_err.code);
 80012ce:	4915      	ldr	r1, [pc, #84]	; (8001324 <main+0x2cc>)
 80012d0:	0a03      	lsrs	r3, r0, #8
 80012d2:	b2c2      	uxtb	r2, r0
 80012d4:	a823      	add	r0, sp, #140	; 0x8c
 80012d6:	f00b fb7f 	bl	800c9d8 <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80012da:	2364      	movs	r3, #100	; 0x64
 80012dc:	b282      	uxth	r2, r0
 80012de:	a923      	add	r1, sp, #140	; 0x8c
 80012e0:	4630      	mov	r0, r6
 80012e2:	f001 fec7 	bl	8003074 <HAL_UART_Transmit>
    while(1);
 80012e6:	e7fe      	b.n	80012e6 <main+0x28e>
 80012e8:	0800ed60 	.word	0x0800ed60
 80012ec:	40040440 	.word	0x40040440
 80012f0:	0005aaa8 	.word	0x0005aaa8
 80012f4:	00040440 	.word	0x00040440
 80012f8:	e000ed00 	.word	0xe000ed00
 80012fc:	40023800 	.word	0x40023800
 8001300:	20004d34 	.word	0x20004d34
 8001304:	40023000 	.word	0x40023000
 8001308:	20004d58 	.word	0x20004d58
 800130c:	40010000 	.word	0x40010000
 8001310:	20004da4 	.word	0x20004da4
 8001314:	40011000 	.word	0x40011000
 8001318:	0800ed94 	.word	0x0800ed94
 800131c:	0800eda4 	.word	0x0800eda4
 8001320:	0800edcc 	.word	0x0800edcc
 8001324:	0800edd8 	.word	0x0800edd8
  buf_len = sprintf(buf, "inited\r\n");
 8001328:	4a3b      	ldr	r2, [pc, #236]	; (8001418 <main+0x3c0>)
 800132a:	f10d 0c8c 	add.w	ip, sp, #140	; 0x8c
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 800132e:	2364      	movs	r3, #100	; 0x64
 8001330:	af96      	add	r7, sp, #600	; 0x258
    buf_len = sprintf(buf, "%d, for..\r\n", i);
 8001332:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8001428 <main+0x3d0>
  buf_len = sprintf(buf, "inited\r\n");
 8001336:	ca07      	ldmia	r2, {r0, r1, r2}
 8001338:	e8ac 0003 	stmia.w	ip!, {r0, r1}
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 800133c:	a923      	add	r1, sp, #140	; 0x8c
  buf_len = sprintf(buf, "inited\r\n");
 800133e:	f88c 2000 	strb.w	r2, [ip]
  HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001342:	4630      	mov	r0, r6
 8001344:	2208      	movs	r2, #8
 8001346:	f001 fe95 	bl	8003074 <HAL_UART_Transmit>
    buf_len = sprintf(buf, "%d, for..\r\n", i);
 800134a:	462a      	mov	r2, r5
 800134c:	4649      	mov	r1, r9
  for (uint32_t i = 0; i < AI_NETWORK_IN_1_SIZE; i++)
 800134e:	3501      	adds	r5, #1
    buf_len = sprintf(buf, "%d, for..\r\n", i);
 8001350:	a823      	add	r0, sp, #140	; 0x8c
 8001352:	f00b fb41 	bl	800c9d8 <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 8001356:	2364      	movs	r3, #100	; 0x64
 8001358:	b282      	uxth	r2, r0
 800135a:	a923      	add	r1, sp, #140	; 0x8c
 800135c:	4630      	mov	r0, r6
 800135e:	f001 fe89 	bl	8003074 <HAL_UART_Transmit>
    ((int8_t *)in_data)[i] = (int8_t)2;
 8001362:	2302      	movs	r3, #2
  for (uint32_t i = 0; i < AI_NETWORK_IN_1_SIZE; i++)
 8001364:	f5b5 6f40 	cmp.w	r5, #3072	; 0xc00
    ((int8_t *)in_data)[i] = (int8_t)2;
 8001368:	f807 3b01 	strb.w	r3, [r7], #1
  for (uint32_t i = 0; i < AI_NETWORK_IN_1_SIZE; i++)
 800136c:	d1ed      	bne.n	800134a <main+0x2f2>
  init_time = __HAL_TIM_GET_COUNTER(&htim1) - init_time;
 800136e:	6823      	ldr	r3, [r4, #0]
  nbatch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 8001370:	a90b      	add	r1, sp, #44	; 0x2c
 8001372:	9805      	ldr	r0, [sp, #20]
 8001374:	ad05      	add	r5, sp, #20
  init_time = __HAL_TIM_GET_COUNTER(&htim1) - init_time;
 8001376:	6a5a      	ldr	r2, [r3, #36]	; 0x24
  uint32_t warmup_inference_time = __HAL_TIM_GET_COUNTER(&htim1);
 8001378:	6a5e      	ldr	r6, [r3, #36]	; 0x24
  init_time = __HAL_TIM_GET_COUNTER(&htim1) - init_time;
 800137a:	eba2 0808 	sub.w	r8, r2, r8
  nbatch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 800137e:	aa11      	add	r2, sp, #68	; 0x44
 8001380:	f002 fdf6 	bl	8003f70 <ai_network_run>
  if (nbatch != 1) {
 8001384:	2801      	cmp	r0, #1
 8001386:	d00f      	beq.n	80013a8 <main+0x350>
    ai_err = ai_network_get_error(network);
 8001388:	6828      	ldr	r0, [r5, #0]
 800138a:	f001 ff2f 	bl	80031ec <ai_network_get_error>
 800138e:	4602      	mov	r2, r0
    buf_len = sprintf(buf, "AI ai_network_run error - type=%d code=%d\r\n", ai_err.type, ai_err.code);
 8001390:	4922      	ldr	r1, [pc, #136]	; (800141c <main+0x3c4>)
 8001392:	a823      	add	r0, sp, #140	; 0x8c
 8001394:	0a13      	lsrs	r3, r2, #8
 8001396:	b2d2      	uxtb	r2, r2
 8001398:	f00b fb1e 	bl	800c9d8 <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 800139c:	2364      	movs	r3, #100	; 0x64
 800139e:	b282      	uxth	r2, r0
 80013a0:	a923      	add	r1, sp, #140	; 0x8c
 80013a2:	481f      	ldr	r0, [pc, #124]	; (8001420 <main+0x3c8>)
 80013a4:	f001 fe66 	bl	8003074 <HAL_UART_Transmit>
  warmup_inference_time = __HAL_TIM_GET_COUNTER(&htim1) - warmup_inference_time;
 80013a8:	6823      	ldr	r3, [r4, #0]
      buf_len = sprintf(buf, "AI ai_network_run error - type=%d code=%d\r\n", ai_err.type, ai_err.code);
 80013aa:	f8df 9070 	ldr.w	r9, [pc, #112]	; 800141c <main+0x3c4>
  warmup_inference_time = __HAL_TIM_GET_COUNTER(&htim1) - warmup_inference_time;
 80013ae:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 80013b0:	1bbf      	subs	r7, r7, r6
      HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80013b2:	4e1b      	ldr	r6, [pc, #108]	; (8001420 <main+0x3c8>)
    start_time = htim1.Instance->CNT;
 80013b4:	6823      	ldr	r3, [r4, #0]
    nbatch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 80013b6:	aa11      	add	r2, sp, #68	; 0x44
 80013b8:	a90b      	add	r1, sp, #44	; 0x2c
 80013ba:	9805      	ldr	r0, [sp, #20]
    start_time = htim1.Instance->CNT;
 80013bc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
    nbatch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 80013be:	f002 fdd7 	bl	8003f70 <ai_network_run>
    if (nbatch != 1) {
 80013c2:	2801      	cmp	r0, #1
    nbatch = ai_network_run(network, &ai_input[0], &ai_output[0]);
 80013c4:	f10d 0a14 	add.w	sl, sp, #20
    if (nbatch != 1) {
 80013c8:	d010      	beq.n	80013ec <main+0x394>
      ai_err = ai_network_get_error(network);
 80013ca:	f8da 0000 	ldr.w	r0, [sl]
 80013ce:	f001 ff0d 	bl	80031ec <ai_network_get_error>
 80013d2:	4602      	mov	r2, r0
      buf_len = sprintf(buf, "AI ai_network_run error - type=%d code=%d\r\n", ai_err.type, ai_err.code);
 80013d4:	4649      	mov	r1, r9
 80013d6:	a823      	add	r0, sp, #140	; 0x8c
 80013d8:	0a13      	lsrs	r3, r2, #8
 80013da:	b2d2      	uxtb	r2, r2
 80013dc:	f00b fafc 	bl	800c9d8 <siprintf>
      HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 80013e0:	a923      	add	r1, sp, #140	; 0x8c
 80013e2:	b282      	uxth	r2, r0
 80013e4:	2364      	movs	r3, #100	; 0x64
 80013e6:	4630      	mov	r0, r6
 80013e8:	f001 fe44 	bl	8003074 <HAL_UART_Transmit>
    uint32_t end_time = htim1.Instance->CNT;
 80013ec:	6823      	ldr	r3, [r4, #0]
    buf_len = sprintf(buf, "%lu, %lu, %lu\r\n", init_time, warmup_inference_time, inference_time);
 80013ee:	a823      	add	r0, sp, #140	; 0x8c
 80013f0:	490c      	ldr	r1, [pc, #48]	; (8001424 <main+0x3cc>)
    uint32_t end_time = htim1.Instance->CNT;
 80013f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
      inference_time = end_time - start_time;
 80013f4:	1b5a      	subs	r2, r3, r5
    if(end_time < start_time){
 80013f6:	429d      	cmp	r5, r3
      inference_time = 65535 - start_time + end_time + 1;
 80013f8:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 80013fc:	bf88      	it	hi
 80013fe:	1b5a      	subhi	r2, r3, r5
    buf_len = sprintf(buf, "%lu, %lu, %lu\r\n", init_time, warmup_inference_time, inference_time);
 8001400:	463b      	mov	r3, r7
 8001402:	9200      	str	r2, [sp, #0]
 8001404:	4642      	mov	r2, r8
 8001406:	f00b fae7 	bl	800c9d8 <siprintf>
    HAL_UART_Transmit(&huart1, (uint8_t *)buf, buf_len, 100);
 800140a:	2364      	movs	r3, #100	; 0x64
 800140c:	b282      	uxth	r2, r0
 800140e:	a923      	add	r1, sp, #140	; 0x8c
 8001410:	4630      	mov	r0, r6
 8001412:	f001 fe2f 	bl	8003074 <HAL_UART_Transmit>
  {
 8001416:	e7cd      	b.n	80013b4 <main+0x35c>
 8001418:	0800ee04 	.word	0x0800ee04
 800141c:	0800ee1c 	.word	0x0800ee1c
 8001420:	20004da4 	.word	0x20004da4
 8001424:	0800ee48 	.word	0x0800ee48
 8001428:	0800ee10 	.word	0x0800ee10

0800142c <Error_Handler>:
 800142c:	b672      	cpsid	i
  while (1)
 800142e:	e7fe      	b.n	800142e <Error_Handler+0x2>

08001430 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8001430:	4b0a      	ldr	r3, [pc, #40]	; (800145c <HAL_MspInit+0x2c>)
{
 8001432:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 8001434:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001436:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800143a:	641a      	str	r2, [r3, #64]	; 0x40
 800143c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800143e:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001442:	9200      	str	r2, [sp, #0]
 8001444:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001446:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001448:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800144c:	645a      	str	r2, [r3, #68]	; 0x44
 800144e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001450:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001454:	9301      	str	r3, [sp, #4]
 8001456:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001458:	b002      	add	sp, #8
 800145a:	4770      	bx	lr
 800145c:	40023800 	.word	0x40023800

08001460 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001460:	4b09      	ldr	r3, [pc, #36]	; (8001488 <HAL_CRC_MspInit+0x28>)
 8001462:	6802      	ldr	r2, [r0, #0]
 8001464:	429a      	cmp	r2, r3
 8001466:	d000      	beq.n	800146a <HAL_CRC_MspInit+0xa>
 8001468:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800146a:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800146e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
{
 8001472:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
 8001474:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001478:	631a      	str	r2, [r3, #48]	; 0x30
 800147a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800147c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001480:	9301      	str	r3, [sp, #4]
 8001482:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001484:	b002      	add	sp, #8
 8001486:	4770      	bx	lr
 8001488:	40023000 	.word	0x40023000

0800148c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 800148c:	4b09      	ldr	r3, [pc, #36]	; (80014b4 <HAL_TIM_Base_MspInit+0x28>)
 800148e:	6802      	ldr	r2, [r0, #0]
 8001490:	429a      	cmp	r2, r3
 8001492:	d000      	beq.n	8001496 <HAL_TIM_Base_MspInit+0xa>
 8001494:	4770      	bx	lr
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001496:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
{
 800149a:	b082      	sub	sp, #8
    __HAL_RCC_TIM1_CLK_ENABLE();
 800149c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800149e:	f042 0201 	orr.w	r2, r2, #1
 80014a2:	645a      	str	r2, [r3, #68]	; 0x44
 80014a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80014a6:	f003 0301 	and.w	r3, r3, #1
 80014aa:	9301      	str	r3, [sp, #4]
 80014ac:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 80014ae:	b002      	add	sp, #8
 80014b0:	4770      	bx	lr
 80014b2:	bf00      	nop
 80014b4:	40010000 	.word	0x40010000

080014b8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80014b8:	b5d0      	push	{r4, r6, r7, lr}
 80014ba:	b0aa      	sub	sp, #168	; 0xa8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014bc:	2100      	movs	r1, #0
{
 80014be:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80014c0:	2284      	movs	r2, #132	; 0x84
 80014c2:	a809      	add	r0, sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c4:	9108      	str	r1, [sp, #32]
 80014c6:	e9cd 1104 	strd	r1, r1, [sp, #16]
 80014ca:	e9cd 1106 	strd	r1, r1, [sp, #24]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80014ce:	f00a fd21 	bl	800bf14 <memset>
  if(huart->Instance==USART1)
 80014d2:	4b24      	ldr	r3, [pc, #144]	; (8001564 <HAL_UART_MspInit+0xac>)
 80014d4:	6822      	ldr	r2, [r4, #0]
 80014d6:	429a      	cmp	r2, r3
 80014d8:	d001      	beq.n	80014de <HAL_UART_MspInit+0x26>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 80014da:	b02a      	add	sp, #168	; 0xa8
 80014dc:	bdd0      	pop	{r4, r6, r7, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80014de:	2340      	movs	r3, #64	; 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014e0:	a809      	add	r0, sp, #36	; 0x24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80014e2:	9309      	str	r3, [sp, #36]	; 0x24
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014e4:	f000 fe4e 	bl	8002184 <HAL_RCCEx_PeriphCLKConfig>
 80014e8:	2800      	cmp	r0, #0
 80014ea:	d137      	bne.n	800155c <HAL_UART_MspInit+0xa4>
    __HAL_RCC_USART1_CLK_ENABLE();
 80014ec:	4b1e      	ldr	r3, [pc, #120]	; (8001568 <HAL_UART_MspInit+0xb0>)
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80014ee:	2080      	movs	r0, #128	; 0x80
 80014f0:	2102      	movs	r1, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80014f2:	2407      	movs	r4, #7
    __HAL_RCC_USART1_CLK_ENABLE();
 80014f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 80014f6:	2600      	movs	r6, #0
 80014f8:	2703      	movs	r7, #3
    __HAL_RCC_USART1_CLK_ENABLE();
 80014fa:	f042 0210 	orr.w	r2, r2, #16
 80014fe:	645a      	str	r2, [r3, #68]	; 0x44
 8001500:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001502:	f002 0210 	and.w	r2, r2, #16
 8001506:	9201      	str	r2, [sp, #4]
 8001508:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800150a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150c:	f042 0202 	orr.w	r2, r2, #2
 8001510:	631a      	str	r2, [r3, #48]	; 0x30
 8001512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001514:	f002 0202 	and.w	r2, r2, #2
 8001518:	9202      	str	r2, [sp, #8]
 800151a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f042 0201 	orr.w	r2, r2, #1
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001526:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001528:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 800152c:	e9cd 0104 	strd	r0, r1, [sp, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001530:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001532:	a904      	add	r1, sp, #16
 8001534:	480d      	ldr	r0, [pc, #52]	; (800156c <HAL_UART_MspInit+0xb4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001536:	9b03      	ldr	r3, [sp, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001538:	e9cd 6706 	strd	r6, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800153c:	f000 f99e 	bl	800187c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001540:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001544:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001546:	a904      	add	r1, sp, #16
 8001548:	4809      	ldr	r0, [pc, #36]	; (8001570 <HAL_UART_MspInit+0xb8>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800154a:	9408      	str	r4, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800154c:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8001550:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001554:	f000 f992 	bl	800187c <HAL_GPIO_Init>
}
 8001558:	b02a      	add	sp, #168	; 0xa8
 800155a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
 800155c:	f7ff ff66 	bl	800142c <Error_Handler>
 8001560:	e7c4      	b.n	80014ec <HAL_UART_MspInit+0x34>
 8001562:	bf00      	nop
 8001564:	40011000 	.word	0x40011000
 8001568:	40023800 	.word	0x40023800
 800156c:	40020400 	.word	0x40020400
 8001570:	40020000 	.word	0x40020000

08001574 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001574:	e7fe      	b.n	8001574 <NMI_Handler>
 8001576:	bf00      	nop

08001578 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001578:	e7fe      	b.n	8001578 <HardFault_Handler>
 800157a:	bf00      	nop

0800157c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800157c:	e7fe      	b.n	800157c <MemManage_Handler>
 800157e:	bf00      	nop

08001580 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001580:	e7fe      	b.n	8001580 <BusFault_Handler>
 8001582:	bf00      	nop

08001584 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001584:	e7fe      	b.n	8001584 <UsageFault_Handler>
 8001586:	bf00      	nop

08001588 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001588:	4770      	bx	lr
 800158a:	bf00      	nop

0800158c <DebugMon_Handler>:
 800158c:	4770      	bx	lr
 800158e:	bf00      	nop

08001590 <PendSV_Handler>:
 8001590:	4770      	bx	lr
 8001592:	bf00      	nop

08001594 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001594:	f000 b888 	b.w	80016a8 <HAL_IncTick>

08001598 <_sbrk>:
 8001598:	b538      	push	{r3, r4, r5, lr}
 800159a:	4c0d      	ldr	r4, [pc, #52]	; (80015d0 <_sbrk+0x38>)
 800159c:	4603      	mov	r3, r0
 800159e:	490d      	ldr	r1, [pc, #52]	; (80015d4 <_sbrk+0x3c>)
 80015a0:	4d0d      	ldr	r5, [pc, #52]	; (80015d8 <_sbrk+0x40>)
 80015a2:	6822      	ldr	r2, [r4, #0]
 80015a4:	1b49      	subs	r1, r1, r5
 80015a6:	b12a      	cbz	r2, 80015b4 <_sbrk+0x1c>
 80015a8:	4413      	add	r3, r2
 80015aa:	428b      	cmp	r3, r1
 80015ac:	d808      	bhi.n	80015c0 <_sbrk+0x28>
 80015ae:	4610      	mov	r0, r2
 80015b0:	6023      	str	r3, [r4, #0]
 80015b2:	bd38      	pop	{r3, r4, r5, pc}
 80015b4:	4809      	ldr	r0, [pc, #36]	; (80015dc <_sbrk+0x44>)
 80015b6:	4602      	mov	r2, r0
 80015b8:	6020      	str	r0, [r4, #0]
 80015ba:	4413      	add	r3, r2
 80015bc:	428b      	cmp	r3, r1
 80015be:	d9f6      	bls.n	80015ae <_sbrk+0x16>
 80015c0:	f00a fc68 	bl	800be94 <__errno>
 80015c4:	230c      	movs	r3, #12
 80015c6:	f04f 32ff 	mov.w	r2, #4294967295
 80015ca:	6003      	str	r3, [r0, #0]
 80015cc:	4610      	mov	r0, r2
 80015ce:	bd38      	pop	{r3, r4, r5, pc}
 80015d0:	20004e2c 	.word	0x20004e2c
 80015d4:	20050000 	.word	0x20050000
 80015d8:	00001000 	.word	0x00001000
 80015dc:	20005078 	.word	0x20005078

080015e0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80015e0:	4a03      	ldr	r2, [pc, #12]	; (80015f0 <SystemInit+0x10>)
 80015e2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80015e6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80015ea:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80015ee:	4770      	bx	lr
 80015f0:	e000ed00 	.word	0xe000ed00

080015f4 <Reset_Handler>:
 80015f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800162c <LoopFillZerobss+0x12>
 80015f8:	480d      	ldr	r0, [pc, #52]	; (8001630 <LoopFillZerobss+0x16>)
 80015fa:	490e      	ldr	r1, [pc, #56]	; (8001634 <LoopFillZerobss+0x1a>)
 80015fc:	4a0e      	ldr	r2, [pc, #56]	; (8001638 <LoopFillZerobss+0x1e>)
 80015fe:	2300      	movs	r3, #0
 8001600:	e002      	b.n	8001608 <LoopCopyDataInit>

08001602 <CopyDataInit>:
 8001602:	58d4      	ldr	r4, [r2, r3]
 8001604:	50c4      	str	r4, [r0, r3]
 8001606:	3304      	adds	r3, #4

08001608 <LoopCopyDataInit>:
 8001608:	18c4      	adds	r4, r0, r3
 800160a:	428c      	cmp	r4, r1
 800160c:	d3f9      	bcc.n	8001602 <CopyDataInit>
 800160e:	4a0b      	ldr	r2, [pc, #44]	; (800163c <LoopFillZerobss+0x22>)
 8001610:	4c0b      	ldr	r4, [pc, #44]	; (8001640 <LoopFillZerobss+0x26>)
 8001612:	2300      	movs	r3, #0
 8001614:	e001      	b.n	800161a <LoopFillZerobss>

08001616 <FillZerobss>:
 8001616:	6013      	str	r3, [r2, #0]
 8001618:	3204      	adds	r2, #4

0800161a <LoopFillZerobss>:
 800161a:	42a2      	cmp	r2, r4
 800161c:	d3fb      	bcc.n	8001616 <FillZerobss>
 800161e:	f7ff ffdf 	bl	80015e0 <SystemInit>
 8001622:	f00a fc3d 	bl	800bea0 <__libc_init_array>
 8001626:	f7ff fd17 	bl	8001058 <main>
 800162a:	4770      	bx	lr
 800162c:	20050000 	.word	0x20050000
 8001630:	20000000 	.word	0x20000000
 8001634:	20004d18 	.word	0x20004d18
 8001638:	08076d04 	.word	0x08076d04
 800163c:	20004d18 	.word	0x20004d18
 8001640:	20005078 	.word	0x20005078

08001644 <ADC_IRQHandler>:
 8001644:	e7fe      	b.n	8001644 <ADC_IRQHandler>
	...

08001648 <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001648:	490e      	ldr	r1, [pc, #56]	; (8001684 <HAL_InitTick+0x3c>)
 800164a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800164e:	4a0e      	ldr	r2, [pc, #56]	; (8001688 <HAL_InitTick+0x40>)
{
 8001650:	b510      	push	{r4, lr}
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001652:	7809      	ldrb	r1, [r1, #0]
{
 8001654:	4604      	mov	r4, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001656:	6812      	ldr	r2, [r2, #0]
 8001658:	fbb3 f3f1 	udiv	r3, r3, r1
 800165c:	fbb2 f0f3 	udiv	r0, r2, r3
 8001660:	f000 f884 	bl	800176c <HAL_SYSTICK_Config>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001664:	b908      	cbnz	r0, 800166a <HAL_InitTick+0x22>
 8001666:	2c0f      	cmp	r4, #15
 8001668:	d901      	bls.n	800166e <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 800166a:	2001      	movs	r0, #1
  }

  /* Return function status */
  return HAL_OK;
}
 800166c:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800166e:	2200      	movs	r2, #0
 8001670:	4621      	mov	r1, r4
 8001672:	f04f 30ff 	mov.w	r0, #4294967295
 8001676:	f000 f83b 	bl	80016f0 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800167a:	4b04      	ldr	r3, [pc, #16]	; (800168c <HAL_InitTick+0x44>)
 800167c:	2000      	movs	r0, #0
 800167e:	601c      	str	r4, [r3, #0]
}
 8001680:	bd10      	pop	{r4, pc}
 8001682:	bf00      	nop
 8001684:	20000004 	.word	0x20000004
 8001688:	20000000 	.word	0x20000000
 800168c:	20000008 	.word	0x20000008

08001690 <HAL_Init>:
{
 8001690:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001692:	2003      	movs	r0, #3
 8001694:	f000 f81a 	bl	80016cc <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001698:	200f      	movs	r0, #15
 800169a:	f7ff ffd5 	bl	8001648 <HAL_InitTick>
  HAL_MspInit();
 800169e:	f7ff fec7 	bl	8001430 <HAL_MspInit>
}
 80016a2:	2000      	movs	r0, #0
 80016a4:	bd08      	pop	{r3, pc}
 80016a6:	bf00      	nop

080016a8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80016a8:	4a03      	ldr	r2, [pc, #12]	; (80016b8 <HAL_IncTick+0x10>)
 80016aa:	4b04      	ldr	r3, [pc, #16]	; (80016bc <HAL_IncTick+0x14>)
 80016ac:	6811      	ldr	r1, [r2, #0]
 80016ae:	781b      	ldrb	r3, [r3, #0]
 80016b0:	440b      	add	r3, r1
 80016b2:	6013      	str	r3, [r2, #0]
}
 80016b4:	4770      	bx	lr
 80016b6:	bf00      	nop
 80016b8:	20004e30 	.word	0x20004e30
 80016bc:	20000004 	.word	0x20000004

080016c0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80016c0:	4b01      	ldr	r3, [pc, #4]	; (80016c8 <HAL_GetTick+0x8>)
 80016c2:	6818      	ldr	r0, [r3, #0]
}
 80016c4:	4770      	bx	lr
 80016c6:	bf00      	nop
 80016c8:	20004e30 	.word	0x20004e30

080016cc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80016cc:	4906      	ldr	r1, [pc, #24]	; (80016e8 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80016ce:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80016d2:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
 80016d4:	4b05      	ldr	r3, [pc, #20]	; (80016ec <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80016d6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80016d8:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80016dc:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80016e0:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
 80016e2:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 80016e4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80016e6:	4770      	bx	lr
 80016e8:	e000ed00 	.word	0xe000ed00
 80016ec:	05fa0000 	.word	0x05fa0000

080016f0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80016f0:	4b1b      	ldr	r3, [pc, #108]	; (8001760 <HAL_NVIC_SetPriority+0x70>)
 80016f2:	68db      	ldr	r3, [r3, #12]
 80016f4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80016f8:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80016fa:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80016fe:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001702:	f1be 0f04 	cmp.w	lr, #4
 8001706:	bf28      	it	cs
 8001708:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800170c:	f1bc 0f06 	cmp.w	ip, #6
 8001710:	d91a      	bls.n	8001748 <HAL_NVIC_SetPriority+0x58>
 8001712:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001714:	f04f 3cff 	mov.w	ip, #4294967295
 8001718:	fa0c fc03 	lsl.w	ip, ip, r3
 800171c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001720:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
 8001724:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001726:	fa0c fc0e 	lsl.w	ip, ip, lr
 800172a:	ea21 010c 	bic.w	r1, r1, ip
 800172e:	fa01 f103 	lsl.w	r1, r1, r3
 8001732:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8001736:	db0a      	blt.n	800174e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001738:	0109      	lsls	r1, r1, #4
 800173a:	4b0a      	ldr	r3, [pc, #40]	; (8001764 <HAL_NVIC_SetPriority+0x74>)
 800173c:	b2c9      	uxtb	r1, r1
 800173e:	4403      	add	r3, r0
 8001740:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001744:	f85d fb04 	ldr.w	pc, [sp], #4
 8001748:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800174a:	4613      	mov	r3, r2
 800174c:	e7e8      	b.n	8001720 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800174e:	f000 000f 	and.w	r0, r0, #15
 8001752:	0109      	lsls	r1, r1, #4
 8001754:	4b04      	ldr	r3, [pc, #16]	; (8001768 <HAL_NVIC_SetPriority+0x78>)
 8001756:	b2c9      	uxtb	r1, r1
 8001758:	4403      	add	r3, r0
 800175a:	7619      	strb	r1, [r3, #24]
 800175c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001760:	e000ed00 	.word	0xe000ed00
 8001764:	e000e100 	.word	0xe000e100
 8001768:	e000ecfc 	.word	0xe000ecfc

0800176c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800176c:	1e43      	subs	r3, r0, #1
 800176e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001772:	d20c      	bcs.n	800178e <HAL_SYSTICK_Config+0x22>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001774:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001778:	2000      	movs	r0, #0
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800177a:	4906      	ldr	r1, [pc, #24]	; (8001794 <HAL_SYSTICK_Config+0x28>)
 800177c:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001780:	6153      	str	r3, [r2, #20]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001782:	2307      	movs	r3, #7
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001784:	f881 c023 	strb.w	ip, [r1, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001788:	6190      	str	r0, [r2, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800178a:	6113      	str	r3, [r2, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800178c:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800178e:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8001790:	4770      	bx	lr
 8001792:	bf00      	nop
 8001794:	e000ed00 	.word	0xe000ed00

08001798 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001798:	2800      	cmp	r0, #0
 800179a:	d036      	beq.n	800180a <HAL_CRC_Init+0x72>
{
 800179c:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800179e:	7f43      	ldrb	r3, [r0, #29]
 80017a0:	4604      	mov	r4, r0
 80017a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80017a6:	b363      	cbz	r3, 8001802 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 80017a8:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80017aa:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
 80017ac:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80017ae:	b9f3      	cbnz	r3, 80017ee <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80017b0:	6823      	ldr	r3, [r4, #0]
 80017b2:	4a17      	ldr	r2, [pc, #92]	; (8001810 <HAL_CRC_Init+0x78>)
 80017b4:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80017b6:	689a      	ldr	r2, [r3, #8]
 80017b8:	f022 0218 	bic.w	r2, r2, #24
 80017bc:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 80017be:	7962      	ldrb	r2, [r4, #5]
 80017c0:	b18a      	cbz	r2, 80017e6 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80017c2:	6922      	ldr	r2, [r4, #16]
 80017c4:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80017c6:	6899      	ldr	r1, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80017c8:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80017cc:	f021 0160 	bic.w	r1, r1, #96	; 0x60
 80017d0:	4311      	orrs	r1, r2
 80017d2:	6099      	str	r1, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80017d4:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80017d6:	689a      	ldr	r2, [r3, #8]
 80017d8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80017dc:	4302      	orrs	r2, r0

  /* Return function status */
  return HAL_OK;
 80017de:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80017e0:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 80017e2:	7761      	strb	r1, [r4, #29]
}
 80017e4:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80017e6:	f04f 32ff 	mov.w	r2, #4294967295
 80017ea:	611a      	str	r2, [r3, #16]
 80017ec:	e7eb      	b.n	80017c6 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 80017ee:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 80017f2:	4620      	mov	r0, r4
 80017f4:	f000 f80e 	bl	8001814 <HAL_CRCEx_Polynomial_Set>
 80017f8:	b908      	cbnz	r0, 80017fe <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 80017fa:	6823      	ldr	r3, [r4, #0]
 80017fc:	e7df      	b.n	80017be <HAL_CRC_Init+0x26>
    return HAL_ERROR;
 80017fe:	2001      	movs	r0, #1
}
 8001800:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8001802:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8001804:	f7ff fe2c 	bl	8001460 <HAL_CRC_MspInit>
 8001808:	e7ce      	b.n	80017a8 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
 800180a:	2001      	movs	r0, #1
}
 800180c:	4770      	bx	lr
 800180e:	bf00      	nop
 8001810:	04c11db7 	.word	0x04c11db7

08001814 <HAL_CRCEx_Polynomial_Set>:
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8001814:	231e      	movs	r3, #30
{
 8001816:	b410      	push	{r4}
 8001818:	e001      	b.n	800181e <HAL_CRCEx_Polynomial_Set+0xa>
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 800181a:	3b01      	subs	r3, #1
 800181c:	d315      	bcc.n	800184a <HAL_CRCEx_Polynomial_Set+0x36>
 800181e:	fa21 fc03 	lsr.w	ip, r1, r3
 8001822:	f01c 0f01 	tst.w	ip, #1
 8001826:	d0f8      	beq.n	800181a <HAL_CRCEx_Polynomial_Set+0x6>
  {
  }

  switch (PolyLength)
 8001828:	2a18      	cmp	r2, #24
 800182a:	d80f      	bhi.n	800184c <HAL_CRCEx_Polynomial_Set+0x38>
 800182c:	e8df f002 	tbb	[pc, r2]
 8001830:	0e0e0e14 	.word	0x0e0e0e14
 8001834:	0e0e0e0e 	.word	0x0e0e0e0e
 8001838:	0e0e0e1f 	.word	0x0e0e0e1f
 800183c:	0e0e0e0e 	.word	0x0e0e0e0e
 8001840:	0e0e0e22 	.word	0x0e0e0e22
 8001844:	0e0e0e0e 	.word	0x0e0e0e0e
 8001848:	12          	.byte	0x12
 8001849:	00          	.byte	0x00
 800184a:	b12a      	cbz	r2, 8001858 <HAL_CRCEx_Polynomial_Set+0x44>

    case CRC_POLYLENGTH_32B:
      /* no polynomial definition vs. polynomial length issue possible */
      break;
    default:
      status =  HAL_ERROR;
 800184c:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
 800184e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001852:	4770      	bx	lr
      if (msb >= HAL_CRC_LENGTH_7B)
 8001854:	2b06      	cmp	r3, #6
 8001856:	d8f9      	bhi.n	800184c <HAL_CRCEx_Polynomial_Set+0x38>
    WRITE_REG(hcrc->Instance->POL, Pol);
 8001858:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800185a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
 800185c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 800185e:	68a3      	ldr	r3, [r4, #8]
 8001860:	f023 0318 	bic.w	r3, r3, #24
 8001864:	431a      	orrs	r2, r3
 8001866:	60a2      	str	r2, [r4, #8]
}
 8001868:	f85d 4b04 	ldr.w	r4, [sp], #4
 800186c:	4770      	bx	lr
      if (msb >= HAL_CRC_LENGTH_16B)
 800186e:	2b0f      	cmp	r3, #15
 8001870:	d9f2      	bls.n	8001858 <HAL_CRCEx_Polynomial_Set+0x44>
 8001872:	e7eb      	b.n	800184c <HAL_CRCEx_Polynomial_Set+0x38>
      if (msb >= HAL_CRC_LENGTH_8B)
 8001874:	2b07      	cmp	r3, #7
 8001876:	d9ef      	bls.n	8001858 <HAL_CRCEx_Polynomial_Set+0x44>
 8001878:	e7e8      	b.n	800184c <HAL_CRCEx_Polynomial_Set+0x38>
 800187a:	bf00      	nop

0800187c <HAL_GPIO_Init>:
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800187c:	2200      	movs	r2, #0
{
 800187e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0; position < GPIO_NUMBER; position++)
 8001882:	4613      	mov	r3, r2
{
 8001884:	b083      	sub	sp, #12
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001886:	f8df b248 	ldr.w	fp, [pc, #584]	; 8001ad0 <HAL_GPIO_Init+0x254>

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 800188a:	4689      	mov	r9, r1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800188c:	680c      	ldr	r4, [r1, #0]
 800188e:	e004      	b.n	800189a <HAL_GPIO_Init+0x1e>
  for(position = 0; position < GPIO_NUMBER; position++)
 8001890:	3301      	adds	r3, #1
 8001892:	3202      	adds	r2, #2
 8001894:	2b10      	cmp	r3, #16
 8001896:	f000 809a 	beq.w	80019ce <HAL_GPIO_Init+0x152>
    ioposition = ((uint32_t)0x01) << position;
 800189a:	2101      	movs	r1, #1
 800189c:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800189e:	ea01 0e04 	and.w	lr, r1, r4
    if(iocurrent == ioposition)
 80018a2:	43a1      	bics	r1, r4
 80018a4:	d1f4      	bne.n	8001890 <HAL_GPIO_Init+0x14>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80018a6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80018aa:	f00c 0103 	and.w	r1, ip, #3
 80018ae:	1e4d      	subs	r5, r1, #1
 80018b0:	2d01      	cmp	r5, #1
 80018b2:	f240 808f 	bls.w	80019d4 <HAL_GPIO_Init+0x158>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80018b6:	2903      	cmp	r1, #3
 80018b8:	f040 80c9 	bne.w	8001a4e <HAL_GPIO_Init+0x1d2>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80018bc:	4091      	lsls	r1, r2
 80018be:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 80018c0:	6806      	ldr	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80018c2:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80018c6:	ea05 0506 	and.w	r5, r5, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80018ca:	ea41 0105 	orr.w	r1, r1, r5
      GPIOx->MODER = temp;
 80018ce:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80018d0:	d0de      	beq.n	8001890 <HAL_GPIO_Init+0x14>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018d2:	f8db 1044 	ldr.w	r1, [fp, #68]	; 0x44
 80018d6:	f023 0503 	bic.w	r5, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80018da:	f003 0603 	and.w	r6, r3, #3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80018de:	4f76      	ldr	r7, [pc, #472]	; (8001ab8 <HAL_GPIO_Init+0x23c>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018e0:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80018e4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80018e8:	00b6      	lsls	r6, r6, #2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80018ea:	42b8      	cmp	r0, r7
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80018ec:	f8cb 1044 	str.w	r1, [fp, #68]	; 0x44
 80018f0:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
 80018f4:	f8db 1044 	ldr.w	r1, [fp, #68]	; 0x44
 80018f8:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80018fc:	9101      	str	r1, [sp, #4]
 80018fe:	9901      	ldr	r1, [sp, #4]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001900:	f04f 010f 	mov.w	r1, #15
        temp = SYSCFG->EXTICR[position >> 2];
 8001904:	f8d5 8008 	ldr.w	r8, [r5, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001908:	fa01 f106 	lsl.w	r1, r1, r6
 800190c:	ea28 0101 	bic.w	r1, r8, r1
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001910:	d02e      	beq.n	8001970 <HAL_GPIO_Init+0xf4>
 8001912:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 8001916:	42b8      	cmp	r0, r7
 8001918:	f000 809d 	beq.w	8001a56 <HAL_GPIO_Init+0x1da>
 800191c:	4f67      	ldr	r7, [pc, #412]	; (8001abc <HAL_GPIO_Init+0x240>)
 800191e:	42b8      	cmp	r0, r7
 8001920:	f000 809f 	beq.w	8001a62 <HAL_GPIO_Init+0x1e6>
 8001924:	4f66      	ldr	r7, [pc, #408]	; (8001ac0 <HAL_GPIO_Init+0x244>)
 8001926:	42b8      	cmp	r0, r7
 8001928:	f000 80a1 	beq.w	8001a6e <HAL_GPIO_Init+0x1f2>
 800192c:	4f65      	ldr	r7, [pc, #404]	; (8001ac4 <HAL_GPIO_Init+0x248>)
 800192e:	42b8      	cmp	r0, r7
 8001930:	f000 80a3 	beq.w	8001a7a <HAL_GPIO_Init+0x1fe>
 8001934:	4f64      	ldr	r7, [pc, #400]	; (8001ac8 <HAL_GPIO_Init+0x24c>)
 8001936:	42b8      	cmp	r0, r7
 8001938:	f000 80ab 	beq.w	8001a92 <HAL_GPIO_Init+0x216>
 800193c:	f8df 8194 	ldr.w	r8, [pc, #404]	; 8001ad4 <HAL_GPIO_Init+0x258>
 8001940:	4540      	cmp	r0, r8
 8001942:	f000 80ac 	beq.w	8001a9e <HAL_GPIO_Init+0x222>
 8001946:	f8df 8190 	ldr.w	r8, [pc, #400]	; 8001ad8 <HAL_GPIO_Init+0x25c>
 800194a:	4540      	cmp	r0, r8
 800194c:	f000 809b 	beq.w	8001a86 <HAL_GPIO_Init+0x20a>
 8001950:	f8df 8188 	ldr.w	r8, [pc, #392]	; 8001adc <HAL_GPIO_Init+0x260>
 8001954:	4540      	cmp	r0, r8
 8001956:	f000 80a8 	beq.w	8001aaa <HAL_GPIO_Init+0x22e>
 800195a:	f8df 8184 	ldr.w	r8, [pc, #388]	; 8001ae0 <HAL_GPIO_Init+0x264>
 800195e:	4540      	cmp	r0, r8
 8001960:	bf0c      	ite	eq
 8001962:	f04f 0809 	moveq.w	r8, #9
 8001966:	f04f 080a 	movne.w	r8, #10
 800196a:	fa08 f606 	lsl.w	r6, r8, r6
 800196e:	4331      	orrs	r1, r6
        SYSCFG->EXTICR[position >> 2] = temp;
 8001970:	60a9      	str	r1, [r5, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
 8001972:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR;
 8001976:	4955      	ldr	r1, [pc, #340]	; (8001acc <HAL_GPIO_Init+0x250>)
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8001978:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        {
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;
 800197c:	4d53      	ldr	r5, [pc, #332]	; (8001acc <HAL_GPIO_Init+0x250>)
  for(position = 0; position < GPIO_NUMBER; position++)
 800197e:	f103 0301 	add.w	r3, r3, #1
        temp = EXTI->RTSR;
 8001982:	6889      	ldr	r1, [r1, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001984:	f102 0202 	add.w	r2, r2, #2
        temp &= ~((uint32_t)iocurrent);
 8001988:	bf0c      	ite	eq
 800198a:	4031      	andeq	r1, r6
          temp |= iocurrent;
 800198c:	ea4e 0101 	orrne.w	r1, lr, r1

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8001990:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        EXTI->RTSR = temp;
 8001994:	60a9      	str	r1, [r5, #8]
        temp = EXTI->FTSR;
 8001996:	68ed      	ldr	r5, [r5, #12]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR = temp;
 8001998:	494c      	ldr	r1, [pc, #304]	; (8001acc <HAL_GPIO_Init+0x250>)
        temp &= ~((uint32_t)iocurrent);
 800199a:	bf0c      	ite	eq
 800199c:	4035      	andeq	r5, r6
          temp |= iocurrent;
 800199e:	ea4e 0505 	orrne.w	r5, lr, r5

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80019a2:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        EXTI->FTSR = temp;
 80019a6:	60cd      	str	r5, [r1, #12]
        temp = EXTI->EMR;
 80019a8:	684d      	ldr	r5, [r1, #4]
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 80019aa:	4948      	ldr	r1, [pc, #288]	; (8001acc <HAL_GPIO_Init+0x250>)
        temp &= ~((uint32_t)iocurrent);
 80019ac:	bf0c      	ite	eq
 80019ae:	4035      	andeq	r5, r6
          temp |= iocurrent;
 80019b0:	ea4e 0505 	orrne.w	r5, lr, r5

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80019b4:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
        EXTI->EMR = temp;
 80019b8:	604d      	str	r5, [r1, #4]
        temp = EXTI->IMR;
 80019ba:	6809      	ldr	r1, [r1, #0]
        {
          temp |= iocurrent;
        }
        EXTI->IMR = temp;
 80019bc:	4d43      	ldr	r5, [pc, #268]	; (8001acc <HAL_GPIO_Init+0x250>)
        temp &= ~((uint32_t)iocurrent);
 80019be:	bf0c      	ite	eq
 80019c0:	4031      	andeq	r1, r6
          temp |= iocurrent;
 80019c2:	ea4e 0101 	orrne.w	r1, lr, r1
  for(position = 0; position < GPIO_NUMBER; position++)
 80019c6:	2b10      	cmp	r3, #16
        EXTI->IMR = temp;
 80019c8:	6029      	str	r1, [r5, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 80019ca:	f47f af66 	bne.w	800189a <HAL_GPIO_Init+0x1e>
      }
    }
  }
}
 80019ce:	b003      	add	sp, #12
 80019d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80019d4:	2503      	movs	r5, #3
        temp = GPIOx->OSPEEDR; 
 80019d6:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80019d8:	4095      	lsls	r5, r2
 80019da:	ea26 0805 	bic.w	r8, r6, r5
        temp |= (GPIO_Init->Speed << (position * 2));
 80019de:	f8d9 600c 	ldr.w	r6, [r9, #12]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80019e2:	43ed      	mvns	r5, r5
        temp |= (GPIO_Init->Speed << (position * 2));
 80019e4:	4096      	lsls	r6, r2
 80019e6:	ea46 0608 	orr.w	r6, r6, r8
        GPIOx->OSPEEDR = temp;
 80019ea:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80019ec:	f3cc 1600 	ubfx	r6, ip, #4, #1
        temp = GPIOx->OTYPER;
 80019f0:	f8d0 8004 	ldr.w	r8, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80019f4:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80019f6:	ea28 080e 	bic.w	r8, r8, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80019fa:	ea46 0608 	orr.w	r6, r6, r8
        GPIOx->OTYPER = temp;
 80019fe:	6046      	str	r6, [r0, #4]
        temp = GPIOx->PUPDR;
 8001a00:	68c6      	ldr	r6, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001a02:	2902      	cmp	r1, #2
 8001a04:	fa01 f102 	lsl.w	r1, r1, r2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8001a08:	ea06 0805 	and.w	r8, r6, r5
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8001a0c:	f8d9 6008 	ldr.w	r6, [r9, #8]
 8001a10:	fa06 f602 	lsl.w	r6, r6, r2
 8001a14:	ea46 0608 	orr.w	r6, r6, r8
        GPIOx->PUPDR = temp;
 8001a18:	60c6      	str	r6, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001a1a:	f47f af51 	bne.w	80018c0 <HAL_GPIO_Init+0x44>
        temp = GPIOx->AFR[position >> 3];
 8001a1e:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001a22:	f003 0607 	and.w	r6, r3, #7
 8001a26:	f04f 0a0f 	mov.w	sl, #15
 8001a2a:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8001a2e:	00b6      	lsls	r6, r6, #2
        temp = GPIOx->AFR[position >> 3];
 8001a30:	f8d8 7020 	ldr.w	r7, [r8, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8001a34:	fa0a fa06 	lsl.w	sl, sl, r6
 8001a38:	ea27 0a0a 	bic.w	sl, r7, sl
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8001a3c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8001a40:	fa07 f606 	lsl.w	r6, r7, r6
 8001a44:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3] = temp;
 8001a48:	f8c8 6020 	str.w	r6, [r8, #32]
 8001a4c:	e738      	b.n	80018c0 <HAL_GPIO_Init+0x44>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8001a4e:	2503      	movs	r5, #3
 8001a50:	4095      	lsls	r5, r2
 8001a52:	43ed      	mvns	r5, r5
 8001a54:	e7d4      	b.n	8001a00 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001a56:	f04f 0801 	mov.w	r8, #1
 8001a5a:	fa08 f606 	lsl.w	r6, r8, r6
 8001a5e:	4331      	orrs	r1, r6
 8001a60:	e786      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a62:	f04f 0802 	mov.w	r8, #2
 8001a66:	fa08 f606 	lsl.w	r6, r8, r6
 8001a6a:	4331      	orrs	r1, r6
 8001a6c:	e780      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a6e:	f04f 0803 	mov.w	r8, #3
 8001a72:	fa08 f606 	lsl.w	r6, r8, r6
 8001a76:	4331      	orrs	r1, r6
 8001a78:	e77a      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a7a:	f04f 0804 	mov.w	r8, #4
 8001a7e:	fa08 f606 	lsl.w	r6, r8, r6
 8001a82:	4331      	orrs	r1, r6
 8001a84:	e774      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a86:	f04f 0807 	mov.w	r8, #7
 8001a8a:	fa08 f606 	lsl.w	r6, r8, r6
 8001a8e:	4331      	orrs	r1, r6
 8001a90:	e76e      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a92:	f04f 0805 	mov.w	r8, #5
 8001a96:	fa08 f606 	lsl.w	r6, r8, r6
 8001a9a:	4331      	orrs	r1, r6
 8001a9c:	e768      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001a9e:	f04f 0806 	mov.w	r8, #6
 8001aa2:	fa08 f606 	lsl.w	r6, r8, r6
 8001aa6:	4331      	orrs	r1, r6
 8001aa8:	e762      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001aaa:	f04f 0808 	mov.w	r8, #8
 8001aae:	fa08 f606 	lsl.w	r6, r8, r6
 8001ab2:	4331      	orrs	r1, r6
 8001ab4:	e75c      	b.n	8001970 <HAL_GPIO_Init+0xf4>
 8001ab6:	bf00      	nop
 8001ab8:	40020000 	.word	0x40020000
 8001abc:	40020800 	.word	0x40020800
 8001ac0:	40020c00 	.word	0x40020c00
 8001ac4:	40021000 	.word	0x40021000
 8001ac8:	40021400 	.word	0x40021400
 8001acc:	40013c00 	.word	0x40013c00
 8001ad0:	40023800 	.word	0x40023800
 8001ad4:	40021800 	.word	0x40021800
 8001ad8:	40021c00 	.word	0x40021c00
 8001adc:	40022000 	.word	0x40022000
 8001ae0:	40022400 	.word	0x40022400

08001ae4 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8001ae4:	4b1a      	ldr	r3, [pc, #104]	; (8001b50 <HAL_PWREx_EnableOverDrive+0x6c>)
 8001ae6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ae8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
{
 8001aec:	b530      	push	{r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 8001aee:	641a      	str	r2, [r3, #64]	; 0x40
{
 8001af0:	b083      	sub	sp, #12
  __HAL_RCC_PWR_CLK_ENABLE();
 8001af2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8001af4:	4c17      	ldr	r4, [pc, #92]	; (8001b54 <HAL_PWREx_EnableOverDrive+0x70>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001af6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001afa:	9301      	str	r3, [sp, #4]
 8001afc:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8001afe:	6823      	ldr	r3, [r4, #0]
 8001b00:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b04:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8001b06:	f7ff fddb 	bl	80016c0 <HAL_GetTick>
 8001b0a:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8001b0c:	e005      	b.n	8001b1a <HAL_PWREx_EnableOverDrive+0x36>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8001b0e:	f7ff fdd7 	bl	80016c0 <HAL_GetTick>
 8001b12:	1b40      	subs	r0, r0, r5
 8001b14:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8001b18:	d817      	bhi.n	8001b4a <HAL_PWREx_EnableOverDrive+0x66>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8001b1a:	6863      	ldr	r3, [r4, #4]
 8001b1c:	03da      	lsls	r2, r3, #15
 8001b1e:	d5f6      	bpl.n	8001b0e <HAL_PWREx_EnableOverDrive+0x2a>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8001b20:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8001b22:	4d0c      	ldr	r5, [pc, #48]	; (8001b54 <HAL_PWREx_EnableOverDrive+0x70>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8001b24:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001b28:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8001b2a:	f7ff fdc9 	bl	80016c0 <HAL_GetTick>
 8001b2e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8001b30:	e005      	b.n	8001b3e <HAL_PWREx_EnableOverDrive+0x5a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8001b32:	f7ff fdc5 	bl	80016c0 <HAL_GetTick>
 8001b36:	1b00      	subs	r0, r0, r4
 8001b38:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8001b3c:	d805      	bhi.n	8001b4a <HAL_PWREx_EnableOverDrive+0x66>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8001b3e:	686b      	ldr	r3, [r5, #4]
 8001b40:	039b      	lsls	r3, r3, #14
 8001b42:	d5f6      	bpl.n	8001b32 <HAL_PWREx_EnableOverDrive+0x4e>
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8001b44:	2000      	movs	r0, #0
}
 8001b46:	b003      	add	sp, #12
 8001b48:	bd30      	pop	{r4, r5, pc}
      return HAL_TIMEOUT;
 8001b4a:	2003      	movs	r0, #3
}
 8001b4c:	b003      	add	sp, #12
 8001b4e:	bd30      	pop	{r4, r5, pc}
 8001b50:	40023800 	.word	0x40023800
 8001b54:	40007000 	.word	0x40007000

08001b58 <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8001b58:	2800      	cmp	r0, #0
 8001b5a:	f000 81b6 	beq.w	8001eca <HAL_RCC_OscConfig+0x372>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001b5e:	6803      	ldr	r3, [r0, #0]
{
 8001b60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001b64:	07dd      	lsls	r5, r3, #31
{
 8001b66:	b082      	sub	sp, #8
 8001b68:	4604      	mov	r4, r0
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001b6a:	d535      	bpl.n	8001bd8 <HAL_RCC_OscConfig+0x80>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001b6c:	499a      	ldr	r1, [pc, #616]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001b6e:	688a      	ldr	r2, [r1, #8]
 8001b70:	f002 020c 	and.w	r2, r2, #12
 8001b74:	2a04      	cmp	r2, #4
 8001b76:	f000 80e0 	beq.w	8001d3a <HAL_RCC_OscConfig+0x1e2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001b7a:	688a      	ldr	r2, [r1, #8]
 8001b7c:	f002 020c 	and.w	r2, r2, #12
 8001b80:	2a08      	cmp	r2, #8
 8001b82:	f000 80d6 	beq.w	8001d32 <HAL_RCC_OscConfig+0x1da>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001b86:	6863      	ldr	r3, [r4, #4]
 8001b88:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001b8c:	d010      	beq.n	8001bb0 <HAL_RCC_OscConfig+0x58>
 8001b8e:	2b00      	cmp	r3, #0
 8001b90:	f000 80fd 	beq.w	8001d8e <HAL_RCC_OscConfig+0x236>
 8001b94:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001b98:	4b8f      	ldr	r3, [pc, #572]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001b9a:	681a      	ldr	r2, [r3, #0]
 8001b9c:	f000 8185 	beq.w	8001eaa <HAL_RCC_OscConfig+0x352>
 8001ba0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001ba4:	601a      	str	r2, [r3, #0]
 8001ba6:	681a      	ldr	r2, [r3, #0]
 8001ba8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001bac:	601a      	str	r2, [r3, #0]
 8001bae:	e004      	b.n	8001bba <HAL_RCC_OscConfig+0x62>
 8001bb0:	4a89      	ldr	r2, [pc, #548]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001bb2:	6813      	ldr	r3, [r2, #0]
 8001bb4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001bb8:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001bba:	f7ff fd81 	bl	80016c0 <HAL_GetTick>

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001bbe:	4e86      	ldr	r6, [pc, #536]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
        tickstart = HAL_GetTick();
 8001bc0:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001bc2:	e005      	b.n	8001bd0 <HAL_RCC_OscConfig+0x78>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001bc4:	f7ff fd7c 	bl	80016c0 <HAL_GetTick>
 8001bc8:	1b40      	subs	r0, r0, r5
 8001bca:	2864      	cmp	r0, #100	; 0x64
 8001bcc:	f200 80db 	bhi.w	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001bd0:	6833      	ldr	r3, [r6, #0]
 8001bd2:	039a      	lsls	r2, r3, #14
 8001bd4:	d5f6      	bpl.n	8001bc4 <HAL_RCC_OscConfig+0x6c>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001bd6:	6823      	ldr	r3, [r4, #0]
 8001bd8:	079f      	lsls	r7, r3, #30
 8001bda:	d527      	bpl.n	8001c2c <HAL_RCC_OscConfig+0xd4>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8001bdc:	4a7e      	ldr	r2, [pc, #504]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001bde:	6891      	ldr	r1, [r2, #8]
 8001be0:	f011 0f0c 	tst.w	r1, #12
 8001be4:	d07e      	beq.n	8001ce4 <HAL_RCC_OscConfig+0x18c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001be6:	6891      	ldr	r1, [r2, #8]
 8001be8:	f001 010c 	and.w	r1, r1, #12
 8001bec:	2908      	cmp	r1, #8
 8001bee:	d076      	beq.n	8001cde <HAL_RCC_OscConfig+0x186>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8001bf0:	68e3      	ldr	r3, [r4, #12]
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001bf2:	4d79      	ldr	r5, [pc, #484]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	f000 8104 	beq.w	8001e02 <HAL_RCC_OscConfig+0x2aa>
        __HAL_RCC_HSI_ENABLE();
 8001bfa:	682b      	ldr	r3, [r5, #0]
 8001bfc:	f043 0301 	orr.w	r3, r3, #1
 8001c00:	602b      	str	r3, [r5, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001c02:	f7ff fd5d 	bl	80016c0 <HAL_GetTick>
 8001c06:	4606      	mov	r6, r0

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001c08:	e005      	b.n	8001c16 <HAL_RCC_OscConfig+0xbe>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001c0a:	f7ff fd59 	bl	80016c0 <HAL_GetTick>
 8001c0e:	1b80      	subs	r0, r0, r6
 8001c10:	2802      	cmp	r0, #2
 8001c12:	f200 80b8 	bhi.w	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001c16:	682b      	ldr	r3, [r5, #0]
 8001c18:	0798      	lsls	r0, r3, #30
 8001c1a:	d5f6      	bpl.n	8001c0a <HAL_RCC_OscConfig+0xb2>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001c1c:	682b      	ldr	r3, [r5, #0]
 8001c1e:	6922      	ldr	r2, [r4, #16]
 8001c20:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8001c24:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001c28:	602b      	str	r3, [r5, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001c2a:	6823      	ldr	r3, [r4, #0]
 8001c2c:	071a      	lsls	r2, r3, #28
 8001c2e:	d41f      	bmi.n	8001c70 <HAL_RCC_OscConfig+0x118>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001c30:	075d      	lsls	r5, r3, #29
 8001c32:	d534      	bpl.n	8001c9e <HAL_RCC_OscConfig+0x146>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001c34:	4b68      	ldr	r3, [pc, #416]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001c36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c38:	00d0      	lsls	r0, r2, #3
 8001c3a:	d56f      	bpl.n	8001d1c <HAL_RCC_OscConfig+0x1c4>
  FlagStatus pwrclkchanged = RESET;
 8001c3c:	2500      	movs	r5, #0
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001c3e:	4e67      	ldr	r6, [pc, #412]	; (8001ddc <HAL_RCC_OscConfig+0x284>)
 8001c40:	6833      	ldr	r3, [r6, #0]
 8001c42:	05d9      	lsls	r1, r3, #23
 8001c44:	f140 808f 	bpl.w	8001d66 <HAL_RCC_OscConfig+0x20e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001c48:	68a3      	ldr	r3, [r4, #8]
 8001c4a:	2b01      	cmp	r3, #1
 8001c4c:	f000 80eb 	beq.w	8001e26 <HAL_RCC_OscConfig+0x2ce>
 8001c50:	2b00      	cmp	r3, #0
 8001c52:	f000 80b2 	beq.w	8001dba <HAL_RCC_OscConfig+0x262>
 8001c56:	2b05      	cmp	r3, #5
 8001c58:	4b5f      	ldr	r3, [pc, #380]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001c5a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001c5c:	f000 812d 	beq.w	8001eba <HAL_RCC_OscConfig+0x362>
 8001c60:	f022 0201 	bic.w	r2, r2, #1
 8001c64:	671a      	str	r2, [r3, #112]	; 0x70
 8001c66:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001c68:	f022 0204 	bic.w	r2, r2, #4
 8001c6c:	671a      	str	r2, [r3, #112]	; 0x70
 8001c6e:	e0df      	b.n	8001e30 <HAL_RCC_OscConfig+0x2d8>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8001c70:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
 8001c72:	4d59      	ldr	r5, [pc, #356]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d040      	beq.n	8001cfa <HAL_RCC_OscConfig+0x1a2>
      __HAL_RCC_LSI_ENABLE();
 8001c78:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8001c7a:	f043 0301 	orr.w	r3, r3, #1
 8001c7e:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8001c80:	f7ff fd1e 	bl	80016c0 <HAL_GetTick>
 8001c84:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c86:	e004      	b.n	8001c92 <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001c88:	f7ff fd1a 	bl	80016c0 <HAL_GetTick>
 8001c8c:	1b80      	subs	r0, r0, r6
 8001c8e:	2802      	cmp	r0, #2
 8001c90:	d879      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001c92:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8001c94:	079b      	lsls	r3, r3, #30
 8001c96:	d5f7      	bpl.n	8001c88 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001c98:	6823      	ldr	r3, [r4, #0]
 8001c9a:	075d      	lsls	r5, r3, #29
 8001c9c:	d4ca      	bmi.n	8001c34 <HAL_RCC_OscConfig+0xdc>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001c9e:	69a0      	ldr	r0, [r4, #24]
 8001ca0:	b1c8      	cbz	r0, 8001cd6 <HAL_RCC_OscConfig+0x17e>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001ca2:	4d4d      	ldr	r5, [pc, #308]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001ca4:	68ab      	ldr	r3, [r5, #8]
 8001ca6:	f003 030c 	and.w	r3, r3, #12
 8001caa:	2b08      	cmp	r3, #8
 8001cac:	f000 80d3 	beq.w	8001e56 <HAL_RCC_OscConfig+0x2fe>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001cb0:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001cb2:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8001cb4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001cb8:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001cba:	f000 8108 	beq.w	8001ece <HAL_RCC_OscConfig+0x376>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001cbe:	f7ff fcff 	bl	80016c0 <HAL_GetTick>
 8001cc2:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001cc4:	e004      	b.n	8001cd0 <HAL_RCC_OscConfig+0x178>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001cc6:	f7ff fcfb 	bl	80016c0 <HAL_GetTick>
 8001cca:	1b00      	subs	r0, r0, r4
 8001ccc:	2802      	cmp	r0, #2
 8001cce:	d85a      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001cd0:	682b      	ldr	r3, [r5, #0]
 8001cd2:	019b      	lsls	r3, r3, #6
 8001cd4:	d4f7      	bmi.n	8001cc6 <HAL_RCC_OscConfig+0x16e>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8001cd6:	2000      	movs	r0, #0
}
 8001cd8:	b002      	add	sp, #8
 8001cda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001cde:	6852      	ldr	r2, [r2, #4]
 8001ce0:	0256      	lsls	r6, r2, #9
 8001ce2:	d485      	bmi.n	8001bf0 <HAL_RCC_OscConfig+0x98>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001ce4:	4a3c      	ldr	r2, [pc, #240]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001ce6:	6812      	ldr	r2, [r2, #0]
 8001ce8:	0795      	lsls	r5, r2, #30
 8001cea:	d530      	bpl.n	8001d4e <HAL_RCC_OscConfig+0x1f6>
 8001cec:	68e2      	ldr	r2, [r4, #12]
 8001cee:	2a01      	cmp	r2, #1
 8001cf0:	d02d      	beq.n	8001d4e <HAL_RCC_OscConfig+0x1f6>
        return HAL_ERROR;
 8001cf2:	2001      	movs	r0, #1
}
 8001cf4:	b002      	add	sp, #8
 8001cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 8001cfa:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8001cfc:	f023 0301 	bic.w	r3, r3, #1
 8001d00:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8001d02:	f7ff fcdd 	bl	80016c0 <HAL_GetTick>
 8001d06:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001d08:	e004      	b.n	8001d14 <HAL_RCC_OscConfig+0x1bc>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001d0a:	f7ff fcd9 	bl	80016c0 <HAL_GetTick>
 8001d0e:	1b80      	subs	r0, r0, r6
 8001d10:	2802      	cmp	r0, #2
 8001d12:	d838      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001d14:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8001d16:	079f      	lsls	r7, r3, #30
 8001d18:	d4f7      	bmi.n	8001d0a <HAL_RCC_OscConfig+0x1b2>
 8001d1a:	e7bd      	b.n	8001c98 <HAL_RCC_OscConfig+0x140>
      __HAL_RCC_PWR_CLK_ENABLE();
 8001d1c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
 8001d1e:	2501      	movs	r5, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 8001d20:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001d24:	641a      	str	r2, [r3, #64]	; 0x40
 8001d26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d28:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d2c:	9301      	str	r3, [sp, #4]
 8001d2e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8001d30:	e785      	b.n	8001c3e <HAL_RCC_OscConfig+0xe6>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001d32:	684a      	ldr	r2, [r1, #4]
 8001d34:	0250      	lsls	r0, r2, #9
 8001d36:	f57f af26 	bpl.w	8001b86 <HAL_RCC_OscConfig+0x2e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001d3a:	4a27      	ldr	r2, [pc, #156]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001d3c:	6812      	ldr	r2, [r2, #0]
 8001d3e:	0391      	lsls	r1, r2, #14
 8001d40:	f57f af4a 	bpl.w	8001bd8 <HAL_RCC_OscConfig+0x80>
 8001d44:	6862      	ldr	r2, [r4, #4]
 8001d46:	2a00      	cmp	r2, #0
 8001d48:	f47f af46 	bne.w	8001bd8 <HAL_RCC_OscConfig+0x80>
 8001d4c:	e7d1      	b.n	8001cf2 <HAL_RCC_OscConfig+0x19a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001d4e:	4922      	ldr	r1, [pc, #136]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001d50:	6920      	ldr	r0, [r4, #16]
 8001d52:	680a      	ldr	r2, [r1, #0]
 8001d54:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8001d58:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8001d5c:	600a      	str	r2, [r1, #0]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001d5e:	071a      	lsls	r2, r3, #28
 8001d60:	f57f af66 	bpl.w	8001c30 <HAL_RCC_OscConfig+0xd8>
 8001d64:	e784      	b.n	8001c70 <HAL_RCC_OscConfig+0x118>
      PWR->CR1 |= PWR_CR1_DBP;
 8001d66:	6833      	ldr	r3, [r6, #0]
 8001d68:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d6c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8001d6e:	f7ff fca7 	bl	80016c0 <HAL_GetTick>
 8001d72:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001d74:	6833      	ldr	r3, [r6, #0]
 8001d76:	05da      	lsls	r2, r3, #23
 8001d78:	f53f af66 	bmi.w	8001c48 <HAL_RCC_OscConfig+0xf0>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001d7c:	f7ff fca0 	bl	80016c0 <HAL_GetTick>
 8001d80:	1bc0      	subs	r0, r0, r7
 8001d82:	2864      	cmp	r0, #100	; 0x64
 8001d84:	d9f6      	bls.n	8001d74 <HAL_RCC_OscConfig+0x21c>
            return HAL_TIMEOUT;
 8001d86:	2003      	movs	r0, #3
}
 8001d88:	b002      	add	sp, #8
 8001d8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001d8e:	4d12      	ldr	r5, [pc, #72]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
 8001d90:	682b      	ldr	r3, [r5, #0]
 8001d92:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001d96:	602b      	str	r3, [r5, #0]
 8001d98:	682b      	ldr	r3, [r5, #0]
 8001d9a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001d9e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8001da0:	f7ff fc8e 	bl	80016c0 <HAL_GetTick>
 8001da4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001da6:	e004      	b.n	8001db2 <HAL_RCC_OscConfig+0x25a>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001da8:	f7ff fc8a 	bl	80016c0 <HAL_GetTick>
 8001dac:	1b80      	subs	r0, r0, r6
 8001dae:	2864      	cmp	r0, #100	; 0x64
 8001db0:	d8e9      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001db2:	682b      	ldr	r3, [r5, #0]
 8001db4:	039b      	lsls	r3, r3, #14
 8001db6:	d4f7      	bmi.n	8001da8 <HAL_RCC_OscConfig+0x250>
 8001db8:	e70d      	b.n	8001bd6 <HAL_RCC_OscConfig+0x7e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001dba:	4e07      	ldr	r6, [pc, #28]	; (8001dd8 <HAL_RCC_OscConfig+0x280>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001dbc:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001dc0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001dc2:	f023 0301 	bic.w	r3, r3, #1
 8001dc6:	6733      	str	r3, [r6, #112]	; 0x70
 8001dc8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001dca:	f023 0304 	bic.w	r3, r3, #4
 8001dce:	6733      	str	r3, [r6, #112]	; 0x70
      tickstart = HAL_GetTick();
 8001dd0:	f7ff fc76 	bl	80016c0 <HAL_GetTick>
 8001dd4:	4607      	mov	r7, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001dd6:	e008      	b.n	8001dea <HAL_RCC_OscConfig+0x292>
 8001dd8:	40023800 	.word	0x40023800
 8001ddc:	40007000 	.word	0x40007000
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001de0:	f7ff fc6e 	bl	80016c0 <HAL_GetTick>
 8001de4:	1bc0      	subs	r0, r0, r7
 8001de6:	4540      	cmp	r0, r8
 8001de8:	d8cd      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001dea:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001dec:	0798      	lsls	r0, r3, #30
 8001dee:	d4f7      	bmi.n	8001de0 <HAL_RCC_OscConfig+0x288>
    if (pwrclkchanged == SET)
 8001df0:	2d00      	cmp	r5, #0
 8001df2:	f43f af54 	beq.w	8001c9e <HAL_RCC_OscConfig+0x146>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001df6:	4a4e      	ldr	r2, [pc, #312]	; (8001f30 <HAL_RCC_OscConfig+0x3d8>)
 8001df8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001dfa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001dfe:	6413      	str	r3, [r2, #64]	; 0x40
 8001e00:	e74d      	b.n	8001c9e <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_DISABLE();
 8001e02:	682b      	ldr	r3, [r5, #0]
 8001e04:	f023 0301 	bic.w	r3, r3, #1
 8001e08:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8001e0a:	f7ff fc59 	bl	80016c0 <HAL_GetTick>
 8001e0e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001e10:	e004      	b.n	8001e1c <HAL_RCC_OscConfig+0x2c4>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001e12:	f7ff fc55 	bl	80016c0 <HAL_GetTick>
 8001e16:	1b80      	subs	r0, r0, r6
 8001e18:	2802      	cmp	r0, #2
 8001e1a:	d8b4      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001e1c:	682b      	ldr	r3, [r5, #0]
 8001e1e:	0799      	lsls	r1, r3, #30
 8001e20:	d4f7      	bmi.n	8001e12 <HAL_RCC_OscConfig+0x2ba>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001e22:	6823      	ldr	r3, [r4, #0]
 8001e24:	e702      	b.n	8001c2c <HAL_RCC_OscConfig+0xd4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001e26:	4a42      	ldr	r2, [pc, #264]	; (8001f30 <HAL_RCC_OscConfig+0x3d8>)
 8001e28:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8001e2a:	f043 0301 	orr.w	r3, r3, #1
 8001e2e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 8001e30:	f7ff fc46 	bl	80016c0 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001e34:	4f3e      	ldr	r7, [pc, #248]	; (8001f30 <HAL_RCC_OscConfig+0x3d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001e36:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8001e3a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001e3c:	e004      	b.n	8001e48 <HAL_RCC_OscConfig+0x2f0>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001e3e:	f7ff fc3f 	bl	80016c0 <HAL_GetTick>
 8001e42:	1b80      	subs	r0, r0, r6
 8001e44:	4540      	cmp	r0, r8
 8001e46:	d89e      	bhi.n	8001d86 <HAL_RCC_OscConfig+0x22e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001e48:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001e4a:	079b      	lsls	r3, r3, #30
 8001e4c:	d5f7      	bpl.n	8001e3e <HAL_RCC_OscConfig+0x2e6>
    if (pwrclkchanged == SET)
 8001e4e:	2d00      	cmp	r5, #0
 8001e50:	f43f af25 	beq.w	8001c9e <HAL_RCC_OscConfig+0x146>
 8001e54:	e7cf      	b.n	8001df6 <HAL_RCC_OscConfig+0x29e>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001e56:	2801      	cmp	r0, #1
      pll_config = RCC->PLLCFGR;
 8001e58:	686a      	ldr	r2, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001e5a:	f43f af3d 	beq.w	8001cd8 <HAL_RCC_OscConfig+0x180>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001e5e:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8001e62:	69e1      	ldr	r1, [r4, #28]
 8001e64:	428b      	cmp	r3, r1
 8001e66:	f47f af44 	bne.w	8001cf2 <HAL_RCC_OscConfig+0x19a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001e6a:	f002 033f 	and.w	r3, r2, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001e6e:	6a21      	ldr	r1, [r4, #32]
 8001e70:	428b      	cmp	r3, r1
 8001e72:	f47f af3e 	bne.w	8001cf2 <HAL_RCC_OscConfig+0x19a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001e76:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8001e7a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001e7c:	4013      	ands	r3, r2
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001e7e:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 8001e82:	f47f af36 	bne.w	8001cf2 <HAL_RCC_OscConfig+0x19a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001e86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001e88:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 8001e8c:	085b      	lsrs	r3, r3, #1
 8001e8e:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001e90:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 8001e94:	f47f af2d 	bne.w	8001cf2 <HAL_RCC_OscConfig+0x19a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8001e98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001e9a:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8001e9e:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
  return HAL_OK;
 8001ea2:	bf14      	ite	ne
 8001ea4:	2001      	movne	r0, #1
 8001ea6:	2000      	moveq	r0, #0
 8001ea8:	e716      	b.n	8001cd8 <HAL_RCC_OscConfig+0x180>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001eaa:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8001eae:	601a      	str	r2, [r3, #0]
 8001eb0:	681a      	ldr	r2, [r3, #0]
 8001eb2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001eb6:	601a      	str	r2, [r3, #0]
 8001eb8:	e67f      	b.n	8001bba <HAL_RCC_OscConfig+0x62>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001eba:	f042 0204 	orr.w	r2, r2, #4
 8001ebe:	671a      	str	r2, [r3, #112]	; 0x70
 8001ec0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001ec2:	f042 0201 	orr.w	r2, r2, #1
 8001ec6:	671a      	str	r2, [r3, #112]	; 0x70
 8001ec8:	e7b2      	b.n	8001e30 <HAL_RCC_OscConfig+0x2d8>
    return HAL_ERROR;
 8001eca:	2001      	movs	r0, #1
}
 8001ecc:	4770      	bx	lr
        tickstart = HAL_GetTick();
 8001ece:	f7ff fbf7 	bl	80016c0 <HAL_GetTick>
 8001ed2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ed4:	e005      	b.n	8001ee2 <HAL_RCC_OscConfig+0x38a>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ed6:	f7ff fbf3 	bl	80016c0 <HAL_GetTick>
 8001eda:	1b80      	subs	r0, r0, r6
 8001edc:	2802      	cmp	r0, #2
 8001ede:	f63f af52 	bhi.w	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001ee2:	682b      	ldr	r3, [r5, #0]
 8001ee4:	0199      	lsls	r1, r3, #6
 8001ee6:	d4f6      	bmi.n	8001ed6 <HAL_RCC_OscConfig+0x37e>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001ee8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8001eea:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001eec:	0852      	lsrs	r2, r2, #1
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001eee:	4e10      	ldr	r6, [pc, #64]	; (8001f30 <HAL_RCC_OscConfig+0x3d8>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001ef0:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 8001ef4:	3a01      	subs	r2, #1
 8001ef6:	430b      	orrs	r3, r1
 8001ef8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001efa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001efe:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8001f02:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8001f06:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001f0a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8001f0c:	682b      	ldr	r3, [r5, #0]
 8001f0e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001f12:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8001f14:	f7ff fbd4 	bl	80016c0 <HAL_GetTick>
 8001f18:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001f1a:	e005      	b.n	8001f28 <HAL_RCC_OscConfig+0x3d0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001f1c:	f7ff fbd0 	bl	80016c0 <HAL_GetTick>
 8001f20:	1b00      	subs	r0, r0, r4
 8001f22:	2802      	cmp	r0, #2
 8001f24:	f63f af2f 	bhi.w	8001d86 <HAL_RCC_OscConfig+0x22e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001f28:	6833      	ldr	r3, [r6, #0]
 8001f2a:	019a      	lsls	r2, r3, #6
 8001f2c:	d5f6      	bpl.n	8001f1c <HAL_RCC_OscConfig+0x3c4>
 8001f2e:	e6d2      	b.n	8001cd6 <HAL_RCC_OscConfig+0x17e>
 8001f30:	40023800 	.word	0x40023800

08001f34 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001f34:	2800      	cmp	r0, #0
 8001f36:	f000 80b3 	beq.w	80020a0 <HAL_RCC_ClockConfig+0x16c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001f3a:	4a61      	ldr	r2, [pc, #388]	; (80020c0 <HAL_RCC_ClockConfig+0x18c>)
 8001f3c:	6813      	ldr	r3, [r2, #0]
 8001f3e:	f003 030f 	and.w	r3, r3, #15
 8001f42:	428b      	cmp	r3, r1
{
 8001f44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f48:	4604      	mov	r4, r0
 8001f4a:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001f4c:	d20c      	bcs.n	8001f68 <HAL_RCC_ClockConfig+0x34>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001f4e:	6813      	ldr	r3, [r2, #0]
 8001f50:	f023 030f 	bic.w	r3, r3, #15
 8001f54:	430b      	orrs	r3, r1
 8001f56:	6013      	str	r3, [r2, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001f58:	6813      	ldr	r3, [r2, #0]
 8001f5a:	f003 030f 	and.w	r3, r3, #15
 8001f5e:	428b      	cmp	r3, r1
 8001f60:	d002      	beq.n	8001f68 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
 8001f62:	2001      	movs	r0, #1

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);

  return HAL_OK;
}
 8001f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001f68:	6823      	ldr	r3, [r4, #0]
 8001f6a:	0798      	lsls	r0, r3, #30
 8001f6c:	d514      	bpl.n	8001f98 <HAL_RCC_ClockConfig+0x64>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001f6e:	0759      	lsls	r1, r3, #29
 8001f70:	d504      	bpl.n	8001f7c <HAL_RCC_ClockConfig+0x48>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001f72:	4954      	ldr	r1, [pc, #336]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8001f74:	688a      	ldr	r2, [r1, #8]
 8001f76:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 8001f7a:	608a      	str	r2, [r1, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001f7c:	071a      	lsls	r2, r3, #28
 8001f7e:	d504      	bpl.n	8001f8a <HAL_RCC_ClockConfig+0x56>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001f80:	4950      	ldr	r1, [pc, #320]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8001f82:	688a      	ldr	r2, [r1, #8]
 8001f84:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 8001f88:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001f8a:	494e      	ldr	r1, [pc, #312]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8001f8c:	68a0      	ldr	r0, [r4, #8]
 8001f8e:	688a      	ldr	r2, [r1, #8]
 8001f90:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8001f94:	4302      	orrs	r2, r0
 8001f96:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001f98:	07df      	lsls	r7, r3, #31
 8001f9a:	d520      	bpl.n	8001fde <HAL_RCC_ClockConfig+0xaa>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001f9c:	6862      	ldr	r2, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f9e:	4b49      	ldr	r3, [pc, #292]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001fa0:	2a01      	cmp	r2, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001fa2:	681b      	ldr	r3, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001fa4:	d07e      	beq.n	80020a4 <HAL_RCC_ClockConfig+0x170>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001fa6:	2a02      	cmp	r2, #2
 8001fa8:	d077      	beq.n	800209a <HAL_RCC_ClockConfig+0x166>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001faa:	0799      	lsls	r1, r3, #30
 8001fac:	d5d9      	bpl.n	8001f62 <HAL_RCC_ClockConfig+0x2e>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001fae:	4e45      	ldr	r6, [pc, #276]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001fb0:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001fb4:	68b3      	ldr	r3, [r6, #8]
 8001fb6:	f023 0303 	bic.w	r3, r3, #3
 8001fba:	4313      	orrs	r3, r2
 8001fbc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8001fbe:	f7ff fb7f 	bl	80016c0 <HAL_GetTick>
 8001fc2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001fc4:	e004      	b.n	8001fd0 <HAL_RCC_ClockConfig+0x9c>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001fc6:	f7ff fb7b 	bl	80016c0 <HAL_GetTick>
 8001fca:	1bc0      	subs	r0, r0, r7
 8001fcc:	4540      	cmp	r0, r8
 8001fce:	d86c      	bhi.n	80020aa <HAL_RCC_ClockConfig+0x176>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001fd0:	68b3      	ldr	r3, [r6, #8]
 8001fd2:	6862      	ldr	r2, [r4, #4]
 8001fd4:	f003 030c 	and.w	r3, r3, #12
 8001fd8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001fdc:	d1f3      	bne.n	8001fc6 <HAL_RCC_ClockConfig+0x92>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001fde:	4a38      	ldr	r2, [pc, #224]	; (80020c0 <HAL_RCC_ClockConfig+0x18c>)
 8001fe0:	6813      	ldr	r3, [r2, #0]
 8001fe2:	f003 030f 	and.w	r3, r3, #15
 8001fe6:	42ab      	cmp	r3, r5
 8001fe8:	d909      	bls.n	8001ffe <HAL_RCC_ClockConfig+0xca>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001fea:	6813      	ldr	r3, [r2, #0]
 8001fec:	f023 030f 	bic.w	r3, r3, #15
 8001ff0:	432b      	orrs	r3, r5
 8001ff2:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001ff4:	6813      	ldr	r3, [r2, #0]
 8001ff6:	f003 030f 	and.w	r3, r3, #15
 8001ffa:	42ab      	cmp	r3, r5
 8001ffc:	d1b1      	bne.n	8001f62 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001ffe:	6823      	ldr	r3, [r4, #0]
 8002000:	075a      	lsls	r2, r3, #29
 8002002:	d506      	bpl.n	8002012 <HAL_RCC_ClockConfig+0xde>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002004:	492f      	ldr	r1, [pc, #188]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8002006:	68e0      	ldr	r0, [r4, #12]
 8002008:	688a      	ldr	r2, [r1, #8]
 800200a:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800200e:	4302      	orrs	r2, r0
 8002010:	608a      	str	r2, [r1, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002012:	071b      	lsls	r3, r3, #28
 8002014:	d431      	bmi.n	800207a <HAL_RCC_ClockConfig+0x146>
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002016:	492b      	ldr	r1, [pc, #172]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8002018:	688b      	ldr	r3, [r1, #8]
 800201a:	f003 030c 	and.w	r3, r3, #12
 800201e:	2b04      	cmp	r3, #4
 8002020:	d039      	beq.n	8002096 <HAL_RCC_ClockConfig+0x162>
 8002022:	2b08      	cmp	r3, #8
 8002024:	d118      	bne.n	8002058 <HAL_RCC_ClockConfig+0x124>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002026:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8002028:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800202a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800202e:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8002030:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 8002034:	d03b      	beq.n	80020ae <HAL_RCC_ClockConfig+0x17a>
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002036:	4824      	ldr	r0, [pc, #144]	; (80020c8 <HAL_RCC_ClockConfig+0x194>)
 8002038:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800203c:	2300      	movs	r3, #0
 800203e:	fba1 0100 	umull	r0, r1, r1, r0
 8002042:	f7fe fdd1 	bl	8000be8 <__aeabi_uldivmod>
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8002046:	4b1f      	ldr	r3, [pc, #124]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 8002048:	685b      	ldr	r3, [r3, #4]
 800204a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800204e:	3301      	adds	r3, #1
 8002050:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8002052:	fbb0 f3f3 	udiv	r3, r0, r3
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 8002056:	e000      	b.n	800205a <HAL_RCC_ClockConfig+0x126>
      sysclockfreq = HSI_VALUE;
 8002058:	4b1c      	ldr	r3, [pc, #112]	; (80020cc <HAL_RCC_ClockConfig+0x198>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800205a:	4a1a      	ldr	r2, [pc, #104]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 800205c:	4c1c      	ldr	r4, [pc, #112]	; (80020d0 <HAL_RCC_ClockConfig+0x19c>)
 800205e:	6892      	ldr	r2, [r2, #8]
  HAL_InitTick(uwTickPrio);
 8002060:	481c      	ldr	r0, [pc, #112]	; (80020d4 <HAL_RCC_ClockConfig+0x1a0>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8002062:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8002066:	491c      	ldr	r1, [pc, #112]	; (80020d8 <HAL_RCC_ClockConfig+0x1a4>)
  HAL_InitTick(uwTickPrio);
 8002068:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800206a:	5ca2      	ldrb	r2, [r4, r2]
 800206c:	40d3      	lsrs	r3, r2
 800206e:	600b      	str	r3, [r1, #0]
  HAL_InitTick(uwTickPrio);
 8002070:	f7ff faea 	bl	8001648 <HAL_InitTick>
  return HAL_OK;
 8002074:	2000      	movs	r0, #0
}
 8002076:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800207a:	4a12      	ldr	r2, [pc, #72]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
 800207c:	6921      	ldr	r1, [r4, #16]
 800207e:	6893      	ldr	r3, [r2, #8]
 8002080:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8002084:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002088:	490e      	ldr	r1, [pc, #56]	; (80020c4 <HAL_RCC_ClockConfig+0x190>)
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800208a:	6093      	str	r3, [r2, #8]
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800208c:	688b      	ldr	r3, [r1, #8]
 800208e:	f003 030c 	and.w	r3, r3, #12
 8002092:	2b04      	cmp	r3, #4
 8002094:	d1c5      	bne.n	8002022 <HAL_RCC_ClockConfig+0xee>
 8002096:	4b0c      	ldr	r3, [pc, #48]	; (80020c8 <HAL_RCC_ClockConfig+0x194>)
 8002098:	e7df      	b.n	800205a <HAL_RCC_ClockConfig+0x126>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800209a:	0198      	lsls	r0, r3, #6
 800209c:	d487      	bmi.n	8001fae <HAL_RCC_ClockConfig+0x7a>
 800209e:	e760      	b.n	8001f62 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 80020a0:	2001      	movs	r0, #1
}
 80020a2:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80020a4:	039e      	lsls	r6, r3, #14
 80020a6:	d482      	bmi.n	8001fae <HAL_RCC_ClockConfig+0x7a>
 80020a8:	e75b      	b.n	8001f62 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
 80020aa:	2003      	movs	r0, #3
 80020ac:	e75a      	b.n	8001f64 <HAL_RCC_ClockConfig+0x30>
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80020ae:	4807      	ldr	r0, [pc, #28]	; (80020cc <HAL_RCC_ClockConfig+0x198>)
 80020b0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80020b4:	fba1 0100 	umull	r0, r1, r1, r0
 80020b8:	f7fe fd96 	bl	8000be8 <__aeabi_uldivmod>
 80020bc:	e7c3      	b.n	8002046 <HAL_RCC_ClockConfig+0x112>
 80020be:	bf00      	nop
 80020c0:	40023c00 	.word	0x40023c00
 80020c4:	40023800 	.word	0x40023800
 80020c8:	017d7840 	.word	0x017d7840
 80020cc:	00f42400 	.word	0x00f42400
 80020d0:	0800ee58 	.word	0x0800ee58
 80020d4:	20000008 	.word	0x20000008
 80020d8:	20000000 	.word	0x20000000

080020dc <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80020dc:	4916      	ldr	r1, [pc, #88]	; (8002138 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 80020de:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80020e0:	688b      	ldr	r3, [r1, #8]
 80020e2:	f003 030c 	and.w	r3, r3, #12
 80020e6:	2b04      	cmp	r3, #4
 80020e8:	d01b      	beq.n	8002122 <HAL_RCC_GetSysClockFreq+0x46>
 80020ea:	2b08      	cmp	r3, #8
 80020ec:	d117      	bne.n	800211e <HAL_RCC_GetSysClockFreq+0x42>
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80020ee:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80020f0:	684b      	ldr	r3, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80020f2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80020f6:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80020f8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
 80020fc:	d113      	bne.n	8002126 <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80020fe:	480f      	ldr	r0, [pc, #60]	; (800213c <HAL_RCC_GetSysClockFreq+0x60>)
 8002100:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8002104:	fba1 0100 	umull	r0, r1, r1, r0
 8002108:	f7fe fd6e 	bl	8000be8 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 800210c:	4b0a      	ldr	r3, [pc, #40]	; (8002138 <HAL_RCC_GetSysClockFreq+0x5c>)
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8002114:	3301      	adds	r3, #1
 8002116:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco / pllp;
 8002118:	fbb0 f0f3 	udiv	r0, r0, r3
}
 800211c:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800211e:	4807      	ldr	r0, [pc, #28]	; (800213c <HAL_RCC_GetSysClockFreq+0x60>)
}
 8002120:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002122:	4807      	ldr	r0, [pc, #28]	; (8002140 <HAL_RCC_GetSysClockFreq+0x64>)
}
 8002124:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002126:	4806      	ldr	r0, [pc, #24]	; (8002140 <HAL_RCC_GetSysClockFreq+0x64>)
 8002128:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800212c:	2300      	movs	r3, #0
 800212e:	fba1 0100 	umull	r0, r1, r1, r0
 8002132:	f7fe fd59 	bl	8000be8 <__aeabi_uldivmod>
 8002136:	e7e9      	b.n	800210c <HAL_RCC_GetSysClockFreq+0x30>
 8002138:	40023800 	.word	0x40023800
 800213c:	00f42400 	.word	0x00f42400
 8002140:	017d7840 	.word	0x017d7840

08002144 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002144:	4b04      	ldr	r3, [pc, #16]	; (8002158 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 8002146:	4905      	ldr	r1, [pc, #20]	; (800215c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002148:	689b      	ldr	r3, [r3, #8]
 800214a:	4a05      	ldr	r2, [pc, #20]	; (8002160 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800214c:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8002150:	6808      	ldr	r0, [r1, #0]
 8002152:	5cd3      	ldrb	r3, [r2, r3]
}
 8002154:	40d8      	lsrs	r0, r3
 8002156:	4770      	bx	lr
 8002158:	40023800 	.word	0x40023800
 800215c:	20000000 	.word	0x20000000
 8002160:	0800ee68 	.word	0x0800ee68

08002164 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002164:	4b04      	ldr	r3, [pc, #16]	; (8002178 <HAL_RCC_GetPCLK2Freq+0x14>)
  return SystemCoreClock;
 8002166:	4905      	ldr	r1, [pc, #20]	; (800217c <HAL_RCC_GetPCLK2Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002168:	689b      	ldr	r3, [r3, #8]
 800216a:	4a05      	ldr	r2, [pc, #20]	; (8002180 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800216c:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8002170:	6808      	ldr	r0, [r1, #0]
 8002172:	5cd3      	ldrb	r3, [r2, r3]
}
 8002174:	40d8      	lsrs	r0, r3
 8002176:	4770      	bx	lr
 8002178:	40023800 	.word	0x40023800
 800217c:	20000000 	.word	0x20000000
 8002180:	0800ee68 	.word	0x0800ee68

08002184 <HAL_RCCEx_PeriphCLKConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002184:	6803      	ldr	r3, [r0, #0]
{
 8002186:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800218a:	f013 0601 	ands.w	r6, r3, #1
{
 800218e:	b083      	sub	sp, #12
 8002190:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8002192:	d00b      	beq.n	80021ac <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8002194:	4aa8      	ldr	r2, [pc, #672]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002196:	6891      	ldr	r1, [r2, #8]
 8002198:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 800219c:	6091      	str	r1, [r2, #8]
 800219e:	6b46      	ldr	r6, [r0, #52]	; 0x34
 80021a0:	6891      	ldr	r1, [r2, #8]
 80021a2:	4331      	orrs	r1, r6

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80021a4:	fab6 f686 	clz	r6, r6
 80021a8:	0976      	lsrs	r6, r6, #5
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80021aa:	6091      	str	r1, [r2, #8]
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80021ac:	f413 2500 	ands.w	r5, r3, #524288	; 0x80000
 80021b0:	d010      	beq.n	80021d4 <HAL_RCCEx_PeriphCLKConfig+0x50>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80021b2:	49a1      	ldr	r1, [pc, #644]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80021b4:	6be5      	ldr	r5, [r4, #60]	; 0x3c
 80021b6:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80021ba:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80021be:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80021c2:	ea42 0205 	orr.w	r2, r2, r5
 80021c6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80021ca:	f000 8214 	beq.w	80025f6 <HAL_RCCEx_PeriphCLKConfig+0x472>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 80021ce:	fab5 f585 	clz	r5, r5
 80021d2:	096d      	lsrs	r5, r5, #5
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 80021d4:	02df      	lsls	r7, r3, #11
 80021d6:	d510      	bpl.n	80021fa <HAL_RCCEx_PeriphCLKConfig+0x76>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80021d8:	4897      	ldr	r0, [pc, #604]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80021da:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80021dc:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80021e0:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80021e4:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80021e8:	ea42 0201 	orr.w	r2, r2, r1
 80021ec:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80021f0:	f000 8204 	beq.w	80025fc <HAL_RCCEx_PeriphCLKConfig+0x478>
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
    {
      pllsaiused = 1;
 80021f4:	2900      	cmp	r1, #0
 80021f6:	bf08      	it	eq
 80021f8:	2501      	moveq	r5, #1
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
  {
      plli2sused = 1;
 80021fa:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80021fe:	bf18      	it	ne
 8002200:	2601      	movne	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8002202:	0698      	lsls	r0, r3, #26
 8002204:	f100 81b2 	bmi.w	800256c <HAL_RCCEx_PeriphCLKConfig+0x3e8>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8002208:	06d9      	lsls	r1, r3, #27
 800220a:	d50c      	bpl.n	8002226 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800220c:	4a8a      	ldr	r2, [pc, #552]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800220e:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 8002212:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
 8002216:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 800221a:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 800221e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8002220:	4301      	orrs	r1, r0
 8002222:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8002226:	045a      	lsls	r2, r3, #17
 8002228:	d508      	bpl.n	800223c <HAL_RCCEx_PeriphCLKConfig+0xb8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800222a:	4983      	ldr	r1, [pc, #524]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800222c:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800222e:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002232:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8002236:	4302      	orrs	r2, r0
 8002238:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 800223c:	041f      	lsls	r7, r3, #16
 800223e:	d508      	bpl.n	8002252 <HAL_RCCEx_PeriphCLKConfig+0xce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8002240:	497d      	ldr	r1, [pc, #500]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002242:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8002244:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002248:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 800224c:	4302      	orrs	r2, r0
 800224e:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8002252:	03d8      	lsls	r0, r3, #15
 8002254:	d508      	bpl.n	8002268 <HAL_RCCEx_PeriphCLKConfig+0xe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8002256:	4978      	ldr	r1, [pc, #480]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002258:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800225a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800225e:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8002262:	4302      	orrs	r2, r0
 8002264:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8002268:	0399      	lsls	r1, r3, #14
 800226a:	d508      	bpl.n	800227e <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 800226c:	4972      	ldr	r1, [pc, #456]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800226e:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8002270:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002274:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8002278:	4302      	orrs	r2, r0
 800227a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 800227e:	065a      	lsls	r2, r3, #25
 8002280:	d508      	bpl.n	8002294 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8002282:	496d      	ldr	r1, [pc, #436]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002284:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002286:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800228a:	f022 0203 	bic.w	r2, r2, #3
 800228e:	4302      	orrs	r2, r0
 8002290:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8002294:	061f      	lsls	r7, r3, #24
 8002296:	d508      	bpl.n	80022aa <HAL_RCCEx_PeriphCLKConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8002298:	4967      	ldr	r1, [pc, #412]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800229a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800229c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80022a0:	f022 020c 	bic.w	r2, r2, #12
 80022a4:	4302      	orrs	r2, r0
 80022a6:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80022aa:	05d8      	lsls	r0, r3, #23
 80022ac:	d508      	bpl.n	80022c0 <HAL_RCCEx_PeriphCLKConfig+0x13c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 80022ae:	4962      	ldr	r1, [pc, #392]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80022b0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80022b2:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80022b6:	f022 0230 	bic.w	r2, r2, #48	; 0x30
 80022ba:	4302      	orrs	r2, r0
 80022bc:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 80022c0:	0599      	lsls	r1, r3, #22
 80022c2:	d508      	bpl.n	80022d6 <HAL_RCCEx_PeriphCLKConfig+0x152>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 80022c4:	495c      	ldr	r1, [pc, #368]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80022c6:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80022c8:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80022cc:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80022d0:	4302      	orrs	r2, r0
 80022d2:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 80022d6:	055a      	lsls	r2, r3, #21
 80022d8:	d508      	bpl.n	80022ec <HAL_RCCEx_PeriphCLKConfig+0x168>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 80022da:	4957      	ldr	r1, [pc, #348]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80022dc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80022de:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80022e2:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80022e6:	4302      	orrs	r2, r0
 80022e8:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 80022ec:	051f      	lsls	r7, r3, #20
 80022ee:	d508      	bpl.n	8002302 <HAL_RCCEx_PeriphCLKConfig+0x17e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80022f0:	4951      	ldr	r1, [pc, #324]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80022f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80022f4:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 80022f8:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 80022fc:	4302      	orrs	r2, r0
 80022fe:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8002302:	04d8      	lsls	r0, r3, #19
 8002304:	d508      	bpl.n	8002318 <HAL_RCCEx_PeriphCLKConfig+0x194>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8002306:	494c      	ldr	r1, [pc, #304]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002308:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800230a:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800230e:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8002312:	4302      	orrs	r2, r0
 8002314:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8002318:	0499      	lsls	r1, r3, #18
 800231a:	d508      	bpl.n	800232e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 800231c:	4946      	ldr	r1, [pc, #280]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800231e:	6e20      	ldr	r0, [r4, #96]	; 0x60
 8002320:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002324:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8002328:	4302      	orrs	r2, r0
 800232a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 800232e:	025a      	lsls	r2, r3, #9
 8002330:	d508      	bpl.n	8002344 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8002332:	4941      	ldr	r1, [pc, #260]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002334:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8002336:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 800233a:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800233e:	4302      	orrs	r2, r0
 8002340:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8002344:	029f      	lsls	r7, r3, #10
 8002346:	d50c      	bpl.n	8002362 <HAL_RCCEx_PeriphCLKConfig+0x1de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002348:	493b      	ldr	r1, [pc, #236]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800234a:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 800234c:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
    {
      pllsaiused = 1;
 8002350:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8002354:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
      pllsaiused = 1;
 8002358:	bf08      	it	eq
 800235a:	2501      	moveq	r5, #1
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800235c:	4302      	orrs	r2, r0
 800235e:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
  {
    pllsaiused = 1;
 8002362:	f013 0f08 	tst.w	r3, #8
 8002366:	bf18      	it	ne
 8002368:	2501      	movne	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 800236a:	0358      	lsls	r0, r3, #13
 800236c:	d508      	bpl.n	8002380 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800236e:	4932      	ldr	r1, [pc, #200]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002370:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8002372:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002376:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800237a:	4302      	orrs	r2, r0
 800237c:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8002380:	0219      	lsls	r1, r3, #8
 8002382:	d46a      	bmi.n	800245a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8002384:	2e01      	cmp	r6, #1
 8002386:	d001      	beq.n	800238c <HAL_RCCEx_PeriphCLKConfig+0x208>
 8002388:	019a      	lsls	r2, r3, #6
 800238a:	d560      	bpl.n	800244e <HAL_RCCEx_PeriphCLKConfig+0x2ca>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 800238c:	4e2a      	ldr	r6, [pc, #168]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800238e:	6833      	ldr	r3, [r6, #0]
 8002390:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8002394:	6033      	str	r3, [r6, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8002396:	f7ff f993 	bl	80016c0 <HAL_GetTick>
 800239a:	4607      	mov	r7, r0

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800239c:	e005      	b.n	80023aa <HAL_RCCEx_PeriphCLKConfig+0x226>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800239e:	f7ff f98f 	bl	80016c0 <HAL_GetTick>
 80023a2:	1bc3      	subs	r3, r0, r7
 80023a4:	2b64      	cmp	r3, #100	; 0x64
 80023a6:	f200 80dd 	bhi.w	8002564 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80023aa:	6833      	ldr	r3, [r6, #0]
 80023ac:	011b      	lsls	r3, r3, #4
 80023ae:	d4f6      	bmi.n	800239e <HAL_RCCEx_PeriphCLKConfig+0x21a>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80023b0:	6823      	ldr	r3, [r4, #0]
 80023b2:	07df      	lsls	r7, r3, #31
 80023b4:	d512      	bpl.n	80023dc <HAL_RCCEx_PeriphCLKConfig+0x258>
 80023b6:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80023b8:	b982      	cbnz	r2, 80023dc <HAL_RCCEx_PeriphCLKConfig+0x258>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 80023ba:	f8d6 2084 	ldr.w	r2, [r6, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80023be:	f8d6 1084 	ldr.w	r1, [r6, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 80023c2:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80023c6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80023ca:	430a      	orrs	r2, r1
 80023cc:	6861      	ldr	r1, [r4, #4]
 80023ce:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 80023d2:	68a1      	ldr	r1, [r4, #8]
 80023d4:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
 80023d8:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 80023dc:	031e      	lsls	r6, r3, #12
 80023de:	d504      	bpl.n	80023ea <HAL_RCCEx_PeriphCLKConfig+0x266>
 80023e0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80023e2:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 80023e6:	f000 811a 	beq.w	800261e <HAL_RCCEx_PeriphCLKConfig+0x49a>
 80023ea:	02d8      	lsls	r0, r3, #11
 80023ec:	d504      	bpl.n	80023f8 <HAL_RCCEx_PeriphCLKConfig+0x274>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 80023ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80023f0:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 80023f4:	f000 8113 	beq.w	800261e <HAL_RCCEx_PeriphCLKConfig+0x49a>
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80023f8:	01d9      	lsls	r1, r3, #7
 80023fa:	d511      	bpl.n	8002420 <HAL_RCCEx_PeriphCLKConfig+0x29c>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 80023fc:	490e      	ldr	r1, [pc, #56]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80023fe:	f8d1 2084 	ldr.w	r2, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002402:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8002406:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 800240a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800240e:	4302      	orrs	r2, r0
 8002410:	6860      	ldr	r0, [r4, #4]
 8002412:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002416:	6920      	ldr	r0, [r4, #16]
 8002418:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800241c:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8002420:	019a      	lsls	r2, r3, #6
 8002422:	f100 80ed 	bmi.w	8002600 <HAL_RCCEx_PeriphCLKConfig+0x47c>
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8002426:	4e04      	ldr	r6, [pc, #16]	; (8002438 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8002428:	6833      	ldr	r3, [r6, #0]
 800242a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800242e:	6033      	str	r3, [r6, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8002430:	f7ff f946 	bl	80016c0 <HAL_GetTick>
 8002434:	4607      	mov	r7, r0

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002436:	e007      	b.n	8002448 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 8002438:	40023800 	.word	0x40023800
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 800243c:	f7ff f940 	bl	80016c0 <HAL_GetTick>
 8002440:	1bc0      	subs	r0, r0, r7
 8002442:	2864      	cmp	r0, #100	; 0x64
 8002444:	f200 808e 	bhi.w	8002564 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8002448:	6833      	ldr	r3, [r6, #0]
 800244a:	011b      	lsls	r3, r3, #4
 800244c:	d5f6      	bpl.n	800243c <HAL_RCCEx_PeriphCLKConfig+0x2b8>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 800244e:	2d01      	cmp	r5, #1
 8002450:	d00e      	beq.n	8002470 <HAL_RCCEx_PeriphCLKConfig+0x2ec>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8002452:	2000      	movs	r0, #0
}
 8002454:	b003      	add	sp, #12
 8002456:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 800245a:	4991      	ldr	r1, [pc, #580]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 800245c:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 8002460:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
 8002464:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8002468:	4302      	orrs	r2, r0
 800246a:	f8c1 2090 	str.w	r2, [r1, #144]	; 0x90
 800246e:	e789      	b.n	8002384 <HAL_RCCEx_PeriphCLKConfig+0x200>
    __HAL_RCC_PLLSAI_DISABLE();
 8002470:	4d8b      	ldr	r5, [pc, #556]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002472:	682b      	ldr	r3, [r5, #0]
 8002474:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002478:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800247a:	f7ff f921 	bl	80016c0 <HAL_GetTick>
 800247e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8002480:	e004      	b.n	800248c <HAL_RCCEx_PeriphCLKConfig+0x308>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8002482:	f7ff f91d 	bl	80016c0 <HAL_GetTick>
 8002486:	1b80      	subs	r0, r0, r6
 8002488:	2864      	cmp	r0, #100	; 0x64
 800248a:	d86b      	bhi.n	8002564 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800248c:	682b      	ldr	r3, [r5, #0]
 800248e:	009f      	lsls	r7, r3, #2
 8002490:	d4f7      	bmi.n	8002482 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8002492:	6823      	ldr	r3, [r4, #0]
 8002494:	031d      	lsls	r5, r3, #12
 8002496:	f140 80fb 	bpl.w	8002690 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 800249a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800249c:	2a00      	cmp	r2, #0
 800249e:	f040 80f7 	bne.w	8002690 <HAL_RCCEx_PeriphCLKConfig+0x50c>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 80024a2:	497f      	ldr	r1, [pc, #508]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 80024a4:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80024a8:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80024ac:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80024b0:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80024b4:	4302      	orrs	r2, r0
 80024b6:	6960      	ldr	r0, [r4, #20]
 80024b8:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 80024bc:	69a0      	ldr	r0, [r4, #24]
 80024be:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80024c2:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80024c6:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80024ca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80024cc:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80024d0:	3801      	subs	r0, #1
 80024d2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80024d6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 80024da:	0299      	lsls	r1, r3, #10
 80024dc:	d515      	bpl.n	800250a <HAL_RCCEx_PeriphCLKConfig+0x386>
 80024de:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80024e0:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
 80024e4:	d111      	bne.n	800250a <HAL_RCCEx_PeriphCLKConfig+0x386>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80024e6:	496e      	ldr	r1, [pc, #440]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 80024e8:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80024ec:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 80024f0:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 80024f4:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80024f8:	4302      	orrs	r2, r0
 80024fa:	6960      	ldr	r0, [r4, #20]
 80024fc:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002500:	6a20      	ldr	r0, [r4, #32]
 8002502:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8002506:	f8c1 2088 	str.w	r2, [r1, #136]	; 0x88
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800250a:	071a      	lsls	r2, r3, #28
 800250c:	d519      	bpl.n	8002542 <HAL_RCCEx_PeriphCLKConfig+0x3be>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800250e:	4a64      	ldr	r2, [pc, #400]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8002510:	6965      	ldr	r5, [r4, #20]
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8002512:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8002516:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800251a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800251e:	69e0      	ldr	r0, [r4, #28]
 8002520:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002524:	430b      	orrs	r3, r1
 8002526:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800252a:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800252e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8002532:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8002536:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002538:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800253c:	430b      	orrs	r3, r1
 800253e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 8002542:	4c57      	ldr	r4, [pc, #348]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002544:	6823      	ldr	r3, [r4, #0]
 8002546:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800254a:	6023      	str	r3, [r4, #0]
    tickstart = HAL_GetTick();
 800254c:	f7ff f8b8 	bl	80016c0 <HAL_GetTick>
 8002550:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8002552:	6823      	ldr	r3, [r4, #0]
 8002554:	009b      	lsls	r3, r3, #2
 8002556:	f53f af7c 	bmi.w	8002452 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 800255a:	f7ff f8b1 	bl	80016c0 <HAL_GetTick>
 800255e:	1b40      	subs	r0, r0, r5
 8002560:	2864      	cmp	r0, #100	; 0x64
 8002562:	d9f6      	bls.n	8002552 <HAL_RCCEx_PeriphCLKConfig+0x3ce>
        return HAL_TIMEOUT;
 8002564:	2003      	movs	r0, #3
}
 8002566:	b003      	add	sp, #12
 8002568:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800256c:	4b4c      	ldr	r3, [pc, #304]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
    PWR->CR1 |= PWR_CR1_DBP;
 800256e:	4f4d      	ldr	r7, [pc, #308]	; (80026a4 <HAL_RCCEx_PeriphCLKConfig+0x520>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8002570:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002572:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8002576:	641a      	str	r2, [r3, #64]	; 0x40
 8002578:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800257a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800257e:	9301      	str	r3, [sp, #4]
 8002580:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8002582:	683b      	ldr	r3, [r7, #0]
 8002584:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002588:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 800258a:	f7ff f899 	bl	80016c0 <HAL_GetTick>
 800258e:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8002590:	e005      	b.n	800259e <HAL_RCCEx_PeriphCLKConfig+0x41a>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002592:	f7ff f895 	bl	80016c0 <HAL_GetTick>
 8002596:	eba0 0008 	sub.w	r0, r0, r8
 800259a:	2864      	cmp	r0, #100	; 0x64
 800259c:	d8e2      	bhi.n	8002564 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	05d9      	lsls	r1, r3, #23
 80025a2:	d5f6      	bpl.n	8002592 <HAL_RCCEx_PeriphCLKConfig+0x40e>
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80025a4:	4f3e      	ldr	r7, [pc, #248]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80025a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80025a8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80025aa:	f403 7140 	and.w	r1, r3, #768	; 0x300
 80025ae:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 80025b2:	d010      	beq.n	80025d6 <HAL_RCCEx_PeriphCLKConfig+0x452>
 80025b4:	4291      	cmp	r1, r2
 80025b6:	d00e      	beq.n	80025d6 <HAL_RCCEx_PeriphCLKConfig+0x452>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80025b8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80025ba:	6f38      	ldr	r0, [r7, #112]	; 0x70
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80025bc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 80025c0:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 80025c4:	6738      	str	r0, [r7, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80025c6:	6f38      	ldr	r0, [r7, #112]	; 0x70
 80025c8:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
 80025cc:	6738      	str	r0, [r7, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 80025ce:	673a      	str	r2, [r7, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80025d0:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 80025d2:	07d2      	lsls	r2, r2, #31
 80025d4:	d448      	bmi.n	8002668 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80025d6:	f5b1 7f40 	cmp.w	r1, #768	; 0x300
 80025da:	d03c      	beq.n	8002656 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80025dc:	4930      	ldr	r1, [pc, #192]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 80025de:	688a      	ldr	r2, [r1, #8]
 80025e0:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 80025e4:	608a      	str	r2, [r1, #8]
 80025e6:	4a2e      	ldr	r2, [pc, #184]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 80025e8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80025ec:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80025ee:	430b      	orrs	r3, r1
 80025f0:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80025f2:	6823      	ldr	r3, [r4, #0]
 80025f4:	e608      	b.n	8002208 <HAL_RCCEx_PeriphCLKConfig+0x84>
  uint32_t pllsaiused = 0;
 80025f6:	2500      	movs	r5, #0
      plli2sused = 1;
 80025f8:	2601      	movs	r6, #1
 80025fa:	e5eb      	b.n	80021d4 <HAL_RCCEx_PeriphCLKConfig+0x50>
      plli2sused = 1;
 80025fc:	2601      	movs	r6, #1
 80025fe:	e5fc      	b.n	80021fa <HAL_RCCEx_PeriphCLKConfig+0x76>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8002600:	6923      	ldr	r3, [r4, #16]
 8002602:	6861      	ldr	r1, [r4, #4]
 8002604:	041b      	lsls	r3, r3, #16
 8002606:	68e2      	ldr	r2, [r4, #12]
 8002608:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800260c:	68a1      	ldr	r1, [r4, #8]
 800260e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8002612:	4a23      	ldr	r2, [pc, #140]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002614:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8002618:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 800261c:	e703      	b.n	8002426 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 800261e:	4920      	ldr	r1, [pc, #128]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002620:	f8d1 2084 	ldr.w	r2, [r1, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8002624:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8002628:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 800262c:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8002630:	4302      	orrs	r2, r0
 8002632:	6860      	ldr	r0, [r4, #4]
 8002634:	ea42 1280 	orr.w	r2, r2, r0, lsl #6
 8002638:	68e0      	ldr	r0, [r4, #12]
 800263a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800263e:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8002642:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 8002646:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002648:	f020 001f 	bic.w	r0, r0, #31
 800264c:	3a01      	subs	r2, #1
 800264e:	4302      	orrs	r2, r0
 8002650:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 8002654:	e6d0      	b.n	80023f8 <HAL_RCCEx_PeriphCLKConfig+0x274>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002656:	4812      	ldr	r0, [pc, #72]	; (80026a0 <HAL_RCCEx_PeriphCLKConfig+0x51c>)
 8002658:	4913      	ldr	r1, [pc, #76]	; (80026a8 <HAL_RCCEx_PeriphCLKConfig+0x524>)
 800265a:	6882      	ldr	r2, [r0, #8]
 800265c:	4019      	ands	r1, r3
 800265e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8002662:	430a      	orrs	r2, r1
 8002664:	6082      	str	r2, [r0, #8]
 8002666:	e7be      	b.n	80025e6 <HAL_RCCEx_PeriphCLKConfig+0x462>
        tickstart = HAL_GetTick();
 8002668:	f7ff f82a 	bl	80016c0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800266c:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8002670:	4680      	mov	r8, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002672:	e006      	b.n	8002682 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002674:	f7ff f824 	bl	80016c0 <HAL_GetTick>
 8002678:	eba0 0008 	sub.w	r0, r0, r8
 800267c:	4548      	cmp	r0, r9
 800267e:	f63f af71 	bhi.w	8002564 <HAL_RCCEx_PeriphCLKConfig+0x3e0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002682:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002684:	0798      	lsls	r0, r3, #30
 8002686:	d5f5      	bpl.n	8002674 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002688:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800268a:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800268e:	e7a2      	b.n	80025d6 <HAL_RCCEx_PeriphCLKConfig+0x452>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8002690:	02d8      	lsls	r0, r3, #11
 8002692:	f57f af22 	bpl.w	80024da <HAL_RCCEx_PeriphCLKConfig+0x356>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8002696:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8002698:	2a00      	cmp	r2, #0
 800269a:	f47f af1e 	bne.w	80024da <HAL_RCCEx_PeriphCLKConfig+0x356>
 800269e:	e700      	b.n	80024a2 <HAL_RCCEx_PeriphCLKConfig+0x31e>
 80026a0:	40023800 	.word	0x40023800
 80026a4:	40007000 	.word	0x40007000
 80026a8:	0ffffcff 	.word	0x0ffffcff

080026ac <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80026ac:	2800      	cmp	r0, #0
 80026ae:	f000 809e 	beq.w	80027ee <HAL_TIM_Base_Init+0x142>
{
 80026b2:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80026b4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80026b8:	4604      	mov	r4, r0
 80026ba:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d07c      	beq.n	80027bc <HAL_TIM_Base_Init+0x110>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80026c2:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80026c4:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80026c6:	494c      	ldr	r1, [pc, #304]	; (80027f8 <HAL_TIM_Base_Init+0x14c>)
 80026c8:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
 80026cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80026d0:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
 80026d4:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80026d6:	fab1 f181 	clz	r1, r1
 80026da:	ea4f 1151 	mov.w	r1, r1, lsr #5
 80026de:	d036      	beq.n	800274e <HAL_TIM_Base_Init+0xa2>
 80026e0:	2900      	cmp	r1, #0
 80026e2:	d134      	bne.n	800274e <HAL_TIM_Base_Init+0xa2>
 80026e4:	4d45      	ldr	r5, [pc, #276]	; (80027fc <HAL_TIM_Base_Init+0x150>)
 80026e6:	4846      	ldr	r0, [pc, #280]	; (8002800 <HAL_TIM_Base_Init+0x154>)
 80026e8:	4282      	cmp	r2, r0
 80026ea:	bf18      	it	ne
 80026ec:	42aa      	cmpne	r2, r5
 80026ee:	d06a      	beq.n	80027c6 <HAL_TIM_Base_Init+0x11a>
 80026f0:	f505 3580 	add.w	r5, r5, #65536	; 0x10000
 80026f4:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 80026f8:	1b55      	subs	r5, r2, r5
 80026fa:	4282      	cmp	r2, r0
 80026fc:	fab5 f585 	clz	r5, r5
 8002700:	ea4f 1555 	mov.w	r5, r5, lsr #5
 8002704:	d069      	beq.n	80027da <HAL_TIM_Base_Init+0x12e>
 8002706:	2d00      	cmp	r5, #0
 8002708:	d167      	bne.n	80027da <HAL_TIM_Base_Init+0x12e>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800270a:	4d3e      	ldr	r5, [pc, #248]	; (8002804 <HAL_TIM_Base_Init+0x158>)
 800270c:	483e      	ldr	r0, [pc, #248]	; (8002808 <HAL_TIM_Base_Init+0x15c>)
 800270e:	4282      	cmp	r2, r0
 8002710:	bf18      	it	ne
 8002712:	42aa      	cmpne	r2, r5
 8002714:	bf0c      	ite	eq
 8002716:	2501      	moveq	r5, #1
 8002718:	2500      	movne	r5, #0
 800271a:	d06a      	beq.n	80027f2 <HAL_TIM_Base_Init+0x146>
 800271c:	4e3b      	ldr	r6, [pc, #236]	; (800280c <HAL_TIM_Base_Init+0x160>)
 800271e:	f5a0 3096 	sub.w	r0, r0, #76800	; 0x12c00
 8002722:	4282      	cmp	r2, r0
 8002724:	bf18      	it	ne
 8002726:	42b2      	cmpne	r2, r6
 8002728:	d01a      	beq.n	8002760 <HAL_TIM_Base_Init+0xb4>
 800272a:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800272e:	4282      	cmp	r2, r0
 8002730:	d05f      	beq.n	80027f2 <HAL_TIM_Base_Init+0x146>
 8002732:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 8002736:	4282      	cmp	r2, r0
 8002738:	d05b      	beq.n	80027f2 <HAL_TIM_Base_Init+0x146>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800273a:	69a0      	ldr	r0, [r4, #24]
 800273c:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002740:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002742:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 8002744:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8002746:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002748:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800274a:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800274c:	e017      	b.n	800277e <HAL_TIM_Base_Init+0xd2>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800274e:	4d30      	ldr	r5, [pc, #192]	; (8002810 <HAL_TIM_Base_Init+0x164>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8002750:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8002754:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8002756:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
 8002758:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800275a:	fab5 f585 	clz	r5, r5
 800275e:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002760:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
 8002762:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8002766:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8002768:	69a0      	ldr	r0, [r4, #24]
 800276a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800276e:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 8002770:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8002772:	68e3      	ldr	r3, [r4, #12]
 8002774:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8002776:	6863      	ldr	r3, [r4, #4]
 8002778:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800277a:	b9e1      	cbnz	r1, 80027b6 <HAL_TIM_Base_Init+0x10a>
 800277c:	b9dd      	cbnz	r5, 80027b6 <HAL_TIM_Base_Init+0x10a>
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800277e:	2301      	movs	r3, #1
  return HAL_OK;
 8002780:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
 8002782:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8002784:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8002788:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800278c:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8002790:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8002794:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 8002798:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800279c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80027a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80027a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80027a8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 80027ac:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 80027b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80027b4:	bd70      	pop	{r4, r5, r6, pc}
    TIMx->RCR = Structure->RepetitionCounter;
 80027b6:	6963      	ldr	r3, [r4, #20]
 80027b8:	6313      	str	r3, [r2, #48]	; 0x30
 80027ba:	e7e0      	b.n	800277e <HAL_TIM_Base_Init+0xd2>
    htim->Lock = HAL_UNLOCKED;
 80027bc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80027c0:	f7fe fe64 	bl	800148c <HAL_TIM_Base_MspInit>
 80027c4:	e77d      	b.n	80026c2 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80027c6:	4d12      	ldr	r5, [pc, #72]	; (8002810 <HAL_TIM_Base_Init+0x164>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80027c8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80027cc:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80027ce:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
 80027d0:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80027d2:	fab5 f585 	clz	r5, r5
 80027d6:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80027d8:	e7c2      	b.n	8002760 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
 80027da:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80027dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80027e0:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80027e2:	480c      	ldr	r0, [pc, #48]	; (8002814 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80027e4:	4282      	cmp	r2, r0
 80027e6:	d0bb      	beq.n	8002760 <HAL_TIM_Base_Init+0xb4>
 80027e8:	2d00      	cmp	r5, #0
 80027ea:	d1b9      	bne.n	8002760 <HAL_TIM_Base_Init+0xb4>
 80027ec:	e78d      	b.n	800270a <HAL_TIM_Base_Init+0x5e>
    return HAL_ERROR;
 80027ee:	2001      	movs	r0, #1
}
 80027f0:	4770      	bx	lr
 80027f2:	2500      	movs	r5, #0
 80027f4:	e7b4      	b.n	8002760 <HAL_TIM_Base_Init+0xb4>
 80027f6:	bf00      	nop
 80027f8:	40010000 	.word	0x40010000
 80027fc:	40000400 	.word	0x40000400
 8002800:	40000800 	.word	0x40000800
 8002804:	40014000 	.word	0x40014000
 8002808:	40014400 	.word	0x40014400
 800280c:	40014800 	.word	0x40014800
 8002810:	40010400 	.word	0x40010400
 8002814:	40000c00 	.word	0x40000c00

08002818 <HAL_TIM_Base_Start>:
  if (htim->State != HAL_TIM_STATE_READY)
 8002818:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800281c:	2b01      	cmp	r3, #1
 800281e:	d13d      	bne.n	800289c <HAL_TIM_Base_Start+0x84>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002820:	6802      	ldr	r2, [r0, #0]
 8002822:	4b23      	ldr	r3, [pc, #140]	; (80028b0 <HAL_TIM_Base_Start+0x98>)
 8002824:	4923      	ldr	r1, [pc, #140]	; (80028b4 <HAL_TIM_Base_Start+0x9c>)
 8002826:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800282a:	bf18      	it	ne
 800282c:	429a      	cmpne	r2, r3
{
 800282e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002830:	bf0c      	ite	eq
 8002832:	2301      	moveq	r3, #1
 8002834:	2300      	movne	r3, #0
 8002836:	4d20      	ldr	r5, [pc, #128]	; (80028b8 <HAL_TIM_Base_Start+0xa0>)
  htim->State = HAL_TIM_STATE_BUSY;
 8002838:	2402      	movs	r4, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800283a:	42aa      	cmp	r2, r5
 800283c:	bf08      	it	eq
 800283e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8002842:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002846:	4c1d      	ldr	r4, [pc, #116]	; (80028bc <HAL_TIM_Base_Start+0xa4>)
 8002848:	428a      	cmp	r2, r1
 800284a:	bf08      	it	eq
 800284c:	f043 0301 	orreq.w	r3, r3, #1
 8002850:	481b      	ldr	r0, [pc, #108]	; (80028c0 <HAL_TIM_Base_Start+0xa8>)
 8002852:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
 8002856:	42a2      	cmp	r2, r4
 8002858:	bf08      	it	eq
 800285a:	f043 0301 	orreq.w	r3, r3, #1
 800285e:	4282      	cmp	r2, r0
 8002860:	bf08      	it	eq
 8002862:	f043 0301 	orreq.w	r3, r3, #1
 8002866:	428a      	cmp	r2, r1
 8002868:	bf08      	it	eq
 800286a:	f043 0301 	orreq.w	r3, r3, #1
 800286e:	b933      	cbnz	r3, 800287e <HAL_TIM_Base_Start+0x66>
 8002870:	f5a0 406c 	sub.w	r0, r0, #60416	; 0xec00
 8002874:	1a10      	subs	r0, r2, r0
 8002876:	fab0 f080 	clz	r0, r0
 800287a:	0940      	lsrs	r0, r0, #5
 800287c:	b198      	cbz	r0, 80028a6 <HAL_TIM_Base_Start+0x8e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800287e:	6891      	ldr	r1, [r2, #8]
 8002880:	4b10      	ldr	r3, [pc, #64]	; (80028c4 <HAL_TIM_Base_Start+0xac>)
 8002882:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8002884:	2b06      	cmp	r3, #6
 8002886:	d00b      	beq.n	80028a0 <HAL_TIM_Base_Start+0x88>
 8002888:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800288c:	d008      	beq.n	80028a0 <HAL_TIM_Base_Start+0x88>
      __HAL_TIM_ENABLE(htim);
 800288e:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
 8002890:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
 8002892:	f043 0301 	orr.w	r3, r3, #1
 8002896:	6013      	str	r3, [r2, #0]
}
 8002898:	bc30      	pop	{r4, r5}
 800289a:	4770      	bx	lr
    return HAL_ERROR;
 800289c:	2001      	movs	r0, #1
}
 800289e:	4770      	bx	lr
  return HAL_OK;
 80028a0:	2000      	movs	r0, #0
}
 80028a2:	bc30      	pop	{r4, r5}
 80028a4:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
 80028a6:	6813      	ldr	r3, [r2, #0]
 80028a8:	f043 0301 	orr.w	r3, r3, #1
 80028ac:	6013      	str	r3, [r2, #0]
 80028ae:	e7f3      	b.n	8002898 <HAL_TIM_Base_Start+0x80>
 80028b0:	40010000 	.word	0x40010000
 80028b4:	40000800 	.word	0x40000800
 80028b8:	40000400 	.word	0x40000400
 80028bc:	40000c00 	.word	0x40000c00
 80028c0:	40010400 	.word	0x40010400
 80028c4:	00010007 	.word	0x00010007

080028c8 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 80028c8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80028cc:	2b01      	cmp	r3, #1
 80028ce:	d073      	beq.n	80029b8 <HAL_TIM_ConfigClockSource+0xf0>
 80028d0:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
 80028d2:	2302      	movs	r3, #2
{
 80028d4:	b470      	push	{r4, r5, r6}
  tmpsmcr = htim->Instance->SMCR;
 80028d6:	6804      	ldr	r4, [r0, #0]
  __HAL_LOCK(htim);
 80028d8:	2001      	movs	r0, #1
  htim->State = HAL_TIM_STATE_BUSY;
 80028da:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 80028de:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80028e2:	4b50      	ldr	r3, [pc, #320]	; (8002a24 <HAL_TIM_ConfigClockSource+0x15c>)
  tmpsmcr = htim->Instance->SMCR;
 80028e4:	68a5      	ldr	r5, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80028e6:	402b      	ands	r3, r5
  htim->Instance->SMCR = tmpsmcr;
 80028e8:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 80028ea:	680b      	ldr	r3, [r1, #0]
 80028ec:	2b60      	cmp	r3, #96	; 0x60
 80028ee:	d065      	beq.n	80029bc <HAL_TIM_ConfigClockSource+0xf4>
 80028f0:	d824      	bhi.n	800293c <HAL_TIM_ConfigClockSource+0x74>
 80028f2:	2b40      	cmp	r3, #64	; 0x40
 80028f4:	d07c      	beq.n	80029f0 <HAL_TIM_ConfigClockSource+0x128>
 80028f6:	d94b      	bls.n	8002990 <HAL_TIM_ConfigClockSource+0xc8>
 80028f8:	2b50      	cmp	r3, #80	; 0x50
 80028fa:	d117      	bne.n	800292c <HAL_TIM_ConfigClockSource+0x64>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80028fc:	6848      	ldr	r0, [r1, #4]
 80028fe:	68ce      	ldr	r6, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8002900:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002902:	6a25      	ldr	r5, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8002904:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002908:	f025 0501 	bic.w	r5, r5, #1
  tmpccer |= TIM_ICPolarity;
 800290c:	4301      	orrs	r1, r0
  HAL_StatusTypeDef status = HAL_OK;
 800290e:	2000      	movs	r0, #0
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002910:	6225      	str	r5, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 8002912:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8002914:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8002918:	ea43 1306 	orr.w	r3, r3, r6, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800291c:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800291e:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8002920:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8002922:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8002926:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800292a:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800292c:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800292e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 8002930:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8002934:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 8002938:	bc70      	pop	{r4, r5, r6}
 800293a:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800293c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002940:	d038      	beq.n	80029b4 <HAL_TIM_ConfigClockSource+0xec>
 8002942:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002946:	d110      	bne.n	800296a <HAL_TIM_ConfigClockSource+0xa2>
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8002948:	68a0      	ldr	r0, [r4, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800294a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
 800294e:	432b      	orrs	r3, r5
 8002950:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8002952:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  HAL_StatusTypeDef status = HAL_OK;
 8002956:	2000      	movs	r0, #0
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002958:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800295c:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800295e:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8002960:	68a3      	ldr	r3, [r4, #8]
 8002962:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002966:	60a3      	str	r3, [r4, #8]
      break;
 8002968:	e7e0      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  switch (sClockSourceConfig->ClockSource)
 800296a:	2b70      	cmp	r3, #112	; 0x70
 800296c:	d1de      	bne.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  tmpsmcr = TIMx->SMCR;
 800296e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8002970:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
 8002974:	432b      	orrs	r3, r5
 8002976:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8002978:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  HAL_StatusTypeDef status = HAL_OK;
 800297c:	2000      	movs	r0, #0
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800297e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8002982:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 8002984:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 8002986:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8002988:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR = tmpsmcr;
 800298c:	60a3      	str	r3, [r4, #8]
      break;
 800298e:	e7cd      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  switch (sClockSourceConfig->ClockSource)
 8002990:	2b20      	cmp	r3, #32
 8002992:	d002      	beq.n	800299a <HAL_TIM_ConfigClockSource+0xd2>
 8002994:	d90a      	bls.n	80029ac <HAL_TIM_ConfigClockSource+0xe4>
 8002996:	2b30      	cmp	r3, #48	; 0x30
 8002998:	d1c8      	bne.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  tmpsmcr = TIMx->SMCR;
 800299a:	68a1      	ldr	r1, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800299c:	2000      	movs	r0, #0
  tmpsmcr &= ~TIM_SMCR_TS;
 800299e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80029a2:	430b      	orrs	r3, r1
 80029a4:	f043 0307 	orr.w	r3, r3, #7
  TIMx->SMCR = tmpsmcr;
 80029a8:	60a3      	str	r3, [r4, #8]
}
 80029aa:	e7bf      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  switch (sClockSourceConfig->ClockSource)
 80029ac:	f033 0110 	bics.w	r1, r3, #16
 80029b0:	d1bc      	bne.n	800292c <HAL_TIM_ConfigClockSource+0x64>
 80029b2:	e7f2      	b.n	800299a <HAL_TIM_ConfigClockSource+0xd2>
  HAL_StatusTypeDef status = HAL_OK;
 80029b4:	2000      	movs	r0, #0
 80029b6:	e7b9      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
  __HAL_LOCK(htim);
 80029b8:	2002      	movs	r0, #2
}
 80029ba:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80029bc:	6a20      	ldr	r0, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80029be:	68cb      	ldr	r3, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80029c0:	f020 0010 	bic.w	r0, r0, #16
      TIM_TI2_ConfigInputStage(htim->Instance,
 80029c4:	684d      	ldr	r5, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80029c6:	6220      	str	r0, [r4, #32]
  HAL_StatusTypeDef status = HAL_OK;
 80029c8:	2000      	movs	r0, #0
  tmpccmr1 = TIMx->CCMR1;
 80029ca:	69a1      	ldr	r1, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80029cc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80029d0:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
  tmpccer = TIMx->CCER;
 80029d4:	6a23      	ldr	r3, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80029d6:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  TIMx->CCMR1 = tmpccmr1 ;
 80029da:	61a1      	str	r1, [r4, #24]
  tmpccer |= (TIM_ICPolarity << 4U);
 80029dc:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCER = tmpccer;
 80029e0:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 80029e2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80029e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80029e8:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 80029ec:	60a3      	str	r3, [r4, #8]
}
 80029ee:	e79d      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80029f0:	6848      	ldr	r0, [r1, #4]
 80029f2:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 80029f4:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80029f6:	6a25      	ldr	r5, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80029f8:	f021 010a 	bic.w	r1, r1, #10
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80029fc:	f025 0501 	bic.w	r5, r5, #1
  tmpccer |= TIM_ICPolarity;
 8002a00:	4301      	orrs	r1, r0
  HAL_StatusTypeDef status = HAL_OK;
 8002a02:	2000      	movs	r0, #0
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8002a04:	6225      	str	r5, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 8002a06:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8002a08:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8002a0c:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 8002a10:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 8002a12:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 8002a14:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8002a16:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8002a1a:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 8002a1e:	60a3      	str	r3, [r4, #8]
}
 8002a20:	e784      	b.n	800292c <HAL_TIM_ConfigClockSource+0x64>
 8002a22:	bf00      	nop
 8002a24:	fffe0088 	.word	0xfffe0088

08002a28 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8002a28:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8002a2c:	2b01      	cmp	r3, #1
 8002a2e:	d04b      	beq.n	8002ac8 <HAL_TIMEx_MasterConfigSynchronization+0xa0>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8002a30:	6803      	ldr	r3, [r0, #0]
 8002a32:	4602      	mov	r2, r0
  htim->State = HAL_TIM_STATE_BUSY;
 8002a34:	2002      	movs	r0, #2
{
 8002a36:	b430      	push	{r4, r5}

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8002a38:	4d24      	ldr	r5, [pc, #144]	; (8002acc <HAL_TIMEx_MasterConfigSynchronization+0xa4>)
  htim->State = HAL_TIM_STATE_BUSY;
 8002a3a:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8002a3e:	42ab      	cmp	r3, r5
  tmpcr2 = htim->Instance->CR2;
 8002a40:	6858      	ldr	r0, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8002a42:	689c      	ldr	r4, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8002a44:	d029      	beq.n	8002a9a <HAL_TIMEx_MasterConfigSynchronization+0x72>
 8002a46:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8002a4a:	42ab      	cmp	r3, r5
 8002a4c:	d025      	beq.n	8002a9a <HAL_TIMEx_MasterConfigSynchronization+0x72>
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002a4e:	4d20      	ldr	r5, [pc, #128]	; (8002ad0 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
  tmpcr2 &= ~TIM_CR2_MMS;
 8002a50:	f020 0070 	bic.w	r0, r0, #112	; 0x70
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002a54:	42ab      	cmp	r3, r5
 8002a56:	bf18      	it	ne
 8002a58:	f1b3 4f80 	cmpne.w	r3, #1073741824	; 0x40000000
 8002a5c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8002a60:	bf0c      	ite	eq
 8002a62:	f04f 0c01 	moveq.w	ip, #1
 8002a66:	f04f 0c00 	movne.w	ip, #0
 8002a6a:	42ab      	cmp	r3, r5
 8002a6c:	bf08      	it	eq
 8002a6e:	f04c 0c01 	orreq.w	ip, ip, #1
 8002a72:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8002a76:	42ab      	cmp	r3, r5
 8002a78:	bf08      	it	eq
 8002a7a:	f04c 0c01 	orreq.w	ip, ip, #1
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8002a7e:	680d      	ldr	r5, [r1, #0]
 8002a80:	4328      	orrs	r0, r5
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002a82:	4d14      	ldr	r5, [pc, #80]	; (8002ad4 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
  htim->Instance->CR2 = tmpcr2;
 8002a84:	6058      	str	r0, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8002a86:	42ab      	cmp	r3, r5
 8002a88:	bf14      	ite	ne
 8002a8a:	4660      	movne	r0, ip
 8002a8c:	f04c 0001 	orreq.w	r0, ip, #1
 8002a90:	b960      	cbnz	r0, 8002aac <HAL_TIMEx_MasterConfigSynchronization+0x84>
 8002a92:	4811      	ldr	r0, [pc, #68]	; (8002ad8 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002a94:	4283      	cmp	r3, r0
 8002a96:	d009      	beq.n	8002aac <HAL_TIMEx_MasterConfigSynchronization+0x84>
 8002a98:	e00d      	b.n	8002ab6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8002a9a:	684d      	ldr	r5, [r1, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 8002a9c:	f420 0070 	bic.w	r0, r0, #15728640	; 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8002aa0:	4328      	orrs	r0, r5
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8002aa2:	680d      	ldr	r5, [r1, #0]
  tmpcr2 &= ~TIM_CR2_MMS;
 8002aa4:	f020 0070 	bic.w	r0, r0, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8002aa8:	4328      	orrs	r0, r5
  htim->Instance->CR2 = tmpcr2;
 8002aaa:	6058      	str	r0, [r3, #4]
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8002aac:	6889      	ldr	r1, [r1, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8002aae:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8002ab2:	430c      	orrs	r4, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8002ab4:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 8002ab6:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 8002ab8:	2101      	movs	r1, #1

  return HAL_OK;
 8002aba:	4618      	mov	r0, r3
  htim->State = HAL_TIM_STATE_READY;
 8002abc:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 8002ac0:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 8002ac4:	bc30      	pop	{r4, r5}
 8002ac6:	4770      	bx	lr
  __HAL_LOCK(htim);
 8002ac8:	2002      	movs	r0, #2
}
 8002aca:	4770      	bx	lr
 8002acc:	40010000 	.word	0x40010000
 8002ad0:	40000400 	.word	0x40000400
 8002ad4:	40014000 	.word	0x40014000
 8002ad8:	40001800 	.word	0x40001800

08002adc <UART_SetConfig>:
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002adc:	6901      	ldr	r1, [r0, #16]
 8002ade:	6882      	ldr	r2, [r0, #8]
{
 8002ae0:	b538      	push	{r3, r4, r5, lr}
 8002ae2:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002ae4:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002ae6:	430a      	orrs	r2, r1
 8002ae8:	69c0      	ldr	r0, [r0, #28]
 8002aea:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002aec:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002aee:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002af0:	49a1      	ldr	r1, [pc, #644]	; (8002d78 <UART_SetConfig+0x29c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8002af2:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002af4:	4029      	ands	r1, r5

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002af6:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8002af8:	430a      	orrs	r2, r1
 8002afa:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002afc:	6859      	ldr	r1, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8002afe:	69a2      	ldr	r2, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8002b00:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 8002b04:	4329      	orrs	r1, r5
 8002b06:	6059      	str	r1, [r3, #4]

  tmpreg |= huart->Init.OneBitSampling;
 8002b08:	6a21      	ldr	r1, [r4, #32]
 8002b0a:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8002b0c:	6899      	ldr	r1, [r3, #8]
 8002b0e:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 8002b12:	430a      	orrs	r2, r1


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002b14:	4999      	ldr	r1, [pc, #612]	; (8002d7c <UART_SetConfig+0x2a0>)
 8002b16:	428b      	cmp	r3, r1
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8002b18:	609a      	str	r2, [r3, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002b1a:	d03f      	beq.n	8002b9c <UART_SetConfig+0xc0>
 8002b1c:	4a98      	ldr	r2, [pc, #608]	; (8002d80 <UART_SetConfig+0x2a4>)
 8002b1e:	4293      	cmp	r3, r2
 8002b20:	d01b      	beq.n	8002b5a <UART_SetConfig+0x7e>
 8002b22:	4a98      	ldr	r2, [pc, #608]	; (8002d84 <UART_SetConfig+0x2a8>)
 8002b24:	4293      	cmp	r3, r2
 8002b26:	f000 80c9 	beq.w	8002cbc <UART_SetConfig+0x1e0>
 8002b2a:	4a97      	ldr	r2, [pc, #604]	; (8002d88 <UART_SetConfig+0x2ac>)
 8002b2c:	4293      	cmp	r3, r2
 8002b2e:	f000 80d5 	beq.w	8002cdc <UART_SetConfig+0x200>
 8002b32:	4a96      	ldr	r2, [pc, #600]	; (8002d8c <UART_SetConfig+0x2b0>)
 8002b34:	4293      	cmp	r3, r2
 8002b36:	d05f      	beq.n	8002bf8 <UART_SetConfig+0x11c>
 8002b38:	4a95      	ldr	r2, [pc, #596]	; (8002d90 <UART_SetConfig+0x2b4>)
 8002b3a:	4293      	cmp	r3, r2
 8002b3c:	f000 8090 	beq.w	8002c60 <UART_SetConfig+0x184>
 8002b40:	4a94      	ldr	r2, [pc, #592]	; (8002d94 <UART_SetConfig+0x2b8>)
 8002b42:	4293      	cmp	r3, r2
 8002b44:	f000 80eb 	beq.w	8002d1e <UART_SetConfig+0x242>
 8002b48:	4a93      	ldr	r2, [pc, #588]	; (8002d98 <UART_SetConfig+0x2bc>)
 8002b4a:	4293      	cmp	r3, r2
 8002b4c:	f000 80fd 	beq.w	8002d4a <UART_SetConfig+0x26e>
      }
    }
  }
  else
  {
    switch (clocksource)
 8002b50:	2001      	movs	r0, #1
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8002b52:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8002b54:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68

  return ret;
}
 8002b58:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002b5a:	4b90      	ldr	r3, [pc, #576]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002b5c:	4a90      	ldr	r2, [pc, #576]	; (8002da0 <UART_SetConfig+0x2c4>)
 8002b5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002b62:	f003 030c 	and.w	r3, r3, #12
 8002b66:	5cd3      	ldrb	r3, [r2, r3]
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002b68:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002b6c:	d02d      	beq.n	8002bca <UART_SetConfig+0xee>
    switch (clocksource)
 8002b6e:	2b08      	cmp	r3, #8
 8002b70:	d8ee      	bhi.n	8002b50 <UART_SetConfig+0x74>
 8002b72:	a201      	add	r2, pc, #4	; (adr r2, 8002b78 <UART_SetConfig+0x9c>)
 8002b74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002b78:	08002c25 	.word	0x08002c25
 8002b7c:	08002bb3 	.word	0x08002bb3
 8002b80:	08002c77 	.word	0x08002c77
 8002b84:	08002b51 	.word	0x08002b51
 8002b88:	08002c19 	.word	0x08002c19
 8002b8c:	08002b51 	.word	0x08002b51
 8002b90:	08002b51 	.word	0x08002b51
 8002b94:	08002b51 	.word	0x08002b51
 8002b98:	08002c37 	.word	0x08002c37
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002b9c:	4b7f      	ldr	r3, [pc, #508]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002b9e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002ba2:	f003 0303 	and.w	r3, r3, #3
 8002ba6:	3b01      	subs	r3, #1
 8002ba8:	2b02      	cmp	r3, #2
 8002baa:	d90b      	bls.n	8002bc4 <UART_SetConfig+0xe8>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002bac:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002bb0:	d063      	beq.n	8002c7a <UART_SetConfig+0x19e>
        pclk = HAL_RCC_GetPCLK2Freq();
 8002bb2:	f7ff fad7 	bl	8002164 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8002bb6:	2800      	cmp	r0, #0
 8002bb8:	d13f      	bne.n	8002c3a <UART_SetConfig+0x15e>
  huart->RxISR = NULL;
 8002bba:	2300      	movs	r3, #0
 8002bbc:	2000      	movs	r0, #0
  huart->TxISR = NULL;
 8002bbe:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
}
 8002bc2:	bd38      	pop	{r3, r4, r5, pc}
 8002bc4:	4a77      	ldr	r2, [pc, #476]	; (8002da4 <UART_SetConfig+0x2c8>)
 8002bc6:	5cd3      	ldrb	r3, [r2, r3]
 8002bc8:	e7ce      	b.n	8002b68 <UART_SetConfig+0x8c>
    switch (clocksource)
 8002bca:	2b08      	cmp	r3, #8
 8002bcc:	d8c0      	bhi.n	8002b50 <UART_SetConfig+0x74>
 8002bce:	a201      	add	r2, pc, #4	; (adr r2, 8002bd4 <UART_SetConfig+0xf8>)
 8002bd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002bd4:	08002cb7 	.word	0x08002cb7
 8002bd8:	08002c7b 	.word	0x08002c7b
 8002bdc:	08002d15 	.word	0x08002d15
 8002be0:	08002b51 	.word	0x08002b51
 8002be4:	08002cb1 	.word	0x08002cb1
 8002be8:	08002b51 	.word	0x08002b51
 8002bec:	08002b51 	.word	0x08002b51
 8002bf0:	08002b51 	.word	0x08002b51
 8002bf4:	08002d19 	.word	0x08002d19
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002bf8:	4b68      	ldr	r3, [pc, #416]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002bfa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002bfe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c02:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002c06:	d033      	beq.n	8002c70 <UART_SetConfig+0x194>
 8002c08:	d80f      	bhi.n	8002c2a <UART_SetConfig+0x14e>
 8002c0a:	b143      	cbz	r3, 8002c1e <UART_SetConfig+0x142>
 8002c0c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002c10:	d19e      	bne.n	8002b50 <UART_SetConfig+0x74>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002c12:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002c16:	d04b      	beq.n	8002cb0 <UART_SetConfig+0x1d4>
        pclk = HAL_RCC_GetSysClockFreq();
 8002c18:	f7ff fa60 	bl	80020dc <HAL_RCC_GetSysClockFreq>
        break;
 8002c1c:	e7cb      	b.n	8002bb6 <UART_SetConfig+0xda>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002c1e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002c22:	d048      	beq.n	8002cb6 <UART_SetConfig+0x1da>
        pclk = HAL_RCC_GetPCLK1Freq();
 8002c24:	f7ff fa8e 	bl	8002144 <HAL_RCC_GetPCLK1Freq>
        break;
 8002c28:	e7c5      	b.n	8002bb6 <UART_SetConfig+0xda>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002c2a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8002c2e:	d18f      	bne.n	8002b50 <UART_SetConfig+0x74>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002c30:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002c34:	d070      	beq.n	8002d18 <UART_SetConfig+0x23c>
        pclk = (uint32_t) LSE_VALUE;
 8002c36:	f44f 4000 	mov.w	r0, #32768	; 0x8000
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8002c3a:	6863      	ldr	r3, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002c3c:	f64f 72ef 	movw	r2, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8002c40:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8002c44:	fbb0 f3f3 	udiv	r3, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002c48:	f1a3 0110 	sub.w	r1, r3, #16
 8002c4c:	4291      	cmp	r1, r2
 8002c4e:	f63f af7f 	bhi.w	8002b50 <UART_SetConfig+0x74>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8002c52:	6822      	ldr	r2, [r4, #0]
 8002c54:	2000      	movs	r0, #0
 8002c56:	60d3      	str	r3, [r2, #12]
  huart->RxISR = NULL;
 8002c58:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 8002c5a:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
}
 8002c5e:	bd38      	pop	{r3, r4, r5, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002c60:	4b4e      	ldr	r3, [pc, #312]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002c62:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002c66:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8002c6a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002c6e:	d145      	bne.n	8002cfc <UART_SetConfig+0x220>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002c70:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8002c74:	d04e      	beq.n	8002d14 <UART_SetConfig+0x238>
    switch (clocksource)
 8002c76:	484c      	ldr	r0, [pc, #304]	; (8002da8 <UART_SetConfig+0x2cc>)
 8002c78:	e7df      	b.n	8002c3a <UART_SetConfig+0x15e>
        pclk = HAL_RCC_GetPCLK2Freq();
 8002c7a:	f7ff fa73 	bl	8002164 <HAL_RCC_GetPCLK2Freq>
    if (pclk != 0U)
 8002c7e:	2800      	cmp	r0, #0
 8002c80:	d09b      	beq.n	8002bba <UART_SetConfig+0xde>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8002c82:	0043      	lsls	r3, r0, #1
 8002c84:	6862      	ldr	r2, [r4, #4]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002c86:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8002c8a:	eb03 0352 	add.w	r3, r3, r2, lsr #1
 8002c8e:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8002c92:	f1a3 0210 	sub.w	r2, r3, #16
 8002c96:	428a      	cmp	r2, r1
 8002c98:	f63f af5a 	bhi.w	8002b50 <UART_SetConfig+0x74>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8002c9c:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8002ca0:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
 8002ca4:	6821      	ldr	r1, [r4, #0]
 8002ca6:	2000      	movs	r0, #0
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8002ca8:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
 8002caa:	4313      	orrs	r3, r2
 8002cac:	60cb      	str	r3, [r1, #12]
 8002cae:	e750      	b.n	8002b52 <UART_SetConfig+0x76>
        pclk = HAL_RCC_GetSysClockFreq();
 8002cb0:	f7ff fa14 	bl	80020dc <HAL_RCC_GetSysClockFreq>
        break;
 8002cb4:	e7e3      	b.n	8002c7e <UART_SetConfig+0x1a2>
        pclk = HAL_RCC_GetPCLK1Freq();
 8002cb6:	f7ff fa45 	bl	8002144 <HAL_RCC_GetPCLK1Freq>
        break;
 8002cba:	e7e0      	b.n	8002c7e <UART_SetConfig+0x1a2>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002cbc:	4b37      	ldr	r3, [pc, #220]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002cbe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002cc2:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002cc6:	2b20      	cmp	r3, #32
 8002cc8:	d0d2      	beq.n	8002c70 <UART_SetConfig+0x194>
 8002cca:	d804      	bhi.n	8002cd6 <UART_SetConfig+0x1fa>
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d0a6      	beq.n	8002c1e <UART_SetConfig+0x142>
 8002cd0:	2b10      	cmp	r3, #16
 8002cd2:	d09e      	beq.n	8002c12 <UART_SetConfig+0x136>
 8002cd4:	e73c      	b.n	8002b50 <UART_SetConfig+0x74>
 8002cd6:	2b30      	cmp	r3, #48	; 0x30
 8002cd8:	d0aa      	beq.n	8002c30 <UART_SetConfig+0x154>
 8002cda:	e739      	b.n	8002b50 <UART_SetConfig+0x74>
 8002cdc:	4b2f      	ldr	r3, [pc, #188]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002cde:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002ce2:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8002ce6:	2b80      	cmp	r3, #128	; 0x80
 8002ce8:	d0c2      	beq.n	8002c70 <UART_SetConfig+0x194>
 8002cea:	d804      	bhi.n	8002cf6 <UART_SetConfig+0x21a>
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d096      	beq.n	8002c1e <UART_SetConfig+0x142>
 8002cf0:	2b40      	cmp	r3, #64	; 0x40
 8002cf2:	d08e      	beq.n	8002c12 <UART_SetConfig+0x136>
 8002cf4:	e72c      	b.n	8002b50 <UART_SetConfig+0x74>
 8002cf6:	2bc0      	cmp	r3, #192	; 0xc0
 8002cf8:	d09a      	beq.n	8002c30 <UART_SetConfig+0x154>
 8002cfa:	e729      	b.n	8002b50 <UART_SetConfig+0x74>
 8002cfc:	d806      	bhi.n	8002d0c <UART_SetConfig+0x230>
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	f43f af54 	beq.w	8002bac <UART_SetConfig+0xd0>
 8002d04:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002d08:	d083      	beq.n	8002c12 <UART_SetConfig+0x136>
 8002d0a:	e721      	b.n	8002b50 <UART_SetConfig+0x74>
 8002d0c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8002d10:	d08e      	beq.n	8002c30 <UART_SetConfig+0x154>
 8002d12:	e71d      	b.n	8002b50 <UART_SetConfig+0x74>
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8002d14:	4b25      	ldr	r3, [pc, #148]	; (8002dac <UART_SetConfig+0x2d0>)
 8002d16:	e7b5      	b.n	8002c84 <UART_SetConfig+0x1a8>
    switch (clocksource)
 8002d18:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002d1c:	e7b2      	b.n	8002c84 <UART_SetConfig+0x1a8>
  UART_GETCLOCKSOURCE(huart, clocksource);
 8002d1e:	4b1f      	ldr	r3, [pc, #124]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002d20:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002d24:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8002d28:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d2c:	d0a0      	beq.n	8002c70 <UART_SetConfig+0x194>
 8002d2e:	d807      	bhi.n	8002d40 <UART_SetConfig+0x264>
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	f43f af74 	beq.w	8002c1e <UART_SetConfig+0x142>
 8002d36:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d3a:	f43f af6a 	beq.w	8002c12 <UART_SetConfig+0x136>
 8002d3e:	e707      	b.n	8002b50 <UART_SetConfig+0x74>
 8002d40:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8002d44:	f43f af74 	beq.w	8002c30 <UART_SetConfig+0x154>
 8002d48:	e702      	b.n	8002b50 <UART_SetConfig+0x74>
 8002d4a:	4b14      	ldr	r3, [pc, #80]	; (8002d9c <UART_SetConfig+0x2c0>)
 8002d4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002d50:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002d54:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002d58:	d08a      	beq.n	8002c70 <UART_SetConfig+0x194>
 8002d5a:	d807      	bhi.n	8002d6c <UART_SetConfig+0x290>
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	f43f af5e 	beq.w	8002c1e <UART_SetConfig+0x142>
 8002d62:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002d66:	f43f af54 	beq.w	8002c12 <UART_SetConfig+0x136>
 8002d6a:	e6f1      	b.n	8002b50 <UART_SetConfig+0x74>
 8002d6c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8002d70:	f43f af5e 	beq.w	8002c30 <UART_SetConfig+0x154>
 8002d74:	e6ec      	b.n	8002b50 <UART_SetConfig+0x74>
 8002d76:	bf00      	nop
 8002d78:	efff69f3 	.word	0xefff69f3
 8002d7c:	40011000 	.word	0x40011000
 8002d80:	40004400 	.word	0x40004400
 8002d84:	40004800 	.word	0x40004800
 8002d88:	40004c00 	.word	0x40004c00
 8002d8c:	40005000 	.word	0x40005000
 8002d90:	40011400 	.word	0x40011400
 8002d94:	40007800 	.word	0x40007800
 8002d98:	40007c00 	.word	0x40007c00
 8002d9c:	40023800 	.word	0x40023800
 8002da0:	0800ee74 	.word	0x0800ee74
 8002da4:	0800ee70 	.word	0x0800ee70
 8002da8:	00f42400 	.word	0x00f42400
 8002dac:	01e84800 	.word	0x01e84800

08002db0 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8002db0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002db2:	07da      	lsls	r2, r3, #31
{
 8002db4:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8002db6:	d506      	bpl.n	8002dc6 <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8002db8:	6801      	ldr	r1, [r0, #0]
 8002dba:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8002dbc:	684a      	ldr	r2, [r1, #4]
 8002dbe:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002dc2:	4322      	orrs	r2, r4
 8002dc4:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8002dc6:	079c      	lsls	r4, r3, #30
 8002dc8:	d506      	bpl.n	8002dd8 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8002dca:	6801      	ldr	r1, [r0, #0]
 8002dcc:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8002dce:	684a      	ldr	r2, [r1, #4]
 8002dd0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002dd4:	4322      	orrs	r2, r4
 8002dd6:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8002dd8:	0759      	lsls	r1, r3, #29
 8002dda:	d506      	bpl.n	8002dea <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8002ddc:	6801      	ldr	r1, [r0, #0]
 8002dde:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8002de0:	684a      	ldr	r2, [r1, #4]
 8002de2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002de6:	4322      	orrs	r2, r4
 8002de8:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8002dea:	071a      	lsls	r2, r3, #28
 8002dec:	d506      	bpl.n	8002dfc <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8002dee:	6801      	ldr	r1, [r0, #0]
 8002df0:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8002df2:	684a      	ldr	r2, [r1, #4]
 8002df4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002df8:	4322      	orrs	r2, r4
 8002dfa:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8002dfc:	06dc      	lsls	r4, r3, #27
 8002dfe:	d506      	bpl.n	8002e0e <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8002e00:	6801      	ldr	r1, [r0, #0]
 8002e02:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8002e04:	688a      	ldr	r2, [r1, #8]
 8002e06:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002e0a:	4322      	orrs	r2, r4
 8002e0c:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8002e0e:	0699      	lsls	r1, r3, #26
 8002e10:	d506      	bpl.n	8002e20 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8002e12:	6801      	ldr	r1, [r0, #0]
 8002e14:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8002e16:	688a      	ldr	r2, [r1, #8]
 8002e18:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002e1c:	4322      	orrs	r2, r4
 8002e1e:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8002e20:	065a      	lsls	r2, r3, #25
 8002e22:	d50a      	bpl.n	8002e3a <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002e24:	6801      	ldr	r1, [r0, #0]
 8002e26:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8002e28:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8002e2a:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8002e2e:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8002e32:	ea42 0204 	orr.w	r2, r2, r4
 8002e36:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8002e38:	d00b      	beq.n	8002e52 <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8002e3a:	061b      	lsls	r3, r3, #24
 8002e3c:	d506      	bpl.n	8002e4c <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8002e3e:	6802      	ldr	r2, [r0, #0]
 8002e40:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8002e42:	6853      	ldr	r3, [r2, #4]
 8002e44:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8002e48:	430b      	orrs	r3, r1
 8002e4a:	6053      	str	r3, [r2, #4]
  }
}
 8002e4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e50:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8002e52:	684a      	ldr	r2, [r1, #4]
 8002e54:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8002e56:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8002e5a:	4322      	orrs	r2, r4
 8002e5c:	604a      	str	r2, [r1, #4]
 8002e5e:	e7ec      	b.n	8002e3a <UART_AdvFeatureConfig+0x8a>

08002e60 <HAL_UART_Init>:
  if (huart == NULL)
 8002e60:	2800      	cmp	r0, #0
 8002e62:	f000 808f 	beq.w	8002f84 <HAL_UART_Init+0x124>
{
 8002e66:	b538      	push	{r3, r4, r5, lr}
  if (huart->gState == HAL_UART_STATE_RESET)
 8002e68:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
 8002e6a:	4604      	mov	r4, r0
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	f000 8084 	beq.w	8002f7a <HAL_UART_Init+0x11a>
  __HAL_UART_DISABLE(huart);
 8002e72:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8002e74:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
 8002e76:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
 8002e78:	67e3      	str	r3, [r4, #124]	; 0x7c
  __HAL_UART_DISABLE(huart);
 8002e7a:	6813      	ldr	r3, [r2, #0]
 8002e7c:	f023 0301 	bic.w	r3, r3, #1
 8002e80:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8002e82:	f7ff fe2b 	bl	8002adc <UART_SetConfig>
 8002e86:	2801      	cmp	r0, #1
 8002e88:	d075      	beq.n	8002f76 <HAL_UART_Init+0x116>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8002e8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002e8c:	2b00      	cmp	r3, #0
 8002e8e:	d16e      	bne.n	8002f6e <HAL_UART_Init+0x10e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002e90:	6823      	ldr	r3, [r4, #0]
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002e92:	2100      	movs	r1, #0
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8002e94:	685a      	ldr	r2, [r3, #4]
 8002e96:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002e9a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8002e9c:	689a      	ldr	r2, [r3, #8]
 8002e9e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002ea2:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8002ea4:	681a      	ldr	r2, [r3, #0]
 8002ea6:	f042 0201 	orr.w	r2, r2, #1
 8002eaa:	601a      	str	r2, [r3, #0]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8002eac:	f8c4 1084 	str.w	r1, [r4, #132]	; 0x84

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8002eb0:	f7fe fc06 	bl	80016c0 <HAL_GetTick>

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002eb4:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8002eb6:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8002eb8:	681a      	ldr	r2, [r3, #0]
 8002eba:	0712      	lsls	r2, r2, #28
 8002ebc:	d40a      	bmi.n	8002ed4 <HAL_UART_Init+0x74>
#endif /* USART_ISR_REACK */

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002ebe:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
 8002ec0:	2220      	movs	r2, #32
  huart->RxEventType = HAL_UART_RXEVENT_TC;

  __HAL_UNLOCK(huart);

  return HAL_OK;
 8002ec2:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
 8002ec4:	67e2      	str	r2, [r4, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 8002ec6:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8002eca:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8002ece:	6623      	str	r3, [r4, #96]	; 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8002ed0:	6663      	str	r3, [r4, #100]	; 0x64
}
 8002ed2:	bd38      	pop	{r3, r4, r5, pc}
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8002ed4:	69db      	ldr	r3, [r3, #28]
 8002ed6:	0298      	lsls	r0, r3, #10
 8002ed8:	d4f1      	bmi.n	8002ebe <HAL_UART_Init+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8002eda:	f7fe fbf1 	bl	80016c0 <HAL_GetTick>
 8002ede:	1b43      	subs	r3, r0, r5
 8002ee0:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8002ee4:	6823      	ldr	r3, [r4, #0]
 8002ee6:	d226      	bcs.n	8002f36 <HAL_UART_Init+0xd6>
        __HAL_UNLOCK(huart);

        return HAL_TIMEOUT;
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8002ee8:	681a      	ldr	r2, [r3, #0]
 8002eea:	0751      	lsls	r1, r2, #29
 8002eec:	d5f2      	bpl.n	8002ed4 <HAL_UART_Init+0x74>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8002eee:	69da      	ldr	r2, [r3, #28]
 8002ef0:	0512      	lsls	r2, r2, #20
 8002ef2:	d5ef      	bpl.n	8002ed4 <HAL_UART_Init+0x74>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8002ef4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002ef8:	621a      	str	r2, [r3, #32]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002efa:	e853 2f00 	ldrex	r2, [r3]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8002efe:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002f02:	e843 2100 	strex	r1, r2, [r3]
 8002f06:	2900      	cmp	r1, #0
 8002f08:	d1f7      	bne.n	8002efa <HAL_UART_Init+0x9a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002f0a:	f103 0208 	add.w	r2, r3, #8
 8002f0e:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8002f12:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002f16:	f103 0008 	add.w	r0, r3, #8
 8002f1a:	e840 2100 	strex	r1, r2, [r0]
 8002f1e:	2900      	cmp	r1, #0
 8002f20:	d1f3      	bne.n	8002f0a <HAL_UART_Init+0xaa>

          huart->gState = HAL_UART_STATE_READY;
 8002f22:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
 8002f24:	2003      	movs	r0, #3
          huart->RxState = HAL_UART_STATE_READY;
          huart->ErrorCode = HAL_UART_ERROR_RTO;

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8002f26:	f884 1078 	strb.w	r1, [r4, #120]	; 0x78
          huart->gState = HAL_UART_STATE_READY;
 8002f2a:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 8002f2c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8002f30:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
}
 8002f34:	bd38      	pop	{r3, r4, r5, pc}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002f36:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8002f3a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002f3e:	e843 2100 	strex	r1, r2, [r3]
 8002f42:	2900      	cmp	r1, #0
 8002f44:	d1f7      	bne.n	8002f36 <HAL_UART_Init+0xd6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002f46:	f103 0208 	add.w	r2, r3, #8
 8002f4a:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8002f4e:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002f52:	f103 0008 	add.w	r0, r3, #8
 8002f56:	e840 2100 	strex	r1, r2, [r0]
 8002f5a:	2900      	cmp	r1, #0
 8002f5c:	d1f3      	bne.n	8002f46 <HAL_UART_Init+0xe6>
        huart->gState = HAL_UART_STATE_READY;
 8002f5e:	2320      	movs	r3, #32
      return HAL_TIMEOUT;
 8002f60:	2003      	movs	r0, #3
        __HAL_UNLOCK(huart);
 8002f62:	f884 1078 	strb.w	r1, [r4, #120]	; 0x78
        huart->gState = HAL_UART_STATE_READY;
 8002f66:	67e3      	str	r3, [r4, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8002f68:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
}
 8002f6c:	bd38      	pop	{r3, r4, r5, pc}
    UART_AdvFeatureConfig(huart);
 8002f6e:	4620      	mov	r0, r4
 8002f70:	f7ff ff1e 	bl	8002db0 <UART_AdvFeatureConfig>
 8002f74:	e78c      	b.n	8002e90 <HAL_UART_Init+0x30>
    return HAL_ERROR;
 8002f76:	2001      	movs	r0, #1
}
 8002f78:	bd38      	pop	{r3, r4, r5, pc}
    huart->Lock = HAL_UNLOCKED;
 8002f7a:	f880 3078 	strb.w	r3, [r0, #120]	; 0x78
    HAL_UART_MspInit(huart);
 8002f7e:	f7fe fa9b 	bl	80014b8 <HAL_UART_MspInit>
 8002f82:	e776      	b.n	8002e72 <HAL_UART_Init+0x12>
    return HAL_ERROR;
 8002f84:	2001      	movs	r0, #1
}
 8002f86:	4770      	bx	lr

08002f88 <UART_WaitOnFlagUntilTimeout>:
{
 8002f88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f8c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002f90:	4607      	mov	r7, r0
 8002f92:	460e      	mov	r6, r1
 8002f94:	4615      	mov	r5, r2
 8002f96:	4699      	mov	r9, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8002f98:	6804      	ldr	r4, [r0, #0]
 8002f9a:	f1b8 3fff 	cmp.w	r8, #4294967295
 8002f9e:	d10a      	bne.n	8002fb6 <UART_WaitOnFlagUntilTimeout+0x2e>
 8002fa0:	69e3      	ldr	r3, [r4, #28]
 8002fa2:	ea36 0303 	bics.w	r3, r6, r3
 8002fa6:	bf0c      	ite	eq
 8002fa8:	2301      	moveq	r3, #1
 8002faa:	2300      	movne	r3, #0
 8002fac:	429d      	cmp	r5, r3
 8002fae:	d0f7      	beq.n	8002fa0 <UART_WaitOnFlagUntilTimeout+0x18>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
 8002fb0:	2000      	movs	r0, #0
}
 8002fb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8002fb6:	69e3      	ldr	r3, [r4, #28]
 8002fb8:	ea36 0303 	bics.w	r3, r6, r3
 8002fbc:	bf0c      	ite	eq
 8002fbe:	2301      	moveq	r3, #1
 8002fc0:	2300      	movne	r3, #0
 8002fc2:	42ab      	cmp	r3, r5
 8002fc4:	d1f4      	bne.n	8002fb0 <UART_WaitOnFlagUntilTimeout+0x28>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8002fc6:	f7fe fb7b 	bl	80016c0 <HAL_GetTick>
 8002fca:	eba0 0009 	sub.w	r0, r0, r9
 8002fce:	4540      	cmp	r0, r8
 8002fd0:	d832      	bhi.n	8003038 <UART_WaitOnFlagUntilTimeout+0xb0>
 8002fd2:	f1b8 0f00 	cmp.w	r8, #0
 8002fd6:	d02f      	beq.n	8003038 <UART_WaitOnFlagUntilTimeout+0xb0>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8002fd8:	683c      	ldr	r4, [r7, #0]
 8002fda:	6823      	ldr	r3, [r4, #0]
 8002fdc:	4622      	mov	r2, r4
 8002fde:	0759      	lsls	r1, r3, #29
 8002fe0:	d5db      	bpl.n	8002f9a <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8002fe2:	69e3      	ldr	r3, [r4, #28]
 8002fe4:	051b      	lsls	r3, r3, #20
 8002fe6:	d5d8      	bpl.n	8002f9a <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8002fe8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002fec:	6223      	str	r3, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002fee:	e854 3f00 	ldrex	r3, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8002ff2:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8002ff6:	e844 3100 	strex	r1, r3, [r4]
 8002ffa:	b139      	cbz	r1, 800300c <UART_WaitOnFlagUntilTimeout+0x84>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8002ffc:	e852 3f00 	ldrex	r3, [r2]
 8003000:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003004:	e842 3100 	strex	r1, r3, [r2]
 8003008:	2900      	cmp	r1, #0
 800300a:	d1f7      	bne.n	8002ffc <UART_WaitOnFlagUntilTimeout+0x74>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800300c:	f102 0308 	add.w	r3, r2, #8
 8003010:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003014:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003018:	f102 0008 	add.w	r0, r2, #8
 800301c:	e840 3100 	strex	r1, r3, [r0]
 8003020:	2900      	cmp	r1, #0
 8003022:	d1f3      	bne.n	800300c <UART_WaitOnFlagUntilTimeout+0x84>
          huart->gState = HAL_UART_STATE_READY;
 8003024:	2320      	movs	r3, #32
          return HAL_TIMEOUT;
 8003026:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8003028:	f887 1078 	strb.w	r1, [r7, #120]	; 0x78
          huart->gState = HAL_UART_STATE_READY;
 800302c:	67fb      	str	r3, [r7, #124]	; 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 800302e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003032:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
          return HAL_TIMEOUT;
 8003036:	e7bc      	b.n	8002fb2 <UART_WaitOnFlagUntilTimeout+0x2a>
 8003038:	683a      	ldr	r2, [r7, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800303a:	e852 3f00 	ldrex	r3, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800303e:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003042:	e842 3100 	strex	r1, r3, [r2]
 8003046:	2900      	cmp	r1, #0
 8003048:	d1f7      	bne.n	800303a <UART_WaitOnFlagUntilTimeout+0xb2>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800304a:	f102 0308 	add.w	r3, r2, #8
 800304e:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003052:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003056:	f102 0008 	add.w	r0, r2, #8
 800305a:	e840 3100 	strex	r1, r3, [r0]
 800305e:	2900      	cmp	r1, #0
 8003060:	d1f3      	bne.n	800304a <UART_WaitOnFlagUntilTimeout+0xc2>
        huart->gState = HAL_UART_STATE_READY;
 8003062:	2320      	movs	r3, #32
        return HAL_TIMEOUT;
 8003064:	2003      	movs	r0, #3
        __HAL_UNLOCK(huart);
 8003066:	f887 1078 	strb.w	r1, [r7, #120]	; 0x78
        huart->gState = HAL_UART_STATE_READY;
 800306a:	67fb      	str	r3, [r7, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 800306c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
        return HAL_TIMEOUT;
 8003070:	e79f      	b.n	8002fb2 <UART_WaitOnFlagUntilTimeout+0x2a>
 8003072:	bf00      	nop

08003074 <HAL_UART_Transmit>:
{
 8003074:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003078:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800307a:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
{
 800307c:	b083      	sub	sp, #12
  if (huart->gState == HAL_UART_STATE_READY)
 800307e:	2b20      	cmp	r3, #32
 8003080:	f040 8087 	bne.w	8003192 <HAL_UART_Transmit+0x11e>
    if ((pData == NULL) || (Size == 0U))
 8003084:	4689      	mov	r9, r1
 8003086:	2900      	cmp	r1, #0
 8003088:	d03f      	beq.n	800310a <HAL_UART_Transmit+0x96>
 800308a:	fab2 f782 	clz	r7, r2
 800308e:	4614      	mov	r4, r2
 8003090:	097f      	lsrs	r7, r7, #5
 8003092:	2a00      	cmp	r2, #0
 8003094:	d039      	beq.n	800310a <HAL_UART_Transmit+0x96>
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003096:	2321      	movs	r3, #33	; 0x21
 8003098:	4605      	mov	r5, r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800309a:	f8c0 7084 	str.w	r7, [r0, #132]	; 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800309e:	67c3      	str	r3, [r0, #124]	; 0x7c
    tickstart = HAL_GetTick();
 80030a0:	f7fe fb0e 	bl	80016c0 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80030a4:	68ab      	ldr	r3, [r5, #8]
    tickstart = HAL_GetTick();
 80030a6:	4680      	mov	r8, r0
    huart->TxXferSize  = Size;
 80030a8:	f8a5 4050 	strh.w	r4, [r5, #80]	; 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80030ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    huart->TxXferCount = Size;
 80030b0:	f8a5 4052 	strh.w	r4, [r5, #82]	; 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80030b4:	f000 8090 	beq.w	80031d8 <HAL_UART_Transmit+0x164>
    while (huart->TxXferCount > 0U)
 80030b8:	f8b5 3052 	ldrh.w	r3, [r5, #82]	; 0x52
 80030bc:	b29b      	uxth	r3, r3
 80030be:	b1b3      	cbz	r3, 80030ee <HAL_UART_Transmit+0x7a>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80030c0:	682c      	ldr	r4, [r5, #0]
 80030c2:	1c71      	adds	r1, r6, #1
 80030c4:	d125      	bne.n	8003112 <HAL_UART_Transmit+0x9e>
 80030c6:	69e2      	ldr	r2, [r4, #28]
 80030c8:	0612      	lsls	r2, r2, #24
 80030ca:	d5fc      	bpl.n	80030c6 <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 80030cc:	f1b9 0f00 	cmp.w	r9, #0
 80030d0:	d05a      	beq.n	8003188 <HAL_UART_Transmit+0x114>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80030d2:	f819 3b01 	ldrb.w	r3, [r9], #1
 80030d6:	62a3      	str	r3, [r4, #40]	; 0x28
      huart->TxXferCount--;
 80030d8:	f8b5 3052 	ldrh.w	r3, [r5, #82]	; 0x52
 80030dc:	3b01      	subs	r3, #1
 80030de:	b29b      	uxth	r3, r3
 80030e0:	f8a5 3052 	strh.w	r3, [r5, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 80030e4:	f8b5 3052 	ldrh.w	r3, [r5, #82]	; 0x52
 80030e8:	b29b      	uxth	r3, r3
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	d1e9      	bne.n	80030c2 <HAL_UART_Transmit+0x4e>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80030ee:	4643      	mov	r3, r8
 80030f0:	2200      	movs	r2, #0
 80030f2:	2140      	movs	r1, #64	; 0x40
 80030f4:	4628      	mov	r0, r5
 80030f6:	9600      	str	r6, [sp, #0]
 80030f8:	f7ff ff46 	bl	8002f88 <UART_WaitOnFlagUntilTimeout>
 80030fc:	2800      	cmp	r0, #0
 80030fe:	d172      	bne.n	80031e6 <HAL_UART_Transmit+0x172>
    huart->gState = HAL_UART_STATE_READY;
 8003100:	2320      	movs	r3, #32
 8003102:	67eb      	str	r3, [r5, #124]	; 0x7c
}
 8003104:	b003      	add	sp, #12
 8003106:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      return  HAL_ERROR;
 800310a:	2001      	movs	r0, #1
}
 800310c:	b003      	add	sp, #12
 800310e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003112:	69e3      	ldr	r3, [r4, #28]
 8003114:	061b      	lsls	r3, r3, #24
 8003116:	d4d9      	bmi.n	80030cc <HAL_UART_Transmit+0x58>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003118:	f7fe fad2 	bl	80016c0 <HAL_GetTick>
 800311c:	eba0 0008 	sub.w	r0, r0, r8
 8003120:	4286      	cmp	r6, r0
 8003122:	d33a      	bcc.n	800319a <HAL_UART_Transmit+0x126>
 8003124:	2e00      	cmp	r6, #0
 8003126:	d038      	beq.n	800319a <HAL_UART_Transmit+0x126>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003128:	682c      	ldr	r4, [r5, #0]
 800312a:	6822      	ldr	r2, [r4, #0]
 800312c:	4623      	mov	r3, r4
 800312e:	0752      	lsls	r2, r2, #29
 8003130:	d5c7      	bpl.n	80030c2 <HAL_UART_Transmit+0x4e>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003132:	69e2      	ldr	r2, [r4, #28]
 8003134:	0510      	lsls	r0, r2, #20
 8003136:	d5c4      	bpl.n	80030c2 <HAL_UART_Transmit+0x4e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003138:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800313c:	6222      	str	r2, [r4, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800313e:	e854 2f00 	ldrex	r2, [r4]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003142:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003146:	e844 2100 	strex	r1, r2, [r4]
 800314a:	b139      	cbz	r1, 800315c <HAL_UART_Transmit+0xe8>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800314c:	e853 2f00 	ldrex	r2, [r3]
 8003150:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003154:	e843 2100 	strex	r1, r2, [r3]
 8003158:	2900      	cmp	r1, #0
 800315a:	d1f7      	bne.n	800314c <HAL_UART_Transmit+0xd8>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800315c:	f103 0208 	add.w	r2, r3, #8
 8003160:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003164:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8003168:	f103 0008 	add.w	r0, r3, #8
 800316c:	e840 2100 	strex	r1, r2, [r0]
 8003170:	2900      	cmp	r1, #0
 8003172:	d1f3      	bne.n	800315c <HAL_UART_Transmit+0xe8>
          huart->gState = HAL_UART_STATE_READY;
 8003174:	2320      	movs	r3, #32
        return HAL_TIMEOUT;
 8003176:	2003      	movs	r0, #3
          __HAL_UNLOCK(huart);
 8003178:	f885 1078 	strb.w	r1, [r5, #120]	; 0x78
          huart->gState = HAL_UART_STATE_READY;
 800317c:	67eb      	str	r3, [r5, #124]	; 0x7c
          huart->RxState = HAL_UART_STATE_READY;
 800317e:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003182:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
          return HAL_TIMEOUT;
 8003186:	e7c1      	b.n	800310c <HAL_UART_Transmit+0x98>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003188:	f837 3b02 	ldrh.w	r3, [r7], #2
 800318c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003190:	e7a1      	b.n	80030d6 <HAL_UART_Transmit+0x62>
    return HAL_BUSY;
 8003192:	2002      	movs	r0, #2
}
 8003194:	b003      	add	sp, #12
 8003196:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800319a:	682b      	ldr	r3, [r5, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800319c:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80031a0:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80031a4:	e843 2100 	strex	r1, r2, [r3]
 80031a8:	2900      	cmp	r1, #0
 80031aa:	d1f7      	bne.n	800319c <HAL_UART_Transmit+0x128>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80031ac:	f103 0208 	add.w	r2, r3, #8
 80031b0:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80031b4:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80031b8:	f103 0008 	add.w	r0, r3, #8
 80031bc:	e840 2100 	strex	r1, r2, [r0]
 80031c0:	2900      	cmp	r1, #0
 80031c2:	d1f3      	bne.n	80031ac <HAL_UART_Transmit+0x138>
        huart->gState = HAL_UART_STATE_READY;
 80031c4:	2320      	movs	r3, #32
        return HAL_TIMEOUT;
 80031c6:	2003      	movs	r0, #3
        __HAL_UNLOCK(huart);
 80031c8:	f885 1078 	strb.w	r1, [r5, #120]	; 0x78
        huart->gState = HAL_UART_STATE_READY;
 80031cc:	67eb      	str	r3, [r5, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 80031ce:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
}
 80031d2:	b003      	add	sp, #12
 80031d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80031d8:	692b      	ldr	r3, [r5, #16]
 80031da:	2b00      	cmp	r3, #0
 80031dc:	f47f af6c 	bne.w	80030b8 <HAL_UART_Transmit+0x44>
 80031e0:	464f      	mov	r7, r9
      pdata8bits  = NULL;
 80031e2:	4699      	mov	r9, r3
 80031e4:	e768      	b.n	80030b8 <HAL_UART_Transmit+0x44>
      return HAL_TIMEOUT;
 80031e6:	2003      	movs	r0, #3
 80031e8:	e790      	b.n	800310c <HAL_UART_Transmit+0x98>
 80031ea:	bf00      	nop

080031ec <ai_network_get_error>:
}

AI_API_ENTRY
ai_error ai_network_get_error(ai_handle network)
{
  return ai_platform_network_get_error(network);
 80031ec:	f000 bec6 	b.w	8003f7c <ai_platform_network_get_error>

080031f0 <ai_network_create>:
}

AI_API_ENTRY
ai_error ai_network_create(
  ai_handle* network, const ai_buffer* network_config)
{
 80031f0:	b510      	push	{r4, lr}
  return ai_platform_network_create(
 80031f2:	2204      	movs	r2, #4
{
 80031f4:	b082      	sub	sp, #8
  return ai_platform_network_create(
 80031f6:	2400      	movs	r4, #0
 80031f8:	2301      	movs	r3, #1
 80031fa:	e9cd 2400 	strd	r2, r4, [sp]
 80031fe:	4a02      	ldr	r2, [pc, #8]	; (8003208 <ai_network_create+0x18>)
 8003200:	f000 ff4a 	bl	8004098 <ai_platform_network_create>
    network, network_config, 
    &AI_NET_OBJ_INSTANCE,
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8003204:	b002      	add	sp, #8
 8003206:	bd10      	pop	{r4, pc}
 8003208:	20004a64 	.word	0x20004a64
 800320c:	00000000 	.word	0x00000000

08003210 <ai_network_init>:
}

AI_API_ENTRY
ai_bool ai_network_init(
  ai_handle network, const ai_network_params* params)
{
 8003210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003214:	b08d      	sub	sp, #52	; 0x34
 8003216:	4604      	mov	r4, r0
 8003218:	460e      	mov	r6, r1
  ai_network* net_ctx = ai_platform_network_init(network, params);
 800321a:	f001 f803 	bl	8004224 <ai_platform_network_init>
  if ( !net_ctx ) return false;
 800321e:	2800      	cmp	r0, #0
 8003220:	f000 8677 	beq.w	8003f12 <ai_network_init+0xd02>
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8003224:	f8df 83dc 	ldr.w	r8, [pc, #988]	; 8003604 <ai_network_init+0x3f4>

  ai_bool ok = true;
  ok &= network_configure_weights(net_ctx, &params->params);
  ok &= network_configure_activations(net_ctx, &params->activations);

  ok &= ai_platform_network_post_init(network);
 8003228:	4620      	mov	r0, r4
 800322a:	f8d6 e010 	ldr.w	lr, [r6, #16]
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 800322e:	9600      	str	r6, [sp, #0]
 8003230:	f8d8 6000 	ldr.w	r6, [r8]
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8003234:	4dc7      	ldr	r5, [pc, #796]	; (8003554 <ai_network_init+0x344>)
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8003236:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 800323a:	4cc7      	ldr	r4, [pc, #796]	; (8003558 <ai_network_init+0x348>)
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 800323c:	49c7      	ldr	r1, [pc, #796]	; (800355c <ai_network_init+0x34c>)
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 800323e:	f8c8 6000 	str.w	r6, [r8]
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8003242:	682e      	ldr	r6, [r5, #0]
    conv2d_4_weights_array.format |= AI_FMT_FLAG_CONST;
 8003244:	4ac6      	ldr	r2, [pc, #792]	; (8003560 <ai_network_init+0x350>)
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8003246:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 800324a:	4bc6      	ldr	r3, [pc, #792]	; (8003564 <ai_network_init+0x354>)
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 800324c:	4fc6      	ldr	r7, [pc, #792]	; (8003568 <ai_network_init+0x358>)
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 800324e:	602e      	str	r6, [r5, #0]
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8003250:	6826      	ldr	r6, [r4, #0]
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 8003252:	f8df c3b4 	ldr.w	ip, [pc, #948]	; 8003608 <ai_network_init+0x3f8>
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8003256:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_7_bias_array.format |= AI_FMT_FLAG_CONST;
 800325a:	f8df a3b0 	ldr.w	sl, [pc, #944]	; 800360c <ai_network_init+0x3fc>
    conv2d_9_bias_array.format |= AI_FMT_FLAG_CONST;
 800325e:	f8df b3b0 	ldr.w	fp, [pc, #944]	; 8003610 <ai_network_init+0x400>
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8003262:	6026      	str	r6, [r4, #0]
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 8003264:	680e      	ldr	r6, [r1, #0]
    conv2d_10_bias_array.format |= AI_FMT_FLAG_CONST;
 8003266:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8003614 <ai_network_init+0x404>
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 800326a:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
 800326e:	600e      	str	r6, [r1, #0]
    conv2d_4_weights_array.format |= AI_FMT_FLAG_CONST;
 8003270:	6816      	ldr	r6, [r2, #0]
 8003272:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
 8003276:	6016      	str	r6, [r2, #0]
    conv2d_1_bias_array.data = AI_PTR(weights + 432);
 8003278:	f50e 72d8 	add.w	r2, lr, #432	; 0x1b0
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 800327c:	681e      	ldr	r6, [r3, #0]
    conv2d_1_bias_array.data = AI_PTR(weights + 432);
 800327e:	e9c5 2202 	strd	r2, r2, [r5, #8]
    conv2d_3_weights_array.data = AI_PTR(weights + 496);
 8003282:	f50e 75f8 	add.w	r5, lr, #496	; 0x1f0
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 8003286:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_4_weights_array.data = AI_PTR(weights + 704);
 800328a:	4ab5      	ldr	r2, [pc, #724]	; (8003560 <ai_network_init+0x350>)
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 800328c:	601e      	str	r6, [r3, #0]
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 800328e:	683e      	ldr	r6, [r7, #0]
    conv2d_3_weights_array.data_start = AI_PTR(weights + 496);
 8003290:	e9c4 5502 	strd	r5, r5, [r4, #8]
    conv2d_3_bias_array.data = AI_PTR(weights + 640);
 8003294:	f50e 7420 	add.w	r4, lr, #640	; 0x280
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 8003298:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_15_weights_array.format |= AI_FMT_FLAG_CONST;
 800329c:	4db3      	ldr	r5, [pc, #716]	; (800356c <ai_network_init+0x35c>)
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 800329e:	603e      	str	r6, [r7, #0]
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 80032a0:	f8dc 6000 	ldr.w	r6, [ip]
    conv2d_3_bias_array.data_start = AI_PTR(weights + 640);
 80032a4:	e9c1 4402 	strd	r4, r4, [r1, #8]
    conv2d_4_weights_array.data = AI_PTR(weights + 704);
 80032a8:	f50e 7130 	add.w	r1, lr, #704	; 0x2c0
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 80032ac:	f046 4680 	orr.w	r6, r6, #1073741824	; 0x40000000
    conv2d_10_weights_array.format |= AI_FMT_FLAG_CONST;
 80032b0:	4caf      	ldr	r4, [pc, #700]	; (8003570 <ai_network_init+0x360>)
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 80032b2:	f8cc 6000 	str.w	r6, [ip]
    conv2d_12_bias_array.format |= AI_FMT_FLAG_CONST;
 80032b6:	4eaf      	ldr	r6, [pc, #700]	; (8003574 <ai_network_init+0x364>)
    conv2d_4_weights_array.data_start = AI_PTR(weights + 704);
 80032b8:	e9c2 1102 	strd	r1, r1, [r2, #8]
    conv2d_4_bias_array.data = AI_PTR(weights + 1600);
 80032bc:	f50e 62c8 	add.w	r2, lr, #1600	; 0x640
    conv2d_9_weights_array.format |= AI_FMT_FLAG_CONST;
 80032c0:	49ad      	ldr	r1, [pc, #692]	; (8003578 <ai_network_init+0x368>)
    conv2d_4_bias_array.data_start = AI_PTR(weights + 1600);
 80032c2:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_6_weights_array.data = AI_PTR(weights + 1824);
 80032c6:	f50e 63e4 	add.w	r3, lr, #1824	; 0x720
    conv2d_7_weights_array.format |= AI_FMT_FLAG_CONST;
 80032ca:	4aac      	ldr	r2, [pc, #688]	; (800357c <ai_network_init+0x36c>)
    conv2d_6_weights_array.data_start = AI_PTR(weights + 1824);
 80032cc:	e9c7 3302 	strd	r3, r3, [r7, #8]
    conv2d_6_bias_array.data = AI_PTR(weights + 2328);
 80032d0:	f60e 1318 	addw	r3, lr, #2328	; 0x918
    conv2d_7_weights_array.data = AI_PTR(weights + 2552);
 80032d4:	f60e 17f8 	addw	r7, lr, #2552	; 0x9f8
    conv2d_1_weights_array.data_start = AI_PTR(weights + 0);
 80032d8:	e9c8 ee02 	strd	lr, lr, [r8, #8]
    conv2d_6_bias_array.data_start = AI_PTR(weights + 2328);
 80032dc:	e9cc 3302 	strd	r3, r3, [ip, #8]
    conv2d_7_bias_array.data = AI_PTR(weights + 8376);
 80032e0:	f242 03b8 	movw	r3, #8376	; 0x20b8
    conv2d_12_weights_array.format |= AI_FMT_FLAG_CONST;
 80032e4:	f8df 8330 	ldr.w	r8, [pc, #816]	; 8003618 <ai_network_init+0x408>
    conv2d_18_bias_array.format |= AI_FMT_FLAG_CONST;
 80032e8:	f8df c330 	ldr.w	ip, [pc, #816]	; 800361c <ai_network_init+0x40c>
    conv2d_7_bias_array.data = AI_PTR(weights + 8376);
 80032ec:	4473      	add	r3, lr
    conv2d_7_bias_array.data_start = AI_PTR(weights + 8376);
 80032ee:	e9ca 3302 	strd	r3, r3, [sl, #8]
    conv2d_7_weights_array.format |= AI_FMT_FLAG_CONST;
 80032f2:	6813      	ldr	r3, [r2, #0]
 80032f4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80032f8:	6013      	str	r3, [r2, #0]
    conv2d_7_bias_array.format |= AI_FMT_FLAG_CONST;
 80032fa:	f8da 3000 	ldr.w	r3, [sl]
 80032fe:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8003302:	f8ca 3000 	str.w	r3, [sl]
    conv2d_9_weights_array.format |= AI_FMT_FLAG_CONST;
 8003306:	680b      	ldr	r3, [r1, #0]
    conv2d_16_bias_array.format |= AI_FMT_FLAG_CONST;
 8003308:	f8df a314 	ldr.w	sl, [pc, #788]	; 8003620 <ai_network_init+0x410>
    conv2d_9_weights_array.format |= AI_FMT_FLAG_CONST;
 800330c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8003310:	600b      	str	r3, [r1, #0]
    conv2d_9_bias_array.format |= AI_FMT_FLAG_CONST;
 8003312:	f8db 3000 	ldr.w	r3, [fp]
 8003316:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800331a:	f8cb 3000 	str.w	r3, [fp]
    conv2d_10_weights_array.format |= AI_FMT_FLAG_CONST;
 800331e:	6823      	ldr	r3, [r4, #0]
 8003320:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8003324:	6023      	str	r3, [r4, #0]
    conv2d_10_bias_array.format |= AI_FMT_FLAG_CONST;
 8003326:	f8d9 3000 	ldr.w	r3, [r9]
 800332a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800332e:	f8c9 3000 	str.w	r3, [r9]
    conv2d_12_weights_array.format |= AI_FMT_FLAG_CONST;
 8003332:	f8d8 3000 	ldr.w	r3, [r8]
 8003336:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800333a:	f8c8 3000 	str.w	r3, [r8]
    conv2d_12_bias_array.format |= AI_FMT_FLAG_CONST;
 800333e:	6833      	ldr	r3, [r6, #0]
 8003340:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8003344:	6033      	str	r3, [r6, #0]
    conv2d_9_weights_array.data = AI_PTR(weights + 8792);
 8003346:	f242 2358 	movw	r3, #8792	; 0x2258
 800334a:	4473      	add	r3, lr
    conv2d_9_weights_array.data_start = AI_PTR(weights + 8792);
 800334c:	e9c1 3302 	strd	r3, r3, [r1, #8]
    conv2d_10_weights_array.data = AI_PTR(weights + 10144);
 8003350:	f242 73a0 	movw	r3, #10144	; 0x27a0
    conv2d_16_weights_array.format |= AI_FMT_FLAG_CONST;
 8003354:	498a      	ldr	r1, [pc, #552]	; (8003580 <ai_network_init+0x370>)
    conv2d_10_weights_array.data = AI_PTR(weights + 10144);
 8003356:	4473      	add	r3, lr
    conv2d_10_weights_array.data_start = AI_PTR(weights + 10144);
 8003358:	e9c4 3302 	strd	r3, r3, [r4, #8]
    conv2d_10_bias_array.data = AI_PTR(weights + 18464);
 800335c:	f644 0320 	movw	r3, #18464	; 0x4820
    conv2d_15_bias_array.format |= AI_FMT_FLAG_CONST;
 8003360:	4c88      	ldr	r4, [pc, #544]	; (8003584 <ai_network_init+0x374>)
    conv2d_10_bias_array.data = AI_PTR(weights + 18464);
 8003362:	4473      	add	r3, lr
    conv2d_10_bias_array.data_start = AI_PTR(weights + 18464);
 8003364:	e9c9 3302 	strd	r3, r3, [r9, #8]
    conv2d_12_weights_array.data = AI_PTR(weights + 18784);
 8003368:	f644 1360 	movw	r3, #18784	; 0x4960
    conv2d_13_weights_array.data = AI_PTR(weights + 19824);
 800336c:	f644 5970 	movw	r9, #19824	; 0x4d70
    conv2d_12_weights_array.data = AI_PTR(weights + 18784);
 8003370:	4473      	add	r3, lr
    conv2d_13_weights_array.data = AI_PTR(weights + 19824);
 8003372:	44f1      	add	r9, lr
    conv2d_12_weights_array.data_start = AI_PTR(weights + 18784);
 8003374:	e9c8 3302 	strd	r3, r3, [r8, #8]
    conv2d_12_bias_array.data = AI_PTR(weights + 19504);
 8003378:	f644 4330 	movw	r3, #19504	; 0x4c30
    conv2d_13_weights_array.format |= AI_FMT_FLAG_CONST;
 800337c:	f8df 82a4 	ldr.w	r8, [pc, #676]	; 8003624 <ai_network_init+0x414>
    conv2d_12_bias_array.data = AI_PTR(weights + 19504);
 8003380:	4473      	add	r3, lr
    conv2d_7_weights_array.data_start = AI_PTR(weights + 2552);
 8003382:	e9c2 7702 	strd	r7, r7, [r2, #8]
    conv2d_9_bias_array.data = AI_PTR(weights + 9728);
 8003386:	f50e 5718 	add.w	r7, lr, #9728	; 0x2600
    conv2d_18_weights_array.data = AI_PTR(weights + 52400);
 800338a:	f64c 42b0 	movw	r2, #52400	; 0xccb0
    conv2d_12_bias_array.data_start = AI_PTR(weights + 19504);
 800338e:	e9c6 3302 	strd	r3, r3, [r6, #8]
    conv2d_9_bias_array.data_start = AI_PTR(weights + 9728);
 8003392:	e9cb 7702 	strd	r7, r7, [fp, #8]
    conv2d_13_weights_array.format |= AI_FMT_FLAG_CONST;
 8003396:	f8d8 7000 	ldr.w	r7, [r8]
    conv2d_18_weights_array.data = AI_PTR(weights + 52400);
 800339a:	4472      	add	r2, lr
    conv2d_13_bias_array.format |= AI_FMT_FLAG_CONST;
 800339c:	4e7a      	ldr	r6, [pc, #488]	; (8003588 <ai_network_init+0x378>)
    conv2d_13_weights_array.format |= AI_FMT_FLAG_CONST;
 800339e:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
    conv2d_18_weights_array.format |= AI_FMT_FLAG_CONST;
 80033a2:	4b7a      	ldr	r3, [pc, #488]	; (800358c <ai_network_init+0x37c>)
    conv2d_13_weights_array.format |= AI_FMT_FLAG_CONST;
 80033a4:	f8c8 7000 	str.w	r7, [r8]
    conv2d_13_bias_array.format |= AI_FMT_FLAG_CONST;
 80033a8:	6837      	ldr	r7, [r6, #0]
 80033aa:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033ae:	6037      	str	r7, [r6, #0]
    conv2d_15_weights_array.format |= AI_FMT_FLAG_CONST;
 80033b0:	682f      	ldr	r7, [r5, #0]
 80033b2:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033b6:	602f      	str	r7, [r5, #0]
    conv2d_15_bias_array.format |= AI_FMT_FLAG_CONST;
 80033b8:	6827      	ldr	r7, [r4, #0]
 80033ba:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033be:	6027      	str	r7, [r4, #0]
    conv2d_16_weights_array.format |= AI_FMT_FLAG_CONST;
 80033c0:	680f      	ldr	r7, [r1, #0]
 80033c2:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033c6:	600f      	str	r7, [r1, #0]
    conv2d_16_bias_array.format |= AI_FMT_FLAG_CONST;
 80033c8:	f8da 7000 	ldr.w	r7, [sl]
 80033cc:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033d0:	f8ca 7000 	str.w	r7, [sl]
    conv2d_18_weights_array.format |= AI_FMT_FLAG_CONST;
 80033d4:	681f      	ldr	r7, [r3, #0]
 80033d6:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033da:	601f      	str	r7, [r3, #0]
    conv2d_18_bias_array.format |= AI_FMT_FLAG_CONST;
 80033dc:	f8dc 7000 	ldr.w	r7, [ip]
 80033e0:	f047 4780 	orr.w	r7, r7, #1073741824	; 0x40000000
 80033e4:	f8cc 7000 	str.w	r7, [ip]
    conv2d_13_bias_array.data = AI_PTR(weights + 32624);
 80033e8:	f647 7770 	movw	r7, #32624	; 0x7f70
 80033ec:	4477      	add	r7, lr
    conv2d_13_bias_array.data_start = AI_PTR(weights + 32624);
 80033ee:	e9c6 7702 	strd	r7, r7, [r6, #8]
    conv2d_15_weights_array.data = AI_PTR(weights + 33264);
 80033f2:	f248 16f0 	movw	r6, #33264	; 0x81f0
    conv2d_1_output_array.data = AI_PTR(activations + 26780);
 80033f6:	f646 079c 	movw	r7, #26780	; 0x689c
    conv2d_15_weights_array.data = AI_PTR(weights + 33264);
 80033fa:	4476      	add	r6, lr
    conv2d_15_weights_array.data_start = AI_PTR(weights + 33264);
 80033fc:	e9c5 6602 	strd	r6, r6, [r5, #8]
    conv2d_15_bias_array.data = AI_PTR(weights + 34704);
 8003400:	f248 7590 	movw	r5, #34704	; 0x8790
    conv2d_41_output_array.data = AI_PTR(activations + 14228);
 8003404:	f243 7694 	movw	r6, #14228	; 0x3794
    conv2d_15_bias_array.data = AI_PTR(weights + 34704);
 8003408:	4475      	add	r5, lr
    conv2d_15_bias_array.data_start = AI_PTR(weights + 34704);
 800340a:	e9c4 5502 	strd	r5, r5, [r4, #8]
    conv2d_16_weights_array.data = AI_PTR(weights + 35344);
 800340e:	f648 2410 	movw	r4, #35344	; 0x8a10
    conv2d_9_output_array.data = AI_PTR(activations + 12064);
 8003412:	f642 7520 	movw	r5, #12064	; 0x2f20
    conv2d_16_weights_array.data = AI_PTR(weights + 35344);
 8003416:	4474      	add	r4, lr
    conv2d_18_weights_array.data_start = AI_PTR(weights + 52400);
 8003418:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_18_bias_array.data = AI_PTR(weights + 53336);
 800341c:	f24d 0358 	movw	r3, #53336	; 0xd058
    conv2d_16_weights_array.data_start = AI_PTR(weights + 35344);
 8003420:	e9c1 4402 	strd	r4, r4, [r1, #8]
    conv2d_18_bias_array.data = AI_PTR(weights + 53336);
 8003424:	4473      	add	r3, lr
    conv2d_16_bias_array.data = AI_PTR(weights + 51984);
 8003426:	f64c 3110 	movw	r1, #51984	; 0xcb10
    conv2d_7_output_array.data = AI_PTR(activations + 15600);
 800342a:	f643 44f0 	movw	r4, #15600	; 0x3cf0
    conv2d_16_bias_array.data = AI_PTR(weights + 51984);
 800342e:	4471      	add	r1, lr
    conv2d_18_bias_array.data_start = AI_PTR(weights + 53336);
 8003430:	e9cc 3302 	strd	r3, r3, [ip, #8]
    conv2d_19_weights_array.format |= AI_FMT_FLAG_CONST;
 8003434:	4b56      	ldr	r3, [pc, #344]	; (8003590 <ai_network_init+0x380>)
    conv2d_6_scratch0_array.data = AI_PTR(activations + 58692);
 8003436:	f24e 5c44 	movw	ip, #58692	; 0xe544
    conv2d_13_weights_array.data_start = AI_PTR(weights + 19824);
 800343a:	e9c8 9902 	strd	r9, r9, [r8, #8]
    conv2d_16_bias_array.data_start = AI_PTR(weights + 51984);
 800343e:	e9ca 1102 	strd	r1, r1, [sl, #8]
    conv2d_19_weights_array.format |= AI_FMT_FLAG_CONST;
 8003442:	681a      	ldr	r2, [r3, #0]
 8003444:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003448:	601a      	str	r2, [r3, #0]
    conv2d_19_weights_array.data = AI_PTR(weights + 53752);
 800344a:	f24d 12f8 	movw	r2, #53752	; 0xd1f8
 800344e:	4472      	add	r2, lr
    conv2d_19_weights_array.data_start = AI_PTR(weights + 53752);
 8003450:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_19_bias_array.format |= AI_FMT_FLAG_CONST;
 8003454:	4b4f      	ldr	r3, [pc, #316]	; (8003594 <ai_network_init+0x384>)
 8003456:	681a      	ldr	r2, [r3, #0]
 8003458:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800345c:	601a      	str	r2, [r3, #0]
    conv2d_19_bias_array.data = AI_PTR(weights + 75384);
 800345e:	4a4e      	ldr	r2, [pc, #312]	; (8003598 <ai_network_init+0x388>)
 8003460:	4472      	add	r2, lr
    conv2d_19_bias_array.data_start = AI_PTR(weights + 75384);
 8003462:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_21_weights_array.format |= AI_FMT_FLAG_CONST;
 8003466:	4b4d      	ldr	r3, [pc, #308]	; (800359c <ai_network_init+0x38c>)
 8003468:	681a      	ldr	r2, [r3, #0]
 800346a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800346e:	601a      	str	r2, [r3, #0]
    conv2d_21_weights_array.data = AI_PTR(weights + 76216);
 8003470:	4a4b      	ldr	r2, [pc, #300]	; (80035a0 <ai_network_init+0x390>)
 8003472:	4472      	add	r2, lr
    conv2d_21_weights_array.data_start = AI_PTR(weights + 76216);
 8003474:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_21_bias_array.format |= AI_FMT_FLAG_CONST;
 8003478:	4b4a      	ldr	r3, [pc, #296]	; (80035a4 <ai_network_init+0x394>)
 800347a:	681a      	ldr	r2, [r3, #0]
 800347c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003480:	601a      	str	r2, [r3, #0]
    conv2d_21_bias_array.data = AI_PTR(weights + 78088);
 8003482:	4a49      	ldr	r2, [pc, #292]	; (80035a8 <ai_network_init+0x398>)
 8003484:	4472      	add	r2, lr
    conv2d_21_bias_array.data_start = AI_PTR(weights + 78088);
 8003486:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_22_weights_array.format |= AI_FMT_FLAG_CONST;
 800348a:	4b48      	ldr	r3, [pc, #288]	; (80035ac <ai_network_init+0x39c>)
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003492:	601a      	str	r2, [r3, #0]
    conv2d_22_weights_array.data = AI_PTR(weights + 78920);
 8003494:	4a46      	ldr	r2, [pc, #280]	; (80035b0 <ai_network_init+0x3a0>)
 8003496:	4472      	add	r2, lr
    conv2d_22_weights_array.data_start = AI_PTR(weights + 78920);
 8003498:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_22_bias_array.format |= AI_FMT_FLAG_CONST;
 800349c:	4b45      	ldr	r3, [pc, #276]	; (80035b4 <ai_network_init+0x3a4>)
 800349e:	681a      	ldr	r2, [r3, #0]
 80034a0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034a4:	601a      	str	r2, [r3, #0]
    conv2d_22_bias_array.data = AI_PTR(weights + 85576);
 80034a6:	4a44      	ldr	r2, [pc, #272]	; (80035b8 <ai_network_init+0x3a8>)
 80034a8:	4472      	add	r2, lr
    conv2d_22_bias_array.data_start = AI_PTR(weights + 85576);
 80034aa:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_23_weights_array.format |= AI_FMT_FLAG_CONST;
 80034ae:	4b43      	ldr	r3, [pc, #268]	; (80035bc <ai_network_init+0x3ac>)
 80034b0:	681a      	ldr	r2, [r3, #0]
 80034b2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034b6:	601a      	str	r2, [r3, #0]
    conv2d_23_weights_array.data = AI_PTR(weights + 85704);
 80034b8:	4a41      	ldr	r2, [pc, #260]	; (80035c0 <ai_network_init+0x3b0>)
 80034ba:	4472      	add	r2, lr
    conv2d_23_weights_array.data_start = AI_PTR(weights + 85704);
 80034bc:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_23_bias_array.format |= AI_FMT_FLAG_CONST;
 80034c0:	4b40      	ldr	r3, [pc, #256]	; (80035c4 <ai_network_init+0x3b4>)
 80034c2:	681a      	ldr	r2, [r3, #0]
 80034c4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034c8:	601a      	str	r2, [r3, #0]
    conv2d_23_bias_array.data = AI_PTR(weights + 86728);
 80034ca:	4a3f      	ldr	r2, [pc, #252]	; (80035c8 <ai_network_init+0x3b8>)
 80034cc:	4472      	add	r2, lr
    conv2d_23_bias_array.data_start = AI_PTR(weights + 86728);
 80034ce:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_24_weights_array.format |= AI_FMT_FLAG_CONST;
 80034d2:	4b3e      	ldr	r3, [pc, #248]	; (80035cc <ai_network_init+0x3bc>)
 80034d4:	681a      	ldr	r2, [r3, #0]
 80034d6:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034da:	601a      	str	r2, [r3, #0]
    conv2d_24_weights_array.data = AI_PTR(weights + 86856);
 80034dc:	4a3c      	ldr	r2, [pc, #240]	; (80035d0 <ai_network_init+0x3c0>)
 80034de:	4472      	add	r2, lr
    conv2d_24_weights_array.data_start = AI_PTR(weights + 86856);
 80034e0:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_24_bias_array.format |= AI_FMT_FLAG_CONST;
 80034e4:	4b3b      	ldr	r3, [pc, #236]	; (80035d4 <ai_network_init+0x3c4>)
 80034e6:	681a      	ldr	r2, [r3, #0]
 80034e8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034ec:	601a      	str	r2, [r3, #0]
    conv2d_24_bias_array.data = AI_PTR(weights + 91976);
 80034ee:	4a3a      	ldr	r2, [pc, #232]	; (80035d8 <ai_network_init+0x3c8>)
 80034f0:	4472      	add	r2, lr
    conv2d_24_bias_array.data_start = AI_PTR(weights + 91976);
 80034f2:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_26_weights_array.format |= AI_FMT_FLAG_CONST;
 80034f6:	4b39      	ldr	r3, [pc, #228]	; (80035dc <ai_network_init+0x3cc>)
 80034f8:	681a      	ldr	r2, [r3, #0]
 80034fa:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80034fe:	601a      	str	r2, [r3, #0]
    conv2d_26_weights_array.data = AI_PTR(weights + 92616);
 8003500:	4a37      	ldr	r2, [pc, #220]	; (80035e0 <ai_network_init+0x3d0>)
 8003502:	4472      	add	r2, lr
    conv2d_26_weights_array.data_start = AI_PTR(weights + 92616);
 8003504:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_26_bias_array.format |= AI_FMT_FLAG_CONST;
 8003508:	4b36      	ldr	r3, [pc, #216]	; (80035e4 <ai_network_init+0x3d4>)
 800350a:	681a      	ldr	r2, [r3, #0]
 800350c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003510:	601a      	str	r2, [r3, #0]
    conv2d_26_bias_array.data = AI_PTR(weights + 94056);
 8003512:	4a35      	ldr	r2, [pc, #212]	; (80035e8 <ai_network_init+0x3d8>)
 8003514:	4472      	add	r2, lr
    conv2d_26_bias_array.data_start = AI_PTR(weights + 94056);
 8003516:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_27_weights_array.format |= AI_FMT_FLAG_CONST;
 800351a:	4b34      	ldr	r3, [pc, #208]	; (80035ec <ai_network_init+0x3dc>)
 800351c:	681a      	ldr	r2, [r3, #0]
 800351e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003522:	601a      	str	r2, [r3, #0]
    conv2d_27_weights_array.data = AI_PTR(weights + 94696);
 8003524:	4a32      	ldr	r2, [pc, #200]	; (80035f0 <ai_network_init+0x3e0>)
 8003526:	4472      	add	r2, lr
    conv2d_27_weights_array.data_start = AI_PTR(weights + 94696);
 8003528:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_27_bias_array.format |= AI_FMT_FLAG_CONST;
 800352c:	4b31      	ldr	r3, [pc, #196]	; (80035f4 <ai_network_init+0x3e4>)
 800352e:	681a      	ldr	r2, [r3, #0]
 8003530:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003534:	601a      	str	r2, [r3, #0]
    conv2d_27_bias_array.data = AI_PTR(weights + 99816);
 8003536:	4a30      	ldr	r2, [pc, #192]	; (80035f8 <ai_network_init+0x3e8>)
 8003538:	4472      	add	r2, lr
    conv2d_27_bias_array.data_start = AI_PTR(weights + 99816);
 800353a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_28_weights_array.format |= AI_FMT_FLAG_CONST;
 800353e:	4b2f      	ldr	r3, [pc, #188]	; (80035fc <ai_network_init+0x3ec>)
 8003540:	681a      	ldr	r2, [r3, #0]
 8003542:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003546:	601a      	str	r2, [r3, #0]
    conv2d_28_weights_array.data = AI_PTR(weights + 99944);
 8003548:	4a2d      	ldr	r2, [pc, #180]	; (8003600 <ai_network_init+0x3f0>)
 800354a:	4472      	add	r2, lr
    conv2d_28_weights_array.data_start = AI_PTR(weights + 99944);
 800354c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8003550:	e06a      	b.n	8003628 <ai_network_init+0x418>
 8003552:	bf00      	nop
 8003554:	2000296c 	.word	0x2000296c
 8003558:	20003a20 	.word	0x20003a20
 800355c:	2000395c 	.word	0x2000395c
 8003560:	20004290 	.word	0x20004290
 8003564:	200041cc 	.word	0x200041cc
 8003568:	20004788 	.word	0x20004788
 800356c:	20002670 	.word	0x20002670
 8003570:	200023a0 	.word	0x200023a0
 8003574:	200023cc 	.word	0x200023cc
 8003578:	20004968 	.word	0x20004968
 800357c:	20004878 	.word	0x20004878
 8003580:	20002760 	.word	0x20002760
 8003584:	200025ac 	.word	0x200025ac
 8003588:	200024bc 	.word	0x200024bc
 800358c:	20002850 	.word	0x20002850
 8003590:	20002940 	.word	0x20002940
 8003594:	2000287c 	.word	0x2000287c
 8003598:	00012678 	.word	0x00012678
 800359c:	20002b20 	.word	0x20002b20
 80035a0:	000129b8 	.word	0x000129b8
 80035a4:	20002a5c 	.word	0x20002a5c
 80035a8:	00013108 	.word	0x00013108
 80035ac:	20002c10 	.word	0x20002c10
 80035b0:	00013448 	.word	0x00013448
 80035b4:	20002b4c 	.word	0x20002b4c
 80035b8:	00014e48 	.word	0x00014e48
 80035bc:	20002d00 	.word	0x20002d00
 80035c0:	00014ec8 	.word	0x00014ec8
 80035c4:	20002c3c 	.word	0x20002c3c
 80035c8:	000152c8 	.word	0x000152c8
 80035cc:	20002df0 	.word	0x20002df0
 80035d0:	00015348 	.word	0x00015348
 80035d4:	20002d2c 	.word	0x20002d2c
 80035d8:	00016748 	.word	0x00016748
 80035dc:	20002ee0 	.word	0x20002ee0
 80035e0:	000169c8 	.word	0x000169c8
 80035e4:	20002e1c 	.word	0x20002e1c
 80035e8:	00016f68 	.word	0x00016f68
 80035ec:	20002fd0 	.word	0x20002fd0
 80035f0:	000171e8 	.word	0x000171e8
 80035f4:	20002f0c 	.word	0x20002f0c
 80035f8:	000185e8 	.word	0x000185e8
 80035fc:	200030c0 	.word	0x200030c0
 8003600:	00018668 	.word	0x00018668
 8003604:	20002a30 	.word	0x20002a30
 8003608:	200046c4 	.word	0x200046c4
 800360c:	200047b4 	.word	0x200047b4
 8003610:	200048a4 	.word	0x200048a4
 8003614:	200022dc 	.word	0x200022dc
 8003618:	20002490 	.word	0x20002490
 800361c:	2000278c 	.word	0x2000278c
 8003620:	2000269c 	.word	0x2000269c
 8003624:	20002580 	.word	0x20002580
    conv2d_28_bias_array.format |= AI_FMT_FLAG_CONST;
 8003628:	4bae      	ldr	r3, [pc, #696]	; (80038e4 <ai_network_init+0x6d4>)
 800362a:	681a      	ldr	r2, [r3, #0]
 800362c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003630:	601a      	str	r2, [r3, #0]
    conv2d_28_bias_array.data = AI_PTR(weights + 100968);
 8003632:	4aad      	ldr	r2, [pc, #692]	; (80038e8 <ai_network_init+0x6d8>)
 8003634:	4472      	add	r2, lr
    conv2d_28_bias_array.data_start = AI_PTR(weights + 100968);
 8003636:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_29_weights_array.format |= AI_FMT_FLAG_CONST;
 800363a:	4bac      	ldr	r3, [pc, #688]	; (80038ec <ai_network_init+0x6dc>)
 800363c:	681a      	ldr	r2, [r3, #0]
 800363e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003642:	601a      	str	r2, [r3, #0]
    conv2d_29_weights_array.data = AI_PTR(weights + 101096);
 8003644:	4aaa      	ldr	r2, [pc, #680]	; (80038f0 <ai_network_init+0x6e0>)
 8003646:	4472      	add	r2, lr
    conv2d_29_weights_array.data_start = AI_PTR(weights + 101096);
 8003648:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_29_bias_array.format |= AI_FMT_FLAG_CONST;
 800364c:	4ba9      	ldr	r3, [pc, #676]	; (80038f4 <ai_network_init+0x6e4>)
 800364e:	681a      	ldr	r2, [r3, #0]
 8003650:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003654:	601a      	str	r2, [r3, #0]
    conv2d_29_bias_array.data = AI_PTR(weights + 106216);
 8003656:	4aa8      	ldr	r2, [pc, #672]	; (80038f8 <ai_network_init+0x6e8>)
 8003658:	4472      	add	r2, lr
    conv2d_29_bias_array.data_start = AI_PTR(weights + 106216);
 800365a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_31_weights_array.format |= AI_FMT_FLAG_CONST;
 800365e:	4ba7      	ldr	r3, [pc, #668]	; (80038fc <ai_network_init+0x6ec>)
 8003660:	681a      	ldr	r2, [r3, #0]
 8003662:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003666:	601a      	str	r2, [r3, #0]
    conv2d_31_weights_array.data = AI_PTR(weights + 106856);
 8003668:	4aa5      	ldr	r2, [pc, #660]	; (8003900 <ai_network_init+0x6f0>)
 800366a:	4472      	add	r2, lr
    conv2d_31_weights_array.data_start = AI_PTR(weights + 106856);
 800366c:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_31_bias_array.format |= AI_FMT_FLAG_CONST;
 8003670:	4ba4      	ldr	r3, [pc, #656]	; (8003904 <ai_network_init+0x6f4>)
 8003672:	681a      	ldr	r2, [r3, #0]
 8003674:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003678:	601a      	str	r2, [r3, #0]
    conv2d_31_bias_array.data = AI_PTR(weights + 108296);
 800367a:	4aa3      	ldr	r2, [pc, #652]	; (8003908 <ai_network_init+0x6f8>)
 800367c:	4472      	add	r2, lr
    conv2d_31_bias_array.data_start = AI_PTR(weights + 108296);
 800367e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_32_weights_array.format |= AI_FMT_FLAG_CONST;
 8003682:	4ba2      	ldr	r3, [pc, #648]	; (800390c <ai_network_init+0x6fc>)
 8003684:	681a      	ldr	r2, [r3, #0]
 8003686:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800368a:	601a      	str	r2, [r3, #0]
    conv2d_32_weights_array.data = AI_PTR(weights + 108936);
 800368c:	4aa0      	ldr	r2, [pc, #640]	; (8003910 <ai_network_init+0x700>)
 800368e:	4472      	add	r2, lr
    conv2d_32_weights_array.data_start = AI_PTR(weights + 108936);
 8003690:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_32_bias_array.format |= AI_FMT_FLAG_CONST;
 8003694:	4b9f      	ldr	r3, [pc, #636]	; (8003914 <ai_network_init+0x704>)
 8003696:	681a      	ldr	r2, [r3, #0]
 8003698:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800369c:	601a      	str	r2, [r3, #0]
    conv2d_32_bias_array.data = AI_PTR(weights + 114056);
 800369e:	4a9e      	ldr	r2, [pc, #632]	; (8003918 <ai_network_init+0x708>)
 80036a0:	4472      	add	r2, lr
    conv2d_32_bias_array.data_start = AI_PTR(weights + 114056);
 80036a2:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_33_weights_array.format |= AI_FMT_FLAG_CONST;
 80036a6:	4b9d      	ldr	r3, [pc, #628]	; (800391c <ai_network_init+0x70c>)
 80036a8:	681a      	ldr	r2, [r3, #0]
 80036aa:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80036ae:	601a      	str	r2, [r3, #0]
    conv2d_33_weights_array.data = AI_PTR(weights + 114184);
 80036b0:	4a9b      	ldr	r2, [pc, #620]	; (8003920 <ai_network_init+0x710>)
 80036b2:	4472      	add	r2, lr
    conv2d_33_weights_array.data_start = AI_PTR(weights + 114184);
 80036b4:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_33_bias_array.format |= AI_FMT_FLAG_CONST;
 80036b8:	4b9a      	ldr	r3, [pc, #616]	; (8003924 <ai_network_init+0x714>)
 80036ba:	681a      	ldr	r2, [r3, #0]
 80036bc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80036c0:	601a      	str	r2, [r3, #0]
    conv2d_33_bias_array.data = AI_PTR(weights + 115208);
 80036c2:	4a99      	ldr	r2, [pc, #612]	; (8003928 <ai_network_init+0x718>)
 80036c4:	4472      	add	r2, lr
    conv2d_33_bias_array.data_start = AI_PTR(weights + 115208);
 80036c6:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_34_weights_array.format |= AI_FMT_FLAG_CONST;
 80036ca:	4b98      	ldr	r3, [pc, #608]	; (800392c <ai_network_init+0x71c>)
 80036cc:	681a      	ldr	r2, [r3, #0]
 80036ce:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80036d2:	601a      	str	r2, [r3, #0]
    conv2d_34_weights_array.data = AI_PTR(weights + 115336);
 80036d4:	4a96      	ldr	r2, [pc, #600]	; (8003930 <ai_network_init+0x720>)
 80036d6:	4472      	add	r2, lr
    conv2d_34_weights_array.data_start = AI_PTR(weights + 115336);
 80036d8:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_34_bias_array.format |= AI_FMT_FLAG_CONST;
 80036dc:	4b95      	ldr	r3, [pc, #596]	; (8003934 <ai_network_init+0x724>)
 80036de:	681a      	ldr	r2, [r3, #0]
 80036e0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80036e4:	601a      	str	r2, [r3, #0]
    conv2d_34_bias_array.data = AI_PTR(weights + 120456);
 80036e6:	4a94      	ldr	r2, [pc, #592]	; (8003938 <ai_network_init+0x728>)
 80036e8:	4472      	add	r2, lr
    conv2d_34_bias_array.data_start = AI_PTR(weights + 120456);
 80036ea:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_36_weights_array.format |= AI_FMT_FLAG_CONST;
 80036ee:	4b93      	ldr	r3, [pc, #588]	; (800393c <ai_network_init+0x72c>)
 80036f0:	681a      	ldr	r2, [r3, #0]
 80036f2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80036f6:	601a      	str	r2, [r3, #0]
    conv2d_36_weights_array.data = AI_PTR(weights + 121096);
 80036f8:	4a91      	ldr	r2, [pc, #580]	; (8003940 <ai_network_init+0x730>)
 80036fa:	4472      	add	r2, lr
    conv2d_36_weights_array.data_start = AI_PTR(weights + 121096);
 80036fc:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_36_bias_array.format |= AI_FMT_FLAG_CONST;
 8003700:	4b90      	ldr	r3, [pc, #576]	; (8003944 <ai_network_init+0x734>)
 8003702:	681a      	ldr	r2, [r3, #0]
 8003704:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003708:	601a      	str	r2, [r3, #0]
    conv2d_36_bias_array.data = AI_PTR(weights + 122536);
 800370a:	4a8f      	ldr	r2, [pc, #572]	; (8003948 <ai_network_init+0x738>)
 800370c:	4472      	add	r2, lr
    conv2d_36_bias_array.data_start = AI_PTR(weights + 122536);
 800370e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_37_weights_array.format |= AI_FMT_FLAG_CONST;
 8003712:	4b8e      	ldr	r3, [pc, #568]	; (800394c <ai_network_init+0x73c>)
 8003714:	681a      	ldr	r2, [r3, #0]
 8003716:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800371a:	601a      	str	r2, [r3, #0]
    conv2d_37_weights_array.data = AI_PTR(weights + 123176);
 800371c:	4a8c      	ldr	r2, [pc, #560]	; (8003950 <ai_network_init+0x740>)
 800371e:	4472      	add	r2, lr
    conv2d_37_weights_array.data_start = AI_PTR(weights + 123176);
 8003720:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_37_bias_array.format |= AI_FMT_FLAG_CONST;
 8003724:	4b8b      	ldr	r3, [pc, #556]	; (8003954 <ai_network_init+0x744>)
 8003726:	681a      	ldr	r2, [r3, #0]
 8003728:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800372c:	601a      	str	r2, [r3, #0]
    conv2d_37_bias_array.data = AI_PTR(weights + 129576);
 800372e:	4a8a      	ldr	r2, [pc, #552]	; (8003958 <ai_network_init+0x748>)
 8003730:	4472      	add	r2, lr
    conv2d_37_bias_array.data_start = AI_PTR(weights + 129576);
 8003732:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_38_weights_array.format |= AI_FMT_FLAG_CONST;
 8003736:	4b89      	ldr	r3, [pc, #548]	; (800395c <ai_network_init+0x74c>)
 8003738:	681a      	ldr	r2, [r3, #0]
 800373a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800373e:	601a      	str	r2, [r3, #0]
    conv2d_38_weights_array.data = AI_PTR(weights + 129736);
 8003740:	4a87      	ldr	r2, [pc, #540]	; (8003960 <ai_network_init+0x750>)
 8003742:	4472      	add	r2, lr
    conv2d_38_weights_array.data_start = AI_PTR(weights + 129736);
 8003744:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_38_bias_array.format |= AI_FMT_FLAG_CONST;
 8003748:	4b86      	ldr	r3, [pc, #536]	; (8003964 <ai_network_init+0x754>)
 800374a:	681a      	ldr	r2, [r3, #0]
 800374c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003750:	601a      	str	r2, [r3, #0]
    conv2d_38_bias_array.data = AI_PTR(weights + 131016);
 8003752:	4a85      	ldr	r2, [pc, #532]	; (8003968 <ai_network_init+0x758>)
 8003754:	4472      	add	r2, lr
    conv2d_38_bias_array.data_start = AI_PTR(weights + 131016);
 8003756:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_39_weights_array.format |= AI_FMT_FLAG_CONST;
 800375a:	4b84      	ldr	r3, [pc, #528]	; (800396c <ai_network_init+0x75c>)
 800375c:	681a      	ldr	r2, [r3, #0]
 800375e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003762:	601a      	str	r2, [r3, #0]
    conv2d_39_weights_array.data = AI_PTR(weights + 131144);
 8003764:	4a82      	ldr	r2, [pc, #520]	; (8003970 <ai_network_init+0x760>)
 8003766:	4472      	add	r2, lr
    conv2d_39_weights_array.data_start = AI_PTR(weights + 131144);
 8003768:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_39_bias_array.format |= AI_FMT_FLAG_CONST;
 800376c:	4b81      	ldr	r3, [pc, #516]	; (8003974 <ai_network_init+0x764>)
 800376e:	681a      	ldr	r2, [r3, #0]
 8003770:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003774:	601a      	str	r2, [r3, #0]
    conv2d_39_bias_array.data = AI_PTR(weights + 137800);
 8003776:	4a80      	ldr	r2, [pc, #512]	; (8003978 <ai_network_init+0x768>)
 8003778:	4472      	add	r2, lr
    conv2d_39_bias_array.data_start = AI_PTR(weights + 137800);
 800377a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_41_weights_array.format |= AI_FMT_FLAG_CONST;
 800377e:	4b7f      	ldr	r3, [pc, #508]	; (800397c <ai_network_init+0x76c>)
 8003780:	681a      	ldr	r2, [r3, #0]
 8003782:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003786:	601a      	str	r2, [r3, #0]
    conv2d_41_weights_array.data = AI_PTR(weights + 138632);
 8003788:	4a7d      	ldr	r2, [pc, #500]	; (8003980 <ai_network_init+0x770>)
 800378a:	4472      	add	r2, lr
    conv2d_41_weights_array.data_start = AI_PTR(weights + 138632);
 800378c:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_41_bias_array.format |= AI_FMT_FLAG_CONST;
 8003790:	4b7c      	ldr	r3, [pc, #496]	; (8003984 <ai_network_init+0x774>)
 8003792:	681a      	ldr	r2, [r3, #0]
 8003794:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003798:	601a      	str	r2, [r3, #0]
    conv2d_41_bias_array.data = AI_PTR(weights + 140504);
 800379a:	4a7b      	ldr	r2, [pc, #492]	; (8003988 <ai_network_init+0x778>)
 800379c:	4472      	add	r2, lr
    conv2d_41_bias_array.data_start = AI_PTR(weights + 140504);
 800379e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_42_weights_array.format |= AI_FMT_FLAG_CONST;
 80037a2:	4b7a      	ldr	r3, [pc, #488]	; (800398c <ai_network_init+0x77c>)
 80037a4:	681a      	ldr	r2, [r3, #0]
 80037a6:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80037aa:	601a      	str	r2, [r3, #0]
    conv2d_42_weights_array.data = AI_PTR(weights + 141336);
 80037ac:	4a78      	ldr	r2, [pc, #480]	; (8003990 <ai_network_init+0x780>)
 80037ae:	4472      	add	r2, lr
    conv2d_42_weights_array.data_start = AI_PTR(weights + 141336);
 80037b0:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_42_bias_array.format |= AI_FMT_FLAG_CONST;
 80037b4:	4b77      	ldr	r3, [pc, #476]	; (8003994 <ai_network_init+0x784>)
 80037b6:	681a      	ldr	r2, [r3, #0]
 80037b8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80037bc:	601a      	str	r2, [r3, #0]
    conv2d_42_bias_array.data = AI_PTR(weights + 149656);
 80037be:	4a76      	ldr	r2, [pc, #472]	; (8003998 <ai_network_init+0x788>)
 80037c0:	4472      	add	r2, lr
    conv2d_42_bias_array.data_start = AI_PTR(weights + 149656);
 80037c2:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_43_weights_array.format |= AI_FMT_FLAG_CONST;
 80037c6:	4b75      	ldr	r3, [pc, #468]	; (800399c <ai_network_init+0x78c>)
 80037c8:	681a      	ldr	r2, [r3, #0]
 80037ca:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80037ce:	601a      	str	r2, [r3, #0]
    conv2d_43_weights_array.data = AI_PTR(weights + 149816);
 80037d0:	4a73      	ldr	r2, [pc, #460]	; (80039a0 <ai_network_init+0x790>)
 80037d2:	4472      	add	r2, lr
    conv2d_43_weights_array.data_start = AI_PTR(weights + 149816);
 80037d4:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_43_bias_array.format |= AI_FMT_FLAG_CONST;
 80037d8:	4b72      	ldr	r3, [pc, #456]	; (80039a4 <ai_network_init+0x794>)
 80037da:	681a      	ldr	r2, [r3, #0]
 80037dc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80037e0:	601a      	str	r2, [r3, #0]
    conv2d_43_bias_array.data = AI_PTR(weights + 151416);
 80037e2:	4a71      	ldr	r2, [pc, #452]	; (80039a8 <ai_network_init+0x798>)
 80037e4:	4472      	add	r2, lr
    conv2d_43_bias_array.data_start = AI_PTR(weights + 151416);
 80037e6:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_44_weights_array.format |= AI_FMT_FLAG_CONST;
 80037ea:	4b70      	ldr	r3, [pc, #448]	; (80039ac <ai_network_init+0x79c>)
 80037ec:	681a      	ldr	r2, [r3, #0]
 80037ee:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80037f2:	601a      	str	r2, [r3, #0]
    conv2d_44_weights_array.data = AI_PTR(weights + 151576);
 80037f4:	4a6e      	ldr	r2, [pc, #440]	; (80039b0 <ai_network_init+0x7a0>)
 80037f6:	4472      	add	r2, lr
    conv2d_44_weights_array.data_start = AI_PTR(weights + 151576);
 80037f8:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_44_bias_array.format |= AI_FMT_FLAG_CONST;
 80037fc:	4b6d      	ldr	r3, [pc, #436]	; (80039b4 <ai_network_init+0x7a4>)
 80037fe:	681a      	ldr	r2, [r3, #0]
 8003800:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003804:	601a      	str	r2, [r3, #0]
    conv2d_44_bias_array.data = AI_PTR(weights + 159896);
 8003806:	4a6c      	ldr	r2, [pc, #432]	; (80039b8 <ai_network_init+0x7a8>)
 8003808:	4472      	add	r2, lr
    conv2d_44_bias_array.data_start = AI_PTR(weights + 159896);
 800380a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_46_weights_array.format |= AI_FMT_FLAG_CONST;
 800380e:	4b6b      	ldr	r3, [pc, #428]	; (80039bc <ai_network_init+0x7ac>)
 8003810:	681a      	ldr	r2, [r3, #0]
 8003812:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003816:	601a      	str	r2, [r3, #0]
    conv2d_46_weights_array.data = AI_PTR(weights + 160728);
 8003818:	4a69      	ldr	r2, [pc, #420]	; (80039c0 <ai_network_init+0x7b0>)
 800381a:	4472      	add	r2, lr
    conv2d_46_weights_array.data_start = AI_PTR(weights + 160728);
 800381c:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_46_bias_array.format |= AI_FMT_FLAG_CONST;
 8003820:	4b68      	ldr	r3, [pc, #416]	; (80039c4 <ai_network_init+0x7b4>)
 8003822:	681a      	ldr	r2, [r3, #0]
 8003824:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003828:	601a      	str	r2, [r3, #0]
    conv2d_46_bias_array.data = AI_PTR(weights + 162600);
 800382a:	4a67      	ldr	r2, [pc, #412]	; (80039c8 <ai_network_init+0x7b8>)
 800382c:	4472      	add	r2, lr
    conv2d_46_bias_array.data_start = AI_PTR(weights + 162600);
 800382e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_47_weights_array.format |= AI_FMT_FLAG_CONST;
 8003832:	4b66      	ldr	r3, [pc, #408]	; (80039cc <ai_network_init+0x7bc>)
 8003834:	681a      	ldr	r2, [r3, #0]
 8003836:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800383a:	601a      	str	r2, [r3, #0]
    conv2d_47_weights_array.data = AI_PTR(weights + 163432);
 800383c:	4a64      	ldr	r2, [pc, #400]	; (80039d0 <ai_network_init+0x7c0>)
 800383e:	4472      	add	r2, lr
    conv2d_47_weights_array.data_start = AI_PTR(weights + 163432);
 8003840:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_47_bias_array.format |= AI_FMT_FLAG_CONST;
 8003844:	4b63      	ldr	r3, [pc, #396]	; (80039d4 <ai_network_init+0x7c4>)
 8003846:	681a      	ldr	r2, [r3, #0]
 8003848:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800384c:	601a      	str	r2, [r3, #0]
    conv2d_47_bias_array.data = AI_PTR(weights + 173416);
 800384e:	4a62      	ldr	r2, [pc, #392]	; (80039d8 <ai_network_init+0x7c8>)
 8003850:	4472      	add	r2, lr
    conv2d_47_bias_array.data_start = AI_PTR(weights + 173416);
 8003852:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_48_weights_array.format |= AI_FMT_FLAG_CONST;
 8003856:	4b61      	ldr	r3, [pc, #388]	; (80039dc <ai_network_init+0x7cc>)
 8003858:	681a      	ldr	r2, [r3, #0]
 800385a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800385e:	601a      	str	r2, [r3, #0]
    conv2d_48_weights_array.data = AI_PTR(weights + 173608);
 8003860:	4a5f      	ldr	r2, [pc, #380]	; (80039e0 <ai_network_init+0x7d0>)
 8003862:	4472      	add	r2, lr
    conv2d_48_weights_array.data_start = AI_PTR(weights + 173608);
 8003864:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_48_bias_array.format |= AI_FMT_FLAG_CONST;
 8003868:	4b5e      	ldr	r3, [pc, #376]	; (80039e4 <ai_network_init+0x7d4>)
 800386a:	681a      	ldr	r2, [r3, #0]
 800386c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003870:	601a      	str	r2, [r3, #0]
    conv2d_48_bias_array.data = AI_PTR(weights + 175912);
 8003872:	4a5d      	ldr	r2, [pc, #372]	; (80039e8 <ai_network_init+0x7d8>)
 8003874:	4472      	add	r2, lr
    conv2d_48_bias_array.data_start = AI_PTR(weights + 175912);
 8003876:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_49_weights_array.format |= AI_FMT_FLAG_CONST;
 800387a:	4b5c      	ldr	r3, [pc, #368]	; (80039ec <ai_network_init+0x7dc>)
 800387c:	681a      	ldr	r2, [r3, #0]
 800387e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003882:	601a      	str	r2, [r3, #0]
    conv2d_49_weights_array.data = AI_PTR(weights + 176104);
 8003884:	4a5a      	ldr	r2, [pc, #360]	; (80039f0 <ai_network_init+0x7e0>)
 8003886:	4472      	add	r2, lr
    conv2d_49_weights_array.data_start = AI_PTR(weights + 176104);
 8003888:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_49_bias_array.format |= AI_FMT_FLAG_CONST;
 800388c:	4b59      	ldr	r3, [pc, #356]	; (80039f4 <ai_network_init+0x7e4>)
 800388e:	681a      	ldr	r2, [r3, #0]
 8003890:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003894:	601a      	str	r2, [r3, #0]
    conv2d_49_bias_array.data = AI_PTR(weights + 186088);
 8003896:	4a58      	ldr	r2, [pc, #352]	; (80039f8 <ai_network_init+0x7e8>)
 8003898:	4472      	add	r2, lr
    conv2d_49_bias_array.data_start = AI_PTR(weights + 186088);
 800389a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_51_weights_array.format |= AI_FMT_FLAG_CONST;
 800389e:	4b57      	ldr	r3, [pc, #348]	; (80039fc <ai_network_init+0x7ec>)
 80038a0:	681a      	ldr	r2, [r3, #0]
 80038a2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80038a6:	601a      	str	r2, [r3, #0]
    conv2d_51_weights_array.data = AI_PTR(weights + 186920);
 80038a8:	4a55      	ldr	r2, [pc, #340]	; (8003a00 <ai_network_init+0x7f0>)
 80038aa:	4472      	add	r2, lr
    conv2d_51_weights_array.data_start = AI_PTR(weights + 186920);
 80038ac:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_51_bias_array.format |= AI_FMT_FLAG_CONST;
 80038b0:	4b54      	ldr	r3, [pc, #336]	; (8003a04 <ai_network_init+0x7f4>)
 80038b2:	681a      	ldr	r2, [r3, #0]
 80038b4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80038b8:	601a      	str	r2, [r3, #0]
    conv2d_51_bias_array.data = AI_PTR(weights + 188792);
 80038ba:	4a53      	ldr	r2, [pc, #332]	; (8003a08 <ai_network_init+0x7f8>)
 80038bc:	4472      	add	r2, lr
    conv2d_51_bias_array.data_start = AI_PTR(weights + 188792);
 80038be:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_52_weights_array.format |= AI_FMT_FLAG_CONST;
 80038c2:	4b52      	ldr	r3, [pc, #328]	; (8003a0c <ai_network_init+0x7fc>)
 80038c4:	681a      	ldr	r2, [r3, #0]
 80038c6:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80038ca:	601a      	str	r2, [r3, #0]
    conv2d_52_weights_array.data = AI_PTR(weights + 189624);
 80038cc:	4a50      	ldr	r2, [pc, #320]	; (8003a10 <ai_network_init+0x800>)
 80038ce:	4472      	add	r2, lr
    conv2d_52_weights_array.data_start = AI_PTR(weights + 189624);
 80038d0:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_52_bias_array.format |= AI_FMT_FLAG_CONST;
 80038d4:	4b4f      	ldr	r3, [pc, #316]	; (8003a14 <ai_network_init+0x804>)
 80038d6:	681a      	ldr	r2, [r3, #0]
 80038d8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80038dc:	601a      	str	r2, [r3, #0]
    conv2d_52_bias_array.data = AI_PTR(weights + 214584);
 80038de:	4a4e      	ldr	r2, [pc, #312]	; (8003a18 <ai_network_init+0x808>)
 80038e0:	4472      	add	r2, lr
 80038e2:	e09b      	b.n	8003a1c <ai_network_init+0x80c>
 80038e4:	20002ffc 	.word	0x20002ffc
 80038e8:	00018a68 	.word	0x00018a68
 80038ec:	200031b0 	.word	0x200031b0
 80038f0:	00018ae8 	.word	0x00018ae8
 80038f4:	200030ec 	.word	0x200030ec
 80038f8:	00019ee8 	.word	0x00019ee8
 80038fc:	200032a0 	.word	0x200032a0
 8003900:	0001a168 	.word	0x0001a168
 8003904:	200031dc 	.word	0x200031dc
 8003908:	0001a708 	.word	0x0001a708
 800390c:	20003390 	.word	0x20003390
 8003910:	0001a988 	.word	0x0001a988
 8003914:	200032cc 	.word	0x200032cc
 8003918:	0001bd88 	.word	0x0001bd88
 800391c:	20003480 	.word	0x20003480
 8003920:	0001be08 	.word	0x0001be08
 8003924:	200033bc 	.word	0x200033bc
 8003928:	0001c208 	.word	0x0001c208
 800392c:	20003570 	.word	0x20003570
 8003930:	0001c288 	.word	0x0001c288
 8003934:	200034ac 	.word	0x200034ac
 8003938:	0001d688 	.word	0x0001d688
 800393c:	20003660 	.word	0x20003660
 8003940:	0001d908 	.word	0x0001d908
 8003944:	2000359c 	.word	0x2000359c
 8003948:	0001dea8 	.word	0x0001dea8
 800394c:	20003750 	.word	0x20003750
 8003950:	0001e128 	.word	0x0001e128
 8003954:	2000368c 	.word	0x2000368c
 8003958:	0001fa28 	.word	0x0001fa28
 800395c:	20003840 	.word	0x20003840
 8003960:	0001fac8 	.word	0x0001fac8
 8003964:	2000377c 	.word	0x2000377c
 8003968:	0001ffc8 	.word	0x0001ffc8
 800396c:	20003930 	.word	0x20003930
 8003970:	00020048 	.word	0x00020048
 8003974:	2000386c 	.word	0x2000386c
 8003978:	00021a48 	.word	0x00021a48
 800397c:	20003b10 	.word	0x20003b10
 8003980:	00021d88 	.word	0x00021d88
 8003984:	20003a4c 	.word	0x20003a4c
 8003988:	000224d8 	.word	0x000224d8
 800398c:	20003c00 	.word	0x20003c00
 8003990:	00022818 	.word	0x00022818
 8003994:	20003b3c 	.word	0x20003b3c
 8003998:	00024898 	.word	0x00024898
 800399c:	20003cf0 	.word	0x20003cf0
 80039a0:	00024938 	.word	0x00024938
 80039a4:	20003c2c 	.word	0x20003c2c
 80039a8:	00024f78 	.word	0x00024f78
 80039ac:	20003de0 	.word	0x20003de0
 80039b0:	00025018 	.word	0x00025018
 80039b4:	20003d1c 	.word	0x20003d1c
 80039b8:	00027098 	.word	0x00027098
 80039bc:	20003ed0 	.word	0x20003ed0
 80039c0:	000273d8 	.word	0x000273d8
 80039c4:	20003e0c 	.word	0x20003e0c
 80039c8:	00027b28 	.word	0x00027b28
 80039cc:	20003fc0 	.word	0x20003fc0
 80039d0:	00027e68 	.word	0x00027e68
 80039d4:	20003efc 	.word	0x20003efc
 80039d8:	0002a568 	.word	0x0002a568
 80039dc:	200040b0 	.word	0x200040b0
 80039e0:	0002a628 	.word	0x0002a628
 80039e4:	20003fec 	.word	0x20003fec
 80039e8:	0002af28 	.word	0x0002af28
 80039ec:	200041a0 	.word	0x200041a0
 80039f0:	0002afe8 	.word	0x0002afe8
 80039f4:	200040dc 	.word	0x200040dc
 80039f8:	0002d6e8 	.word	0x0002d6e8
 80039fc:	20004380 	.word	0x20004380
 8003a00:	0002da28 	.word	0x0002da28
 8003a04:	200042bc 	.word	0x200042bc
 8003a08:	0002e178 	.word	0x0002e178
 8003a0c:	20004470 	.word	0x20004470
 8003a10:	0002e4b8 	.word	0x0002e4b8
 8003a14:	200043ac 	.word	0x200043ac
 8003a18:	00034638 	.word	0x00034638
    conv2d_52_bias_array.data_start = AI_PTR(weights + 214584);
 8003a1c:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_53_weights_array.format |= AI_FMT_FLAG_CONST;
 8003a20:	4bbf      	ldr	r3, [pc, #764]	; (8003d20 <ai_network_init+0xb10>)
 8003a22:	681a      	ldr	r2, [r3, #0]
 8003a24:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003a28:	601a      	str	r2, [r3, #0]
    conv2d_53_weights_array.data = AI_PTR(weights + 215064);
 8003a2a:	4abe      	ldr	r2, [pc, #760]	; (8003d24 <ai_network_init+0xb14>)
 8003a2c:	4472      	add	r2, lr
    conv2d_53_weights_array.data_start = AI_PTR(weights + 215064);
 8003a2e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_53_bias_array.format |= AI_FMT_FLAG_CONST;
 8003a32:	4bbd      	ldr	r3, [pc, #756]	; (8003d28 <ai_network_init+0xb18>)
 8003a34:	681a      	ldr	r2, [r3, #0]
 8003a36:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003a3a:	601a      	str	r2, [r3, #0]
    conv2d_53_bias_array.data = AI_PTR(weights + 226584);
 8003a3c:	4abb      	ldr	r2, [pc, #748]	; (8003d2c <ai_network_init+0xb1c>)
 8003a3e:	4472      	add	r2, lr
    conv2d_53_bias_array.data_start = AI_PTR(weights + 226584);
 8003a40:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_54_weights_array.format |= AI_FMT_FLAG_CONST;
 8003a44:	4bba      	ldr	r3, [pc, #744]	; (8003d30 <ai_network_init+0xb20>)
 8003a46:	681a      	ldr	r2, [r3, #0]
  ai_ptr activations = AI_PTR(AI_PTR_ALIGN(activation_buffer->data, 4));
 8003a48:	9900      	ldr	r1, [sp, #0]
    conv2d_54_weights_array.format |= AI_FMT_FLAG_CONST;
 8003a4a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
  ai_ptr activations = AI_PTR(AI_PTR_ALIGN(activation_buffer->data, 4));
 8003a4e:	6a89      	ldr	r1, [r1, #40]	; 0x28
    conv2d_54_weights_array.format |= AI_FMT_FLAG_CONST;
 8003a50:	601a      	str	r2, [r3, #0]
    conv2d_54_weights_array.data = AI_PTR(weights + 226968);
 8003a52:	4ab8      	ldr	r2, [pc, #736]	; (8003d34 <ai_network_init+0xb24>)
  ai_ptr activations = AI_PTR(AI_PTR_ALIGN(activation_buffer->data, 4));
 8003a54:	3103      	adds	r1, #3
    conv2d_54_weights_array.data = AI_PTR(weights + 226968);
 8003a56:	4472      	add	r2, lr
  ai_ptr activations = AI_PTR(AI_PTR_ALIGN(activation_buffer->data, 4));
 8003a58:	f021 0103 	bic.w	r1, r1, #3
    conv2d_54_weights_array.data_start = AI_PTR(weights + 226968);
 8003a5c:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_54_bias_array.format |= AI_FMT_FLAG_CONST;
 8003a60:	4bb5      	ldr	r3, [pc, #724]	; (8003d38 <ai_network_init+0xb28>)
    conv2d_41_output_array.data = AI_PTR(activations + 14228);
 8003a62:	198e      	adds	r6, r1, r6
    conv2d_1_output_array.data = AI_PTR(activations + 26780);
 8003a64:	440f      	add	r7, r1
    conv2d_9_output_array.data = AI_PTR(activations + 12064);
 8003a66:	440d      	add	r5, r1
    conv2d_54_bias_array.format |= AI_FMT_FLAG_CONST;
 8003a68:	681a      	ldr	r2, [r3, #0]
    conv2d_7_output_array.data = AI_PTR(activations + 15600);
 8003a6a:	440c      	add	r4, r1
    conv2d_41_output_array.data = AI_PTR(activations + 14228);
 8003a6c:	9606      	str	r6, [sp, #24]
    conv2d_4_scratch0_array.data = AI_PTR(activations + 60144);
 8003a6e:	f64e 26f0 	movw	r6, #60144	; 0xeaf0
    conv2d_54_bias_array.format |= AI_FMT_FLAG_CONST;
 8003a72:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
    conv2d_23_output_array.data = AI_PTR(activations + 448);
 8003a76:	f501 7be0 	add.w	fp, r1, #448	; 0x1c0
    conv2d_4_scratch0_array.data = AI_PTR(activations + 60144);
 8003a7a:	198e      	adds	r6, r1, r6
    conv2d_24_output_array.data = AI_PTR(activations + 2688);
 8003a7c:	f501 6a28 	add.w	sl, r1, #2688	; 0xa80
    conv2d_54_bias_array.format |= AI_FMT_FLAG_CONST;
 8003a80:	601a      	str	r2, [r3, #0]
    conv2d_27_scratch0_array.data = AI_PTR(activations + 2560);
 8003a82:	f501 6820 	add.w	r8, r1, #2560	; 0xa00
    conv2d_54_bias_array.data = AI_PTR(weights + 296088);
 8003a86:	4aad      	ldr	r2, [pc, #692]	; (8003d3c <ai_network_init+0xb2c>)
    conv2d_26_scratch0_array.data = AI_PTR(activations + 5248);
 8003a88:	f501 59a4 	add.w	r9, r1, #5248	; 0x1480
    conv2d_4_scratch0_array.data = AI_PTR(activations + 60144);
 8003a8c:	9607      	str	r6, [sp, #28]
    conv2d_6_scratch0_array.data = AI_PTR(activations + 58692);
 8003a8e:	4666      	mov	r6, ip
    conv2d_54_bias_array.data = AI_PTR(weights + 296088);
 8003a90:	4472      	add	r2, lr
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003a92:	f242 0c90 	movw	ip, #8336	; 0x2090
    conv2d_6_scratch0_array.data = AI_PTR(activations + 58692);
 8003a96:	198e      	adds	r6, r1, r6
    conv2d_54_bias_array.data_start = AI_PTR(weights + 296088);
 8003a98:	e9c3 2202 	strd	r2, r2, [r3, #8]
    dense_57_weights_array.format |= AI_FMT_FLAG_CONST;
 8003a9c:	4ba8      	ldr	r3, [pc, #672]	; (8003d40 <ai_network_init+0xb30>)
    conv2d_6_scratch0_array.data = AI_PTR(activations + 58692);
 8003a9e:	9608      	str	r6, [sp, #32]
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003aa0:	4666      	mov	r6, ip
    dense_57_weights_array.format |= AI_FMT_FLAG_CONST;
 8003aa2:	681a      	ldr	r2, [r3, #0]
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003aa4:	f641 2c70 	movw	ip, #6768	; 0x1a70
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003aa8:	198e      	adds	r6, r1, r6
    dense_57_weights_array.format |= AI_FMT_FLAG_CONST;
 8003aaa:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003aae:	9609      	str	r6, [sp, #36]	; 0x24
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003ab0:	4666      	mov	r6, ip
    dense_57_weights_array.format |= AI_FMT_FLAG_CONST;
 8003ab2:	601a      	str	r2, [r3, #0]
    conv2d_24_scratch0_array.data = AI_PTR(activations + 960);
 8003ab4:	f501 7c70 	add.w	ip, r1, #960	; 0x3c0
    dense_57_weights_array.data = AI_PTR(weights + 298968);
 8003ab8:	4aa2      	ldr	r2, [pc, #648]	; (8003d44 <ai_network_init+0xb34>)
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003aba:	198e      	adds	r6, r1, r6
    dense_57_weights_array.data = AI_PTR(weights + 298968);
 8003abc:	4472      	add	r2, lr
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003abe:	960a      	str	r6, [sp, #40]	; 0x28
    conv2d_27_output_array.data = AI_PTR(activations + 3520);
 8003ac0:	f501 665c 	add.w	r6, r1, #3520	; 0xdc0
    dense_57_weights_array.data_start = AI_PTR(weights + 298968);
 8003ac4:	e9c3 2202 	strd	r2, r2, [r3, #8]
    dense_57_bias_array.format |= AI_FMT_FLAG_CONST;
 8003ac8:	4b9f      	ldr	r3, [pc, #636]	; (8003d48 <ai_network_init+0xb38>)
    conv2d_27_output_array.data = AI_PTR(activations + 3520);
 8003aca:	9605      	str	r6, [sp, #20]
    conv2d_47_scratch0_array.data = AI_PTR(activations + 832);
 8003acc:	f501 7650 	add.w	r6, r1, #832	; 0x340
    dense_57_bias_array.format |= AI_FMT_FLAG_CONST;
 8003ad0:	681a      	ldr	r2, [r3, #0]
    conv2d_47_scratch0_array.data = AI_PTR(activations + 832);
 8003ad2:	960b      	str	r6, [sp, #44]	; 0x2c
    conv2d_4_output_array.data = AI_PTR(activations + 952);
 8003ad4:	f501 766e 	add.w	r6, r1, #952	; 0x3b8
    dense_57_bias_array.format |= AI_FMT_FLAG_CONST;
 8003ad8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
    conv2d_4_output_array.data = AI_PTR(activations + 952);
 8003adc:	9601      	str	r6, [sp, #4]
    conv2d_12_output_array.data = AI_PTR(activations + 2964);
 8003ade:	f601 3694 	addw	r6, r1, #2964	; 0xb94
    dense_57_bias_array.format |= AI_FMT_FLAG_CONST;
 8003ae2:	601a      	str	r2, [r3, #0]
    dense_57_bias_array.data = AI_PTR(weights + 370968);
 8003ae4:	4a99      	ldr	r2, [pc, #612]	; (8003d4c <ai_network_init+0xb3c>)
    conv2d_12_output_array.data = AI_PTR(activations + 2964);
 8003ae6:	9603      	str	r6, [sp, #12]
    conv2d_16_output_array.data = AI_PTR(activations + 1680);
 8003ae8:	f501 66d2 	add.w	r6, r1, #1680	; 0x690
    dense_57_bias_array.data = AI_PTR(weights + 370968);
 8003aec:	4472      	add	r2, lr
    conv2d_1_scratch0_array.data = AI_PTR(activations + 43164);
 8003aee:	f64a 0e9c 	movw	lr, #43164	; 0xa89c
    conv2d_16_output_array.data = AI_PTR(activations + 1680);
 8003af2:	9604      	str	r6, [sp, #16]
    conv2d_1_output_array.data = AI_PTR(activations + 26780);
 8003af4:	4e96      	ldr	r6, [pc, #600]	; (8003d50 <ai_network_init+0xb40>)
    conv2d_1_scratch0_array.data = AI_PTR(activations + 43164);
 8003af6:	448e      	add	lr, r1
    input_1_output_array.data = AI_PTR(NULL);
 8003af8:	ed9f 7b87 	vldr	d7, [pc, #540]	; 8003d18 <ai_network_init+0xb08>
    dense_57_bias_array.data_start = AI_PTR(weights + 370968);
 8003afc:	e9c3 2202 	strd	r2, r2, [r3, #8]
    input_1_output_array.data = AI_PTR(NULL);
 8003b00:	4b94      	ldr	r3, [pc, #592]	; (8003d54 <ai_network_init+0xb44>)
    conv2d_13_output_array.data = AI_PTR(activations + 8084);
 8003b02:	f641 7294 	movw	r2, #8084	; 0x1f94
    input_1_output_array.data = AI_PTR(NULL);
 8003b06:	ed83 7b02 	vstr	d7, [r3, #8]
    conv2d_3_output_array.data = AI_PTR(activations + 43760);
 8003b0a:	f64a 23f0 	movw	r3, #43760	; 0xaaf0
    conv2d_13_output_array.data = AI_PTR(activations + 8084);
 8003b0e:	440a      	add	r2, r1
    conv2d_3_output_array.data = AI_PTR(activations + 43760);
 8003b10:	440b      	add	r3, r1
 8003b12:	9300      	str	r3, [sp, #0]
    conv2d_10_output_array.data = AI_PTR(activations + 38688);
 8003b14:	f249 7320 	movw	r3, #38688	; 0x9720
 8003b18:	18cb      	adds	r3, r1, r3
 8003b1a:	9302      	str	r3, [sp, #8]
    conv2d_15_output_array.data = AI_PTR(activations + 18324);
 8003b1c:	f244 7394 	movw	r3, #18324	; 0x4794
    conv2d_1_output_array.data_start = AI_PTR(activations + 26780);
 8003b20:	e9c6 7702 	strd	r7, r7, [r6, #8]
    conv2d_3_output_array.data = AI_PTR(activations + 43760);
 8003b24:	9e00      	ldr	r6, [sp, #0]
    conv2d_15_output_array.data = AI_PTR(activations + 18324);
 8003b26:	440b      	add	r3, r1
    conv2d_3_output_array.data = AI_PTR(activations + 43760);
 8003b28:	4f8b      	ldr	r7, [pc, #556]	; (8003d58 <ai_network_init+0xb48>)
    conv2d_3_output_array.data_start = AI_PTR(activations + 43760);
 8003b2a:	e9c7 6602 	strd	r6, r6, [r7, #8]
    conv2d_4_output_array.data = AI_PTR(activations + 952);
 8003b2e:	9f01      	ldr	r7, [sp, #4]
 8003b30:	4e8a      	ldr	r6, [pc, #552]	; (8003d5c <ai_network_init+0xb4c>)
    conv2d_4_output_array.data_start = AI_PTR(activations + 952);
 8003b32:	e9c6 7702 	strd	r7, r7, [r6, #8]
    conv2d_9_output_array.data = AI_PTR(activations + 12064);
 8003b36:	4e8a      	ldr	r6, [pc, #552]	; (8003d60 <ai_network_init+0xb50>)
    conv2d_12_output_array.data = AI_PTR(activations + 2964);
 8003b38:	4f8a      	ldr	r7, [pc, #552]	; (8003d64 <ai_network_init+0xb54>)
    conv2d_9_output_array.data_start = AI_PTR(activations + 12064);
 8003b3a:	e9c6 5502 	strd	r5, r5, [r6, #8]
    conv2d_6_output_array.data = AI_PTR(activations + 0);
 8003b3e:	4d8a      	ldr	r5, [pc, #552]	; (8003d68 <ai_network_init+0xb58>)
    conv2d_26_scratch0_array.data = AI_PTR(activations + 5248);
 8003b40:	4e8a      	ldr	r6, [pc, #552]	; (8003d6c <ai_network_init+0xb5c>)
    conv2d_6_output_array.data_start = AI_PTR(activations + 0);
 8003b42:	e9c5 1102 	strd	r1, r1, [r5, #8]
    conv2d_7_output_array.data = AI_PTR(activations + 15600);
 8003b46:	4d8a      	ldr	r5, [pc, #552]	; (8003d70 <ai_network_init+0xb60>)
    conv2d_7_output_array.data_start = AI_PTR(activations + 15600);
 8003b48:	e9c5 4402 	strd	r4, r4, [r5, #8]
    conv2d_10_output_array.data = AI_PTR(activations + 38688);
 8003b4c:	9d02      	ldr	r5, [sp, #8]
 8003b4e:	4c89      	ldr	r4, [pc, #548]	; (8003d74 <ai_network_init+0xb64>)
    conv2d_10_output_array.data_start = AI_PTR(activations + 38688);
 8003b50:	e9c4 5502 	strd	r5, r5, [r4, #8]
    conv2d_12_output_array.data = AI_PTR(activations + 2964);
 8003b54:	9d03      	ldr	r5, [sp, #12]
    conv2d_12_output_array.data_start = AI_PTR(activations + 2964);
 8003b56:	e9c7 5502 	strd	r5, r5, [r7, #8]
    conv2d_13_output_array.data = AI_PTR(activations + 8084);
 8003b5a:	4d87      	ldr	r5, [pc, #540]	; (8003d78 <ai_network_init+0xb68>)
    conv2d_39_scratch0_array.data = AI_PTR(activations + 992);
 8003b5c:	f501 7778 	add.w	r7, r1, #992	; 0x3e0
    conv2d_13_output_array.data_start = AI_PTR(activations + 8084);
 8003b60:	e9c5 2202 	strd	r2, r2, [r5, #8]
    conv2d_15_output_array.data = AI_PTR(activations + 18324);
 8003b64:	4d85      	ldr	r5, [pc, #532]	; (8003d7c <ai_network_init+0xb6c>)
    conv2d_19_output_array.data = AI_PTR(activations + 4160);
 8003b66:	f501 5282 	add.w	r2, r1, #4160	; 0x1040
    conv2d_15_output_array.data_start = AI_PTR(activations + 18324);
 8003b6a:	e9c5 3302 	strd	r3, r3, [r5, #8]
    conv2d_16_output_array.data = AI_PTR(activations + 1680);
 8003b6e:	9b04      	ldr	r3, [sp, #16]
 8003b70:	4d83      	ldr	r5, [pc, #524]	; (8003d80 <ai_network_init+0xb70>)
    conv2d_16_output_array.data_start = AI_PTR(activations + 1680);
 8003b72:	e9c5 3302 	strd	r3, r3, [r5, #8]
    conv2d_18_output_array.data = AI_PTR(activations + 0);
 8003b76:	4b83      	ldr	r3, [pc, #524]	; (8003d84 <ai_network_init+0xb74>)
    conv2d_22_scratch0_array.data = AI_PTR(activations + 3328);
 8003b78:	f501 6550 	add.w	r5, r1, #3328	; 0xd00
    conv2d_18_output_array.data_start = AI_PTR(activations + 0);
 8003b7c:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_19_output_array.data = AI_PTR(activations + 4160);
 8003b80:	4b81      	ldr	r3, [pc, #516]	; (8003d88 <ai_network_init+0xb78>)
    conv2d_19_output_array.data_start = AI_PTR(activations + 4160);
 8003b82:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_21_output_array.data = AI_PTR(activations + 0);
 8003b86:	4b81      	ldr	r3, [pc, #516]	; (8003d8c <ai_network_init+0xb7c>)
    conv2d_22_output_array.data = AI_PTR(activations + 4480);
 8003b88:	f501 528c 	add.w	r2, r1, #4480	; 0x1180
    conv2d_21_output_array.data_start = AI_PTR(activations + 0);
 8003b8c:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_22_output_array.data = AI_PTR(activations + 4480);
 8003b90:	4b7f      	ldr	r3, [pc, #508]	; (8003d90 <ai_network_init+0xb80>)
    conv2d_22_output_array.data_start = AI_PTR(activations + 4480);
 8003b92:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_23_output_array.data = AI_PTR(activations + 448);
 8003b96:	4b7f      	ldr	r3, [pc, #508]	; (8003d94 <ai_network_init+0xb84>)
    conv2d_27_output_array.data = AI_PTR(activations + 3520);
 8003b98:	9a05      	ldr	r2, [sp, #20]
    conv2d_41_output_array.data = AI_PTR(activations + 14228);
 8003b9a:	9c06      	ldr	r4, [sp, #24]
    conv2d_23_output_array.data_start = AI_PTR(activations + 448);
 8003b9c:	e9c3 bb02 	strd	fp, fp, [r3, #8]
    conv2d_24_output_array.data = AI_PTR(activations + 2688);
 8003ba0:	4b7d      	ldr	r3, [pc, #500]	; (8003d98 <ai_network_init+0xb88>)
    conv2d_24_output_array.data_start = AI_PTR(activations + 2688);
 8003ba2:	e9c3 aa02 	strd	sl, sl, [r3, #8]
    conv2d_26_output_array.data = AI_PTR(activations + 0);
 8003ba6:	4b7d      	ldr	r3, [pc, #500]	; (8003d9c <ai_network_init+0xb8c>)
    conv2d_26_output_array.data_start = AI_PTR(activations + 0);
 8003ba8:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_27_output_array.data = AI_PTR(activations + 3520);
 8003bac:	4b7c      	ldr	r3, [pc, #496]	; (8003da0 <ai_network_init+0xb90>)
    conv2d_27_output_array.data_start = AI_PTR(activations + 3520);
 8003bae:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_28_output_array.data = AI_PTR(activations + 448);
 8003bb2:	4b7c      	ldr	r3, [pc, #496]	; (8003da4 <ai_network_init+0xb94>)
    conv2d_28_output_array.data_start = AI_PTR(activations + 448);
 8003bb4:	e9c3 bb02 	strd	fp, fp, [r3, #8]
    conv2d_29_output_array.data = AI_PTR(activations + 2688);
 8003bb8:	4b7b      	ldr	r3, [pc, #492]	; (8003da8 <ai_network_init+0xb98>)
    conv2d_29_output_array.data_start = AI_PTR(activations + 2688);
 8003bba:	e9c3 aa02 	strd	sl, sl, [r3, #8]
    conv2d_31_output_array.data = AI_PTR(activations + 0);
 8003bbe:	4b7b      	ldr	r3, [pc, #492]	; (8003dac <ai_network_init+0xb9c>)
    conv2d_31_output_array.data_start = AI_PTR(activations + 0);
 8003bc0:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_32_output_array.data = AI_PTR(activations + 3520);
 8003bc4:	4b7a      	ldr	r3, [pc, #488]	; (8003db0 <ai_network_init+0xba0>)
    conv2d_32_output_array.data_start = AI_PTR(activations + 3520);
 8003bc6:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_33_output_array.data = AI_PTR(activations + 448);
 8003bca:	4b7a      	ldr	r3, [pc, #488]	; (8003db4 <ai_network_init+0xba4>)
    conv2d_37_output_array.data = AI_PTR(activations + 3600);
 8003bcc:	f501 6261 	add.w	r2, r1, #3600	; 0xe10
    conv2d_33_output_array.data_start = AI_PTR(activations + 448);
 8003bd0:	e9c3 bb02 	strd	fp, fp, [r3, #8]
    conv2d_34_output_array.data = AI_PTR(activations + 2688);
 8003bd4:	4b78      	ldr	r3, [pc, #480]	; (8003db8 <ai_network_init+0xba8>)
    conv2d_52_scratch0_array.data = AI_PTR(activations + 832);
 8003bd6:	f8df b270 	ldr.w	fp, [pc, #624]	; 8003e48 <ai_network_init+0xc38>
    conv2d_34_output_array.data_start = AI_PTR(activations + 2688);
 8003bda:	e9c3 aa02 	strd	sl, sl, [r3, #8]
    conv2d_36_output_array.data = AI_PTR(activations + 0);
 8003bde:	4b77      	ldr	r3, [pc, #476]	; (8003dbc <ai_network_init+0xbac>)
    conv2d_53_scratch0_array.data = AI_PTR(activations + 0);
 8003be0:	f8df a268 	ldr.w	sl, [pc, #616]	; 8003e4c <ai_network_init+0xc3c>
    conv2d_36_output_array.data_start = AI_PTR(activations + 0);
 8003be4:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_37_output_array.data = AI_PTR(activations + 3600);
 8003be8:	4b75      	ldr	r3, [pc, #468]	; (8003dc0 <ai_network_init+0xbb0>)
    conv2d_37_output_array.data_start = AI_PTR(activations + 3600);
 8003bea:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_38_output_array.data = AI_PTR(activations + 480);
 8003bee:	f501 72f0 	add.w	r2, r1, #480	; 0x1e0
 8003bf2:	4b74      	ldr	r3, [pc, #464]	; (8003dc4 <ai_network_init+0xbb4>)
    conv2d_38_output_array.data_start = AI_PTR(activations + 480);
 8003bf4:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_39_output_array.data = AI_PTR(activations + 3200);
 8003bf8:	f501 6248 	add.w	r2, r1, #3200	; 0xc80
 8003bfc:	4b72      	ldr	r3, [pc, #456]	; (8003dc8 <ai_network_init+0xbb8>)
    conv2d_39_output_array.data_start = AI_PTR(activations + 3200);
 8003bfe:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_41_output_array.data = AI_PTR(activations + 14228);
 8003c02:	4b72      	ldr	r3, [pc, #456]	; (8003dcc <ai_network_init+0xbbc>)
    conv2d_42_output_array.data = AI_PTR(activations + 1232);
 8003c04:	f501 629a 	add.w	r2, r1, #1232	; 0x4d0
    conv2d_41_output_array.data_start = AI_PTR(activations + 14228);
 8003c08:	e9c3 4402 	strd	r4, r4, [r3, #8]
    conv2d_42_output_array.data = AI_PTR(activations + 1232);
 8003c0c:	4b70      	ldr	r3, [pc, #448]	; (8003dd0 <ai_network_init+0xbc0>)
    conv2d_42_output_array.data_start = AI_PTR(activations + 1232);
 8003c0e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_43_output_array.data = AI_PTR(activations + 560);
 8003c12:	f501 720c 	add.w	r2, r1, #560	; 0x230
 8003c16:	4b6f      	ldr	r3, [pc, #444]	; (8003dd4 <ai_network_init+0xbc4>)
    conv2d_4_scratch0_array.data = AI_PTR(activations + 60144);
 8003c18:	9c07      	ldr	r4, [sp, #28]
    conv2d_43_output_array.data_start = AI_PTR(activations + 560);
 8003c1a:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_44_output_array.data = AI_PTR(activations + 3440);
 8003c1e:	f501 6257 	add.w	r2, r1, #3440	; 0xd70
 8003c22:	4b6d      	ldr	r3, [pc, #436]	; (8003dd8 <ai_network_init+0xbc8>)
    conv2d_44_output_array.data_start = AI_PTR(activations + 3440);
 8003c24:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_46_output_array.data = AI_PTR(activations + 0);
 8003c28:	4b6c      	ldr	r3, [pc, #432]	; (8003ddc <ai_network_init+0xbcc>)
    conv2d_47_output_array.data = AI_PTR(activations + 2144);
 8003c2a:	f501 6206 	add.w	r2, r1, #2144	; 0x860
    conv2d_46_output_array.data_start = AI_PTR(activations + 0);
 8003c2e:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_47_output_array.data = AI_PTR(activations + 2144);
 8003c32:	4b6b      	ldr	r3, [pc, #428]	; (8003de0 <ai_network_init+0xbd0>)
    conv2d_47_output_array.data_start = AI_PTR(activations + 2144);
 8003c34:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_48_output_array.data = AI_PTR(activations + 672);
 8003c38:	f501 7228 	add.w	r2, r1, #672	; 0x2a0
 8003c3c:	4b69      	ldr	r3, [pc, #420]	; (8003de4 <ai_network_init+0xbd4>)
    conv2d_48_output_array.data_start = AI_PTR(activations + 672);
 8003c3e:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_49_output_array.data = AI_PTR(activations + 3136);
 8003c42:	f501 6244 	add.w	r2, r1, #3136	; 0xc40
 8003c46:	4b68      	ldr	r3, [pc, #416]	; (8003de8 <ai_network_init+0xbd8>)
    conv2d_49_output_array.data_start = AI_PTR(activations + 3136);
 8003c48:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_51_output_array.data = AI_PTR(activations + 0);
 8003c4c:	4b67      	ldr	r3, [pc, #412]	; (8003dec <ai_network_init+0xbdc>)
    conv2d_52_output_array.data = AI_PTR(activations + 2864);
 8003c4e:	f501 6233 	add.w	r2, r1, #2864	; 0xb30
    conv2d_51_output_array.data_start = AI_PTR(activations + 0);
 8003c52:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_52_output_array.data = AI_PTR(activations + 2864);
 8003c56:	4b66      	ldr	r3, [pc, #408]	; (8003df0 <ai_network_init+0xbe0>)
    conv2d_52_output_array.data_start = AI_PTR(activations + 2864);
 8003c58:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_53_output_array.data = AI_PTR(activations + 1440);
 8003c5c:	f501 62b4 	add.w	r2, r1, #1440	; 0x5a0
 8003c60:	4b64      	ldr	r3, [pc, #400]	; (8003df4 <ai_network_init+0xbe4>)
    conv2d_53_output_array.data_start = AI_PTR(activations + 1440);
 8003c62:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_54_output_array.data = AI_PTR(activations + 0);
 8003c66:	4b64      	ldr	r3, [pc, #400]	; (8003df8 <ai_network_init+0xbe8>)
    dense_57_output_array.data = AI_PTR(activations + 720);
 8003c68:	f501 7234 	add.w	r2, r1, #720	; 0x2d0
    conv2d_54_output_array.data_start = AI_PTR(activations + 0);
 8003c6c:	e9c3 1102 	strd	r1, r1, [r3, #8]
    dense_57_output_array.data = AI_PTR(activations + 720);
 8003c70:	4b62      	ldr	r3, [pc, #392]	; (8003dfc <ai_network_init+0xbec>)
    dense_57_output_array.data_start = AI_PTR(activations + 720);
 8003c72:	e9c3 2202 	strd	r2, r2, [r3, #8]
    dense_57_fmt_output_array.data = AI_PTR(activations + 0);
 8003c76:	4b62      	ldr	r3, [pc, #392]	; (8003e00 <ai_network_init+0xbf0>)
    conv2d_7_scratch0_array.data = AI_PTR(activations + 14336);
 8003c78:	f501 5260 	add.w	r2, r1, #14336	; 0x3800
    dense_57_fmt_output_array.data_start = AI_PTR(activations + 0);
 8003c7c:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_1_scratch0_array.data = AI_PTR(activations + 43164);
 8003c80:	4b60      	ldr	r3, [pc, #384]	; (8003e04 <ai_network_init+0xbf4>)
    conv2d_1_scratch0_array.data_start = AI_PTR(activations + 43164);
 8003c82:	e9c3 ee02 	strd	lr, lr, [r3, #8]
    conv2d_3_scratch0_array.data = AI_PTR(activations + 43164);
 8003c86:	4b60      	ldr	r3, [pc, #384]	; (8003e08 <ai_network_init+0xbf8>)
    conv2d_3_scratch0_array.data_start = AI_PTR(activations + 43164);
 8003c88:	e9c3 ee02 	strd	lr, lr, [r3, #8]
    conv2d_4_scratch0_array.data = AI_PTR(activations + 60144);
 8003c8c:	4b5f      	ldr	r3, [pc, #380]	; (8003e0c <ai_network_init+0xbfc>)
    conv2d_22_scratch0_array.data = AI_PTR(activations + 3328);
 8003c8e:	f8df e1c0 	ldr.w	lr, [pc, #448]	; 8003e50 <ai_network_init+0xc40>
    conv2d_4_scratch0_array.data_start = AI_PTR(activations + 60144);
 8003c92:	e9c3 4402 	strd	r4, r4, [r3, #8]
    conv2d_6_scratch0_array.data = AI_PTR(activations + 58692);
 8003c96:	9c08      	ldr	r4, [sp, #32]
 8003c98:	4b5d      	ldr	r3, [pc, #372]	; (8003e10 <ai_network_init+0xc00>)
    conv2d_39_scratch0_array.data = AI_PTR(activations + 992);
 8003c9a:	9702      	str	r7, [sp, #8]
    conv2d_41_scratch0_array.data = AI_PTR(activations + 6528);
 8003c9c:	f501 57cc 	add.w	r7, r1, #6528	; 0x1980
    conv2d_22_scratch0_array.data = AI_PTR(activations + 3328);
 8003ca0:	9501      	str	r5, [sp, #4]
    conv2d_41_scratch0_array.data = AI_PTR(activations + 6528);
 8003ca2:	9703      	str	r7, [sp, #12]
    conv2d_44_scratch0_array.data = AI_PTR(activations + 1200);
 8003ca4:	f501 6796 	add.w	r7, r1, #1200	; 0x4b0
    conv2d_27_scratch0_array.data = AI_PTR(activations + 2560);
 8003ca8:	4d5a      	ldr	r5, [pc, #360]	; (8003e14 <ai_network_init+0xc04>)
    conv2d_44_scratch0_array.data = AI_PTR(activations + 1200);
 8003caa:	9704      	str	r7, [sp, #16]
    conv2d_49_scratch0_array.data = AI_PTR(activations + 864);
 8003cac:	f501 7758 	add.w	r7, r1, #864	; 0x360
    conv2d_6_scratch0_array.data_start = AI_PTR(activations + 58692);
 8003cb0:	e9c3 4402 	strd	r4, r4, [r3, #8]
    conv2d_7_scratch0_array.data = AI_PTR(activations + 14336);
 8003cb4:	4b58      	ldr	r3, [pc, #352]	; (8003e18 <ai_network_init+0xc08>)
    conv2d_49_scratch0_array.data = AI_PTR(activations + 864);
 8003cb6:	9705      	str	r7, [sp, #20]
    conv2d_51_scratch0_array.data = AI_PTR(activations + 3968);
 8003cb8:	f501 6778 	add.w	r7, r1, #3968	; 0xf80
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003cbc:	9c09      	ldr	r4, [sp, #36]	; 0x24
    conv2d_51_scratch0_array.data = AI_PTR(activations + 3968);
 8003cbe:	9706      	str	r7, [sp, #24]
    conv2d_54_scratch0_array.data = AI_PTR(activations + 1824);
 8003cc0:	f501 67e4 	add.w	r7, r1, #1824	; 0x720
    conv2d_7_scratch0_array.data_start = AI_PTR(activations + 14336);
 8003cc4:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_9_scratch0_array.data = AI_PTR(activations + 0);
 8003cc8:	4b54      	ldr	r3, [pc, #336]	; (8003e1c <ai_network_init+0xc0c>)
    conv2d_19_scratch0_array.data = AI_PTR(activations + 1664);
 8003cca:	f501 62d0 	add.w	r2, r1, #1664	; 0x680
    conv2d_54_scratch0_array.data = AI_PTR(activations + 1824);
 8003cce:	9707      	str	r7, [sp, #28]
    conv2d_54_scratch1_array.data = AI_PTR(activations + 9408);
 8003cd0:	f501 5713 	add.w	r7, r1, #9408	; 0x24c0
    conv2d_9_scratch0_array.data_start = AI_PTR(activations + 0);
 8003cd4:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_10_scratch0_array.data = AI_PTR(activations + 0);
 8003cd8:	4b51      	ldr	r3, [pc, #324]	; (8003e20 <ai_network_init+0xc10>)
    conv2d_54_scratch1_array.data = AI_PTR(activations + 9408);
 8003cda:	9708      	str	r7, [sp, #32]
    nl_58_output_array.data = AI_PTR(NULL);
 8003cdc:	4f51      	ldr	r7, [pc, #324]	; (8003e24 <ai_network_init+0xc14>)
    conv2d_10_scratch0_array.data_start = AI_PTR(activations + 0);
 8003cde:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_12_scratch0_array.data = AI_PTR(activations + 0);
 8003ce2:	4b51      	ldr	r3, [pc, #324]	; (8003e28 <ai_network_init+0xc18>)
    conv2d_12_scratch0_array.data_start = AI_PTR(activations + 0);
 8003ce4:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_13_scratch0_array.data = AI_PTR(activations + 0);
 8003ce8:	4b50      	ldr	r3, [pc, #320]	; (8003e2c <ai_network_init+0xc1c>)
    conv2d_13_scratch0_array.data_start = AI_PTR(activations + 0);
 8003cea:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_15_scratch0_array.data = AI_PTR(activations + 0);
 8003cee:	4b50      	ldr	r3, [pc, #320]	; (8003e30 <ai_network_init+0xc20>)
    conv2d_15_scratch0_array.data_start = AI_PTR(activations + 0);
 8003cf0:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_16_scratch0_array.data = AI_PTR(activations + 0);
 8003cf4:	4b4f      	ldr	r3, [pc, #316]	; (8003e34 <ai_network_init+0xc24>)
    conv2d_16_scratch0_array.data_start = AI_PTR(activations + 0);
 8003cf6:	e9c3 1102 	strd	r1, r1, [r3, #8]
    conv2d_18_scratch0_array.data = AI_PTR(activations + 8336);
 8003cfa:	4b4f      	ldr	r3, [pc, #316]	; (8003e38 <ai_network_init+0xc28>)
    conv2d_18_scratch0_array.data_start = AI_PTR(activations + 8336);
 8003cfc:	e9c3 4402 	strd	r4, r4, [r3, #8]
    conv2d_19_scratch0_array.data = AI_PTR(activations + 1664);
 8003d00:	4b4e      	ldr	r3, [pc, #312]	; (8003e3c <ai_network_init+0xc2c>)
    conv2d_28_scratch0_array.data = AI_PTR(activations + 0);
 8003d02:	4c4f      	ldr	r4, [pc, #316]	; (8003e40 <ai_network_init+0xc30>)
    conv2d_19_scratch0_array.data_start = AI_PTR(activations + 1664);
 8003d04:	e9c3 2202 	strd	r2, r2, [r3, #8]
    conv2d_21_scratch0_array.data = AI_PTR(activations + 7488);
 8003d08:	f501 53ea 	add.w	r3, r1, #7488	; 0x1d40
    conv2d_31_scratch0_array.data = AI_PTR(activations + 5248);
 8003d0c:	4a4d      	ldr	r2, [pc, #308]	; (8003e44 <ai_network_init+0xc34>)
    conv2d_21_scratch0_array.data = AI_PTR(activations + 7488);
 8003d0e:	9300      	str	r3, [sp, #0]
    nl_58_output_array.data = AI_PTR(NULL);
 8003d10:	ed87 7b02 	vstr	d7, [r7, #8]
    conv2d_21_scratch0_array.data = AI_PTR(activations + 7488);
 8003d14:	9b00      	ldr	r3, [sp, #0]
 8003d16:	e09d      	b.n	8003e54 <ai_network_init+0xc44>
	...
 8003d20:	20004560 	.word	0x20004560
 8003d24:	00034818 	.word	0x00034818
 8003d28:	2000449c 	.word	0x2000449c
 8003d2c:	00037518 	.word	0x00037518
 8003d30:	20004698 	.word	0x20004698
 8003d34:	00037698 	.word	0x00037698
 8003d38:	2000458c 	.word	0x2000458c
 8003d3c:	00048498 	.word	0x00048498
 8003d40:	20004a54 	.word	0x20004a54
 8003d44:	00048fd8 	.word	0x00048fd8
 8003d48:	20004994 	.word	0x20004994
 8003d4c:	0005a918 	.word	0x0005a918
 8003d50:	200029d8 	.word	0x200029d8
 8003d54:	20004ae8 	.word	0x20004ae8
 8003d58:	200039c8 	.word	0x200039c8
 8003d5c:	20004238 	.word	0x20004238
 8003d60:	20004910 	.word	0x20004910
 8003d64:	20002438 	.word	0x20002438
 8003d68:	20004730 	.word	0x20004730
 8003d6c:	20002eb4 	.word	0x20002eb4
 8003d70:	20004820 	.word	0x20004820
 8003d74:	20002348 	.word	0x20002348
 8003d78:	20002528 	.word	0x20002528
 8003d7c:	20002618 	.word	0x20002618
 8003d80:	20002708 	.word	0x20002708
 8003d84:	200027f8 	.word	0x200027f8
 8003d88:	200028e8 	.word	0x200028e8
 8003d8c:	20002ac8 	.word	0x20002ac8
 8003d90:	20002bb8 	.word	0x20002bb8
 8003d94:	20002ca8 	.word	0x20002ca8
 8003d98:	20002d98 	.word	0x20002d98
 8003d9c:	20002e88 	.word	0x20002e88
 8003da0:	20002f78 	.word	0x20002f78
 8003da4:	20003068 	.word	0x20003068
 8003da8:	20003158 	.word	0x20003158
 8003dac:	20003248 	.word	0x20003248
 8003db0:	20003338 	.word	0x20003338
 8003db4:	20003428 	.word	0x20003428
 8003db8:	20003518 	.word	0x20003518
 8003dbc:	20003608 	.word	0x20003608
 8003dc0:	200036f8 	.word	0x200036f8
 8003dc4:	200037e8 	.word	0x200037e8
 8003dc8:	200038d8 	.word	0x200038d8
 8003dcc:	20003ab8 	.word	0x20003ab8
 8003dd0:	20003ba8 	.word	0x20003ba8
 8003dd4:	20003c98 	.word	0x20003c98
 8003dd8:	20003d88 	.word	0x20003d88
 8003ddc:	20003e78 	.word	0x20003e78
 8003de0:	20003f68 	.word	0x20003f68
 8003de4:	20004058 	.word	0x20004058
 8003de8:	20004148 	.word	0x20004148
 8003dec:	20004328 	.word	0x20004328
 8003df0:	20004418 	.word	0x20004418
 8003df4:	20004508 	.word	0x20004508
 8003df8:	20004614 	.word	0x20004614
 8003dfc:	20004a28 	.word	0x20004a28
 8003e00:	200049e0 	.word	0x200049e0
 8003e04:	20002a04 	.word	0x20002a04
 8003e08:	200039f4 	.word	0x200039f4
 8003e0c:	20004264 	.word	0x20004264
 8003e10:	2000475c 	.word	0x2000475c
 8003e14:	20002fa4 	.word	0x20002fa4
 8003e18:	2000484c 	.word	0x2000484c
 8003e1c:	2000493c 	.word	0x2000493c
 8003e20:	20002374 	.word	0x20002374
 8003e24:	20004b38 	.word	0x20004b38
 8003e28:	20002464 	.word	0x20002464
 8003e2c:	20002554 	.word	0x20002554
 8003e30:	20002644 	.word	0x20002644
 8003e34:	20002734 	.word	0x20002734
 8003e38:	20002824 	.word	0x20002824
 8003e3c:	20002914 	.word	0x20002914
 8003e40:	20003094 	.word	0x20003094
 8003e44:	20003274 	.word	0x20003274
 8003e48:	20004444 	.word	0x20004444
 8003e4c:	20004534 	.word	0x20004534
 8003e50:	20002be4 	.word	0x20002be4
 8003e54:	4f30      	ldr	r7, [pc, #192]	; (8003f18 <ai_network_init+0xd08>)
    conv2d_27_scratch0_array.data_start = AI_PTR(activations + 2560);
 8003e56:	e9c5 8802 	strd	r8, r8, [r5, #8]
    conv2d_29_scratch0_array.data = AI_PTR(activations + 960);
 8003e5a:	4d30      	ldr	r5, [pc, #192]	; (8003f1c <ai_network_init+0xd0c>)
    conv2d_29_scratch0_array.data_start = AI_PTR(activations + 960);
 8003e5c:	e9c5 cc02 	strd	ip, ip, [r5, #8]
    conv2d_32_scratch0_array.data = AI_PTR(activations + 2560);
 8003e60:	4d2f      	ldr	r5, [pc, #188]	; (8003f20 <ai_network_init+0xd10>)
    conv2d_32_scratch0_array.data_start = AI_PTR(activations + 2560);
 8003e62:	e9c5 8802 	strd	r8, r8, [r5, #8]
    conv2d_33_scratch0_array.data = AI_PTR(activations + 0);
 8003e66:	4d2f      	ldr	r5, [pc, #188]	; (8003f24 <ai_network_init+0xd14>)
    conv2d_33_scratch0_array.data_start = AI_PTR(activations + 0);
 8003e68:	e9c5 1102 	strd	r1, r1, [r5, #8]
    conv2d_34_scratch0_array.data = AI_PTR(activations + 960);
 8003e6c:	4d2e      	ldr	r5, [pc, #184]	; (8003f28 <ai_network_init+0xd18>)
    conv2d_34_scratch0_array.data_start = AI_PTR(activations + 960);
 8003e6e:	e9c5 cc02 	strd	ip, ip, [r5, #8]
    conv2d_36_scratch0_array.data = AI_PTR(activations + 5248);
 8003e72:	4d2e      	ldr	r5, [pc, #184]	; (8003f2c <ai_network_init+0xd1c>)
    conv2d_21_scratch0_array.data_start = AI_PTR(activations + 7488);
 8003e74:	e9c7 3302 	strd	r3, r3, [r7, #8]
    conv2d_36_scratch0_array.data_start = AI_PTR(activations + 5248);
 8003e78:	e9c5 9902 	strd	r9, r9, [r5, #8]
    conv2d_22_scratch0_array.data = AI_PTR(activations + 3328);
 8003e7c:	9b01      	ldr	r3, [sp, #4]
    conv2d_37_scratch0_array.data = AI_PTR(activations + 2560);
 8003e7e:	4d2c      	ldr	r5, [pc, #176]	; (8003f30 <ai_network_init+0xd20>)
    conv2d_23_scratch0_array.data = AI_PTR(activations + 0);
 8003e80:	4f2c      	ldr	r7, [pc, #176]	; (8003f34 <ai_network_init+0xd24>)
    conv2d_37_scratch0_array.data_start = AI_PTR(activations + 2560);
 8003e82:	e9c5 8802 	strd	r8, r8, [r5, #8]
    conv2d_22_scratch0_array.data_start = AI_PTR(activations + 3328);
 8003e86:	e9ce 3302 	strd	r3, r3, [lr, #8]
    conv2d_38_scratch0_array.data = AI_PTR(activations + 0);
 8003e8a:	4d2b      	ldr	r5, [pc, #172]	; (8003f38 <ai_network_init+0xd28>)
    conv2d_24_scratch0_array.data = AI_PTR(activations + 960);
 8003e8c:	4b2b      	ldr	r3, [pc, #172]	; (8003f3c <ai_network_init+0xd2c>)
    conv2d_28_scratch0_array.data_start = AI_PTR(activations + 0);
 8003e8e:	e9c4 1102 	strd	r1, r1, [r4, #8]
    conv2d_31_scratch0_array.data_start = AI_PTR(activations + 5248);
 8003e92:	e9c2 9902 	strd	r9, r9, [r2, #8]
    conv2d_38_scratch0_array.data_start = AI_PTR(activations + 0);
 8003e96:	e9c5 1102 	strd	r1, r1, [r5, #8]
    conv2d_23_scratch0_array.data_start = AI_PTR(activations + 0);
 8003e9a:	e9c7 1102 	strd	r1, r1, [r7, #8]
    conv2d_39_scratch0_array.data = AI_PTR(activations + 992);
 8003e9e:	4d28      	ldr	r5, [pc, #160]	; (8003f40 <ai_network_init+0xd30>)
    conv2d_24_scratch0_array.data_start = AI_PTR(activations + 960);
 8003ea0:	e9c3 cc02 	strd	ip, ip, [r3, #8]
    conv2d_26_scratch0_array.data_start = AI_PTR(activations + 5248);
 8003ea4:	e9c6 9902 	strd	r9, r9, [r6, #8]
    conv2d_39_scratch0_array.data = AI_PTR(activations + 992);
 8003ea8:	9b02      	ldr	r3, [sp, #8]
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003eaa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    conv2d_47_scratch0_array.data = AI_PTR(activations + 832);
 8003eac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    conv2d_39_scratch0_array.data_start = AI_PTR(activations + 992);
 8003eae:	e9c5 3302 	strd	r3, r3, [r5, #8]
    conv2d_41_scratch0_array.data = AI_PTR(activations + 6528);
 8003eb2:	9b03      	ldr	r3, [sp, #12]
 8003eb4:	4d23      	ldr	r5, [pc, #140]	; (8003f44 <ai_network_init+0xd34>)
    conv2d_41_scratch0_array.data_start = AI_PTR(activations + 6528);
 8003eb6:	e9c5 3302 	strd	r3, r3, [r5, #8]
    conv2d_42_scratch0_array.data = AI_PTR(activations + 0);
 8003eba:	4d23      	ldr	r5, [pc, #140]	; (8003f48 <ai_network_init+0xd38>)
    conv2d_44_scratch0_array.data = AI_PTR(activations + 1200);
 8003ebc:	9b04      	ldr	r3, [sp, #16]
    conv2d_42_scratch0_array.data_start = AI_PTR(activations + 0);
 8003ebe:	e9c5 1102 	strd	r1, r1, [r5, #8]
    conv2d_43_scratch0_array.data = AI_PTR(activations + 0);
 8003ec2:	4d22      	ldr	r5, [pc, #136]	; (8003f4c <ai_network_init+0xd3c>)
    conv2d_43_scratch0_array.data_start = AI_PTR(activations + 0);
 8003ec4:	e9c5 1102 	strd	r1, r1, [r5, #8]
    conv2d_44_scratch0_array.data = AI_PTR(activations + 1200);
 8003ec8:	4d21      	ldr	r5, [pc, #132]	; (8003f50 <ai_network_init+0xd40>)
    conv2d_44_scratch0_array.data_start = AI_PTR(activations + 1200);
 8003eca:	e9c5 3302 	strd	r3, r3, [r5, #8]
    conv2d_46_scratch0_array.data = AI_PTR(activations + 6768);
 8003ece:	4d21      	ldr	r5, [pc, #132]	; (8003f54 <ai_network_init+0xd44>)
    conv2d_49_scratch0_array.data = AI_PTR(activations + 864);
 8003ed0:	9b05      	ldr	r3, [sp, #20]
    conv2d_46_scratch0_array.data_start = AI_PTR(activations + 6768);
 8003ed2:	e9c5 4402 	strd	r4, r4, [r5, #8]
    conv2d_47_scratch0_array.data = AI_PTR(activations + 832);
 8003ed6:	4c20      	ldr	r4, [pc, #128]	; (8003f58 <ai_network_init+0xd48>)
    conv2d_47_scratch0_array.data_start = AI_PTR(activations + 832);
 8003ed8:	e9c4 2202 	strd	r2, r2, [r4, #8]
    conv2d_48_scratch0_array.data = AI_PTR(activations + 0);
 8003edc:	4c1f      	ldr	r4, [pc, #124]	; (8003f5c <ai_network_init+0xd4c>)
    conv2d_48_scratch0_array.data_start = AI_PTR(activations + 0);
 8003ede:	e9c4 1102 	strd	r1, r1, [r4, #8]
    conv2d_49_scratch0_array.data = AI_PTR(activations + 864);
 8003ee2:	4c1f      	ldr	r4, [pc, #124]	; (8003f60 <ai_network_init+0xd50>)
    conv2d_49_scratch0_array.data_start = AI_PTR(activations + 864);
 8003ee4:	e9c4 3302 	strd	r3, r3, [r4, #8]
    conv2d_51_scratch0_array.data = AI_PTR(activations + 3968);
 8003ee8:	9b06      	ldr	r3, [sp, #24]
 8003eea:	4c1e      	ldr	r4, [pc, #120]	; (8003f64 <ai_network_init+0xd54>)
    conv2d_52_scratch0_array.data_start = AI_PTR(activations + 832);
 8003eec:	e9cb 2202 	strd	r2, r2, [fp, #8]
    conv2d_51_scratch0_array.data_start = AI_PTR(activations + 3968);
 8003ef0:	e9c4 3302 	strd	r3, r3, [r4, #8]
    conv2d_54_scratch0_array.data = AI_PTR(activations + 1824);
 8003ef4:	4a1c      	ldr	r2, [pc, #112]	; (8003f68 <ai_network_init+0xd58>)
 8003ef6:	9b07      	ldr	r3, [sp, #28]
    conv2d_53_scratch0_array.data_start = AI_PTR(activations + 0);
 8003ef8:	e9ca 1102 	strd	r1, r1, [sl, #8]
    conv2d_54_scratch0_array.data_start = AI_PTR(activations + 1824);
 8003efc:	e9c2 3302 	strd	r3, r3, [r2, #8]
    conv2d_54_scratch1_array.data = AI_PTR(activations + 9408);
 8003f00:	9b08      	ldr	r3, [sp, #32]
 8003f02:	4a1a      	ldr	r2, [pc, #104]	; (8003f6c <ai_network_init+0xd5c>)
    conv2d_54_scratch1_array.data_start = AI_PTR(activations + 9408);
 8003f04:	e9c2 3302 	strd	r3, r3, [r2, #8]

  return ok;
}
 8003f08:	b00d      	add	sp, #52	; 0x34
 8003f0a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  ok &= ai_platform_network_post_init(network);
 8003f0e:	f000 ba63 	b.w	80043d8 <ai_platform_network_post_init>
}
 8003f12:	b00d      	add	sp, #52	; 0x34
 8003f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f18:	20002af4 	.word	0x20002af4
 8003f1c:	20003184 	.word	0x20003184
 8003f20:	20003364 	.word	0x20003364
 8003f24:	20003454 	.word	0x20003454
 8003f28:	20003544 	.word	0x20003544
 8003f2c:	20003634 	.word	0x20003634
 8003f30:	20003724 	.word	0x20003724
 8003f34:	20002cd4 	.word	0x20002cd4
 8003f38:	20003814 	.word	0x20003814
 8003f3c:	20002dc4 	.word	0x20002dc4
 8003f40:	20003904 	.word	0x20003904
 8003f44:	20003ae4 	.word	0x20003ae4
 8003f48:	20003bd4 	.word	0x20003bd4
 8003f4c:	20003cc4 	.word	0x20003cc4
 8003f50:	20003db4 	.word	0x20003db4
 8003f54:	20003ea4 	.word	0x20003ea4
 8003f58:	20003f94 	.word	0x20003f94
 8003f5c:	20004084 	.word	0x20004084
 8003f60:	20004174 	.word	0x20004174
 8003f64:	20004354 	.word	0x20004354
 8003f68:	20004640 	.word	0x20004640
 8003f6c:	2000466c 	.word	0x2000466c

08003f70 <ai_network_run>:

AI_API_ENTRY
ai_i32 ai_network_run(
  ai_handle network, const ai_buffer* input, ai_buffer* output)
{
  return ai_platform_network_process(network, input, output);
 8003f70:	f000 bae0 	b.w	8004534 <ai_platform_network_process>

08003f74 <ai_network_data_weights_get>:
    0xff, 0xff, 0xea, 0xff, 0xff, 0xff, 0x47, 0xfe, 0xff, 0xff,
    0xab, 0x01, 0x00, 0x00, 0xe2, 0xfd, 0xff, 0xff, 0x3c, 0xfd,
    0xff, 0xff, 0x8c, 0xff, 0xff, 0xff, 0x0b, 0x00, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0xb6, 0xff, 0xff, 0xff  };
  return AI_HANDLE_PTR(s_network_weights);
}
 8003f74:	4800      	ldr	r0, [pc, #0]	; (8003f78 <ai_network_data_weights_get+0x4>)
 8003f76:	4770      	bx	lr
 8003f78:	0801be40 	.word	0x0801be40

08003f7c <ai_platform_network_get_error>:
 8003f7c:	b118      	cbz	r0, 8003f86 <ai_platform_network_get_error+0xa>
 8003f7e:	4b3c      	ldr	r3, [pc, #240]	; (8004070 <ai_platform_network_get_error+0xf4>)
 8003f80:	6802      	ldr	r2, [r0, #0]
 8003f82:	429a      	cmp	r2, r3
 8003f84:	d02a      	beq.n	8003fdc <ai_platform_network_get_error+0x60>
 8003f86:	4a3b      	ldr	r2, [pc, #236]	; (8004074 <ai_platform_network_get_error+0xf8>)
 8003f88:	493b      	ldr	r1, [pc, #236]	; (8004078 <ai_platform_network_get_error+0xfc>)
 8003f8a:	6813      	ldr	r3, [r2, #0]
 8003f8c:	f023 0301 	bic.w	r3, r3, #1
 8003f90:	6013      	str	r3, [r2, #0]
 8003f92:	680b      	ldr	r3, [r1, #0]
 8003f94:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 8003f98:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003f9c:	185a      	adds	r2, r3, r1
 8003f9e:	2a01      	cmp	r2, #1
 8003fa0:	d90d      	bls.n	8003fbe <ai_platform_network_get_error+0x42>
 8003fa2:	f240 4249 	movw	r2, #1097	; 0x449
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	d009      	beq.n	8003fbe <ai_platform_network_get_error+0x42>
 8003faa:	4b34      	ldr	r3, [pc, #208]	; (800407c <ai_platform_network_get_error+0x100>)
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003fb2:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8003fb6:	d02d      	beq.n	8004014 <ai_platform_network_get_error+0x98>
 8003fb8:	f241 0010 	movw	r0, #4112	; 0x1010
 8003fbc:	4770      	bx	lr
 8003fbe:	4b30      	ldr	r3, [pc, #192]	; (8004080 <ai_platform_network_get_error+0x104>)
 8003fc0:	2201      	movs	r2, #1
 8003fc2:	4619      	mov	r1, r3
 8003fc4:	601a      	str	r2, [r3, #0]
 8003fc6:	680b      	ldr	r3, [r1, #0]
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d1fc      	bne.n	8003fc6 <ai_platform_network_get_error+0x4a>
 8003fcc:	4b2d      	ldr	r3, [pc, #180]	; (8004084 <ai_platform_network_get_error+0x108>)
 8003fce:	492e      	ldr	r1, [pc, #184]	; (8004088 <ai_platform_network_get_error+0x10c>)
 8003fd0:	4a2e      	ldr	r2, [pc, #184]	; (800408c <ai_platform_network_get_error+0x110>)
 8003fd2:	6019      	str	r1, [r3, #0]
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4293      	cmp	r3, r2
 8003fd8:	d0ee      	beq.n	8003fb8 <ai_platform_network_get_error+0x3c>
 8003fda:	e7fe      	b.n	8003fda <ai_platform_network_get_error+0x5e>
 8003fdc:	4a25      	ldr	r2, [pc, #148]	; (8004074 <ai_platform_network_get_error+0xf8>)
 8003fde:	4926      	ldr	r1, [pc, #152]	; (8004078 <ai_platform_network_get_error+0xfc>)
 8003fe0:	6813      	ldr	r3, [r2, #0]
 8003fe2:	f023 0301 	bic.w	r3, r3, #1
 8003fe6:	6013      	str	r3, [r2, #0]
 8003fe8:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8003fec:	680b      	ldr	r3, [r1, #0]
 8003fee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003ff2:	189a      	adds	r2, r3, r2
 8003ff4:	2a01      	cmp	r2, #1
 8003ff6:	d92b      	bls.n	8004050 <ai_platform_network_get_error+0xd4>
 8003ff8:	f240 4249 	movw	r2, #1097	; 0x449
 8003ffc:	4293      	cmp	r3, r2
 8003ffe:	d027      	beq.n	8004050 <ai_platform_network_get_error+0xd4>
 8004000:	4b1e      	ldr	r3, [pc, #120]	; (800407c <ai_platform_network_get_error+0x100>)
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004008:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800400c:	d011      	beq.n	8004032 <ai_platform_network_get_error+0xb6>
 800400e:	3010      	adds	r0, #16
 8004010:	f000 be8c 	b.w	8004d2c <core_get_error>
 8004014:	4b1e      	ldr	r3, [pc, #120]	; (8004090 <ai_platform_network_get_error+0x114>)
 8004016:	2201      	movs	r2, #1
 8004018:	4619      	mov	r1, r3
 800401a:	601a      	str	r2, [r3, #0]
 800401c:	680b      	ldr	r3, [r1, #0]
 800401e:	2b00      	cmp	r3, #0
 8004020:	d1fc      	bne.n	800401c <ai_platform_network_get_error+0xa0>
 8004022:	4b1c      	ldr	r3, [pc, #112]	; (8004094 <ai_platform_network_get_error+0x118>)
 8004024:	4918      	ldr	r1, [pc, #96]	; (8004088 <ai_platform_network_get_error+0x10c>)
 8004026:	4a19      	ldr	r2, [pc, #100]	; (800408c <ai_platform_network_get_error+0x110>)
 8004028:	6019      	str	r1, [r3, #0]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	4293      	cmp	r3, r2
 800402e:	d0c3      	beq.n	8003fb8 <ai_platform_network_get_error+0x3c>
 8004030:	e7fe      	b.n	8004030 <ai_platform_network_get_error+0xb4>
 8004032:	4b17      	ldr	r3, [pc, #92]	; (8004090 <ai_platform_network_get_error+0x114>)
 8004034:	2201      	movs	r2, #1
 8004036:	4619      	mov	r1, r3
 8004038:	601a      	str	r2, [r3, #0]
 800403a:	680b      	ldr	r3, [r1, #0]
 800403c:	2b00      	cmp	r3, #0
 800403e:	d1fc      	bne.n	800403a <ai_platform_network_get_error+0xbe>
 8004040:	4b14      	ldr	r3, [pc, #80]	; (8004094 <ai_platform_network_get_error+0x118>)
 8004042:	4911      	ldr	r1, [pc, #68]	; (8004088 <ai_platform_network_get_error+0x10c>)
 8004044:	4a11      	ldr	r2, [pc, #68]	; (800408c <ai_platform_network_get_error+0x110>)
 8004046:	6019      	str	r1, [r3, #0]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	4293      	cmp	r3, r2
 800404c:	d0df      	beq.n	800400e <ai_platform_network_get_error+0x92>
 800404e:	e7fe      	b.n	800404e <ai_platform_network_get_error+0xd2>
 8004050:	4b0b      	ldr	r3, [pc, #44]	; (8004080 <ai_platform_network_get_error+0x104>)
 8004052:	2201      	movs	r2, #1
 8004054:	4619      	mov	r1, r3
 8004056:	601a      	str	r2, [r3, #0]
 8004058:	680b      	ldr	r3, [r1, #0]
 800405a:	2b00      	cmp	r3, #0
 800405c:	d1fc      	bne.n	8004058 <ai_platform_network_get_error+0xdc>
 800405e:	4b09      	ldr	r3, [pc, #36]	; (8004084 <ai_platform_network_get_error+0x108>)
 8004060:	4909      	ldr	r1, [pc, #36]	; (8004088 <ai_platform_network_get_error+0x10c>)
 8004062:	4a0a      	ldr	r2, [pc, #40]	; (800408c <ai_platform_network_get_error+0x110>)
 8004064:	6019      	str	r1, [r3, #0]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	4293      	cmp	r3, r2
 800406a:	d0d0      	beq.n	800400e <ai_platform_network_get_error+0x92>
 800406c:	e7fe      	b.n	800406c <ai_platform_network_get_error+0xf0>
 800406e:	bf00      	nop
 8004070:	a1c00100 	.word	0xa1c00100
 8004074:	e0002000 	.word	0xe0002000
 8004078:	e0042000 	.word	0xe0042000
 800407c:	5c001000 	.word	0x5c001000
 8004080:	40023008 	.word	0x40023008
 8004084:	40023000 	.word	0x40023000
 8004088:	f407a5c2 	.word	0xf407a5c2
 800408c:	b5e8b5cd 	.word	0xb5e8b5cd
 8004090:	58024c08 	.word	0x58024c08
 8004094:	58024c00 	.word	0x58024c00

08004098 <ai_platform_network_create>:
 8004098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800409c:	4d56      	ldr	r5, [pc, #344]	; (80041f8 <ai_platform_network_create+0x160>)
 800409e:	b082      	sub	sp, #8
 80040a0:	4e56      	ldr	r6, [pc, #344]	; (80041fc <ai_platform_network_create+0x164>)
 80040a2:	6829      	ldr	r1, [r5, #0]
 80040a4:	f89d 4020 	ldrb.w	r4, [sp, #32]
 80040a8:	f021 0101 	bic.w	r1, r1, #1
 80040ac:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80040b0:	6029      	str	r1, [r5, #0]
 80040b2:	f46f 658a 	mvn.w	r5, #1104	; 0x450
 80040b6:	6831      	ldr	r1, [r6, #0]
 80040b8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80040bc:	194d      	adds	r5, r1, r5
 80040be:	2d01      	cmp	r5, #1
 80040c0:	d939      	bls.n	8004136 <ai_platform_network_create+0x9e>
 80040c2:	f240 4549 	movw	r5, #1097	; 0x449
 80040c6:	42a9      	cmp	r1, r5
 80040c8:	d035      	beq.n	8004136 <ai_platform_network_create+0x9e>
 80040ca:	494d      	ldr	r1, [pc, #308]	; (8004200 <ai_platform_network_create+0x168>)
 80040cc:	6809      	ldr	r1, [r1, #0]
 80040ce:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80040d2:	f5b1 6f8a 	cmp.w	r1, #1104	; 0x450
 80040d6:	d01f      	beq.n	8004118 <ai_platform_network_create+0x80>
 80040d8:	2800      	cmp	r0, #0
 80040da:	d03b      	beq.n	8004154 <ai_platform_network_create+0xbc>
 80040dc:	4698      	mov	r8, r3
 80040de:	4606      	mov	r6, r0
 80040e0:	4b48      	ldr	r3, [pc, #288]	; (8004204 <ai_platform_network_create+0x16c>)
 80040e2:	4615      	mov	r5, r2
 80040e4:	6013      	str	r3, [r2, #0]
 80040e6:	6032      	str	r2, [r6, #0]
 80040e8:	f000 fe1e 	bl	8004d28 <core_init>
 80040ec:	2800      	cmp	r0, #0
 80040ee:	d136      	bne.n	800415e <ai_platform_network_create+0xc6>
 80040f0:	ea4f 6808 	mov.w	r8, r8, lsl #24
 80040f4:	2230      	movs	r2, #48	; 0x30
 80040f6:	0424      	lsls	r4, r4, #16
 80040f8:	2300      	movs	r3, #0
 80040fa:	2110      	movs	r1, #16
 80040fc:	6033      	str	r3, [r6, #0]
 80040fe:	2000      	movs	r0, #0
 8004100:	ea44 2307 	orr.w	r3, r4, r7, lsl #8
 8004104:	f362 0007 	bfi	r0, r2, #0, #8
 8004108:	ea43 0308 	orr.w	r3, r3, r8
 800410c:	f361 201f 	bfi	r0, r1, #8, #24
 8004110:	662b      	str	r3, [r5, #96]	; 0x60
 8004112:	b002      	add	sp, #8
 8004114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004118:	493b      	ldr	r1, [pc, #236]	; (8004208 <ai_platform_network_create+0x170>)
 800411a:	2501      	movs	r5, #1
 800411c:	460e      	mov	r6, r1
 800411e:	600d      	str	r5, [r1, #0]
 8004120:	6831      	ldr	r1, [r6, #0]
 8004122:	2900      	cmp	r1, #0
 8004124:	d1fc      	bne.n	8004120 <ai_platform_network_create+0x88>
 8004126:	4939      	ldr	r1, [pc, #228]	; (800420c <ai_platform_network_create+0x174>)
 8004128:	4e39      	ldr	r6, [pc, #228]	; (8004210 <ai_platform_network_create+0x178>)
 800412a:	4d3a      	ldr	r5, [pc, #232]	; (8004214 <ai_platform_network_create+0x17c>)
 800412c:	600e      	str	r6, [r1, #0]
 800412e:	6809      	ldr	r1, [r1, #0]
 8004130:	42a9      	cmp	r1, r5
 8004132:	d0d1      	beq.n	80040d8 <ai_platform_network_create+0x40>
 8004134:	e7fe      	b.n	8004134 <ai_platform_network_create+0x9c>
 8004136:	4938      	ldr	r1, [pc, #224]	; (8004218 <ai_platform_network_create+0x180>)
 8004138:	2501      	movs	r5, #1
 800413a:	460e      	mov	r6, r1
 800413c:	600d      	str	r5, [r1, #0]
 800413e:	6831      	ldr	r1, [r6, #0]
 8004140:	2900      	cmp	r1, #0
 8004142:	d1fc      	bne.n	800413e <ai_platform_network_create+0xa6>
 8004144:	4935      	ldr	r1, [pc, #212]	; (800421c <ai_platform_network_create+0x184>)
 8004146:	4e32      	ldr	r6, [pc, #200]	; (8004210 <ai_platform_network_create+0x178>)
 8004148:	4d32      	ldr	r5, [pc, #200]	; (8004214 <ai_platform_network_create+0x17c>)
 800414a:	600e      	str	r6, [r1, #0]
 800414c:	6809      	ldr	r1, [r1, #0]
 800414e:	42a9      	cmp	r1, r5
 8004150:	d0c2      	beq.n	80040d8 <ai_platform_network_create+0x40>
 8004152:	e7fe      	b.n	8004152 <ai_platform_network_create+0xba>
 8004154:	f241 0010 	movw	r0, #4112	; 0x1010
 8004158:	b002      	add	sp, #8
 800415a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800415e:	4a26      	ldr	r2, [pc, #152]	; (80041f8 <ai_platform_network_create+0x160>)
 8004160:	4926      	ldr	r1, [pc, #152]	; (80041fc <ai_platform_network_create+0x164>)
 8004162:	6813      	ldr	r3, [r2, #0]
 8004164:	f023 0301 	bic.w	r3, r3, #1
 8004168:	6013      	str	r3, [r2, #0]
 800416a:	f46f 638a 	mvn.w	r3, #1104	; 0x450
 800416e:	680a      	ldr	r2, [r1, #0]
 8004170:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8004174:	18d3      	adds	r3, r2, r3
 8004176:	2b01      	cmp	r3, #1
 8004178:	d914      	bls.n	80041a4 <ai_platform_network_create+0x10c>
 800417a:	f240 4349 	movw	r3, #1097	; 0x449
 800417e:	429a      	cmp	r2, r3
 8004180:	d010      	beq.n	80041a4 <ai_platform_network_create+0x10c>
 8004182:	4b1f      	ldr	r3, [pc, #124]	; (8004200 <ai_platform_network_create+0x168>)
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800418a:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800418e:	d022      	beq.n	80041d6 <ai_platform_network_create+0x13e>
 8004190:	ea4f 6808 	mov.w	r8, r8, lsl #24
 8004194:	0424      	lsls	r4, r4, #16
 8004196:	ea48 0304 	orr.w	r3, r8, r4
 800419a:	f1b3 7f82 	cmp.w	r3, #17039360	; 0x1040000
 800419e:	d010      	beq.n	80041c2 <ai_platform_network_create+0x12a>
 80041a0:	2201      	movs	r2, #1
 80041a2:	e7a9      	b.n	80040f8 <ai_platform_network_create+0x60>
 80041a4:	4b1c      	ldr	r3, [pc, #112]	; (8004218 <ai_platform_network_create+0x180>)
 80041a6:	2201      	movs	r2, #1
 80041a8:	4619      	mov	r1, r3
 80041aa:	601a      	str	r2, [r3, #0]
 80041ac:	680b      	ldr	r3, [r1, #0]
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d1fc      	bne.n	80041ac <ai_platform_network_create+0x114>
 80041b2:	4b1a      	ldr	r3, [pc, #104]	; (800421c <ai_platform_network_create+0x184>)
 80041b4:	4916      	ldr	r1, [pc, #88]	; (8004210 <ai_platform_network_create+0x178>)
 80041b6:	4a17      	ldr	r2, [pc, #92]	; (8004214 <ai_platform_network_create+0x17c>)
 80041b8:	6019      	str	r1, [r3, #0]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	4293      	cmp	r3, r2
 80041be:	d0e7      	beq.n	8004190 <ai_platform_network_create+0xf8>
 80041c0:	e7fe      	b.n	80041c0 <ai_platform_network_create+0x128>
 80041c2:	4b17      	ldr	r3, [pc, #92]	; (8004220 <ai_platform_network_create+0x188>)
 80041c4:	a802      	add	r0, sp, #8
 80041c6:	f840 3d04 	str.w	r3, [r0, #-4]!
 80041ca:	f001 fdd9 	bl	8005d80 <ai_check_custom_types>
 80041ce:	b188      	cbz	r0, 80041f4 <ai_platform_network_create+0x15c>
 80041d0:	2100      	movs	r1, #0
 80041d2:	460a      	mov	r2, r1
 80041d4:	e793      	b.n	80040fe <ai_platform_network_create+0x66>
 80041d6:	4b0c      	ldr	r3, [pc, #48]	; (8004208 <ai_platform_network_create+0x170>)
 80041d8:	2201      	movs	r2, #1
 80041da:	4619      	mov	r1, r3
 80041dc:	601a      	str	r2, [r3, #0]
 80041de:	680b      	ldr	r3, [r1, #0]
 80041e0:	2b00      	cmp	r3, #0
 80041e2:	d1fc      	bne.n	80041de <ai_platform_network_create+0x146>
 80041e4:	4b09      	ldr	r3, [pc, #36]	; (800420c <ai_platform_network_create+0x174>)
 80041e6:	490a      	ldr	r1, [pc, #40]	; (8004210 <ai_platform_network_create+0x178>)
 80041e8:	4a0a      	ldr	r2, [pc, #40]	; (8004214 <ai_platform_network_create+0x17c>)
 80041ea:	6019      	str	r1, [r3, #0]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	4293      	cmp	r3, r2
 80041f0:	d0ce      	beq.n	8004190 <ai_platform_network_create+0xf8>
 80041f2:	e7fe      	b.n	80041f2 <ai_platform_network_create+0x15a>
 80041f4:	2202      	movs	r2, #2
 80041f6:	e77f      	b.n	80040f8 <ai_platform_network_create+0x60>
 80041f8:	e0002000 	.word	0xe0002000
 80041fc:	e0042000 	.word	0xe0042000
 8004200:	5c001000 	.word	0x5c001000
 8004204:	a1c00100 	.word	0xa1c00100
 8004208:	58024c08 	.word	0x58024c08
 800420c:	58024c00 	.word	0x58024c00
 8004210:	f407a5c2 	.word	0xf407a5c2
 8004214:	b5e8b5cd 	.word	0xb5e8b5cd
 8004218:	40023008 	.word	0x40023008
 800421c:	40023000 	.word	0x40023000
 8004220:	84048403 	.word	0x84048403

08004224 <ai_platform_network_init>:
 8004224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004226:	2800      	cmp	r0, #0
 8004228:	d061      	beq.n	80042ee <ai_platform_network_init+0xca>
 800422a:	4b61      	ldr	r3, [pc, #388]	; (80043b0 <ai_platform_network_init+0x18c>)
 800422c:	6802      	ldr	r2, [r0, #0]
 800422e:	429a      	cmp	r2, r3
 8004230:	d15d      	bne.n	80042ee <ai_platform_network_init+0xca>
 8004232:	4a60      	ldr	r2, [pc, #384]	; (80043b4 <ai_platform_network_init+0x190>)
 8004234:	4c60      	ldr	r4, [pc, #384]	; (80043b8 <ai_platform_network_init+0x194>)
 8004236:	6813      	ldr	r3, [r2, #0]
 8004238:	f023 0301 	bic.w	r3, r3, #1
 800423c:	6013      	str	r3, [r2, #0]
 800423e:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004242:	6823      	ldr	r3, [r4, #0]
 8004244:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004248:	189a      	adds	r2, r3, r2
 800424a:	2a01      	cmp	r2, #1
 800424c:	d92f      	bls.n	80042ae <ai_platform_network_init+0x8a>
 800424e:	f240 4249 	movw	r2, #1097	; 0x449
 8004252:	4293      	cmp	r3, r2
 8004254:	d02b      	beq.n	80042ae <ai_platform_network_init+0x8a>
 8004256:	4b59      	ldr	r3, [pc, #356]	; (80043bc <ai_platform_network_init+0x198>)
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800425e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004262:	d05f      	beq.n	8004324 <ai_platform_network_init+0x100>
 8004264:	4605      	mov	r5, r0
 8004266:	460c      	mov	r4, r1
 8004268:	2900      	cmp	r1, #0
 800426a:	f000 8099 	beq.w	80043a0 <ai_platform_network_init+0x17c>
 800426e:	6a8f      	ldr	r7, [r1, #40]	; 0x28
 8004270:	690e      	ldr	r6, [r1, #16]
 8004272:	2f00      	cmp	r7, #0
 8004274:	f000 8083 	beq.w	800437e <ai_platform_network_init+0x15a>
 8004278:	b346      	cbz	r6, 80042cc <ai_platform_network_init+0xa8>
 800427a:	f105 0c18 	add.w	ip, r5, #24
 800427e:	f104 0718 	add.w	r7, r4, #24
 8004282:	f105 0630 	add.w	r6, r5, #48	; 0x30
 8004286:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004288:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800428c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004290:	2403      	movs	r4, #3
 8004292:	e88c 0003 	stmia.w	ip, {r0, r1}
 8004296:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8004298:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800429a:	e897 0003 	ldmia.w	r7, {r0, r1}
 800429e:	e886 0003 	stmia.w	r6, {r0, r1}
 80042a2:	60ec      	str	r4, [r5, #12]
 80042a4:	4628      	mov	r0, r5
 80042a6:	f001 fd95 	bl	8005dd4 <ai_layers_init_all>
 80042aa:	4628      	mov	r0, r5
 80042ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042ae:	4b44      	ldr	r3, [pc, #272]	; (80043c0 <ai_platform_network_init+0x19c>)
 80042b0:	2201      	movs	r2, #1
 80042b2:	461c      	mov	r4, r3
 80042b4:	601a      	str	r2, [r3, #0]
 80042b6:	6823      	ldr	r3, [r4, #0]
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	d1fc      	bne.n	80042b6 <ai_platform_network_init+0x92>
 80042bc:	4b41      	ldr	r3, [pc, #260]	; (80043c4 <ai_platform_network_init+0x1a0>)
 80042be:	4c42      	ldr	r4, [pc, #264]	; (80043c8 <ai_platform_network_init+0x1a4>)
 80042c0:	4a42      	ldr	r2, [pc, #264]	; (80043cc <ai_platform_network_init+0x1a8>)
 80042c2:	601c      	str	r4, [r3, #0]
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	4293      	cmp	r3, r2
 80042c8:	d0cc      	beq.n	8004264 <ai_platform_network_init+0x40>
 80042ca:	e7fe      	b.n	80042ca <ai_platform_network_init+0xa6>
 80042cc:	8921      	ldrh	r1, [r4, #8]
 80042ce:	88e2      	ldrh	r2, [r4, #6]
 80042d0:	68e3      	ldr	r3, [r4, #12]
 80042d2:	fb02 f201 	mul.w	r2, r2, r1
 80042d6:	fb03 f302 	mul.w	r3, r3, r2
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d0cd      	beq.n	800427a <ai_platform_network_init+0x56>
 80042de:	f105 0010 	add.w	r0, r5, #16
 80042e2:	2212      	movs	r2, #18
 80042e4:	2110      	movs	r1, #16
 80042e6:	f000 fd27 	bl	8004d38 <core_set_error>
 80042ea:	4630      	mov	r0, r6
 80042ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042ee:	4a31      	ldr	r2, [pc, #196]	; (80043b4 <ai_platform_network_init+0x190>)
 80042f0:	4931      	ldr	r1, [pc, #196]	; (80043b8 <ai_platform_network_init+0x194>)
 80042f2:	6813      	ldr	r3, [r2, #0]
 80042f4:	f023 0301 	bic.w	r3, r3, #1
 80042f8:	6013      	str	r3, [r2, #0]
 80042fa:	680b      	ldr	r3, [r1, #0]
 80042fc:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 8004300:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004304:	185a      	adds	r2, r3, r1
 8004306:	2a01      	cmp	r2, #1
 8004308:	d91b      	bls.n	8004342 <ai_platform_network_init+0x11e>
 800430a:	f240 4249 	movw	r2, #1097	; 0x449
 800430e:	4293      	cmp	r3, r2
 8004310:	d017      	beq.n	8004342 <ai_platform_network_init+0x11e>
 8004312:	4b2a      	ldr	r3, [pc, #168]	; (80043bc <ai_platform_network_init+0x198>)
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800431a:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800431e:	d01f      	beq.n	8004360 <ai_platform_network_init+0x13c>
 8004320:	2000      	movs	r0, #0
 8004322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004324:	4b2a      	ldr	r3, [pc, #168]	; (80043d0 <ai_platform_network_init+0x1ac>)
 8004326:	2201      	movs	r2, #1
 8004328:	461c      	mov	r4, r3
 800432a:	601a      	str	r2, [r3, #0]
 800432c:	6823      	ldr	r3, [r4, #0]
 800432e:	2b00      	cmp	r3, #0
 8004330:	d1fc      	bne.n	800432c <ai_platform_network_init+0x108>
 8004332:	4b28      	ldr	r3, [pc, #160]	; (80043d4 <ai_platform_network_init+0x1b0>)
 8004334:	4c24      	ldr	r4, [pc, #144]	; (80043c8 <ai_platform_network_init+0x1a4>)
 8004336:	4a25      	ldr	r2, [pc, #148]	; (80043cc <ai_platform_network_init+0x1a8>)
 8004338:	601c      	str	r4, [r3, #0]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	4293      	cmp	r3, r2
 800433e:	d091      	beq.n	8004264 <ai_platform_network_init+0x40>
 8004340:	e7fe      	b.n	8004340 <ai_platform_network_init+0x11c>
 8004342:	4b1f      	ldr	r3, [pc, #124]	; (80043c0 <ai_platform_network_init+0x19c>)
 8004344:	2201      	movs	r2, #1
 8004346:	4619      	mov	r1, r3
 8004348:	601a      	str	r2, [r3, #0]
 800434a:	680b      	ldr	r3, [r1, #0]
 800434c:	2b00      	cmp	r3, #0
 800434e:	d1fc      	bne.n	800434a <ai_platform_network_init+0x126>
 8004350:	4b1c      	ldr	r3, [pc, #112]	; (80043c4 <ai_platform_network_init+0x1a0>)
 8004352:	491d      	ldr	r1, [pc, #116]	; (80043c8 <ai_platform_network_init+0x1a4>)
 8004354:	4a1d      	ldr	r2, [pc, #116]	; (80043cc <ai_platform_network_init+0x1a8>)
 8004356:	6019      	str	r1, [r3, #0]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	4293      	cmp	r3, r2
 800435c:	d0e0      	beq.n	8004320 <ai_platform_network_init+0xfc>
 800435e:	e7fe      	b.n	800435e <ai_platform_network_init+0x13a>
 8004360:	4b1b      	ldr	r3, [pc, #108]	; (80043d0 <ai_platform_network_init+0x1ac>)
 8004362:	2201      	movs	r2, #1
 8004364:	4619      	mov	r1, r3
 8004366:	601a      	str	r2, [r3, #0]
 8004368:	680b      	ldr	r3, [r1, #0]
 800436a:	2b00      	cmp	r3, #0
 800436c:	d1fc      	bne.n	8004368 <ai_platform_network_init+0x144>
 800436e:	4b19      	ldr	r3, [pc, #100]	; (80043d4 <ai_platform_network_init+0x1b0>)
 8004370:	4915      	ldr	r1, [pc, #84]	; (80043c8 <ai_platform_network_init+0x1a4>)
 8004372:	4a16      	ldr	r2, [pc, #88]	; (80043cc <ai_platform_network_init+0x1a8>)
 8004374:	6019      	str	r1, [r3, #0]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	4293      	cmp	r3, r2
 800437a:	d0d1      	beq.n	8004320 <ai_platform_network_init+0xfc>
 800437c:	e7fe      	b.n	800437c <ai_platform_network_init+0x158>
 800437e:	8c09      	ldrh	r1, [r1, #32]
 8004380:	8be2      	ldrh	r2, [r4, #30]
 8004382:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004384:	fb02 f201 	mul.w	r2, r2, r1
 8004388:	fb03 f302 	mul.w	r3, r3, r2
 800438c:	2b00      	cmp	r3, #0
 800438e:	f43f af73 	beq.w	8004278 <ai_platform_network_init+0x54>
 8004392:	2213      	movs	r2, #19
 8004394:	2110      	movs	r1, #16
 8004396:	3010      	adds	r0, #16
 8004398:	f000 fcce 	bl	8004d38 <core_set_error>
 800439c:	4638      	mov	r0, r7
 800439e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043a0:	2211      	movs	r2, #17
 80043a2:	2110      	movs	r1, #16
 80043a4:	3010      	adds	r0, #16
 80043a6:	f000 fcc7 	bl	8004d38 <core_set_error>
 80043aa:	4620      	mov	r0, r4
 80043ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043ae:	bf00      	nop
 80043b0:	a1c00100 	.word	0xa1c00100
 80043b4:	e0002000 	.word	0xe0002000
 80043b8:	e0042000 	.word	0xe0042000
 80043bc:	5c001000 	.word	0x5c001000
 80043c0:	40023008 	.word	0x40023008
 80043c4:	40023000 	.word	0x40023000
 80043c8:	f407a5c2 	.word	0xf407a5c2
 80043cc:	b5e8b5cd 	.word	0xb5e8b5cd
 80043d0:	58024c08 	.word	0x58024c08
 80043d4:	58024c00 	.word	0x58024c00

080043d8 <ai_platform_network_post_init>:
 80043d8:	b538      	push	{r3, r4, r5, lr}
 80043da:	b118      	cbz	r0, 80043e4 <ai_platform_network_post_init+0xc>
 80043dc:	4b4b      	ldr	r3, [pc, #300]	; (800450c <ai_platform_network_post_init+0x134>)
 80043de:	6802      	ldr	r2, [r0, #0]
 80043e0:	429a      	cmp	r2, r3
 80043e2:	d029      	beq.n	8004438 <ai_platform_network_post_init+0x60>
 80043e4:	4a4a      	ldr	r2, [pc, #296]	; (8004510 <ai_platform_network_post_init+0x138>)
 80043e6:	494b      	ldr	r1, [pc, #300]	; (8004514 <ai_platform_network_post_init+0x13c>)
 80043e8:	6813      	ldr	r3, [r2, #0]
 80043ea:	f023 0301 	bic.w	r3, r3, #1
 80043ee:	6013      	str	r3, [r2, #0]
 80043f0:	680b      	ldr	r3, [r1, #0]
 80043f2:	f46f 618a 	mvn.w	r1, #1104	; 0x450
 80043f6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80043fa:	185a      	adds	r2, r3, r1
 80043fc:	2a01      	cmp	r2, #1
 80043fe:	d90c      	bls.n	800441a <ai_platform_network_post_init+0x42>
 8004400:	f240 4249 	movw	r2, #1097	; 0x449
 8004404:	4293      	cmp	r3, r2
 8004406:	d008      	beq.n	800441a <ai_platform_network_post_init+0x42>
 8004408:	4b43      	ldr	r3, [pc, #268]	; (8004518 <ai_platform_network_post_init+0x140>)
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004410:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004414:	d046      	beq.n	80044a4 <ai_platform_network_post_init+0xcc>
 8004416:	2000      	movs	r0, #0
 8004418:	bd38      	pop	{r3, r4, r5, pc}
 800441a:	4b40      	ldr	r3, [pc, #256]	; (800451c <ai_platform_network_post_init+0x144>)
 800441c:	2201      	movs	r2, #1
 800441e:	4619      	mov	r1, r3
 8004420:	601a      	str	r2, [r3, #0]
 8004422:	680b      	ldr	r3, [r1, #0]
 8004424:	2b00      	cmp	r3, #0
 8004426:	d1fc      	bne.n	8004422 <ai_platform_network_post_init+0x4a>
 8004428:	4b3d      	ldr	r3, [pc, #244]	; (8004520 <ai_platform_network_post_init+0x148>)
 800442a:	493e      	ldr	r1, [pc, #248]	; (8004524 <ai_platform_network_post_init+0x14c>)
 800442c:	4a3e      	ldr	r2, [pc, #248]	; (8004528 <ai_platform_network_post_init+0x150>)
 800442e:	6019      	str	r1, [r3, #0]
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	4293      	cmp	r3, r2
 8004434:	d0ef      	beq.n	8004416 <ai_platform_network_post_init+0x3e>
 8004436:	e7fe      	b.n	8004436 <ai_platform_network_post_init+0x5e>
 8004438:	4a35      	ldr	r2, [pc, #212]	; (8004510 <ai_platform_network_post_init+0x138>)
 800443a:	4936      	ldr	r1, [pc, #216]	; (8004514 <ai_platform_network_post_init+0x13c>)
 800443c:	6813      	ldr	r3, [r2, #0]
 800443e:	f023 0301 	bic.w	r3, r3, #1
 8004442:	6013      	str	r3, [r2, #0]
 8004444:	f46f 628a 	mvn.w	r2, #1104	; 0x450
 8004448:	680b      	ldr	r3, [r1, #0]
 800444a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800444e:	189a      	adds	r2, r3, r2
 8004450:	2a01      	cmp	r2, #1
 8004452:	d94c      	bls.n	80044ee <ai_platform_network_post_init+0x116>
 8004454:	f240 4249 	movw	r2, #1097	; 0x449
 8004458:	4293      	cmp	r3, r2
 800445a:	d048      	beq.n	80044ee <ai_platform_network_post_init+0x116>
 800445c:	4b2e      	ldr	r3, [pc, #184]	; (8004518 <ai_platform_network_post_init+0x140>)
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004464:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8004468:	d032      	beq.n	80044d0 <ai_platform_network_post_init+0xf8>
 800446a:	68c3      	ldr	r3, [r0, #12]
 800446c:	4604      	mov	r4, r0
 800446e:	f013 0502 	ands.w	r5, r3, #2
 8004472:	d026      	beq.n	80044c2 <ai_platform_network_post_init+0xea>
 8004474:	f001 fcc2 	bl	8005dfc <ai_layers_post_init_all>
 8004478:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800447a:	b18b      	cbz	r3, 80044a0 <ai_platform_network_post_init+0xc8>
 800447c:	6d25      	ldr	r5, [r4, #80]	; 0x50
 800447e:	b90d      	cbnz	r5, 8004484 <ai_platform_network_post_init+0xac>
 8004480:	e00e      	b.n	80044a0 <ai_platform_network_post_init+0xc8>
 8004482:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004484:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8004486:	4629      	mov	r1, r5
 8004488:	2000      	movs	r0, #0
 800448a:	4798      	blx	r3
 800448c:	692a      	ldr	r2, [r5, #16]
 800448e:	1b53      	subs	r3, r2, r5
 8004490:	4615      	mov	r5, r2
 8004492:	bf18      	it	ne
 8004494:	2301      	movne	r3, #1
 8004496:	2a00      	cmp	r2, #0
 8004498:	bf08      	it	eq
 800449a:	2300      	moveq	r3, #0
 800449c:	2b00      	cmp	r3, #0
 800449e:	d1f0      	bne.n	8004482 <ai_platform_network_post_init+0xaa>
 80044a0:	2001      	movs	r0, #1
 80044a2:	bd38      	pop	{r3, r4, r5, pc}
 80044a4:	4b21      	ldr	r3, [pc, #132]	; (800452c <ai_platform_network_post_init+0x154>)
 80044a6:	2201      	movs	r2, #1
 80044a8:	4619      	mov	r1, r3
 80044aa:	601a      	str	r2, [r3, #0]
 80044ac:	680b      	ldr	r3, [r1, #0]
 80044ae:	2b00      	cmp	r3, #0
 80044b0:	d1fc      	bne.n	80044ac <ai_platform_network_post_init+0xd4>
 80044b2:	4b1f      	ldr	r3, [pc, #124]	; (8004530 <ai_platform_network_post_init+0x158>)
 80044b4:	491b      	ldr	r1, [pc, #108]	; (8004524 <ai_platform_network_post_init+0x14c>)
 80044b6:	4a1c      	ldr	r2, [pc, #112]	; (8004528 <ai_platform_network_post_init+0x150>)
 80044b8:	6019      	str	r1, [r3, #0]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	4293      	cmp	r3, r2
 80044be:	d0aa      	beq.n	8004416 <ai_platform_network_post_init+0x3e>
 80044c0:	e7fe      	b.n	80044c0 <ai_platform_network_post_init+0xe8>
 80044c2:	2210      	movs	r2, #16
 80044c4:	2111      	movs	r1, #17
 80044c6:	3010      	adds	r0, #16
 80044c8:	f000 fc36 	bl	8004d38 <core_set_error>
 80044cc:	4628      	mov	r0, r5
 80044ce:	bd38      	pop	{r3, r4, r5, pc}
 80044d0:	4b16      	ldr	r3, [pc, #88]	; (800452c <ai_platform_network_post_init+0x154>)
 80044d2:	2201      	movs	r2, #1
 80044d4:	4619      	mov	r1, r3
 80044d6:	601a      	str	r2, [r3, #0]
 80044d8:	680b      	ldr	r3, [r1, #0]
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d1fc      	bne.n	80044d8 <ai_platform_network_post_init+0x100>
 80044de:	4b14      	ldr	r3, [pc, #80]	; (8004530 <ai_platform_network_post_init+0x158>)
 80044e0:	4910      	ldr	r1, [pc, #64]	; (8004524 <ai_platform_network_post_init+0x14c>)
 80044e2:	4a11      	ldr	r2, [pc, #68]	; (8004528 <ai_platform_network_post_init+0x150>)
 80044e4:	6019      	str	r1, [r3, #0]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	4293      	cmp	r3, r2
 80044ea:	d0be      	beq.n	800446a <ai_platform_network_post_init+0x92>
 80044ec:	e7fe      	b.n	80044ec <ai_platform_network_post_init+0x114>
 80044ee:	4b0b      	ldr	r3, [pc, #44]	; (800451c <ai_platform_network_post_init+0x144>)
 80044f0:	2201      	movs	r2, #1
 80044f2:	4619      	mov	r1, r3
 80044f4:	601a      	str	r2, [r3, #0]
 80044f6:	680b      	ldr	r3, [r1, #0]
 80044f8:	2b00      	cmp	r3, #0
 80044fa:	d1fc      	bne.n	80044f6 <ai_platform_network_post_init+0x11e>
 80044fc:	4b08      	ldr	r3, [pc, #32]	; (8004520 <ai_platform_network_post_init+0x148>)
 80044fe:	4909      	ldr	r1, [pc, #36]	; (8004524 <ai_platform_network_post_init+0x14c>)
 8004500:	4a09      	ldr	r2, [pc, #36]	; (8004528 <ai_platform_network_post_init+0x150>)
 8004502:	6019      	str	r1, [r3, #0]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	4293      	cmp	r3, r2
 8004508:	d0af      	beq.n	800446a <ai_platform_network_post_init+0x92>
 800450a:	e7fe      	b.n	800450a <ai_platform_network_post_init+0x132>
 800450c:	a1c00100 	.word	0xa1c00100
 8004510:	e0002000 	.word	0xe0002000
 8004514:	e0042000 	.word	0xe0042000
 8004518:	5c001000 	.word	0x5c001000
 800451c:	40023008 	.word	0x40023008
 8004520:	40023000 	.word	0x40023000
 8004524:	f407a5c2 	.word	0xf407a5c2
 8004528:	b5e8b5cd 	.word	0xb5e8b5cd
 800452c:	58024c08 	.word	0x58024c08
 8004530:	58024c00 	.word	0x58024c00

08004534 <ai_platform_network_process>:
 8004534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004538:	4617      	mov	r7, r2
 800453a:	b083      	sub	sp, #12
 800453c:	4604      	mov	r4, r0
 800453e:	b120      	cbz	r0, 800454a <ai_platform_network_process+0x16>
 8004540:	4b89      	ldr	r3, [pc, #548]	; (8004768 <ai_platform_network_process+0x234>)
 8004542:	6802      	ldr	r2, [r0, #0]
 8004544:	429a      	cmp	r2, r3
 8004546:	bf18      	it	ne
 8004548:	2400      	movne	r4, #0
 800454a:	4a88      	ldr	r2, [pc, #544]	; (800476c <ai_platform_network_process+0x238>)
 800454c:	4888      	ldr	r0, [pc, #544]	; (8004770 <ai_platform_network_process+0x23c>)
 800454e:	6813      	ldr	r3, [r2, #0]
 8004550:	f023 0301 	bic.w	r3, r3, #1
 8004554:	6013      	str	r3, [r2, #0]
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	f46f 608a 	mvn.w	r0, #1104	; 0x450
 800455c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004560:	181a      	adds	r2, r3, r0
 8004562:	2a01      	cmp	r2, #1
 8004564:	f240 80cc 	bls.w	8004700 <ai_platform_network_process+0x1cc>
 8004568:	f240 4249 	movw	r2, #1097	; 0x449
 800456c:	4293      	cmp	r3, r2
 800456e:	f000 80c7 	beq.w	8004700 <ai_platform_network_process+0x1cc>
 8004572:	4b80      	ldr	r3, [pc, #512]	; (8004774 <ai_platform_network_process+0x240>)
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800457a:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800457e:	f000 80af 	beq.w	80046e0 <ai_platform_network_process+0x1ac>
 8004582:	2c00      	cmp	r4, #0
 8004584:	f000 80e1 	beq.w	800474a <ai_platform_network_process+0x216>
 8004588:	68e2      	ldr	r2, [r4, #12]
 800458a:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 800458e:	f002 0203 	and.w	r2, r2, #3
 8004592:	2b00      	cmp	r3, #0
 8004594:	f000 80c4 	beq.w	8004720 <ai_platform_network_process+0x1ec>
 8004598:	2000      	movs	r0, #0
 800459a:	2a03      	cmp	r2, #3
 800459c:	f8d4 a04c 	ldr.w	sl, [r4, #76]	; 0x4c
 80045a0:	6160      	str	r0, [r4, #20]
 80045a2:	f040 80cc 	bne.w	800473e <ai_platform_network_process+0x20a>
 80045a6:	2900      	cmp	r1, #0
 80045a8:	f000 80bd 	beq.w	8004726 <ai_platform_network_process+0x1f2>
 80045ac:	faba f28a 	clz	r2, sl
 80045b0:	0952      	lsrs	r2, r2, #5
 80045b2:	2a00      	cmp	r2, #0
 80045b4:	f040 80b7 	bne.w	8004726 <ai_platform_network_process+0x1f2>
 80045b8:	f8ba 0000 	ldrh.w	r0, [sl]
 80045bc:	2800      	cmp	r0, #0
 80045be:	f000 80b2 	beq.w	8004726 <ai_platform_network_process+0x1f2>
 80045c2:	888d      	ldrh	r5, [r1, #4]
 80045c4:	f8da 0004 	ldr.w	r0, [sl, #4]
 80045c8:	9501      	str	r5, [sp, #4]
 80045ca:	2800      	cmp	r0, #0
 80045cc:	f000 80e2 	beq.w	8004794 <ai_platform_network_process+0x260>
 80045d0:	6806      	ldr	r6, [r0, #0]
 80045d2:	2e00      	cmp	r6, #0
 80045d4:	f000 80de 	beq.w	8004794 <ai_platform_network_process+0x260>
 80045d8:	f8da 3008 	ldr.w	r3, [sl, #8]
 80045dc:	f8d3 9000 	ldr.w	r9, [r3]
 80045e0:	f1b9 0f00 	cmp.w	r9, #0
 80045e4:	f000 809f 	beq.w	8004726 <ai_platform_network_process+0x1f2>
 80045e8:	460d      	mov	r5, r1
 80045ea:	4690      	mov	r8, r2
 80045ec:	e061      	b.n	80046b2 <ai_platform_network_process+0x17e>
 80045ee:	68f3      	ldr	r3, [r6, #12]
 80045f0:	68da      	ldr	r2, [r3, #12]
 80045f2:	455a      	cmp	r2, fp
 80045f4:	d16b      	bne.n	80046ce <ai_platform_network_process+0x19a>
 80045f6:	689a      	ldr	r2, [r3, #8]
 80045f8:	4572      	cmp	r2, lr
 80045fa:	d168      	bne.n	80046ce <ai_platform_network_process+0x19a>
 80045fc:	685b      	ldr	r3, [r3, #4]
 80045fe:	459c      	cmp	ip, r3
 8004600:	d165      	bne.n	80046ce <ai_platform_network_process+0x19a>
 8004602:	6800      	ldr	r0, [r0, #0]
 8004604:	f006 fece 	bl	800b3a4 <ai_array_get_byte_size>
 8004608:	68f2      	ldr	r2, [r6, #12]
 800460a:	6973      	ldr	r3, [r6, #20]
 800460c:	68d2      	ldr	r2, [r2, #12]
 800460e:	68db      	ldr	r3, [r3, #12]
 8004610:	fb03 f302 	mul.w	r3, r3, r2
 8004614:	4298      	cmp	r0, r3
 8004616:	d35a      	bcc.n	80046ce <ai_platform_network_process+0x19a>
 8004618:	69b3      	ldr	r3, [r6, #24]
 800461a:	6818      	ldr	r0, [r3, #0]
 800461c:	f006 fe76 	bl	800b30c <ai_array_to_buffer_fmt>
 8004620:	682b      	ldr	r3, [r5, #0]
 8004622:	4043      	eors	r3, r0
 8004624:	f033 437e 	bics.w	r3, r3, #4261412864	; 0xfe000000
 8004628:	f040 8226 	bne.w	8004a78 <ai_platform_network_process+0x544>
 800462c:	692b      	ldr	r3, [r5, #16]
 800462e:	2b00      	cmp	r3, #0
 8004630:	f000 821a 	beq.w	8004a68 <ai_platform_network_process+0x534>
 8004634:	88ab      	ldrh	r3, [r5, #4]
 8004636:	2b00      	cmp	r3, #0
 8004638:	f000 808d 	beq.w	8004756 <ai_platform_network_process+0x222>
 800463c:	9a01      	ldr	r2, [sp, #4]
 800463e:	68f1      	ldr	r1, [r6, #12]
 8004640:	429a      	cmp	r2, r3
 8004642:	68c9      	ldr	r1, [r1, #12]
 8004644:	bf38      	it	cc
 8004646:	461a      	movcc	r2, r3
 8004648:	9201      	str	r2, [sp, #4]
 800464a:	6972      	ldr	r2, [r6, #20]
 800464c:	68d3      	ldr	r3, [r2, #12]
 800464e:	fb03 f301 	mul.w	r3, r3, r1
 8004652:	f8c9 3008 	str.w	r3, [r9, #8]
 8004656:	88aa      	ldrh	r2, [r5, #4]
 8004658:	fb03 f302 	mul.w	r3, r3, r2
 800465c:	f8c9 300c 	str.w	r3, [r9, #12]
 8004660:	6929      	ldr	r1, [r5, #16]
 8004662:	f8c9 1004 	str.w	r1, [r9, #4]
 8004666:	692a      	ldr	r2, [r5, #16]
 8004668:	4413      	add	r3, r2
 800466a:	f8c9 3000 	str.w	r3, [r9]
 800466e:	69b0      	ldr	r0, [r6, #24]
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	009a      	lsls	r2, r3, #2
 8004674:	d408      	bmi.n	8004688 <ai_platform_network_process+0x154>
 8004676:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 800467a:	1a9b      	subs	r3, r3, r2
 800467c:	4419      	add	r1, r3
 800467e:	6081      	str	r1, [r0, #8]
 8004680:	69b3      	ldr	r3, [r6, #24]
 8004682:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8004686:	60da      	str	r2, [r3, #12]
 8004688:	f108 0801 	add.w	r8, r8, #1
 800468c:	f8ba 3000 	ldrh.w	r3, [sl]
 8004690:	4598      	cmp	r8, r3
 8004692:	d27d      	bcs.n	8004790 <ai_platform_network_process+0x25c>
 8004694:	f8da 3004 	ldr.w	r3, [sl, #4]
 8004698:	2b00      	cmp	r3, #0
 800469a:	d079      	beq.n	8004790 <ai_platform_network_process+0x25c>
 800469c:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
 80046a0:	2e00      	cmp	r6, #0
 80046a2:	d075      	beq.n	8004790 <ai_platform_network_process+0x25c>
 80046a4:	f8da 3008 	ldr.w	r3, [sl, #8]
 80046a8:	3518      	adds	r5, #24
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	eb13 1908 	adds.w	r9, r3, r8, lsl #4
 80046b0:	d039      	beq.n	8004726 <ai_platform_network_process+0x1f2>
 80046b2:	f8b5 e008 	ldrh.w	lr, [r5, #8]
 80046b6:	f8b5 b006 	ldrh.w	fp, [r5, #6]
 80046ba:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 80046be:	fb0b f30e 	mul.w	r3, fp, lr
 80046c2:	69b0      	ldr	r0, [r6, #24]
 80046c4:	fb0c f303 	mul.w	r3, ip, r3
 80046c8:	6841      	ldr	r1, [r0, #4]
 80046ca:	4299      	cmp	r1, r3
 80046cc:	d28f      	bcs.n	80045ee <ai_platform_network_process+0xba>
 80046ce:	f104 0010 	add.w	r0, r4, #16
 80046d2:	2218      	movs	r2, #24
 80046d4:	2112      	movs	r1, #18
 80046d6:	f04f 0b00 	mov.w	fp, #0
 80046da:	f000 fb2d 	bl	8004d38 <core_set_error>
 80046de:	e02a      	b.n	8004736 <ai_platform_network_process+0x202>
 80046e0:	4b25      	ldr	r3, [pc, #148]	; (8004778 <ai_platform_network_process+0x244>)
 80046e2:	2201      	movs	r2, #1
 80046e4:	4618      	mov	r0, r3
 80046e6:	601a      	str	r2, [r3, #0]
 80046e8:	6803      	ldr	r3, [r0, #0]
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d1fc      	bne.n	80046e8 <ai_platform_network_process+0x1b4>
 80046ee:	4b23      	ldr	r3, [pc, #140]	; (800477c <ai_platform_network_process+0x248>)
 80046f0:	4823      	ldr	r0, [pc, #140]	; (8004780 <ai_platform_network_process+0x24c>)
 80046f2:	4a24      	ldr	r2, [pc, #144]	; (8004784 <ai_platform_network_process+0x250>)
 80046f4:	6018      	str	r0, [r3, #0]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	4293      	cmp	r3, r2
 80046fa:	f43f af42 	beq.w	8004582 <ai_platform_network_process+0x4e>
 80046fe:	e7fe      	b.n	80046fe <ai_platform_network_process+0x1ca>
 8004700:	4b21      	ldr	r3, [pc, #132]	; (8004788 <ai_platform_network_process+0x254>)
 8004702:	2201      	movs	r2, #1
 8004704:	4618      	mov	r0, r3
 8004706:	601a      	str	r2, [r3, #0]
 8004708:	6803      	ldr	r3, [r0, #0]
 800470a:	2b00      	cmp	r3, #0
 800470c:	d1fc      	bne.n	8004708 <ai_platform_network_process+0x1d4>
 800470e:	4b1f      	ldr	r3, [pc, #124]	; (800478c <ai_platform_network_process+0x258>)
 8004710:	481b      	ldr	r0, [pc, #108]	; (8004780 <ai_platform_network_process+0x24c>)
 8004712:	4a1c      	ldr	r2, [pc, #112]	; (8004784 <ai_platform_network_process+0x250>)
 8004714:	6018      	str	r0, [r3, #0]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	4293      	cmp	r3, r2
 800471a:	f43f af32 	beq.w	8004582 <ai_platform_network_process+0x4e>
 800471e:	e7fe      	b.n	800471e <ai_platform_network_process+0x1ea>
 8004720:	2a03      	cmp	r2, #3
 8004722:	6163      	str	r3, [r4, #20]
 8004724:	d10b      	bne.n	800473e <ai_platform_network_process+0x20a>
 8004726:	f04f 0b00 	mov.w	fp, #0
 800472a:	f104 0010 	add.w	r0, r4, #16
 800472e:	2217      	movs	r2, #23
 8004730:	2112      	movs	r1, #18
 8004732:	f000 fb01 	bl	8004d38 <core_set_error>
 8004736:	4658      	mov	r0, fp
 8004738:	b003      	add	sp, #12
 800473a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800473e:	f104 0010 	add.w	r0, r4, #16
 8004742:	2230      	movs	r2, #48	; 0x30
 8004744:	2111      	movs	r1, #17
 8004746:	f000 faf7 	bl	8004d38 <core_set_error>
 800474a:	f04f 0b00 	mov.w	fp, #0
 800474e:	4658      	mov	r0, fp
 8004750:	b003      	add	sp, #12
 8004752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004756:	f104 0010 	add.w	r0, r4, #16
 800475a:	2221      	movs	r2, #33	; 0x21
 800475c:	2112      	movs	r1, #18
 800475e:	469b      	mov	fp, r3
 8004760:	f000 faea 	bl	8004d38 <core_set_error>
 8004764:	e7e7      	b.n	8004736 <ai_platform_network_process+0x202>
 8004766:	bf00      	nop
 8004768:	a1c00100 	.word	0xa1c00100
 800476c:	e0002000 	.word	0xe0002000
 8004770:	e0042000 	.word	0xe0042000
 8004774:	5c001000 	.word	0x5c001000
 8004778:	58024c08 	.word	0x58024c08
 800477c:	58024c00 	.word	0x58024c00
 8004780:	f407a5c2 	.word	0xf407a5c2
 8004784:	b5e8b5cd 	.word	0xb5e8b5cd
 8004788:	40023008 	.word	0x40023008
 800478c:	40023000 	.word	0x40023000
 8004790:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 8004794:	2f00      	cmp	r7, #0
 8004796:	f000 80ab 	beq.w	80048f0 <ai_platform_network_process+0x3bc>
 800479a:	2b01      	cmp	r3, #1
 800479c:	f240 809c 	bls.w	80048d8 <ai_platform_network_process+0x3a4>
 80047a0:	f8d4 a04c 	ldr.w	sl, [r4, #76]	; 0x4c
 80047a4:	f11a 0f0c 	cmn.w	sl, #12
 80047a8:	f000 8096 	beq.w	80048d8 <ai_platform_network_process+0x3a4>
 80047ac:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	f000 8091 	beq.w	80048d8 <ai_platform_network_process+0x3a4>
 80047b6:	463d      	mov	r5, r7
 80047b8:	f04f 0900 	mov.w	r9, #0
 80047bc:	9400      	str	r4, [sp, #0]
 80047be:	4599      	cmp	r9, r3
 80047c0:	f080 8093 	bcs.w	80048ea <ai_platform_network_process+0x3b6>
 80047c4:	f8da 3010 	ldr.w	r3, [sl, #16]
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	f000 808e 	beq.w	80048ea <ai_platform_network_process+0x3b6>
 80047ce:	f853 6029 	ldr.w	r6, [r3, r9, lsl #2]
 80047d2:	2e00      	cmp	r6, #0
 80047d4:	f000 8089 	beq.w	80048ea <ai_platform_network_process+0x3b6>
 80047d8:	f8da 3014 	ldr.w	r3, [sl, #20]
 80047dc:	ea4f 1409 	mov.w	r4, r9, lsl #4
 80047e0:	f8d3 8000 	ldr.w	r8, [r3]
 80047e4:	eb18 0704 	adds.w	r7, r8, r4
 80047e8:	f000 8135 	beq.w	8004a56 <ai_platform_network_process+0x522>
 80047ec:	f8b5 e008 	ldrh.w	lr, [r5, #8]
 80047f0:	f8b5 b006 	ldrh.w	fp, [r5, #6]
 80047f4:	f8d5 c00c 	ldr.w	ip, [r5, #12]
 80047f8:	fb0b f30e 	mul.w	r3, fp, lr
 80047fc:	69b0      	ldr	r0, [r6, #24]
 80047fe:	fb0c f303 	mul.w	r3, ip, r3
 8004802:	6841      	ldr	r1, [r0, #4]
 8004804:	4299      	cmp	r1, r3
 8004806:	d366      	bcc.n	80048d6 <ai_platform_network_process+0x3a2>
 8004808:	68f3      	ldr	r3, [r6, #12]
 800480a:	68da      	ldr	r2, [r3, #12]
 800480c:	455a      	cmp	r2, fp
 800480e:	d162      	bne.n	80048d6 <ai_platform_network_process+0x3a2>
 8004810:	689a      	ldr	r2, [r3, #8]
 8004812:	4572      	cmp	r2, lr
 8004814:	d15f      	bne.n	80048d6 <ai_platform_network_process+0x3a2>
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	459c      	cmp	ip, r3
 800481a:	d15c      	bne.n	80048d6 <ai_platform_network_process+0x3a2>
 800481c:	6800      	ldr	r0, [r0, #0]
 800481e:	f006 fdc1 	bl	800b3a4 <ai_array_get_byte_size>
 8004822:	68f2      	ldr	r2, [r6, #12]
 8004824:	6973      	ldr	r3, [r6, #20]
 8004826:	68d2      	ldr	r2, [r2, #12]
 8004828:	68db      	ldr	r3, [r3, #12]
 800482a:	fb03 f302 	mul.w	r3, r3, r2
 800482e:	4298      	cmp	r0, r3
 8004830:	d351      	bcc.n	80048d6 <ai_platform_network_process+0x3a2>
 8004832:	69b3      	ldr	r3, [r6, #24]
 8004834:	6818      	ldr	r0, [r3, #0]
 8004836:	f006 fd69 	bl	800b30c <ai_array_to_buffer_fmt>
 800483a:	682b      	ldr	r3, [r5, #0]
 800483c:	4043      	eors	r3, r0
 800483e:	f033 437e 	bics.w	r3, r3, #4261412864	; 0xfe000000
 8004842:	d13e      	bne.n	80048c2 <ai_platform_network_process+0x38e>
 8004844:	692b      	ldr	r3, [r5, #16]
 8004846:	2b00      	cmp	r3, #0
 8004848:	d032      	beq.n	80048b0 <ai_platform_network_process+0x37c>
 800484a:	88ab      	ldrh	r3, [r5, #4]
 800484c:	b33b      	cbz	r3, 800489e <ai_platform_network_process+0x36a>
 800484e:	9a01      	ldr	r2, [sp, #4]
 8004850:	68f1      	ldr	r1, [r6, #12]
 8004852:	429a      	cmp	r2, r3
 8004854:	68c9      	ldr	r1, [r1, #12]
 8004856:	bf38      	it	cc
 8004858:	461a      	movcc	r2, r3
 800485a:	9201      	str	r2, [sp, #4]
 800485c:	6972      	ldr	r2, [r6, #20]
 800485e:	68d3      	ldr	r3, [r2, #12]
 8004860:	fb03 f301 	mul.w	r3, r3, r1
 8004864:	60bb      	str	r3, [r7, #8]
 8004866:	88aa      	ldrh	r2, [r5, #4]
 8004868:	fb03 f302 	mul.w	r3, r3, r2
 800486c:	60fb      	str	r3, [r7, #12]
 800486e:	6929      	ldr	r1, [r5, #16]
 8004870:	6079      	str	r1, [r7, #4]
 8004872:	692a      	ldr	r2, [r5, #16]
 8004874:	4413      	add	r3, r2
 8004876:	f848 3004 	str.w	r3, [r8, r4]
 800487a:	69b0      	ldr	r0, [r6, #24]
 800487c:	6803      	ldr	r3, [r0, #0]
 800487e:	009b      	lsls	r3, r3, #2
 8004880:	d407      	bmi.n	8004892 <ai_platform_network_process+0x35e>
 8004882:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 8004886:	1a9b      	subs	r3, r3, r2
 8004888:	4419      	add	r1, r3
 800488a:	6081      	str	r1, [r0, #8]
 800488c:	687a      	ldr	r2, [r7, #4]
 800488e:	69b3      	ldr	r3, [r6, #24]
 8004890:	60da      	str	r2, [r3, #12]
 8004892:	f109 0901 	add.w	r9, r9, #1
 8004896:	3518      	adds	r5, #24
 8004898:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800489c:	e78f      	b.n	80047be <ai_platform_network_process+0x28a>
 800489e:	9c00      	ldr	r4, [sp, #0]
 80048a0:	2221      	movs	r2, #33	; 0x21
 80048a2:	2113      	movs	r1, #19
 80048a4:	469b      	mov	fp, r3
 80048a6:	f104 0010 	add.w	r0, r4, #16
 80048aa:	f000 fa45 	bl	8004d38 <core_set_error>
 80048ae:	e742      	b.n	8004736 <ai_platform_network_process+0x202>
 80048b0:	9c00      	ldr	r4, [sp, #0]
 80048b2:	2217      	movs	r2, #23
 80048b4:	2113      	movs	r1, #19
 80048b6:	469b      	mov	fp, r3
 80048b8:	f104 0010 	add.w	r0, r4, #16
 80048bc:	f000 fa3c 	bl	8004d38 <core_set_error>
 80048c0:	e739      	b.n	8004736 <ai_platform_network_process+0x202>
 80048c2:	9c00      	ldr	r4, [sp, #0]
 80048c4:	2219      	movs	r2, #25
 80048c6:	2113      	movs	r1, #19
 80048c8:	f04f 0b00 	mov.w	fp, #0
 80048cc:	f104 0010 	add.w	r0, r4, #16
 80048d0:	f000 fa32 	bl	8004d38 <core_set_error>
 80048d4:	e72f      	b.n	8004736 <ai_platform_network_process+0x202>
 80048d6:	9c00      	ldr	r4, [sp, #0]
 80048d8:	f104 0010 	add.w	r0, r4, #16
 80048dc:	2218      	movs	r2, #24
 80048de:	2113      	movs	r1, #19
 80048e0:	f04f 0b00 	mov.w	fp, #0
 80048e4:	f000 fa28 	bl	8004d38 <core_set_error>
 80048e8:	e725      	b.n	8004736 <ai_platform_network_process+0x202>
 80048ea:	9c00      	ldr	r4, [sp, #0]
 80048ec:	f8b4 3048 	ldrh.w	r3, [r4, #72]	; 0x48
 80048f0:	9a01      	ldr	r2, [sp, #4]
 80048f2:	82a2      	strh	r2, [r4, #20]
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	f000 80a9 	beq.w	8004a4c <ai_platform_network_process+0x518>
 80048fa:	2b01      	cmp	r3, #1
 80048fc:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 80048fe:	f240 80a8 	bls.w	8004a52 <ai_platform_network_process+0x51e>
 8004902:	f105 060c 	add.w	r6, r5, #12
 8004906:	f8b4 b016 	ldrh.w	fp, [r4, #22]
 800490a:	8aa3      	ldrh	r3, [r4, #20]
 800490c:	455b      	cmp	r3, fp
 800490e:	f67f af12 	bls.w	8004736 <ai_platform_network_process+0x202>
 8004912:	9400      	str	r4, [sp, #0]
 8004914:	2d00      	cmp	r5, #0
 8004916:	d037      	beq.n	8004988 <ai_platform_network_process+0x454>
 8004918:	882b      	ldrh	r3, [r5, #0]
 800491a:	2b00      	cmp	r3, #0
 800491c:	d034      	beq.n	8004988 <ai_platform_network_process+0x454>
 800491e:	686b      	ldr	r3, [r5, #4]
 8004920:	2b00      	cmp	r3, #0
 8004922:	d031      	beq.n	8004988 <ai_platform_network_process+0x454>
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	2b00      	cmp	r3, #0
 8004928:	d02e      	beq.n	8004988 <ai_platform_network_process+0x454>
 800492a:	f04f 0800 	mov.w	r8, #0
 800492e:	e01a      	b.n	8004966 <ai_platform_network_process+0x432>
 8004930:	68d4      	ldr	r4, [r2, #12]
 8004932:	1b00      	subs	r0, r0, r4
 8004934:	4401      	add	r1, r0
 8004936:	6091      	str	r1, [r2, #8]
 8004938:	687a      	ldr	r2, [r7, #4]
 800493a:	699b      	ldr	r3, [r3, #24]
 800493c:	60da      	str	r2, [r3, #12]
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	f108 0801 	add.w	r8, r8, #1
 8004944:	68b9      	ldr	r1, [r7, #8]
 8004946:	f85a 2009 	ldr.w	r2, [sl, r9]
 800494a:	440b      	add	r3, r1
 800494c:	4293      	cmp	r3, r2
 800494e:	d301      	bcc.n	8004954 <ai_platform_network_process+0x420>
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	1ad3      	subs	r3, r2, r3
 8004954:	607b      	str	r3, [r7, #4]
 8004956:	882b      	ldrh	r3, [r5, #0]
 8004958:	4598      	cmp	r8, r3
 800495a:	d215      	bcs.n	8004988 <ai_platform_network_process+0x454>
 800495c:	686b      	ldr	r3, [r5, #4]
 800495e:	b19b      	cbz	r3, 8004988 <ai_platform_network_process+0x454>
 8004960:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8004964:	b183      	cbz	r3, 8004988 <ai_platform_network_process+0x454>
 8004966:	68a9      	ldr	r1, [r5, #8]
 8004968:	ea4f 1908 	mov.w	r9, r8, lsl #4
 800496c:	699a      	ldr	r2, [r3, #24]
 800496e:	f8d1 a000 	ldr.w	sl, [r1]
 8004972:	6814      	ldr	r4, [r2, #0]
 8004974:	eb0a 0709 	add.w	r7, sl, r9
 8004978:	6890      	ldr	r0, [r2, #8]
 800497a:	00a4      	lsls	r4, r4, #2
 800497c:	6879      	ldr	r1, [r7, #4]
 800497e:	d5d7      	bpl.n	8004930 <ai_platform_network_process+0x3fc>
 8004980:	68ba      	ldr	r2, [r7, #8]
 8004982:	f007 fab9 	bl	800bef8 <memcpy>
 8004986:	e7da      	b.n	800493e <ai_platform_network_process+0x40a>
 8004988:	9800      	ldr	r0, [sp, #0]
 800498a:	f001 fa4d 	bl	8005e28 <ai_layers_forward_all>
 800498e:	2e00      	cmp	r6, #0
 8004990:	d04a      	beq.n	8004a28 <ai_platform_network_process+0x4f4>
 8004992:	8833      	ldrh	r3, [r6, #0]
 8004994:	2b00      	cmp	r3, #0
 8004996:	d047      	beq.n	8004a28 <ai_platform_network_process+0x4f4>
 8004998:	6873      	ldr	r3, [r6, #4]
 800499a:	2b00      	cmp	r3, #0
 800499c:	d044      	beq.n	8004a28 <ai_platform_network_process+0x4f4>
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	2b00      	cmp	r3, #0
 80049a2:	d041      	beq.n	8004a28 <ai_platform_network_process+0x4f4>
 80049a4:	f04f 0800 	mov.w	r8, #0
 80049a8:	e019      	b.n	80049de <ai_platform_network_process+0x4aa>
 80049aa:	f85a 2009 	ldr.w	r2, [sl, r9]
 80049ae:	4291      	cmp	r1, r2
 80049b0:	d301      	bcc.n	80049b6 <ai_platform_network_process+0x482>
 80049b2:	68f9      	ldr	r1, [r7, #12]
 80049b4:	1a51      	subs	r1, r2, r1
 80049b6:	6079      	str	r1, [r7, #4]
 80049b8:	f108 0801 	add.w	r8, r8, #1
 80049bc:	6998      	ldr	r0, [r3, #24]
 80049be:	e9d0 2402 	ldrd	r2, r4, [r0, #8]
 80049c2:	1b12      	subs	r2, r2, r4
 80049c4:	440a      	add	r2, r1
 80049c6:	6082      	str	r2, [r0, #8]
 80049c8:	687a      	ldr	r2, [r7, #4]
 80049ca:	699b      	ldr	r3, [r3, #24]
 80049cc:	60da      	str	r2, [r3, #12]
 80049ce:	8833      	ldrh	r3, [r6, #0]
 80049d0:	4598      	cmp	r8, r3
 80049d2:	d229      	bcs.n	8004a28 <ai_platform_network_process+0x4f4>
 80049d4:	6873      	ldr	r3, [r6, #4]
 80049d6:	b33b      	cbz	r3, 8004a28 <ai_platform_network_process+0x4f4>
 80049d8:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 80049dc:	b323      	cbz	r3, 8004a28 <ai_platform_network_process+0x4f4>
 80049de:	68b2      	ldr	r2, [r6, #8]
 80049e0:	ea4f 1908 	mov.w	r9, r8, lsl #4
 80049e4:	f8d3 e018 	ldr.w	lr, [r3, #24]
 80049e8:	f8d2 a000 	ldr.w	sl, [r2]
 80049ec:	f8de 1000 	ldr.w	r1, [lr]
 80049f0:	eb0a 0709 	add.w	r7, sl, r9
 80049f4:	f011 5f00 	tst.w	r1, #536870912	; 0x20000000
 80049f8:	e9d7 0201 	ldrd	r0, r2, [r7, #4]
 80049fc:	eb00 0102 	add.w	r1, r0, r2
 8004a00:	d0d3      	beq.n	80049aa <ai_platform_network_process+0x476>
 8004a02:	f8de 1008 	ldr.w	r1, [lr, #8]
 8004a06:	f007 fa77 	bl	800bef8 <memcpy>
 8004a0a:	f85a 2009 	ldr.w	r2, [sl, r9]
 8004a0e:	e9d7 3101 	ldrd	r3, r1, [r7, #4]
 8004a12:	440b      	add	r3, r1
 8004a14:	4293      	cmp	r3, r2
 8004a16:	d301      	bcc.n	8004a1c <ai_platform_network_process+0x4e8>
 8004a18:	68fb      	ldr	r3, [r7, #12]
 8004a1a:	1ad3      	subs	r3, r2, r3
 8004a1c:	607b      	str	r3, [r7, #4]
 8004a1e:	f108 0801 	add.w	r8, r8, #1
 8004a22:	8833      	ldrh	r3, [r6, #0]
 8004a24:	4598      	cmp	r8, r3
 8004a26:	d3d5      	bcc.n	80049d4 <ai_platform_network_process+0x4a0>
 8004a28:	9b00      	ldr	r3, [sp, #0]
 8004a2a:	f8b3 b016 	ldrh.w	fp, [r3, #22]
 8004a2e:	461a      	mov	r2, r3
 8004a30:	8a9b      	ldrh	r3, [r3, #20]
 8004a32:	f10b 0b01 	add.w	fp, fp, #1
 8004a36:	fa1f fb8b 	uxth.w	fp, fp
 8004a3a:	455b      	cmp	r3, fp
 8004a3c:	f8a2 b016 	strh.w	fp, [r2, #22]
 8004a40:	f63f af68 	bhi.w	8004914 <ai_platform_network_process+0x3e0>
 8004a44:	4658      	mov	r0, fp
 8004a46:	b003      	add	sp, #12
 8004a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a4c:	461d      	mov	r5, r3
 8004a4e:	461e      	mov	r6, r3
 8004a50:	e759      	b.n	8004906 <ai_platform_network_process+0x3d2>
 8004a52:	2600      	movs	r6, #0
 8004a54:	e757      	b.n	8004906 <ai_platform_network_process+0x3d2>
 8004a56:	9c00      	ldr	r4, [sp, #0]
 8004a58:	2217      	movs	r2, #23
 8004a5a:	2113      	movs	r1, #19
 8004a5c:	46bb      	mov	fp, r7
 8004a5e:	f104 0010 	add.w	r0, r4, #16
 8004a62:	f000 f969 	bl	8004d38 <core_set_error>
 8004a66:	e666      	b.n	8004736 <ai_platform_network_process+0x202>
 8004a68:	f104 0010 	add.w	r0, r4, #16
 8004a6c:	2217      	movs	r2, #23
 8004a6e:	2112      	movs	r1, #18
 8004a70:	469b      	mov	fp, r3
 8004a72:	f000 f961 	bl	8004d38 <core_set_error>
 8004a76:	e65e      	b.n	8004736 <ai_platform_network_process+0x202>
 8004a78:	f104 0010 	add.w	r0, r4, #16
 8004a7c:	2219      	movs	r2, #25
 8004a7e:	2112      	movs	r1, #18
 8004a80:	f04f 0b00 	mov.w	fp, #0
 8004a84:	f000 f958 	bl	8004d38 <core_set_error>
 8004a88:	e655      	b.n	8004736 <ai_platform_network_process+0x202>
 8004a8a:	bf00      	nop

08004a8c <node_convert>:
 8004a8c:	6982      	ldr	r2, [r0, #24]
 8004a8e:	8813      	ldrh	r3, [r2, #0]
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d04b      	beq.n	8004b2c <node_convert+0xa0>
 8004a94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a96:	6852      	ldr	r2, [r2, #4]
 8004a98:	b083      	sub	sp, #12
 8004a9a:	6855      	ldr	r5, [r2, #4]
 8004a9c:	b105      	cbz	r5, 8004aa0 <node_convert+0x14>
 8004a9e:	682d      	ldr	r5, [r5, #0]
 8004aa0:	2b01      	cmp	r3, #1
 8004aa2:	d940      	bls.n	8004b26 <node_convert+0x9a>
 8004aa4:	6916      	ldr	r6, [r2, #16]
 8004aa6:	b106      	cbz	r6, 8004aaa <node_convert+0x1e>
 8004aa8:	6836      	ldr	r6, [r6, #0]
 8004aaa:	68ab      	ldr	r3, [r5, #8]
 8004aac:	0a1b      	lsrs	r3, r3, #8
 8004aae:	f000 80e1 	beq.w	8004c74 <node_convert+0x1e8>
 8004ab2:	68e9      	ldr	r1, [r5, #12]
 8004ab4:	2401      	movs	r4, #1
 8004ab6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8004aba:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8004abe:	428b      	cmp	r3, r1
 8004ac0:	fb02 f404 	mul.w	r4, r2, r4
 8004ac4:	d1f9      	bne.n	8004aba <node_convert+0x2e>
 8004ac6:	69aa      	ldr	r2, [r5, #24]
 8004ac8:	69b7      	ldr	r7, [r6, #24]
 8004aca:	6813      	ldr	r3, [r2, #0]
 8004acc:	6890      	ldr	r0, [r2, #8]
 8004ace:	f3c3 4243 	ubfx	r2, r3, #17, #4
 8004ad2:	2a01      	cmp	r2, #1
 8004ad4:	d055      	beq.n	8004b82 <node_convert+0xf6>
 8004ad6:	6829      	ldr	r1, [r5, #0]
 8004ad8:	15da      	asrs	r2, r3, #23
 8004ada:	68bd      	ldr	r5, [r7, #8]
 8004adc:	b341      	cbz	r1, 8004b30 <node_convert+0xa4>
 8004ade:	684e      	ldr	r6, [r1, #4]
 8004ae0:	f002 0201 	and.w	r2, r2, #1
 8004ae4:	2e00      	cmp	r6, #0
 8004ae6:	f000 80c7 	beq.w	8004c78 <node_convert+0x1ec>
 8004aea:	884b      	ldrh	r3, [r1, #2]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	f000 8085 	beq.w	8004bfc <node_convert+0x170>
 8004af2:	6833      	ldr	r3, [r6, #0]
 8004af4:	ed93 7a00 	vldr	s14, [r3]
 8004af8:	6873      	ldr	r3, [r6, #4]
 8004afa:	2a00      	cmp	r2, #0
 8004afc:	f000 80d3 	beq.w	8004ca6 <node_convert+0x21a>
 8004b00:	f993 2000 	ldrsb.w	r2, [r3]
 8004b04:	b16c      	cbz	r4, 8004b22 <node_convert+0x96>
 8004b06:	4404      	add	r4, r0
 8004b08:	f910 3b01 	ldrsb.w	r3, [r0], #1
 8004b0c:	1a9b      	subs	r3, r3, r2
 8004b0e:	42a0      	cmp	r0, r4
 8004b10:	ee07 3a90 	vmov	s15, r3
 8004b14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b18:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b1c:	ece5 7a01 	vstmia	r5!, {s15}
 8004b20:	d1f2      	bne.n	8004b08 <node_convert+0x7c>
 8004b22:	b003      	add	sp, #12
 8004b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b26:	2300      	movs	r3, #0
 8004b28:	685b      	ldr	r3, [r3, #4]
 8004b2a:	deff      	udf	#255	; 0xff
 8004b2c:	685b      	ldr	r3, [r3, #4]
 8004b2e:	deff      	udf	#255	; 0xff
 8004b30:	f3c3 11c6 	ubfx	r1, r3, #7, #7
 8004b34:	f003 067f 	and.w	r6, r3, #127	; 0x7f
 8004b38:	f002 0201 	and.w	r2, r2, #1
 8004b3c:	1b8e      	subs	r6, r1, r6
 8004b3e:	2908      	cmp	r1, #8
 8004b40:	4629      	mov	r1, r5
 8004b42:	f106 0640 	add.w	r6, r6, #64	; 0x40
 8004b46:	eba6 0602 	sub.w	r6, r6, r2
 8004b4a:	4622      	mov	r2, r4
 8004b4c:	d05c      	beq.n	8004c08 <node_convert+0x17c>
 8004b4e:	f002 f899 	bl	8006c84 <arm_q15_to_float>
 8004b52:	2e00      	cmp	r6, #0
 8004b54:	d0e5      	beq.n	8004b22 <node_convert+0x96>
 8004b56:	ee07 6a90 	vmov	s15, r6
 8004b5a:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8004b5e:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8004b62:	f006 fcfd 	bl	800b560 <powf>
 8004b66:	2c00      	cmp	r4, #0
 8004b68:	d0db      	beq.n	8004b22 <node_convert+0x96>
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	ecf5 7a01 	vldmia	r5!, {s15}
 8004b70:	3301      	adds	r3, #1
 8004b72:	ee67 7a80 	vmul.f32	s15, s15, s0
 8004b76:	429c      	cmp	r4, r3
 8004b78:	ed45 7a01 	vstr	s15, [r5, #-4]
 8004b7c:	d1f6      	bne.n	8004b6c <node_convert+0xe0>
 8004b7e:	b003      	add	sp, #12
 8004b80:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b82:	683b      	ldr	r3, [r7, #0]
 8004b84:	6835      	ldr	r5, [r6, #0]
 8004b86:	15da      	asrs	r2, r3, #23
 8004b88:	2d00      	cmp	r5, #0
 8004b8a:	f000 808e 	beq.w	8004caa <node_convert+0x21e>
 8004b8e:	6869      	ldr	r1, [r5, #4]
 8004b90:	f002 0301 	and.w	r3, r2, #1
 8004b94:	68ba      	ldr	r2, [r7, #8]
 8004b96:	2900      	cmp	r1, #0
 8004b98:	d039      	beq.n	8004c0e <node_convert+0x182>
 8004b9a:	886d      	ldrh	r5, [r5, #2]
 8004b9c:	2d00      	cmp	r5, #0
 8004b9e:	d03c      	beq.n	8004c1a <node_convert+0x18e>
 8004ba0:	680d      	ldr	r5, [r1, #0]
 8004ba2:	edd5 7a00 	vldr	s15, [r5]
 8004ba6:	2b00      	cmp	r3, #0
 8004ba8:	f000 80b1 	beq.w	8004d0e <node_convert+0x282>
 8004bac:	684b      	ldr	r3, [r1, #4]
 8004bae:	f993 3000 	ldrsb.w	r3, [r3]
 8004bb2:	ee07 3a10 	vmov	s14, r3
 8004bb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8004bba:	2c00      	cmp	r4, #0
 8004bbc:	d0b1      	beq.n	8004b22 <node_convert+0x96>
 8004bbe:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 8004bc2:	4414      	add	r4, r2
 8004bc4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8004bc8:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 8004bcc:	ecf0 7a01 	vldmia	r0!, {s15}
 8004bd0:	eef0 5a47 	vmov.f32	s11, s14
 8004bd4:	eee7 5aa6 	vfma.f32	s11, s15, s13
 8004bd8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8004bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004be0:	db3b      	blt.n	8004c5a <node_convert+0x1ce>
 8004be2:	ee75 7a86 	vadd.f32	s15, s11, s12
 8004be6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bea:	ee17 3a90 	vmov	r3, s15
 8004bee:	f303 0307 	ssat	r3, #8, r3
 8004bf2:	f802 3b01 	strb.w	r3, [r2], #1
 8004bf6:	42a2      	cmp	r2, r4
 8004bf8:	d1e8      	bne.n	8004bcc <node_convert+0x140>
 8004bfa:	e792      	b.n	8004b22 <node_convert+0x96>
 8004bfc:	2a00      	cmp	r2, #0
 8004bfe:	d03d      	beq.n	8004c7c <node_convert+0x1f0>
 8004c00:	461a      	mov	r2, r3
 8004c02:	ed9f 7a48 	vldr	s14, [pc, #288]	; 8004d24 <node_convert+0x298>
 8004c06:	e77d      	b.n	8004b04 <node_convert+0x78>
 8004c08:	f002 f8a4 	bl	8006d54 <arm_q7_to_float>
 8004c0c:	e7a1      	b.n	8004b52 <node_convert+0xc6>
 8004c0e:	b133      	cbz	r3, 8004c1e <node_convert+0x192>
 8004c10:	ed9f 7a44 	vldr	s14, [pc, #272]	; 8004d24 <node_convert+0x298>
 8004c14:	eef0 7a47 	vmov.f32	s15, s14
 8004c18:	e7cf      	b.n	8004bba <node_convert+0x12e>
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d1f8      	bne.n	8004c10 <node_convert+0x184>
 8004c1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c22:	eddf 7a40 	vldr	s15, [pc, #256]	; 8004d24 <node_convert+0x298>
 8004c26:	2c00      	cmp	r4, #0
 8004c28:	f43f af7b 	beq.w	8004b22 <node_convert+0x96>
 8004c2c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8004c30:	4414      	add	r4, r2
 8004c32:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8004c36:	ecf0 7a01 	vldmia	r0!, {s15}
 8004c3a:	eeb0 6a47 	vmov.f32	s12, s14
 8004c3e:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8004c42:	eefd 7ac6 	vcvt.s32.f32	s15, s12
 8004c46:	ee17 3a90 	vmov	r3, s15
 8004c4a:	f383 0308 	usat	r3, #8, r3
 8004c4e:	f802 3b01 	strb.w	r3, [r2], #1
 8004c52:	42a2      	cmp	r2, r4
 8004c54:	d1ef      	bne.n	8004c36 <node_convert+0x1aa>
 8004c56:	b003      	add	sp, #12
 8004c58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c5a:	ee75 7ac6 	vsub.f32	s15, s11, s12
 8004c5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c62:	ee17 3a90 	vmov	r3, s15
 8004c66:	f303 0307 	ssat	r3, #8, r3
 8004c6a:	f802 3b01 	strb.w	r3, [r2], #1
 8004c6e:	4294      	cmp	r4, r2
 8004c70:	d1ac      	bne.n	8004bcc <node_convert+0x140>
 8004c72:	e756      	b.n	8004b22 <node_convert+0x96>
 8004c74:	2401      	movs	r4, #1
 8004c76:	e726      	b.n	8004ac6 <node_convert+0x3a>
 8004c78:	2a00      	cmp	r2, #0
 8004c7a:	d13f      	bne.n	8004cfc <node_convert+0x270>
 8004c7c:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8004d24 <node_convert+0x298>
 8004c80:	2c00      	cmp	r4, #0
 8004c82:	f43f af4e 	beq.w	8004b22 <node_convert+0x96>
 8004c86:	4404      	add	r4, r0
 8004c88:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004c8c:	1a9b      	subs	r3, r3, r2
 8004c8e:	42a0      	cmp	r0, r4
 8004c90:	ee07 3a90 	vmov	s15, r3
 8004c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c9c:	ece5 7a01 	vstmia	r5!, {s15}
 8004ca0:	d1f2      	bne.n	8004c88 <node_convert+0x1fc>
 8004ca2:	b003      	add	sp, #12
 8004ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004ca6:	781a      	ldrb	r2, [r3, #0]
 8004ca8:	e7ea      	b.n	8004c80 <node_convert+0x1f4>
 8004caa:	f3c3 16c6 	ubfx	r6, r3, #7, #7
 8004cae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004cb2:	f002 0201 	and.w	r2, r2, #1
 8004cb6:	1af3      	subs	r3, r6, r3
 8004cb8:	3340      	adds	r3, #64	; 0x40
 8004cba:	1a9b      	subs	r3, r3, r2
 8004cbc:	d015      	beq.n	8004cea <node_convert+0x25e>
 8004cbe:	425b      	negs	r3, r3
 8004cc0:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8004cc4:	9001      	str	r0, [sp, #4]
 8004cc6:	ee00 3a90 	vmov	s1, r3
 8004cca:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8004cce:	f006 fc47 	bl	800b560 <powf>
 8004cd2:	9801      	ldr	r0, [sp, #4]
 8004cd4:	b14c      	cbz	r4, 8004cea <node_convert+0x25e>
 8004cd6:	4603      	mov	r3, r0
 8004cd8:	ecf3 7a01 	vldmia	r3!, {s15}
 8004cdc:	3501      	adds	r5, #1
 8004cde:	ee67 7a80 	vmul.f32	s15, s15, s0
 8004ce2:	42ac      	cmp	r4, r5
 8004ce4:	ed43 7a01 	vstr	s15, [r3, #-4]
 8004ce8:	d1f6      	bne.n	8004cd8 <node_convert+0x24c>
 8004cea:	2e08      	cmp	r6, #8
 8004cec:	68b9      	ldr	r1, [r7, #8]
 8004cee:	4622      	mov	r2, r4
 8004cf0:	d008      	beq.n	8004d04 <node_convert+0x278>
 8004cf2:	b003      	add	sp, #12
 8004cf4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004cf8:	f001 be42 	b.w	8006980 <arm_float_to_q15>
 8004cfc:	4632      	mov	r2, r6
 8004cfe:	ed9f 7a09 	vldr	s14, [pc, #36]	; 8004d24 <node_convert+0x298>
 8004d02:	e6ff      	b.n	8004b04 <node_convert+0x78>
 8004d04:	b003      	add	sp, #12
 8004d06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8004d0a:	f001 bef3 	b.w	8006af4 <arm_float_to_q7>
 8004d0e:	684b      	ldr	r3, [r1, #4]
 8004d10:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8004d14:	781b      	ldrb	r3, [r3, #0]
 8004d16:	ee07 3a10 	vmov	s14, r3
 8004d1a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 8004d1e:	ee37 7a26 	vadd.f32	s14, s14, s13
 8004d22:	e780      	b.n	8004c26 <node_convert+0x19a>
 8004d24:	00000000 	.word	0x00000000

08004d28 <core_init>:
 8004d28:	2001      	movs	r0, #1
 8004d2a:	4770      	bx	lr

08004d2c <core_get_error>:
 8004d2c:	4603      	mov	r3, r0
 8004d2e:	2200      	movs	r2, #0
 8004d30:	6800      	ldr	r0, [r0, #0]
 8004d32:	601a      	str	r2, [r3, #0]
 8004d34:	4770      	bx	lr
 8004d36:	bf00      	nop

08004d38 <core_set_error>:
 8004d38:	4603      	mov	r3, r0
 8004d3a:	7800      	ldrb	r0, [r0, #0]
 8004d3c:	b930      	cbnz	r0, 8004d4c <core_set_error+0x14>
 8004d3e:	7019      	strb	r1, [r3, #0]
 8004d40:	2001      	movs	r0, #1
 8004d42:	6819      	ldr	r1, [r3, #0]
 8004d44:	f362 211f 	bfi	r1, r2, #8, #24
 8004d48:	6019      	str	r1, [r3, #0]
 8004d4a:	4770      	bx	lr
 8004d4c:	2000      	movs	r0, #0
 8004d4e:	4770      	bx	lr

08004d50 <func_dummy>:
 8004d50:	4770      	bx	lr
 8004d52:	bf00      	nop

08004d54 <forward_conv2d_integer_SSSA_ch>:
 8004d54:	6983      	ldr	r3, [r0, #24]
 8004d56:	8819      	ldrh	r1, [r3, #0]
 8004d58:	2900      	cmp	r1, #0
 8004d5a:	f000 8163 	beq.w	8005024 <forward_conv2d_integer_SSSA_ch+0x2d0>
 8004d5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d62:	685a      	ldr	r2, [r3, #4]
 8004d64:	b0ad      	sub	sp, #180	; 0xb4
 8004d66:	6853      	ldr	r3, [r2, #4]
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	f000 8296 	beq.w	800529a <forward_conv2d_integer_SSSA_ch+0x546>
 8004d6e:	f8d3 e000 	ldr.w	lr, [r3]
 8004d72:	2901      	cmp	r1, #1
 8004d74:	f240 8144 	bls.w	8005000 <forward_conv2d_integer_SSSA_ch+0x2ac>
 8004d78:	6913      	ldr	r3, [r2, #16]
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	f000 8163 	beq.w	8005046 <forward_conv2d_integer_SSSA_ch+0x2f2>
 8004d80:	681b      	ldr	r3, [r3, #0]
 8004d82:	9327      	str	r3, [sp, #156]	; 0x9c
 8004d84:	2902      	cmp	r1, #2
 8004d86:	f000 814f 	beq.w	8005028 <forward_conv2d_integer_SSSA_ch+0x2d4>
 8004d8a:	69d3      	ldr	r3, [r2, #28]
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	f040 813d 	bne.w	800500c <forward_conv2d_integer_SSSA_ch+0x2b8>
 8004d92:	469c      	mov	ip, r3
 8004d94:	f112 0418 	adds.w	r4, r2, #24
 8004d98:	d007      	beq.n	8004daa <forward_conv2d_integer_SSSA_ch+0x56>
 8004d9a:	8b14      	ldrh	r4, [r2, #24]
 8004d9c:	2c01      	cmp	r4, #1
 8004d9e:	f240 816b 	bls.w	8005078 <forward_conv2d_integer_SSSA_ch+0x324>
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	f000 8292 	beq.w	80052cc <forward_conv2d_integer_SSSA_ch+0x578>
 8004da8:	685c      	ldr	r4, [r3, #4]
 8004daa:	2903      	cmp	r1, #3
 8004dac:	f000 812b 	beq.w	8005006 <forward_conv2d_integer_SSSA_ch+0x2b2>
 8004db0:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8004db2:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8004db4:	9124      	str	r1, [sp, #144]	; 0x90
 8004db6:	2a00      	cmp	r2, #0
 8004db8:	f000 8147 	beq.w	800504a <forward_conv2d_integer_SSSA_ch+0x2f6>
 8004dbc:	6816      	ldr	r6, [r2, #0]
 8004dbe:	2900      	cmp	r1, #0
 8004dc0:	f000 826f 	beq.w	80052a2 <forward_conv2d_integer_SSSA_ch+0x54e>
 8004dc4:	f8d2 b004 	ldr.w	fp, [r2, #4]
 8004dc8:	f8db 100c 	ldr.w	r1, [fp, #12]
 8004dcc:	f8de 200c 	ldr.w	r2, [lr, #12]
 8004dd0:	69a5      	ldr	r5, [r4, #24]
 8004dd2:	69b4      	ldr	r4, [r6, #24]
 8004dd4:	684e      	ldr	r6, [r1, #4]
 8004dd6:	6857      	ldr	r7, [r2, #4]
 8004dd8:	961d      	str	r6, [sp, #116]	; 0x74
 8004dda:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8004ddc:	fa1f f987 	uxth.w	r9, r7
 8004de0:	f8dc a00c 	ldr.w	sl, [ip, #12]
 8004de4:	68ad      	ldr	r5, [r5, #8]
 8004de6:	9723      	str	r7, [sp, #140]	; 0x8c
 8004de8:	9522      	str	r5, [sp, #136]	; 0x88
 8004dea:	f8bd 7074 	ldrh.w	r7, [sp, #116]	; 0x74
 8004dee:	68a5      	ldr	r5, [r4, #8]
 8004df0:	68cc      	ldr	r4, [r1, #12]
 8004df2:	6889      	ldr	r1, [r1, #8]
 8004df4:	9713      	str	r7, [sp, #76]	; 0x4c
 8004df6:	9418      	str	r4, [sp, #96]	; 0x60
 8004df8:	911e      	str	r1, [sp, #120]	; 0x78
 8004dfa:	e9d2 2802 	ldrd	r2, r8, [r2, #8]
 8004dfe:	921f      	str	r2, [sp, #124]	; 0x7c
 8004e00:	8832      	ldrh	r2, [r6, #0]
 8004e02:	9221      	str	r2, [sp, #132]	; 0x84
 8004e04:	88b2      	ldrh	r2, [r6, #4]
 8004e06:	921a      	str	r2, [sp, #104]	; 0x68
 8004e08:	f8da 2008 	ldr.w	r2, [sl, #8]
 8004e0c:	f8da a004 	ldr.w	sl, [sl, #4]
 8004e10:	921c      	str	r2, [sp, #112]	; 0x70
 8004e12:	8d02      	ldrh	r2, [r0, #40]	; 0x28
 8004e14:	9219      	str	r2, [sp, #100]	; 0x64
 8004e16:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8004e18:	9220      	str	r2, [sp, #128]	; 0x80
 8004e1a:	69c2      	ldr	r2, [r0, #28]
 8004e1c:	9225      	str	r2, [sp, #148]	; 0x94
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	f000 80f7 	beq.w	8005012 <forward_conv2d_integer_SSSA_ch+0x2be>
 8004e24:	689e      	ldr	r6, [r3, #8]
 8004e26:	2e00      	cmp	r6, #0
 8004e28:	f000 80f3 	beq.w	8005012 <forward_conv2d_integer_SSSA_ch+0x2be>
 8004e2c:	69b3      	ldr	r3, [r6, #24]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	bf08      	it	eq
 8004e32:	2600      	moveq	r6, #0
 8004e34:	f8dc 1000 	ldr.w	r1, [ip]
 8004e38:	f8de 2000 	ldr.w	r2, [lr]
 8004e3c:	f8db 3000 	ldr.w	r3, [fp]
 8004e40:	9128      	str	r1, [sp, #160]	; 0xa0
 8004e42:	2a00      	cmp	r2, #0
 8004e44:	f000 80be 	beq.w	8004fc4 <forward_conv2d_integer_SSSA_ch+0x270>
 8004e48:	6851      	ldr	r1, [r2, #4]
 8004e4a:	2900      	cmp	r1, #0
 8004e4c:	f000 80ba 	beq.w	8004fc4 <forward_conv2d_integer_SSSA_ch+0x270>
 8004e50:	8850      	ldrh	r0, [r2, #2]
 8004e52:	2800      	cmp	r0, #0
 8004e54:	f000 80b6 	beq.w	8004fc4 <forward_conv2d_integer_SSSA_ch+0x270>
 8004e58:	6809      	ldr	r1, [r1, #0]
 8004e5a:	ed91 0a00 	vldr	s0, [r1]
 8004e5e:	b12b      	cbz	r3, 8004e6c <forward_conv2d_integer_SSSA_ch+0x118>
 8004e60:	6859      	ldr	r1, [r3, #4]
 8004e62:	b119      	cbz	r1, 8004e6c <forward_conv2d_integer_SSSA_ch+0x118>
 8004e64:	8858      	ldrh	r0, [r3, #2]
 8004e66:	2800      	cmp	r0, #0
 8004e68:	f040 8213 	bne.w	8005292 <forward_conv2d_integer_SSSA_ch+0x53e>
 8004e6c:	eddf 0a83 	vldr	s1, [pc, #524]	; 800507c <forward_conv2d_integer_SSSA_ch+0x328>
 8004e70:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004e72:	4551      	cmp	r1, sl
 8004e74:	f040 80a9 	bne.w	8004fca <forward_conv2d_integer_SSSA_ch+0x276>
 8004e78:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004e7a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8004e7c:	4281      	cmp	r1, r0
 8004e7e:	f040 80a4 	bne.w	8004fca <forward_conv2d_integer_SSSA_ch+0x276>
 8004e82:	9921      	ldr	r1, [sp, #132]	; 0x84
 8004e84:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004e86:	4281      	cmp	r1, r0
 8004e88:	f040 809f 	bne.w	8004fca <forward_conv2d_integer_SSSA_ch+0x276>
 8004e8c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8004e8e:	4588      	cmp	r8, r1
 8004e90:	f040 809b 	bne.w	8004fca <forward_conv2d_integer_SSSA_ch+0x276>
 8004e94:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004e96:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004e98:	4281      	cmp	r1, r0
 8004e9a:	bf08      	it	eq
 8004e9c:	f1b9 0f03 	cmpeq.w	r9, #3
 8004ea0:	bf0c      	ite	eq
 8004ea2:	2401      	moveq	r4, #1
 8004ea4:	2400      	movne	r4, #0
 8004ea6:	f1ba 0f01 	cmp.w	sl, #1
 8004eaa:	9414      	str	r4, [sp, #80]	; 0x50
 8004eac:	f000 8093 	beq.w	8004fd6 <forward_conv2d_integer_SSSA_ch+0x282>
 8004eb0:	2100      	movs	r1, #0
 8004eb2:	9114      	str	r1, [sp, #80]	; 0x50
 8004eb4:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8004eb8:	f8de e018 	ldr.w	lr, [lr, #24]
 8004ebc:	6880      	ldr	r0, [r0, #8]
 8004ebe:	f8de 7008 	ldr.w	r7, [lr, #8]
 8004ec2:	9014      	str	r0, [sp, #80]	; 0x50
 8004ec4:	f8db 0018 	ldr.w	r0, [fp, #24]
 8004ec8:	971b      	str	r7, [sp, #108]	; 0x6c
 8004eca:	6880      	ldr	r0, [r0, #8]
 8004ecc:	9017      	str	r0, [sp, #92]	; 0x5c
 8004ece:	2a00      	cmp	r2, #0
 8004ed0:	f000 8094 	beq.w	8004ffc <forward_conv2d_integer_SSSA_ch+0x2a8>
 8004ed4:	6850      	ldr	r0, [r2, #4]
 8004ed6:	2800      	cmp	r0, #0
 8004ed8:	f000 81e1 	beq.w	800529e <forward_conv2d_integer_SSSA_ch+0x54a>
 8004edc:	8852      	ldrh	r2, [r2, #2]
 8004ede:	2a00      	cmp	r2, #0
 8004ee0:	f000 808c 	beq.w	8004ffc <forward_conv2d_integer_SSSA_ch+0x2a8>
 8004ee4:	6842      	ldr	r2, [r0, #4]
 8004ee6:	f992 2000 	ldrsb.w	r2, [r2]
 8004eea:	9215      	str	r2, [sp, #84]	; 0x54
 8004eec:	b13b      	cbz	r3, 8004efe <forward_conv2d_integer_SSSA_ch+0x1aa>
 8004eee:	685a      	ldr	r2, [r3, #4]
 8004ef0:	2a00      	cmp	r2, #0
 8004ef2:	f000 81db 	beq.w	80052ac <forward_conv2d_integer_SSSA_ch+0x558>
 8004ef6:	885b      	ldrh	r3, [r3, #2]
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	f040 81c5 	bne.w	8005288 <forward_conv2d_integer_SSSA_ch+0x534>
 8004efe:	9316      	str	r3, [sp, #88]	; 0x58
 8004f00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	f000 8093 	beq.w	800502e <forward_conv2d_integer_SSSA_ch+0x2da>
 8004f08:	6858      	ldr	r0, [r3, #4]
 8004f0a:	b100      	cbz	r0, 8004f0e <forward_conv2d_integer_SSSA_ch+0x1ba>
 8004f0c:	6800      	ldr	r0, [r0, #0]
 8004f0e:	f8bd 308c 	ldrh.w	r3, [sp, #140]	; 0x8c
 8004f12:	9323      	str	r3, [sp, #140]	; 0x8c
 8004f14:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8004f16:	2b01      	cmp	r3, #1
 8004f18:	f000 8091 	beq.w	800503e <forward_conv2d_integer_SSSA_ch+0x2ea>
 8004f1c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004f1e:	4293      	cmp	r3, r2
 8004f20:	bf0c      	ite	eq
 8004f22:	2317      	moveq	r3, #23
 8004f24:	2300      	movne	r3, #0
 8004f26:	9329      	str	r3, [sp, #164]	; 0xa4
 8004f28:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8004f2a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004f2c:	f8bd 2074 	ldrh.w	r2, [sp, #116]	; 0x74
 8004f30:	fb03 f307 	mul.w	r3, r3, r7
 8004f34:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8004f36:	921d      	str	r2, [sp, #116]	; 0x74
 8004f38:	fb02 7303 	mla	r3, r2, r3, r7
 8004f3c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004f3e:	429f      	cmp	r7, r3
 8004f40:	d26d      	bcs.n	800501e <forward_conv2d_integer_SSSA_ch+0x2ca>
 8004f42:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004f44:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004f46:	fb03 f308 	mul.w	r3, r3, r8
 8004f4a:	fb02 7303 	mla	r3, r2, r3, r7
 8004f4e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004f50:	429a      	cmp	r2, r3
 8004f52:	bf2c      	ite	cs
 8004f54:	2300      	movcs	r3, #0
 8004f56:	2301      	movcc	r3, #1
 8004f58:	9326      	str	r3, [sp, #152]	; 0x98
 8004f5a:	f8bd 2070 	ldrh.w	r2, [sp, #112]	; 0x70
 8004f5e:	fa1f fa8a 	uxth.w	sl, sl
 8004f62:	9f25      	ldr	r7, [sp, #148]	; 0x94
 8004f64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8004f66:	921c      	str	r2, [sp, #112]	; 0x70
 8004f68:	2f01      	cmp	r7, #1
 8004f6a:	fb1a f202 	smulbb	r2, sl, r2
 8004f6e:	885b      	ldrh	r3, [r3, #2]
 8004f70:	b292      	uxth	r2, r2
 8004f72:	d003      	beq.n	8004f7c <forward_conv2d_integer_SSSA_ch+0x228>
 8004f74:	46bc      	mov	ip, r7
 8004f76:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 8004f78:	45bc      	cmp	ip, r7
 8004f7a:	d06f      	beq.n	800505c <forward_conv2d_integer_SSSA_ch+0x308>
 8004f7c:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 8004f7e:	fb02 f207 	mul.w	r2, r2, r7
 8004f82:	2c00      	cmp	r4, #0
 8004f84:	f040 8194 	bne.w	80052b0 <forward_conv2d_integer_SSSA_ch+0x55c>
 8004f88:	2900      	cmp	r1, #0
 8004f8a:	f000 8191 	beq.w	80052b0 <forward_conv2d_integer_SSSA_ch+0x55c>
 8004f8e:	0094      	lsls	r4, r2, #2
 8004f90:	2b01      	cmp	r3, #1
 8004f92:	d960      	bls.n	8005056 <forward_conv2d_integer_SSSA_ch+0x302>
 8004f94:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8004f96:	0093      	lsls	r3, r2, #2
 8004f98:	189a      	adds	r2, r3, r2
 8004f9a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8004f9e:	18eb      	adds	r3, r5, r3
 8004fa0:	462a      	mov	r2, r5
 8004fa2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004fa4:	9325      	str	r3, [sp, #148]	; 0x94
 8004fa6:	f001 ffa9 	bl	8006efc <align_factor_ch>
 8004faa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8004fac:	3b15      	subs	r3, #21
 8004fae:	e9cd 542a 	strd	r5, r4, [sp, #168]	; 0xa8
 8004fb2:	2b03      	cmp	r3, #3
 8004fb4:	f200 818c 	bhi.w	80052d0 <forward_conv2d_integer_SSSA_ch+0x57c>
 8004fb8:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004fbc:	00e4013d 	.word	0x00e4013d
 8004fc0:	006200ae 	.word	0x006200ae
 8004fc4:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 800507c <forward_conv2d_integer_SSSA_ch+0x328>
 8004fc8:	e749      	b.n	8004e5e <forward_conv2d_integer_SSSA_ch+0x10a>
 8004fca:	2400      	movs	r4, #0
 8004fcc:	f1ba 0f01 	cmp.w	sl, #1
 8004fd0:	9414      	str	r4, [sp, #80]	; 0x50
 8004fd2:	f47f af6d 	bne.w	8004eb0 <forward_conv2d_integer_SSSA_ch+0x15c>
 8004fd6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004fd8:	2901      	cmp	r1, #1
 8004fda:	f47f af69 	bne.w	8004eb0 <forward_conv2d_integer_SSSA_ch+0x15c>
 8004fde:	9921      	ldr	r1, [sp, #132]	; 0x84
 8004fe0:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004fe2:	4301      	orrs	r1, r0
 8004fe4:	f47f af64 	bne.w	8004eb0 <forward_conv2d_integer_SSSA_ch+0x15c>
 8004fe8:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004fea:	9820      	ldr	r0, [sp, #128]	; 0x80
 8004fec:	2901      	cmp	r1, #1
 8004fee:	bf08      	it	eq
 8004ff0:	2801      	cmpeq	r0, #1
 8004ff2:	bf0c      	ite	eq
 8004ff4:	2101      	moveq	r1, #1
 8004ff6:	2100      	movne	r1, #0
 8004ff8:	9114      	str	r1, [sp, #80]	; 0x50
 8004ffa:	e75b      	b.n	8004eb4 <forward_conv2d_integer_SSSA_ch+0x160>
 8004ffc:	9215      	str	r2, [sp, #84]	; 0x54
 8004ffe:	e775      	b.n	8004eec <forward_conv2d_integer_SSSA_ch+0x198>
 8005000:	2300      	movs	r3, #0
 8005002:	685b      	ldr	r3, [r3, #4]
 8005004:	deff      	udf	#255	; 0xff
 8005006:	2300      	movs	r3, #0
 8005008:	685b      	ldr	r3, [r3, #4]
 800500a:	deff      	udf	#255	; 0xff
 800500c:	f8d3 c000 	ldr.w	ip, [r3]
 8005010:	e6c0      	b.n	8004d94 <forward_conv2d_integer_SSSA_ch+0x40>
 8005012:	6a06      	ldr	r6, [r0, #32]
 8005014:	2e00      	cmp	r6, #0
 8005016:	f43f af0d 	beq.w	8004e34 <forward_conv2d_integer_SSSA_ch+0xe0>
 800501a:	68b6      	ldr	r6, [r6, #8]
 800501c:	e70a      	b.n	8004e34 <forward_conv2d_integer_SSSA_ch+0xe0>
 800501e:	2300      	movs	r3, #0
 8005020:	9326      	str	r3, [sp, #152]	; 0x98
 8005022:	e79a      	b.n	8004f5a <forward_conv2d_integer_SSSA_ch+0x206>
 8005024:	684b      	ldr	r3, [r1, #4]
 8005026:	deff      	udf	#255	; 0xff
 8005028:	2300      	movs	r3, #0
 800502a:	685b      	ldr	r3, [r3, #4]
 800502c:	deff      	udf	#255	; 0xff
 800502e:	4618      	mov	r0, r3
 8005030:	f8bd 308c 	ldrh.w	r3, [sp, #140]	; 0x8c
 8005034:	9323      	str	r3, [sp, #140]	; 0x8c
 8005036:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005038:	2b01      	cmp	r3, #1
 800503a:	f47f af6f 	bne.w	8004f1c <forward_conv2d_integer_SSSA_ch+0x1c8>
 800503e:	b1a4      	cbz	r4, 800506a <forward_conv2d_integer_SSSA_ch+0x316>
 8005040:	2315      	movs	r3, #21
 8005042:	9329      	str	r3, [sp, #164]	; 0xa4
 8005044:	e770      	b.n	8004f28 <forward_conv2d_integer_SSSA_ch+0x1d4>
 8005046:	9327      	str	r3, [sp, #156]	; 0x9c
 8005048:	e69c      	b.n	8004d84 <forward_conv2d_integer_SSSA_ch+0x30>
 800504a:	460b      	mov	r3, r1
 800504c:	b909      	cbnz	r1, 8005052 <forward_conv2d_integer_SSSA_ch+0x2fe>
 800504e:	699b      	ldr	r3, [r3, #24]
 8005050:	deff      	udf	#255	; 0xff
 8005052:	68d3      	ldr	r3, [r2, #12]
 8005054:	deff      	udf	#255	; 0xff
 8005056:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8005058:	009b      	lsls	r3, r3, #2
 800505a:	e7a0      	b.n	8004f9e <forward_conv2d_integer_SSSA_ch+0x24a>
 800505c:	991d      	ldr	r1, [sp, #116]	; 0x74
 800505e:	fb01 f202 	mul.w	r2, r1, r2
 8005062:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8005066:	1c54      	adds	r4, r2, #1
 8005068:	e792      	b.n	8004f90 <forward_conv2d_integer_SSSA_ch+0x23c>
 800506a:	2900      	cmp	r1, #0
 800506c:	460b      	mov	r3, r1
 800506e:	bf0c      	ite	eq
 8005070:	2318      	moveq	r3, #24
 8005072:	2316      	movne	r3, #22
 8005074:	9329      	str	r3, [sp, #164]	; 0xa4
 8005076:	e757      	b.n	8004f28 <forward_conv2d_integer_SSSA_ch+0x1d4>
 8005078:	2400      	movs	r4, #0
 800507a:	e696      	b.n	8004daa <forward_conv2d_integer_SSSA_ch+0x56>
 800507c:	00000000 	.word	0x00000000
 8005080:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8005082:	4653      	mov	r3, sl
 8005084:	9922      	ldr	r1, [sp, #136]	; 0x88
 8005086:	4648      	mov	r0, r9
 8005088:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800508a:	9702      	str	r7, [sp, #8]
 800508c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800508e:	9101      	str	r1, [sp, #4]
 8005090:	9400      	str	r4, [sp, #0]
 8005092:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005094:	9503      	str	r5, [sp, #12]
 8005096:	f002 fd63 	bl	8007b60 <st_sssa8_ch_convolve_rank1upd>
 800509a:	970b      	str	r7, [sp, #44]	; 0x2c
 800509c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800509e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80050a0:	9707      	str	r7, [sp, #28]
 80050a2:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80050a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80050a6:	9706      	str	r7, [sp, #24]
 80050a8:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80050aa:	9822      	ldr	r0, [sp, #136]	; 0x88
 80050ac:	9705      	str	r7, [sp, #20]
 80050ae:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80050b0:	930d      	str	r3, [sp, #52]	; 0x34
 80050b2:	9704      	str	r7, [sp, #16]
 80050b4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80050b6:	f8bd 3078 	ldrh.w	r3, [sp, #120]	; 0x78
 80050ba:	920c      	str	r2, [sp, #48]	; 0x30
 80050bc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80050be:	f8bd 4060 	ldrh.w	r4, [sp, #96]	; 0x60
 80050c2:	930e      	str	r3, [sp, #56]	; 0x38
 80050c4:	464b      	mov	r3, r9
 80050c6:	920a      	str	r2, [sp, #40]	; 0x28
 80050c8:	fa1f f288 	uxth.w	r2, r8
 80050cc:	9008      	str	r0, [sp, #32]
 80050ce:	f8bd 107c 	ldrh.w	r1, [sp, #124]	; 0x7c
 80050d2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80050d4:	9509      	str	r5, [sp, #36]	; 0x24
 80050d6:	e9cd a702 	strd	sl, r7, [sp, #8]
 80050da:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80050dc:	9701      	str	r7, [sp, #4]
 80050de:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80050e0:	e9cd 450f 	strd	r4, r5, [sp, #60]	; 0x3c
 80050e4:	9700      	str	r7, [sp, #0]
 80050e6:	f002 fdc3 	bl	8007c70 <st_sssa8_ch_convolve>
 80050ea:	f8db 3008 	ldr.w	r3, [fp, #8]
 80050ee:	0a1b      	lsrs	r3, r3, #8
 80050f0:	d046      	beq.n	8005180 <forward_conv2d_integer_SSSA_ch+0x42c>
 80050f2:	f8db 100c 	ldr.w	r1, [fp, #12]
 80050f6:	2201      	movs	r2, #1
 80050f8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80050fc:	f853 0d04 	ldr.w	r0, [r3, #-4]!
 8005100:	4299      	cmp	r1, r3
 8005102:	fb00 f202 	mul.w	r2, r0, r2
 8005106:	d1f9      	bne.n	80050fc <forward_conv2d_integer_SSSA_ch+0x3a8>
 8005108:	4633      	mov	r3, r6
 800510a:	4659      	mov	r1, fp
 800510c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 800510e:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8005110:	47a0      	blx	r4
 8005112:	b02d      	add	sp, #180	; 0xb4
 8005114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005118:	e9dd 1013 	ldrd	r1, r0, [sp, #76]	; 0x4c
 800511c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800511e:	4652      	mov	r2, sl
 8005120:	9500      	str	r5, [sp, #0]
 8005122:	f001 ff5f 	bl	8006fe4 <st_sssa8_ch_conv_dw_Wadapt>
 8005126:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8005128:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800512a:	9707      	str	r7, [sp, #28]
 800512c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800512e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005130:	9706      	str	r7, [sp, #24]
 8005132:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8005134:	920c      	str	r2, [sp, #48]	; 0x30
 8005136:	9705      	str	r7, [sp, #20]
 8005138:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800513a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800513c:	9704      	str	r7, [sp, #16]
 800513e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8005140:	9822      	ldr	r0, [sp, #136]	; 0x88
 8005142:	930d      	str	r3, [sp, #52]	; 0x34
 8005144:	920b      	str	r2, [sp, #44]	; 0x2c
 8005146:	f8bd 3078 	ldrh.w	r3, [sp, #120]	; 0x78
 800514a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 800514c:	f8bd 4060 	ldrh.w	r4, [sp, #96]	; 0x60
 8005150:	930e      	str	r3, [sp, #56]	; 0x38
 8005152:	464b      	mov	r3, r9
 8005154:	920a      	str	r2, [sp, #40]	; 0x28
 8005156:	fa1f f288 	uxth.w	r2, r8
 800515a:	f8bd 107c 	ldrh.w	r1, [sp, #124]	; 0x7c
 800515e:	9008      	str	r0, [sp, #32]
 8005160:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005162:	9509      	str	r5, [sp, #36]	; 0x24
 8005164:	e9cd a702 	strd	sl, r7, [sp, #8]
 8005168:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800516a:	9701      	str	r7, [sp, #4]
 800516c:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800516e:	9700      	str	r7, [sp, #0]
 8005170:	e9cd 450f 	strd	r4, r5, [sp, #60]	; 0x3c
 8005174:	f001 ffec 	bl	8007150 <st_sssa8_ch_convolve_dw>
 8005178:	f8db 3008 	ldr.w	r3, [fp, #8]
 800517c:	0a1b      	lsrs	r3, r3, #8
 800517e:	d1b8      	bne.n	80050f2 <forward_conv2d_integer_SSSA_ch+0x39e>
 8005180:	2201      	movs	r2, #1
 8005182:	e7c1      	b.n	8005108 <forward_conv2d_integer_SSSA_ch+0x3b4>
 8005184:	ab2a      	add	r3, sp, #168	; 0xa8
 8005186:	464a      	mov	r2, r9
 8005188:	e9dd 1013 	ldrd	r1, r0, [sp, #76]	; 0x4c
 800518c:	f003 feba 	bl	8008f04 <st_sssa8_ch_convolve_1x1_WeightsPrefetch>
 8005190:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005192:	2b00      	cmp	r3, #0
 8005194:	f040 809d 	bne.w	80052d2 <forward_conv2d_integer_SSSA_ch+0x57e>
 8005198:	fa1f f388 	uxth.w	r3, r8
 800519c:	f8bd 4060 	ldrh.w	r4, [sp, #96]	; 0x60
 80051a0:	f04f 0801 	mov.w	r8, #1
 80051a4:	9326      	str	r3, [sp, #152]	; 0x98
 80051a6:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80051a8:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80051aa:	9513      	str	r5, [sp, #76]	; 0x4c
 80051ac:	e9dd 321d 	ldrd	r3, r2, [sp, #116]	; 0x74
 80051b0:	fb02 f303 	mul.w	r3, r2, r3
 80051b4:	931d      	str	r3, [sp, #116]	; 0x74
 80051b6:	b28b      	uxth	r3, r1
 80051b8:	9328      	str	r3, [sp, #160]	; 0xa0
 80051ba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80051bc:	9423      	str	r4, [sp, #140]	; 0x8c
 80051be:	fb03 f301 	mul.w	r3, r3, r1
 80051c2:	931e      	str	r3, [sp, #120]	; 0x78
 80051c4:	b293      	uxth	r3, r2
 80051c6:	931f      	str	r3, [sp, #124]	; 0x7c
 80051c8:	2300      	movs	r3, #0
 80051ca:	9318      	str	r3, [sp, #96]	; 0x60
 80051cc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80051ce:	3301      	adds	r3, #1
 80051d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80051d2:	9509      	str	r5, [sp, #36]	; 0x24
 80051d4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80051d6:	940d      	str	r4, [sp, #52]	; 0x34
 80051d8:	442c      	add	r4, r5
 80051da:	f8dd c06c 	ldr.w	ip, [sp, #108]	; 0x6c
 80051de:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 80051e0:	9417      	str	r4, [sp, #92]	; 0x5c
 80051e2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80051e4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80051e6:	9408      	str	r4, [sp, #32]
 80051e8:	4664      	mov	r4, ip
 80051ea:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80051ec:	442c      	add	r4, r5
 80051ee:	9825      	ldr	r0, [sp, #148]	; 0x94
 80051f0:	910c      	str	r1, [sp, #48]	; 0x30
 80051f2:	941b      	str	r4, [sp, #108]	; 0x6c
 80051f4:	9c20      	ldr	r4, [sp, #128]	; 0x80
 80051f6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80051f8:	9407      	str	r4, [sp, #28]
 80051fa:	9c19      	ldr	r4, [sp, #100]	; 0x64
 80051fc:	9318      	str	r3, [sp, #96]	; 0x60
 80051fe:	464b      	mov	r3, r9
 8005200:	9406      	str	r4, [sp, #24]
 8005202:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8005204:	920e      	str	r2, [sp, #56]	; 0x38
 8005206:	9405      	str	r4, [sp, #20]
 8005208:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800520a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800520c:	9404      	str	r4, [sp, #16]
 800520e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8005210:	910b      	str	r1, [sp, #44]	; 0x2c
 8005212:	900a      	str	r0, [sp, #40]	; 0x28
 8005214:	4660      	mov	r0, ip
 8005216:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8005218:	e9cd a402 	strd	sl, r4, [sp, #8]
 800521c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800521e:	9701      	str	r7, [sp, #4]
 8005220:	9400      	str	r4, [sp, #0]
 8005222:	ac2a      	add	r4, sp, #168	; 0xa8
 8005224:	9410      	str	r4, [sp, #64]	; 0x40
 8005226:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 8005228:	940f      	str	r4, [sp, #60]	; 0x3c
 800522a:	f003 fe7f 	bl	8008f2c <st_sssa8_ch_convolve_1x1>
 800522e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8005230:	4543      	cmp	r3, r8
 8005232:	d3cb      	bcc.n	80051cc <forward_conv2d_integer_SSSA_ch+0x478>
 8005234:	e759      	b.n	80050ea <forward_conv2d_integer_SSSA_ch+0x396>
 8005236:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8005238:	4653      	mov	r3, sl
 800523a:	9f22      	ldr	r7, [sp, #136]	; 0x88
 800523c:	4648      	mov	r0, r9
 800523e:	9402      	str	r4, [sp, #8]
 8005240:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005242:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005244:	9503      	str	r5, [sp, #12]
 8005246:	9701      	str	r7, [sp, #4]
 8005248:	f8cd a000 	str.w	sl, [sp]
 800524c:	f002 fc88 	bl	8007b60 <st_sssa8_ch_convolve_rank1upd>
 8005250:	9407      	str	r4, [sp, #28]
 8005252:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8005254:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8005256:	9403      	str	r4, [sp, #12]
 8005258:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800525a:	f8bd 2060 	ldrh.w	r2, [sp, #96]	; 0x60
 800525e:	9825      	ldr	r0, [sp, #148]	; 0x94
 8005260:	9109      	str	r1, [sp, #36]	; 0x24
 8005262:	9916      	ldr	r1, [sp, #88]	; 0x58
 8005264:	920a      	str	r2, [sp, #40]	; 0x28
 8005266:	464a      	mov	r2, r9
 8005268:	9108      	str	r1, [sp, #32]
 800526a:	fa1f f188 	uxth.w	r1, r8
 800526e:	9006      	str	r0, [sp, #24]
 8005270:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005272:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005274:	950b      	str	r5, [sp, #44]	; 0x2c
 8005276:	e9cd a401 	strd	sl, r4, [sp, #4]
 800527a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800527c:	e9cd 7504 	strd	r7, r5, [sp, #16]
 8005280:	9400      	str	r4, [sp, #0]
 8005282:	f003 fa43 	bl	800870c <st_sssa8_ch_convolve_rgb>
 8005286:	e730      	b.n	80050ea <forward_conv2d_integer_SSSA_ch+0x396>
 8005288:	6853      	ldr	r3, [r2, #4]
 800528a:	f993 3000 	ldrsb.w	r3, [r3]
 800528e:	9316      	str	r3, [sp, #88]	; 0x58
 8005290:	e636      	b.n	8004f00 <forward_conv2d_integer_SSSA_ch+0x1ac>
 8005292:	6809      	ldr	r1, [r1, #0]
 8005294:	edd1 0a00 	vldr	s1, [r1]
 8005298:	e5ea      	b.n	8004e70 <forward_conv2d_integer_SSSA_ch+0x11c>
 800529a:	469e      	mov	lr, r3
 800529c:	e569      	b.n	8004d72 <forward_conv2d_integer_SSSA_ch+0x1e>
 800529e:	9015      	str	r0, [sp, #84]	; 0x54
 80052a0:	e624      	b.n	8004eec <forward_conv2d_integer_SSSA_ch+0x198>
 80052a2:	4a0f      	ldr	r2, [pc, #60]	; (80052e0 <forward_conv2d_integer_SSSA_ch+0x58c>)
 80052a4:	f8dd b09c 	ldr.w	fp, [sp, #156]	; 0x9c
 80052a8:	9224      	str	r2, [sp, #144]	; 0x90
 80052aa:	e58d      	b.n	8004dc8 <forward_conv2d_integer_SSSA_ch+0x74>
 80052ac:	9216      	str	r2, [sp, #88]	; 0x58
 80052ae:	e627      	b.n	8004f00 <forward_conv2d_integer_SSSA_ch+0x1ac>
 80052b0:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80052b2:	4621      	mov	r1, r4
 80052b4:	4414      	add	r4, r2
 80052b6:	fb02 f101 	mul.w	r1, r2, r1
 80052ba:	00a4      	lsls	r4, r4, #2
 80052bc:	004a      	lsls	r2, r1, #1
 80052be:	f5b2 5fa0 	cmp.w	r2, #5120	; 0x1400
 80052c2:	bfd4      	ite	le
 80052c4:	18a4      	addle	r4, r4, r2
 80052c6:	f504 54a0 	addgt.w	r4, r4, #5120	; 0x1400
 80052ca:	e661      	b.n	8004f90 <forward_conv2d_integer_SSSA_ch+0x23c>
 80052cc:	461c      	mov	r4, r3
 80052ce:	e56c      	b.n	8004daa <forward_conv2d_integer_SSSA_ch+0x56>
 80052d0:	e7fe      	b.n	80052d0 <forward_conv2d_integer_SSSA_ch+0x57c>
 80052d2:	f1b8 0f00 	cmp.w	r8, #0
 80052d6:	f43f af08 	beq.w	80050ea <forward_conv2d_integer_SSSA_ch+0x396>
 80052da:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80052dc:	e763      	b.n	80051a6 <forward_conv2d_integer_SSSA_ch+0x452>
 80052de:	bf00      	nop
 80052e0:	08004d51 	.word	0x08004d51

080052e4 <forward_conv2d_nl_pool_integer_SSSA_ch>:
 80052e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052e8:	6983      	ldr	r3, [r0, #24]
 80052ea:	b0d3      	sub	sp, #332	; 0x14c
 80052ec:	881e      	ldrh	r6, [r3, #0]
 80052ee:	2e00      	cmp	r6, #0
 80052f0:	f000 81b8 	beq.w	8005664 <forward_conv2d_nl_pool_integer_SSSA_ch+0x380>
 80052f4:	6859      	ldr	r1, [r3, #4]
 80052f6:	684d      	ldr	r5, [r1, #4]
 80052f8:	2d00      	cmp	r5, #0
 80052fa:	f000 8361 	beq.w	80059c0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x6dc>
 80052fe:	682b      	ldr	r3, [r5, #0]
 8005300:	9314      	str	r3, [sp, #80]	; 0x50
 8005302:	2e01      	cmp	r6, #1
 8005304:	f240 81ab 	bls.w	800565e <forward_conv2d_nl_pool_integer_SSSA_ch+0x37a>
 8005308:	690b      	ldr	r3, [r1, #16]
 800530a:	2b00      	cmp	r3, #0
 800530c:	f000 82b3 	beq.w	8005876 <forward_conv2d_nl_pool_integer_SSSA_ch+0x592>
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	9318      	str	r3, [sp, #96]	; 0x60
 8005314:	2e02      	cmp	r6, #2
 8005316:	f000 81a2 	beq.w	800565e <forward_conv2d_nl_pool_integer_SSSA_ch+0x37a>
 800531a:	69cc      	ldr	r4, [r1, #28]
 800531c:	2c00      	cmp	r4, #0
 800531e:	f040 82a8 	bne.w	8005872 <forward_conv2d_nl_pool_integer_SSSA_ch+0x58e>
 8005322:	4623      	mov	r3, r4
 8005324:	f111 0218 	adds.w	r2, r1, #24
 8005328:	d007      	beq.n	800533a <forward_conv2d_nl_pool_integer_SSSA_ch+0x56>
 800532a:	8b0a      	ldrh	r2, [r1, #24]
 800532c:	2a01      	cmp	r2, #1
 800532e:	f240 8373 	bls.w	8005a18 <forward_conv2d_nl_pool_integer_SSSA_ch+0x734>
 8005332:	2c00      	cmp	r4, #0
 8005334:	f000 836e 	beq.w	8005a14 <forward_conv2d_nl_pool_integer_SSSA_ch+0x730>
 8005338:	6862      	ldr	r2, [r4, #4]
 800533a:	2e03      	cmp	r6, #3
 800533c:	f000 818f 	beq.w	800565e <forward_conv2d_nl_pool_integer_SSSA_ch+0x37a>
 8005340:	6a89      	ldr	r1, [r1, #40]	; 0x28
 8005342:	2900      	cmp	r1, #0
 8005344:	f000 8190 	beq.w	8005668 <forward_conv2d_nl_pool_integer_SSSA_ch+0x384>
 8005348:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800534a:	680d      	ldr	r5, [r1, #0]
 800534c:	962f      	str	r6, [sp, #188]	; 0xbc
 800534e:	9515      	str	r5, [sp, #84]	; 0x54
 8005350:	f8d1 b004 	ldr.w	fp, [r1, #4]
 8005354:	2e00      	cmp	r6, #0
 8005356:	f000 8358 	beq.w	8005a0a <forward_conv2d_nl_pool_integer_SSSA_ch+0x726>
 800535a:	6889      	ldr	r1, [r1, #8]
 800535c:	911c      	str	r1, [sp, #112]	; 0x70
 800535e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005360:	f8d0 e03c 	ldr.w	lr, [r0, #60]	; 0x3c
 8005364:	68cf      	ldr	r7, [r1, #12]
 8005366:	f8db 100c 	ldr.w	r1, [fp, #12]
 800536a:	687e      	ldr	r6, [r7, #4]
 800536c:	6849      	ldr	r1, [r1, #4]
 800536e:	4635      	mov	r5, r6
 8005370:	9623      	str	r6, [sp, #140]	; 0x8c
 8005372:	9124      	str	r1, [sp, #144]	; 0x90
 8005374:	b2ad      	uxth	r5, r5
 8005376:	f8de 6000 	ldr.w	r6, [lr]
 800537a:	f8d0 c02c 	ldr.w	ip, [r0, #44]	; 0x2c
 800537e:	9519      	str	r5, [sp, #100]	; 0x64
 8005380:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8005382:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 8005386:	68e9      	ldr	r1, [r5, #12]
 8005388:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 800538c:	f8de 9008 	ldr.w	r9, [lr, #8]
 8005390:	9513      	str	r5, [sp, #76]	; 0x4c
 8005392:	b2b5      	uxth	r5, r6
 8005394:	9512      	str	r5, [sp, #72]	; 0x48
 8005396:	fa1f f58c 	uxth.w	r5, ip
 800539a:	951f      	str	r5, [sp, #124]	; 0x7c
 800539c:	e9d7 5802 	ldrd	r5, r8, [r7, #8]
 80053a0:	952c      	str	r5, [sp, #176]	; 0xb0
 80053a2:	f8be 5004 	ldrh.w	r5, [lr, #4]
 80053a6:	9520      	str	r5, [sp, #128]	; 0x80
 80053a8:	68cd      	ldr	r5, [r1, #12]
 80053aa:	6889      	ldr	r1, [r1, #8]
 80053ac:	9530      	str	r5, [sp, #192]	; 0xc0
 80053ae:	9136      	str	r1, [sp, #216]	; 0xd8
 80053b0:	e9da 1701 	ldrd	r1, r7, [sl, #4]
 80053b4:	911a      	str	r1, [sp, #104]	; 0x68
 80053b6:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80053b8:	6809      	ldr	r1, [r1, #0]
 80053ba:	9121      	str	r1, [sp, #132]	; 0x84
 80053bc:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80053be:	6849      	ldr	r1, [r1, #4]
 80053c0:	9139      	str	r1, [sp, #228]	; 0xe4
 80053c2:	8d01      	ldrh	r1, [r0, #40]	; 0x28
 80053c4:	911e      	str	r1, [sp, #120]	; 0x78
 80053c6:	69c1      	ldr	r1, [r0, #28]
 80053c8:	9127      	str	r1, [sp, #156]	; 0x9c
 80053ca:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80053cc:	9137      	str	r1, [sp, #220]	; 0xdc
 80053ce:	6c81      	ldr	r1, [r0, #72]	; 0x48
 80053d0:	9138      	str	r1, [sp, #224]	; 0xe0
 80053d2:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 80053d4:	9128      	str	r1, [sp, #160]	; 0xa0
 80053d6:	2c00      	cmp	r4, #0
 80053d8:	f000 8242 	beq.w	8005860 <forward_conv2d_nl_pool_integer_SSSA_ch+0x57c>
 80053dc:	f8d4 a008 	ldr.w	sl, [r4, #8]
 80053e0:	f1ba 0f00 	cmp.w	sl, #0
 80053e4:	f000 823c 	beq.w	8005860 <forward_conv2d_nl_pool_integer_SSSA_ch+0x57c>
 80053e8:	f8da 1018 	ldr.w	r1, [sl, #24]
 80053ec:	2900      	cmp	r1, #0
 80053ee:	bf08      	it	eq
 80053f0:	f04f 0a00 	moveq.w	sl, #0
 80053f4:	fa1f fe86 	uxth.w	lr, r6
 80053f8:	902d      	str	r0, [sp, #180]	; 0xb4
 80053fa:	9217      	str	r2, [sp, #92]	; 0x5c
 80053fc:	a93f      	add	r1, sp, #252	; 0xfc
 80053fe:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8005400:	fa1e f089 	uxtah	r0, lr, r9
 8005404:	914e      	str	r1, [sp, #312]	; 0x138
 8005406:	2400      	movs	r4, #0
 8005408:	6996      	ldr	r6, [r2, #24]
 800540a:	4440      	add	r0, r8
 800540c:	4611      	mov	r1, r2
 800540e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8005412:	1bc5      	subs	r5, r0, r7
 8005414:	44c6      	add	lr, r8
 8005416:	924c      	str	r2, [sp, #304]	; 0x130
 8005418:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800541c:	9516      	str	r5, [sp, #88]	; 0x58
 800541e:	f50d 798e 	add.w	r9, sp, #284	; 0x11c
 8005422:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8005424:	a84b      	add	r0, sp, #300	; 0x12c
 8005426:	924d      	str	r2, [sp, #308]	; 0x134
 8005428:	f240 4201 	movw	r2, #1025	; 0x401
 800542c:	69ad      	ldr	r5, [r5, #24]
 800542e:	924f      	str	r2, [sp, #316]	; 0x13c
 8005430:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8005432:	931b      	str	r3, [sp, #108]	; 0x6c
 8005434:	fa1f f38c 	uxth.w	r3, ip
 8005438:	9531      	str	r5, [sp, #196]	; 0xc4
 800543a:	f50d 7c86 	add.w	ip, sp, #268	; 0x10c
 800543e:	6c55      	ldr	r5, [r2, #68]	; 0x44
 8005440:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8005442:	f8cd e094 	str.w	lr, [sp, #148]	; 0x94
 8005446:	f8db 8018 	ldr.w	r8, [fp, #24]
 800544a:	931d      	str	r3, [sp, #116]	; 0x74
 800544c:	944b      	str	r4, [sp, #300]	; 0x12c
 800544e:	943f      	str	r4, [sp, #252]	; 0xfc
 8005450:	9443      	str	r4, [sp, #268]	; 0x10c
 8005452:	9440      	str	r4, [sp, #256]	; 0x100
 8005454:	9441      	str	r4, [sp, #260]	; 0x104
 8005456:	9444      	str	r4, [sp, #272]	; 0x110
 8005458:	9442      	str	r4, [sp, #264]	; 0x108
 800545a:	9451      	str	r4, [sp, #324]	; 0x144
 800545c:	9445      	str	r4, [sp, #276]	; 0x114
 800545e:	9446      	str	r4, [sp, #280]	; 0x118
 8005460:	f8cd c140 	str.w	ip, [sp, #320]	; 0x140
 8005464:	9529      	str	r5, [sp, #164]	; 0xa4
 8005466:	f9bd 4084 	ldrsh.w	r4, [sp, #132]	; 0x84
 800546a:	923a      	str	r2, [sp, #232]	; 0xe8
 800546c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800546e:	fbb5 fcf3 	udiv	ip, r5, r3
 8005472:	f10c 0301 	add.w	r3, ip, #1
 8005476:	9326      	str	r3, [sp, #152]	; 0x98
 8005478:	f005 ffbc 	bl	800b3f4 <core_tensor_clone>
 800547c:	4648      	mov	r0, r9
 800547e:	4631      	mov	r1, r6
 8005480:	f005 ffea 	bl	800b458 <core_array_clone>
 8005484:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005486:	f8cd 9144 	str.w	r9, [sp, #324]	; 0x144
 800548a:	6999      	ldr	r1, [r3, #24]
 800548c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800548e:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8005492:	6818      	ldr	r0, [r3, #0]
 8005494:	f8db 300c 	ldr.w	r3, [fp, #12]
 8005498:	f8db 1000 	ldr.w	r1, [fp]
 800549c:	689b      	ldr	r3, [r3, #8]
 800549e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80054a0:	932e      	str	r3, [sp, #184]	; 0xb8
 80054a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80054a4:	f8d3 e000 	ldr.w	lr, [r3]
 80054a8:	2800      	cmp	r0, #0
 80054aa:	f000 80df 	beq.w	800566c <forward_conv2d_nl_pool_integer_SSSA_ch+0x388>
 80054ae:	f8d0 c004 	ldr.w	ip, [r0, #4]
 80054b2:	f1bc 0f00 	cmp.w	ip, #0
 80054b6:	f000 80d9 	beq.w	800566c <forward_conv2d_nl_pool_integer_SSSA_ch+0x388>
 80054ba:	8845      	ldrh	r5, [r0, #2]
 80054bc:	2d00      	cmp	r5, #0
 80054be:	f000 80d5 	beq.w	800566c <forward_conv2d_nl_pool_integer_SSSA_ch+0x388>
 80054c2:	f8dc c000 	ldr.w	ip, [ip]
 80054c6:	ed9c 0a00 	vldr	s0, [ip]
 80054ca:	2900      	cmp	r1, #0
 80054cc:	f000 80d3 	beq.w	8005676 <forward_conv2d_nl_pool_integer_SSSA_ch+0x392>
 80054d0:	f8d1 c004 	ldr.w	ip, [r1, #4]
 80054d4:	f1bc 0f00 	cmp.w	ip, #0
 80054d8:	f000 80cd 	beq.w	8005676 <forward_conv2d_nl_pool_integer_SSSA_ch+0x392>
 80054dc:	884d      	ldrh	r5, [r1, #2]
 80054de:	2d00      	cmp	r5, #0
 80054e0:	f000 80c9 	beq.w	8005676 <forward_conv2d_nl_pool_integer_SSSA_ch+0x392>
 80054e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80054e6:	f8dc c000 	ldr.w	ip, [ip]
 80054ea:	2d01      	cmp	r5, #1
 80054ec:	eddc 0a00 	vldr	s1, [ip]
 80054f0:	f040 80c7 	bne.w	8005682 <forward_conv2d_nl_pool_integer_SSSA_ch+0x39e>
 80054f4:	2f01      	cmp	r7, #1
 80054f6:	f040 80c4 	bne.w	8005682 <forward_conv2d_nl_pool_integer_SSSA_ch+0x39e>
 80054fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80054fc:	46ac      	mov	ip, r5
 80054fe:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8005500:	ea5c 0505 	orrs.w	r5, ip, r5
 8005504:	f040 80bd 	bne.w	8005682 <forward_conv2d_nl_pool_integer_SSSA_ch+0x39e>
 8005508:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 800550a:	46ac      	mov	ip, r5
 800550c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800550e:	f1bc 0f01 	cmp.w	ip, #1
 8005512:	bf08      	it	eq
 8005514:	2d01      	cmpeq	r5, #1
 8005516:	bf0c      	ite	eq
 8005518:	f04f 0c01 	moveq.w	ip, #1
 800551c:	f04f 0c00 	movne.w	ip, #0
 8005520:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005522:	699b      	ldr	r3, [r3, #24]
 8005524:	69ad      	ldr	r5, [r5, #24]
 8005526:	689b      	ldr	r3, [r3, #8]
 8005528:	6992      	ldr	r2, [r2, #24]
 800552a:	68ad      	ldr	r5, [r5, #8]
 800552c:	9317      	str	r3, [sp, #92]	; 0x5c
 800552e:	6893      	ldr	r3, [r2, #8]
 8005530:	9535      	str	r5, [sp, #212]	; 0xd4
 8005532:	9322      	str	r3, [sp, #136]	; 0x88
 8005534:	2800      	cmp	r0, #0
 8005536:	f000 81a2 	beq.w	800587e <forward_conv2d_nl_pool_integer_SSSA_ch+0x59a>
 800553a:	6843      	ldr	r3, [r0, #4]
 800553c:	2b00      	cmp	r3, #0
 800553e:	f000 8262 	beq.w	8005a06 <forward_conv2d_nl_pool_integer_SSSA_ch+0x722>
 8005542:	8842      	ldrh	r2, [r0, #2]
 8005544:	2a00      	cmp	r2, #0
 8005546:	f000 8198 	beq.w	800587a <forward_conv2d_nl_pool_integer_SSSA_ch+0x596>
 800554a:	685b      	ldr	r3, [r3, #4]
 800554c:	f993 3000 	ldrsb.w	r3, [r3]
 8005550:	9315      	str	r3, [sp, #84]	; 0x54
 8005552:	2900      	cmp	r1, #0
 8005554:	f000 8182 	beq.w	800585c <forward_conv2d_nl_pool_integer_SSSA_ch+0x578>
 8005558:	684b      	ldr	r3, [r1, #4]
 800555a:	2b00      	cmp	r3, #0
 800555c:	f000 8251 	beq.w	8005a02 <forward_conv2d_nl_pool_integer_SSSA_ch+0x71e>
 8005560:	884a      	ldrh	r2, [r1, #2]
 8005562:	2a00      	cmp	r2, #0
 8005564:	f000 8178 	beq.w	8005858 <forward_conv2d_nl_pool_integer_SSSA_ch+0x574>
 8005568:	685b      	ldr	r3, [r3, #4]
 800556a:	f993 3000 	ldrsb.w	r3, [r3]
 800556e:	9316      	str	r3, [sp, #88]	; 0x58
 8005570:	f1be 0f00 	cmp.w	lr, #0
 8005574:	f000 816e 	beq.w	8005854 <forward_conv2d_nl_pool_integer_SSSA_ch+0x570>
 8005578:	f8de 0004 	ldr.w	r0, [lr, #4]
 800557c:	b100      	cbz	r0, 8005580 <forward_conv2d_nl_pool_integer_SSSA_ch+0x29c>
 800557e:	6800      	ldr	r0, [r0, #0]
 8005580:	b2b9      	uxth	r1, r7
 8005582:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8005586:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 800558a:	931a      	str	r3, [sp, #104]	; 0x68
 800558c:	fb13 f301 	smulbb	r3, r3, r1
 8005590:	9523      	str	r5, [sp, #140]	; 0x8c
 8005592:	b29d      	uxth	r5, r3
 8005594:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8005596:	911b      	str	r1, [sp, #108]	; 0x6c
 8005598:	2b01      	cmp	r3, #1
 800559a:	f8bd 1090 	ldrh.w	r1, [sp, #144]	; 0x90
 800559e:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80055a2:	9114      	str	r1, [sp, #80]	; 0x50
 80055a4:	f000 8179 	beq.w	800589a <forward_conv2d_nl_pool_integer_SSSA_ch+0x5b6>
 80055a8:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80055aa:	428b      	cmp	r3, r1
 80055ac:	f000 816c 	beq.w	8005888 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5a4>
 80055b0:	460b      	mov	r3, r1
 80055b2:	2100      	movs	r1, #0
 80055b4:	fb05 f303 	mul.w	r3, r5, r3
 80055b8:	912b      	str	r1, [sp, #172]	; 0xac
 80055ba:	9914      	ldr	r1, [sp, #80]	; 0x50
 80055bc:	fb03 f101 	mul.w	r1, r3, r1
 80055c0:	0049      	lsls	r1, r1, #1
 80055c2:	f5b1 5fa0 	cmp.w	r1, #5120	; 0x1400
 80055c6:	bfa8      	it	ge
 80055c8:	f44f 51a0 	movge.w	r1, #5120	; 0x1400
 80055cc:	f1bc 0f00 	cmp.w	ip, #0
 80055d0:	f000 8178 	beq.w	80058c4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5e0>
 80055d4:	009d      	lsls	r5, r3, #2
 80055d6:	2a01      	cmp	r2, #1
 80055d8:	f240 8153 	bls.w	8005882 <forward_conv2d_nl_pool_integer_SSSA_ch+0x59e>
 80055dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80055de:	0093      	lsls	r3, r2, #2
 80055e0:	189a      	adds	r2, r3, r2
 80055e2:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 80055e6:	444b      	add	r3, r9
 80055e8:	464a      	mov	r2, r9
 80055ea:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80055ec:	932a      	str	r3, [sp, #168]	; 0xa8
 80055ee:	f001 fc85 	bl	8006efc <align_factor_ch>
 80055f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80055f4:	e9cd 953d 	strd	r9, r5, [sp, #244]	; 0xf4
 80055f8:	2b00      	cmp	r3, #0
 80055fa:	f000 80f6 	beq.w	80057ea <forward_conv2d_nl_pool_integer_SSSA_ch+0x506>
 80055fe:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8005600:	2500      	movs	r5, #0
 8005602:	991d      	ldr	r1, [sp, #116]	; 0x74
 8005604:	4613      	mov	r3, r2
 8005606:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8005608:	9527      	str	r5, [sp, #156]	; 0x9c
 800560a:	fb03 f301 	mul.w	r3, r3, r1
 800560e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005610:	f8cd a0ec 	str.w	sl, [sp, #236]	; 0xec
 8005614:	fb01 f100 	mul.w	r1, r1, r0
 8005618:	f8dd a0d4 	ldr.w	sl, [sp, #212]	; 0xd4
 800561c:	9714      	str	r7, [sp, #80]	; 0x50
 800561e:	912e      	str	r1, [sp, #184]	; 0xb8
 8005620:	b281      	uxth	r1, r0
 8005622:	9124      	str	r1, [sp, #144]	; 0x90
 8005624:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8005626:	9423      	str	r4, [sp, #140]	; 0x8c
 8005628:	fb01 f303 	mul.w	r3, r1, r3
 800562c:	9333      	str	r3, [sp, #204]	; 0xcc
 800562e:	b293      	uxth	r3, r2
 8005630:	932c      	str	r3, [sp, #176]	; 0xb0
 8005632:	fb01 f302 	mul.w	r3, r1, r2
 8005636:	9334      	str	r3, [sp, #208]	; 0xd0
 8005638:	f9bd 30a4 	ldrsh.w	r3, [sp, #164]	; 0xa4
 800563c:	9332      	str	r3, [sp, #200]	; 0xc8
 800563e:	464b      	mov	r3, r9
 8005640:	46a9      	mov	r9, r5
 8005642:	461d      	mov	r5, r3
 8005644:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005646:	2b00      	cmp	r3, #0
 8005648:	dd6b      	ble.n	8005722 <forward_conv2d_nl_pool_integer_SSSA_ch+0x43e>
 800564a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800564c:	2b17      	cmp	r3, #23
 800564e:	f000 8188 	beq.w	8005962 <forward_conv2d_nl_pool_integer_SSSA_ch+0x67e>
 8005652:	2b18      	cmp	r3, #24
 8005654:	f000 813e 	beq.w	80058d4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5f0>
 8005658:	2b16      	cmp	r3, #22
 800565a:	d015      	beq.n	8005688 <forward_conv2d_nl_pool_integer_SSSA_ch+0x3a4>
 800565c:	e7fe      	b.n	800565c <forward_conv2d_nl_pool_integer_SSSA_ch+0x378>
 800565e:	2300      	movs	r3, #0
 8005660:	685b      	ldr	r3, [r3, #4]
 8005662:	deff      	udf	#255	; 0xff
 8005664:	6873      	ldr	r3, [r6, #4]
 8005666:	deff      	udf	#255	; 0xff
 8005668:	68cb      	ldr	r3, [r1, #12]
 800566a:	deff      	udf	#255	; 0xff
 800566c:	ed9f 0a98 	vldr	s0, [pc, #608]	; 80058d0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5ec>
 8005670:	2900      	cmp	r1, #0
 8005672:	f47f af2d 	bne.w	80054d0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x1ec>
 8005676:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005678:	eddf 0a95 	vldr	s1, [pc, #596]	; 80058d0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5ec>
 800567c:	2d01      	cmp	r5, #1
 800567e:	f43f af39 	beq.w	80054f4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x210>
 8005682:	f04f 0c00 	mov.w	ip, #0
 8005686:	e74b      	b.n	8005520 <forward_conv2d_nl_pool_integer_SSSA_ch+0x23c>
 8005688:	f1b9 0f00 	cmp.w	r9, #0
 800568c:	f040 81b6 	bne.w	80059fc <forward_conv2d_nl_pool_integer_SSSA_ch+0x718>
 8005690:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005692:	429c      	cmp	r4, r3
 8005694:	ab3d      	add	r3, sp, #244	; 0xf4
 8005696:	461f      	mov	r7, r3
 8005698:	f000 81aa 	beq.w	80059f0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x70c>
 800569c:	9710      	str	r7, [sp, #64]	; 0x40
 800569e:	2201      	movs	r2, #1
 80056a0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80056a2:	9f16      	ldr	r7, [sp, #88]	; 0x58
 80056a4:	920f      	str	r2, [sp, #60]	; 0x3c
 80056a6:	910e      	str	r1, [sp, #56]	; 0x38
 80056a8:	f8d8 0008 	ldr.w	r0, [r8, #8]
 80056ac:	970c      	str	r7, [sp, #48]	; 0x30
 80056ae:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80056b0:	900d      	str	r0, [sp, #52]	; 0x34
 80056b2:	4650      	mov	r0, sl
 80056b4:	970b      	str	r7, [sp, #44]	; 0x2c
 80056b6:	9f2a      	ldr	r7, [sp, #168]	; 0xa8
 80056b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80056ba:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80056be:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80056c0:	e9cd 5709 	strd	r5, r7, [sp, #36]	; 0x24
 80056c4:	9f22      	ldr	r7, [sp, #136]	; 0x88
 80056c6:	9708      	str	r7, [sp, #32]
 80056c8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 80056ca:	9707      	str	r7, [sp, #28]
 80056cc:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80056ce:	9706      	str	r7, [sp, #24]
 80056d0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80056d2:	9705      	str	r7, [sp, #20]
 80056d4:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80056d6:	9704      	str	r7, [sp, #16]
 80056d8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80056da:	9703      	str	r7, [sp, #12]
 80056dc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80056de:	9702      	str	r7, [sp, #8]
 80056e0:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80056e2:	9701      	str	r7, [sp, #4]
 80056e4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80056e6:	9700      	str	r7, [sp, #0]
 80056e8:	f003 fc20 	bl	8008f2c <st_sssa8_ch_convolve_1x1>
 80056ec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80056ee:	991d      	ldr	r1, [sp, #116]	; 0x74
 80056f0:	428b      	cmp	r3, r1
 80056f2:	f000 8122 	beq.w	800593a <forward_conv2d_nl_pool_integer_SSSA_ch+0x656>
 80056f6:	1a5b      	subs	r3, r3, r1
 80056f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80056fa:	429a      	cmp	r2, r3
 80056fc:	9325      	str	r3, [sp, #148]	; 0x94
 80056fe:	bf28      	it	cs
 8005700:	461a      	movcs	r2, r3
 8005702:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005704:	9214      	str	r2, [sp, #80]	; 0x50
 8005706:	2b00      	cmp	r3, #0
 8005708:	f040 811e 	bne.w	8005948 <forward_conv2d_nl_pool_integer_SSSA_ch+0x664>
 800570c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 800570e:	449a      	add	sl, r3
 8005710:	3401      	adds	r4, #1
 8005712:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 8005714:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8005716:	4659      	mov	r1, fp
 8005718:	981c      	ldr	r0, [sp, #112]	; 0x70
 800571a:	b224      	sxth	r4, r4
 800571c:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 800571e:	47b8      	blx	r7
 8005720:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005722:	3b01      	subs	r3, #1
 8005724:	9326      	str	r3, [sp, #152]	; 0x98
 8005726:	d46c      	bmi.n	8005802 <forward_conv2d_nl_pool_integer_SSSA_ch+0x51e>
 8005728:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 800572a:	42a3      	cmp	r3, r4
 800572c:	dc33      	bgt.n	8005796 <forward_conv2d_nl_pool_integer_SSSA_ch+0x4b2>
 800572e:	2001      	movs	r0, #1
 8005730:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8005734:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005736:	f109 0901 	add.w	r9, r9, #1
 800573a:	9007      	str	r0, [sp, #28]
 800573c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 800573e:	f8bd 10a0 	ldrh.w	r1, [sp, #160]	; 0xa0
 8005742:	9208      	str	r2, [sp, #32]
 8005744:	1a1a      	subs	r2, r3, r0
 8005746:	f8bd 00d8 	ldrh.w	r0, [sp, #216]	; 0xd8
 800574a:	1a64      	subs	r4, r4, r1
 800574c:	f8bd c0e0 	ldrh.w	ip, [sp, #224]	; 0xe0
 8005750:	b292      	uxth	r2, r2
 8005752:	9301      	str	r3, [sp, #4]
 8005754:	b224      	sxth	r4, r4
 8005756:	f8bd 308c 	ldrh.w	r3, [sp, #140]	; 0x8c
 800575a:	9105      	str	r1, [sp, #20]
 800575c:	9006      	str	r0, [sp, #24]
 800575e:	f8bd 10e4 	ldrh.w	r1, [sp, #228]	; 0xe4
 8005762:	f8bd 00dc 	ldrh.w	r0, [sp, #220]	; 0xdc
 8005766:	9102      	str	r1, [sp, #8]
 8005768:	9000      	str	r0, [sp, #0]
 800576a:	a84b      	add	r0, sp, #300	; 0x12c
 800576c:	9924      	ldr	r1, [sp, #144]	; 0x90
 800576e:	9f3a      	ldr	r7, [sp, #232]	; 0xe8
 8005770:	e9cd 3c03 	strd	r3, ip, [sp, #12]
 8005774:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005776:	47b8      	blx	r7
 8005778:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800577a:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 800577c:	f9bd 30a0 	ldrsh.w	r3, [sp, #160]	; 0xa0
 8005780:	6951      	ldr	r1, [r2, #20]
 8005782:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8005784:	1afb      	subs	r3, r7, r3
 8005786:	68c9      	ldr	r1, [r1, #12]
 8005788:	6882      	ldr	r2, [r0, #8]
 800578a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800578e:	440a      	add	r2, r1
 8005790:	b21b      	sxth	r3, r3
 8005792:	6082      	str	r2, [r0, #8]
 8005794:	9323      	str	r3, [sp, #140]	; 0x8c
 8005796:	f8db 3014 	ldr.w	r3, [fp, #20]
 800579a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800579e:	68db      	ldr	r3, [r3, #12]
 80057a0:	4413      	add	r3, r2
 80057a2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80057a4:	f8c8 3008 	str.w	r3, [r8, #8]
 80057a8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80057aa:	b13a      	cbz	r2, 80057bc <forward_conv2d_nl_pool_integer_SSSA_ch+0x4d8>
 80057ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80057ae:	695a      	ldr	r2, [r3, #20]
 80057b0:	68b3      	ldr	r3, [r6, #8]
 80057b2:	68d2      	ldr	r2, [r2, #12]
 80057b4:	4413      	add	r3, r2
 80057b6:	60b3      	str	r3, [r6, #8]
 80057b8:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80057bc:	f8db 1014 	ldr.w	r1, [fp, #20]
 80057c0:	f8db 200c 	ldr.w	r2, [fp, #12]
 80057c4:	68c8      	ldr	r0, [r1, #12]
 80057c6:	68d2      	ldr	r2, [r2, #12]
 80057c8:	f8d8 100c 	ldr.w	r1, [r8, #12]
 80057cc:	fb00 1202 	mla	r2, r0, r2, r1
 80057d0:	4293      	cmp	r3, r2
 80057d2:	d306      	bcc.n	80057e2 <forward_conv2d_nl_pool_integer_SSSA_ch+0x4fe>
 80057d4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80057d6:	f8c8 1008 	str.w	r1, [r8, #8]
 80057da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057dc:	b10b      	cbz	r3, 80057e2 <forward_conv2d_nl_pool_integer_SSSA_ch+0x4fe>
 80057de:	68f3      	ldr	r3, [r6, #12]
 80057e0:	60b3      	str	r3, [r6, #8]
 80057e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80057e4:	4599      	cmp	r9, r3
 80057e6:	f4ff af2d 	bcc.w	8005644 <forward_conv2d_nl_pool_integer_SSSA_ch+0x360>
 80057ea:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80057ee:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80057f0:	f8c8 3008 	str.w	r3, [r8, #8]
 80057f4:	68f3      	ldr	r3, [r6, #12]
 80057f6:	60b3      	str	r3, [r6, #8]
 80057f8:	68d3      	ldr	r3, [r2, #12]
 80057fa:	6093      	str	r3, [r2, #8]
 80057fc:	b053      	add	sp, #332	; 0x14c
 80057fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005802:	e9d6 2102 	ldrd	r2, r1, [r6, #8]
 8005806:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8005808:	fb03 2314 	mls	r3, r3, r4, r2
 800580c:	4299      	cmp	r1, r3
 800580e:	d901      	bls.n	8005814 <forward_conv2d_nl_pool_integer_SSSA_ch+0x530>
 8005810:	6870      	ldr	r0, [r6, #4]
 8005812:	4403      	add	r3, r0
 8005814:	4299      	cmp	r1, r3
 8005816:	d212      	bcs.n	800583e <forward_conv2d_nl_pool_integer_SSSA_ch+0x55a>
 8005818:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800581a:	42a0      	cmp	r0, r4
 800581c:	d00f      	beq.n	800583e <forward_conv2d_nl_pool_integer_SSSA_ch+0x55a>
 800581e:	6870      	ldr	r0, [r6, #4]
 8005820:	4401      	add	r1, r0
 8005822:	428b      	cmp	r3, r1
 8005824:	d20b      	bcs.n	800583e <forward_conv2d_nl_pool_integer_SSSA_ch+0x55a>
 8005826:	3a01      	subs	r2, #1
 8005828:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800582a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800582e:	f802 1f01 	strb.w	r1, [r2, #1]!
 8005832:	68f1      	ldr	r1, [r6, #12]
 8005834:	6870      	ldr	r0, [r6, #4]
 8005836:	4401      	add	r1, r0
 8005838:	428b      	cmp	r3, r1
 800583a:	d3f6      	bcc.n	800582a <forward_conv2d_nl_pool_integer_SSSA_ch+0x546>
 800583c:	9714      	str	r7, [sp, #80]	; 0x50
 800583e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8005840:	b2a4      	uxth	r4, r4
 8005842:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8005844:	4413      	add	r3, r2
 8005846:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8005848:	1b1b      	subs	r3, r3, r4
 800584a:	4414      	add	r4, r2
 800584c:	b21b      	sxth	r3, r3
 800584e:	b224      	sxth	r4, r4
 8005850:	9327      	str	r3, [sp, #156]	; 0x9c
 8005852:	e769      	b.n	8005728 <forward_conv2d_nl_pool_integer_SSSA_ch+0x444>
 8005854:	4670      	mov	r0, lr
 8005856:	e693      	b.n	8005580 <forward_conv2d_nl_pool_integer_SSSA_ch+0x29c>
 8005858:	9216      	str	r2, [sp, #88]	; 0x58
 800585a:	e689      	b.n	8005570 <forward_conv2d_nl_pool_integer_SSSA_ch+0x28c>
 800585c:	9116      	str	r1, [sp, #88]	; 0x58
 800585e:	e687      	b.n	8005570 <forward_conv2d_nl_pool_integer_SSSA_ch+0x28c>
 8005860:	f8d0 a020 	ldr.w	sl, [r0, #32]
 8005864:	f1ba 0f00 	cmp.w	sl, #0
 8005868:	f43f adc4 	beq.w	80053f4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x110>
 800586c:	f8da a008 	ldr.w	sl, [sl, #8]
 8005870:	e5c0      	b.n	80053f4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x110>
 8005872:	6823      	ldr	r3, [r4, #0]
 8005874:	e556      	b.n	8005324 <forward_conv2d_nl_pool_integer_SSSA_ch+0x40>
 8005876:	9318      	str	r3, [sp, #96]	; 0x60
 8005878:	e54c      	b.n	8005314 <forward_conv2d_nl_pool_integer_SSSA_ch+0x30>
 800587a:	9215      	str	r2, [sp, #84]	; 0x54
 800587c:	e669      	b.n	8005552 <forward_conv2d_nl_pool_integer_SSSA_ch+0x26e>
 800587e:	9015      	str	r0, [sp, #84]	; 0x54
 8005880:	e667      	b.n	8005552 <forward_conv2d_nl_pool_integer_SSSA_ch+0x26e>
 8005882:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005884:	009b      	lsls	r3, r3, #2
 8005886:	e6ae      	b.n	80055e6 <forward_conv2d_nl_pool_integer_SSSA_ch+0x302>
 8005888:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800588a:	fb05 f503 	mul.w	r5, r5, r3
 800588e:	2317      	movs	r3, #23
 8005890:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005894:	932b      	str	r3, [sp, #172]	; 0xac
 8005896:	3501      	adds	r5, #1
 8005898:	e69d      	b.n	80055d6 <forward_conv2d_nl_pool_integer_SSSA_ch+0x2f2>
 800589a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800589c:	f1bc 0f00 	cmp.w	ip, #0
 80058a0:	fb05 f303 	mul.w	r3, r5, r3
 80058a4:	bf14      	ite	ne
 80058a6:	2516      	movne	r5, #22
 80058a8:	2518      	moveq	r5, #24
 80058aa:	fb01 f103 	mul.w	r1, r1, r3
 80058ae:	952b      	str	r5, [sp, #172]	; 0xac
 80058b0:	0049      	lsls	r1, r1, #1
 80058b2:	f5b1 5fa0 	cmp.w	r1, #5120	; 0x1400
 80058b6:	bfa8      	it	ge
 80058b8:	f44f 51a0 	movge.w	r1, #5120	; 0x1400
 80058bc:	f1bc 0f00 	cmp.w	ip, #0
 80058c0:	f47f ae88 	bne.w	80055d4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x2f0>
 80058c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80058c6:	441d      	add	r5, r3
 80058c8:	eb01 0585 	add.w	r5, r1, r5, lsl #2
 80058cc:	e683      	b.n	80055d6 <forward_conv2d_nl_pool_integer_SSSA_ch+0x2f2>
 80058ce:	bf00      	nop
 80058d0:	00000000 	.word	0x00000000
 80058d4:	f1b9 0f00 	cmp.w	r9, #0
 80058d8:	d102      	bne.n	80058e0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5fc>
 80058da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80058dc:	429c      	cmp	r4, r3
 80058de:	d079      	beq.n	80059d4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x6f0>
 80058e0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80058e2:	2201      	movs	r2, #1
 80058e4:	9f16      	ldr	r7, [sp, #88]	; 0x58
 80058e6:	920f      	str	r2, [sp, #60]	; 0x3c
 80058e8:	910e      	str	r1, [sp, #56]	; 0x38
 80058ea:	9510      	str	r5, [sp, #64]	; 0x40
 80058ec:	f8d8 0008 	ldr.w	r0, [r8, #8]
 80058f0:	970c      	str	r7, [sp, #48]	; 0x30
 80058f2:	9f15      	ldr	r7, [sp, #84]	; 0x54
 80058f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80058f6:	970b      	str	r7, [sp, #44]	; 0x2c
 80058f8:	9f2a      	ldr	r7, [sp, #168]	; 0xa8
 80058fa:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80058fc:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8005900:	900d      	str	r0, [sp, #52]	; 0x34
 8005902:	4650      	mov	r0, sl
 8005904:	e9cd 5709 	strd	r5, r7, [sp, #36]	; 0x24
 8005908:	9f22      	ldr	r7, [sp, #136]	; 0x88
 800590a:	9708      	str	r7, [sp, #32]
 800590c:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800590e:	9707      	str	r7, [sp, #28]
 8005910:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8005912:	9706      	str	r7, [sp, #24]
 8005914:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8005916:	9705      	str	r7, [sp, #20]
 8005918:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800591a:	9704      	str	r7, [sp, #16]
 800591c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800591e:	9703      	str	r7, [sp, #12]
 8005920:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8005922:	9702      	str	r7, [sp, #8]
 8005924:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8005926:	9701      	str	r7, [sp, #4]
 8005928:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800592a:	9700      	str	r7, [sp, #0]
 800592c:	f002 f9a0 	bl	8007c70 <st_sssa8_ch_convolve>
 8005930:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005932:	991d      	ldr	r1, [sp, #116]	; 0x74
 8005934:	428b      	cmp	r3, r1
 8005936:	f47f aede 	bne.w	80056f6 <forward_conv2d_nl_pool_integer_SSSA_ch+0x412>
 800593a:	2300      	movs	r3, #0
 800593c:	9314      	str	r3, [sp, #80]	; 0x50
 800593e:	9325      	str	r3, [sp, #148]	; 0x94
 8005940:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005942:	2b00      	cmp	r3, #0
 8005944:	f43f aee2 	beq.w	800570c <forward_conv2d_nl_pool_integer_SSSA_ch+0x428>
 8005948:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800594a:	1a9b      	subs	r3, r3, r2
 800594c:	d504      	bpl.n	8005958 <forward_conv2d_nl_pool_integer_SSSA_ch+0x674>
 800594e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005950:	1a52      	subs	r2, r2, r1
 8005952:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8005954:	fb01 aa02 	mla	sl, r1, r2, sl
 8005958:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800595c:	b29b      	uxth	r3, r3
 800595e:	9312      	str	r3, [sp, #72]	; 0x48
 8005960:	e6d6      	b.n	8005710 <forward_conv2d_nl_pool_integer_SSSA_ch+0x42c>
 8005962:	f1b9 0f00 	cmp.w	r9, #0
 8005966:	d102      	bne.n	800596e <forward_conv2d_nl_pool_integer_SSSA_ch+0x68a>
 8005968:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800596a:	429c      	cmp	r4, r3
 800596c:	d02a      	beq.n	80059c4 <forward_conv2d_nl_pool_integer_SSSA_ch+0x6e0>
 800596e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8005970:	2201      	movs	r2, #1
 8005972:	9f16      	ldr	r7, [sp, #88]	; 0x58
 8005974:	920f      	str	r2, [sp, #60]	; 0x3c
 8005976:	910e      	str	r1, [sp, #56]	; 0x38
 8005978:	9510      	str	r5, [sp, #64]	; 0x40
 800597a:	f8d8 0008 	ldr.w	r0, [r8, #8]
 800597e:	970c      	str	r7, [sp, #48]	; 0x30
 8005980:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8005982:	900d      	str	r0, [sp, #52]	; 0x34
 8005984:	4650      	mov	r0, sl
 8005986:	970b      	str	r7, [sp, #44]	; 0x2c
 8005988:	9f2a      	ldr	r7, [sp, #168]	; 0xa8
 800598a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800598c:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8005990:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8005992:	e9cd 5709 	strd	r5, r7, [sp, #36]	; 0x24
 8005996:	9f22      	ldr	r7, [sp, #136]	; 0x88
 8005998:	9708      	str	r7, [sp, #32]
 800599a:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800599c:	9707      	str	r7, [sp, #28]
 800599e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80059a0:	9706      	str	r7, [sp, #24]
 80059a2:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80059a4:	9705      	str	r7, [sp, #20]
 80059a6:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80059a8:	9704      	str	r7, [sp, #16]
 80059aa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80059ac:	9703      	str	r7, [sp, #12]
 80059ae:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80059b0:	9702      	str	r7, [sp, #8]
 80059b2:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80059b4:	9701      	str	r7, [sp, #4]
 80059b6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80059b8:	9700      	str	r7, [sp, #0]
 80059ba:	f001 fbc9 	bl	8007150 <st_sssa8_ch_convolve_dw>
 80059be:	e695      	b.n	80056ec <forward_conv2d_nl_pool_integer_SSSA_ch+0x408>
 80059c0:	9514      	str	r5, [sp, #80]	; 0x50
 80059c2:	e49e      	b.n	8005302 <forward_conv2d_nl_pool_integer_SSSA_ch+0x1e>
 80059c4:	9500      	str	r5, [sp, #0]
 80059c6:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80059c8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80059ca:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 80059ce:	f001 fb09 	bl	8006fe4 <st_sssa8_ch_conv_dw_Wadapt>
 80059d2:	e7cc      	b.n	800596e <forward_conv2d_nl_pool_integer_SSSA_ch+0x68a>
 80059d4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80059d6:	9922      	ldr	r1, [sp, #136]	; 0x88
 80059d8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80059da:	9202      	str	r2, [sp, #8]
 80059dc:	9101      	str	r1, [sp, #4]
 80059de:	9000      	str	r0, [sp, #0]
 80059e0:	9503      	str	r5, [sp, #12]
 80059e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80059e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80059e6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80059e8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80059ea:	f002 f8b9 	bl	8007b60 <st_sssa8_ch_convolve_rank1upd>
 80059ee:	e777      	b.n	80058e0 <forward_conv2d_nl_pool_integer_SSSA_ch+0x5fc>
 80059f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80059f2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80059f4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80059f6:	f003 fa85 	bl	8008f04 <st_sssa8_ch_convolve_1x1_WeightsPrefetch>
 80059fa:	e64f      	b.n	800569c <forward_conv2d_nl_pool_integer_SSSA_ch+0x3b8>
 80059fc:	ab3d      	add	r3, sp, #244	; 0xf4
 80059fe:	461f      	mov	r7, r3
 8005a00:	e64c      	b.n	800569c <forward_conv2d_nl_pool_integer_SSSA_ch+0x3b8>
 8005a02:	9316      	str	r3, [sp, #88]	; 0x58
 8005a04:	e5b4      	b.n	8005570 <forward_conv2d_nl_pool_integer_SSSA_ch+0x28c>
 8005a06:	9315      	str	r3, [sp, #84]	; 0x54
 8005a08:	e5a3      	b.n	8005552 <forward_conv2d_nl_pool_integer_SSSA_ch+0x26e>
 8005a0a:	4904      	ldr	r1, [pc, #16]	; (8005a1c <forward_conv2d_nl_pool_integer_SSSA_ch+0x738>)
 8005a0c:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
 8005a10:	912f      	str	r1, [sp, #188]	; 0xbc
 8005a12:	e4a4      	b.n	800535e <forward_conv2d_nl_pool_integer_SSSA_ch+0x7a>
 8005a14:	4622      	mov	r2, r4
 8005a16:	e490      	b.n	800533a <forward_conv2d_nl_pool_integer_SSSA_ch+0x56>
 8005a18:	2200      	movs	r2, #0
 8005a1a:	e48e      	b.n	800533a <forward_conv2d_nl_pool_integer_SSSA_ch+0x56>
 8005a1c:	08004d51 	.word	0x08004d51

08005a20 <forward_dense_integer_SSSA>:
 8005a20:	6983      	ldr	r3, [r0, #24]
 8005a22:	8818      	ldrh	r0, [r3, #0]
 8005a24:	2800      	cmp	r0, #0
 8005a26:	f000 80a4 	beq.w	8005b72 <forward_dense_integer_SSSA+0x152>
 8005a2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a2e:	ed2d 8b02 	vpush	{d8}
 8005a32:	685c      	ldr	r4, [r3, #4]
 8005a34:	b093      	sub	sp, #76	; 0x4c
 8005a36:	6862      	ldr	r2, [r4, #4]
 8005a38:	b102      	cbz	r2, 8005a3c <forward_dense_integer_SSSA+0x1c>
 8005a3a:	6812      	ldr	r2, [r2, #0]
 8005a3c:	2801      	cmp	r0, #1
 8005a3e:	f240 808f 	bls.w	8005b60 <forward_dense_integer_SSSA+0x140>
 8005a42:	6923      	ldr	r3, [r4, #16]
 8005a44:	b103      	cbz	r3, 8005a48 <forward_dense_integer_SSSA+0x28>
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	2802      	cmp	r0, #2
 8005a4a:	f000 808f 	beq.w	8005b6c <forward_dense_integer_SSSA+0x14c>
 8005a4e:	69e5      	ldr	r5, [r4, #28]
 8005a50:	2d00      	cmp	r5, #0
 8005a52:	f000 80e1 	beq.w	8005c18 <forward_dense_integer_SSSA+0x1f8>
 8005a56:	6829      	ldr	r1, [r5, #0]
 8005a58:	f114 0618 	adds.w	r6, r4, #24
 8005a5c:	d007      	beq.n	8005a6e <forward_dense_integer_SSSA+0x4e>
 8005a5e:	8b26      	ldrh	r6, [r4, #24]
 8005a60:	2e01      	cmp	r6, #1
 8005a62:	f240 80c7 	bls.w	8005bf4 <forward_dense_integer_SSSA+0x1d4>
 8005a66:	2d00      	cmp	r5, #0
 8005a68:	f000 80bb 	beq.w	8005be2 <forward_dense_integer_SSSA+0x1c2>
 8005a6c:	686e      	ldr	r6, [r5, #4]
 8005a6e:	2803      	cmp	r0, #3
 8005a70:	d079      	beq.n	8005b66 <forward_dense_integer_SSSA+0x146>
 8005a72:	69b7      	ldr	r7, [r6, #24]
 8005a74:	68d8      	ldr	r0, [r3, #12]
 8005a76:	68bf      	ldr	r7, [r7, #8]
 8005a78:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005a7a:	68c5      	ldr	r5, [r0, #12]
 8005a7c:	68d4      	ldr	r4, [r2, #12]
 8005a7e:	970f      	str	r7, [sp, #60]	; 0x3c
 8005a80:	6887      	ldr	r7, [r0, #8]
 8005a82:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8005a86:	fb07 f505 	mul.w	r5, r7, r5
 8005a8a:	f8b0 b004 	ldrh.w	fp, [r0, #4]
 8005a8e:	699c      	ldr	r4, [r3, #24]
 8005a90:	6997      	ldr	r7, [r2, #24]
 8005a92:	2e00      	cmp	r6, #0
 8005a94:	f000 80c6 	beq.w	8005c24 <forward_dense_integer_SSSA+0x204>
 8005a98:	6830      	ldr	r0, [r6, #0]
 8005a9a:	2800      	cmp	r0, #0
 8005a9c:	f000 8093 	beq.w	8005bc6 <forward_dense_integer_SSSA+0x1a6>
 8005aa0:	6980      	ldr	r0, [r0, #24]
 8005aa2:	6880      	ldr	r0, [r0, #8]
 8005aa4:	900c      	str	r0, [sp, #48]	; 0x30
 8005aa6:	68a0      	ldr	r0, [r4, #8]
 8005aa8:	6816      	ldr	r6, [r2, #0]
 8005aaa:	698a      	ldr	r2, [r1, #24]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8005ab2:	900d      	str	r0, [sp, #52]	; 0x34
 8005ab4:	f8d2 9008 	ldr.w	r9, [r2, #8]
 8005ab8:	680c      	ldr	r4, [r1, #0]
 8005aba:	2e00      	cmp	r6, #0
 8005abc:	d062      	beq.n	8005b84 <forward_dense_integer_SSSA+0x164>
 8005abe:	6870      	ldr	r0, [r6, #4]
 8005ac0:	4607      	mov	r7, r0
 8005ac2:	2800      	cmp	r0, #0
 8005ac4:	d057      	beq.n	8005b76 <forward_dense_integer_SSSA+0x156>
 8005ac6:	8871      	ldrh	r1, [r6, #2]
 8005ac8:	2900      	cmp	r1, #0
 8005aca:	d07e      	beq.n	8005bca <forward_dense_integer_SSSA+0x1aa>
 8005acc:	6802      	ldr	r2, [r0, #0]
 8005ace:	ed92 8a00 	vldr	s16, [r2]
 8005ad2:	2b00      	cmp	r3, #0
 8005ad4:	f000 809b 	beq.w	8005c0e <forward_dense_integer_SSSA+0x1ee>
 8005ad8:	6859      	ldr	r1, [r3, #4]
 8005ada:	2900      	cmp	r1, #0
 8005adc:	d07a      	beq.n	8005bd4 <forward_dense_integer_SSSA+0x1b4>
 8005ade:	8858      	ldrh	r0, [r3, #2]
 8005ae0:	2800      	cmp	r0, #0
 8005ae2:	d059      	beq.n	8005b98 <forward_dense_integer_SSSA+0x178>
 8005ae4:	680a      	ldr	r2, [r1, #0]
 8005ae6:	edd2 8a00 	vldr	s17, [r2]
 8005aea:	2e00      	cmp	r6, #0
 8005aec:	f040 8084 	bne.w	8005bf8 <forward_dense_integer_SSSA+0x1d8>
 8005af0:	684b      	ldr	r3, [r1, #4]
 8005af2:	f993 3000 	ldrsb.w	r3, [r3]
 8005af6:	930e      	str	r3, [sp, #56]	; 0x38
 8005af8:	b114      	cbz	r4, 8005b00 <forward_dense_integer_SSSA+0xe0>
 8005afa:	6864      	ldr	r4, [r4, #4]
 8005afc:	b104      	cbz	r4, 8005b00 <forward_dense_integer_SSSA+0xe0>
 8005afe:	6824      	ldr	r4, [r4, #0]
 8005b00:	2700      	movs	r7, #0
 8005b02:	4640      	mov	r0, r8
 8005b04:	f000 faba 	bl	800607c <arm_fully_connected_s8_get_buffer_size>
 8005b08:	4620      	mov	r0, r4
 8005b0a:	eef0 0a68 	vmov.f32	s1, s17
 8005b0e:	ab10      	add	r3, sp, #64	; 0x40
 8005b10:	eeb0 0a48 	vmov.f32	s0, s16
 8005b14:	aa11      	add	r2, sp, #68	; 0x44
 8005b16:	2101      	movs	r1, #1
 8005b18:	247f      	movs	r4, #127	; 0x7f
 8005b1a:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
 8005b1e:	f001 f97f 	bl	8006e20 <align_factor_cmsisnn>
 8005b22:	9702      	str	r7, [sp, #8]
 8005b24:	b2a9      	uxth	r1, r5
 8005b26:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8005b28:	f06f 057f 	mvn.w	r5, #127	; 0x7f
 8005b2c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005b2e:	9707      	str	r7, [sp, #28]
 8005b30:	465b      	mov	r3, fp
 8005b32:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8005b34:	4642      	mov	r2, r8
 8005b36:	9100      	str	r1, [sp, #0]
 8005b38:	4649      	mov	r1, r9
 8005b3a:	9706      	str	r7, [sp, #24]
 8005b3c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8005b3e:	900a      	str	r0, [sp, #40]	; 0x28
 8005b40:	4650      	mov	r0, sl
 8005b42:	9705      	str	r7, [sp, #20]
 8005b44:	9601      	str	r6, [sp, #4]
 8005b46:	e9cd 5408 	strd	r5, r4, [sp, #32]
 8005b4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8005b4c:	9404      	str	r4, [sp, #16]
 8005b4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8005b50:	9403      	str	r4, [sp, #12]
 8005b52:	f000 fa65 	bl	8006020 <arm_fully_connected_s8>
 8005b56:	b013      	add	sp, #76	; 0x4c
 8005b58:	ecbd 8b02 	vpop	{d8}
 8005b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b60:	2300      	movs	r3, #0
 8005b62:	685b      	ldr	r3, [r3, #4]
 8005b64:	deff      	udf	#255	; 0xff
 8005b66:	2300      	movs	r3, #0
 8005b68:	685b      	ldr	r3, [r3, #4]
 8005b6a:	deff      	udf	#255	; 0xff
 8005b6c:	2300      	movs	r3, #0
 8005b6e:	685b      	ldr	r3, [r3, #4]
 8005b70:	deff      	udf	#255	; 0xff
 8005b72:	6843      	ldr	r3, [r0, #4]
 8005b74:	deff      	udf	#255	; 0xff
 8005b76:	2b00      	cmp	r3, #0
 8005b78:	d035      	beq.n	8005be6 <forward_dense_integer_SSSA+0x1c6>
 8005b7a:	6859      	ldr	r1, [r3, #4]
 8005b7c:	b939      	cbnz	r1, 8005b8e <forward_dense_integer_SSSA+0x16e>
 8005b7e:	ed9f 8a2a 	vldr	s16, [pc, #168]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005b82:	e00c      	b.n	8005b9e <forward_dense_integer_SSSA+0x17e>
 8005b84:	2b00      	cmp	r3, #0
 8005b86:	d02e      	beq.n	8005be6 <forward_dense_integer_SSSA+0x1c6>
 8005b88:	6859      	ldr	r1, [r3, #4]
 8005b8a:	2900      	cmp	r1, #0
 8005b8c:	d039      	beq.n	8005c02 <forward_dense_integer_SSSA+0x1e2>
 8005b8e:	8858      	ldrh	r0, [r3, #2]
 8005b90:	ed9f 8a25 	vldr	s16, [pc, #148]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005b94:	2800      	cmp	r0, #0
 8005b96:	d1a5      	bne.n	8005ae4 <forward_dense_integer_SSSA+0xc4>
 8005b98:	2e00      	cmp	r6, #0
 8005b9a:	d035      	beq.n	8005c08 <forward_dense_integer_SSSA+0x1e8>
 8005b9c:	6870      	ldr	r0, [r6, #4]
 8005b9e:	4607      	mov	r7, r0
 8005ba0:	2800      	cmp	r0, #0
 8005ba2:	d03b      	beq.n	8005c1c <forward_dense_integer_SSSA+0x1fc>
 8005ba4:	eddf 8a20 	vldr	s17, [pc, #128]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005ba8:	8876      	ldrh	r6, [r6, #2]
 8005baa:	b12e      	cbz	r6, 8005bb8 <forward_dense_integer_SSSA+0x198>
 8005bac:	687a      	ldr	r2, [r7, #4]
 8005bae:	f992 6000 	ldrsb.w	r6, [r2]
 8005bb2:	4276      	negs	r6, r6
 8005bb4:	b12b      	cbz	r3, 8005bc2 <forward_dense_integer_SSSA+0x1a2>
 8005bb6:	6859      	ldr	r1, [r3, #4]
 8005bb8:	b151      	cbz	r1, 8005bd0 <forward_dense_integer_SSSA+0x1b0>
 8005bba:	8858      	ldrh	r0, [r3, #2]
 8005bbc:	2800      	cmp	r0, #0
 8005bbe:	d197      	bne.n	8005af0 <forward_dense_integer_SSSA+0xd0>
 8005bc0:	2300      	movs	r3, #0
 8005bc2:	930e      	str	r3, [sp, #56]	; 0x38
 8005bc4:	e798      	b.n	8005af8 <forward_dense_integer_SSSA+0xd8>
 8005bc6:	900c      	str	r0, [sp, #48]	; 0x30
 8005bc8:	e76d      	b.n	8005aa6 <forward_dense_integer_SSSA+0x86>
 8005bca:	ed9f 8a17 	vldr	s16, [pc, #92]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005bce:	e780      	b.n	8005ad2 <forward_dense_integer_SSSA+0xb2>
 8005bd0:	910e      	str	r1, [sp, #56]	; 0x38
 8005bd2:	e791      	b.n	8005af8 <forward_dense_integer_SSSA+0xd8>
 8005bd4:	2e00      	cmp	r6, #0
 8005bd6:	d1e2      	bne.n	8005b9e <forward_dense_integer_SSSA+0x17e>
 8005bd8:	2600      	movs	r6, #0
 8005bda:	eddf 8a13 	vldr	s17, [pc, #76]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005bde:	960e      	str	r6, [sp, #56]	; 0x38
 8005be0:	e78a      	b.n	8005af8 <forward_dense_integer_SSSA+0xd8>
 8005be2:	462e      	mov	r6, r5
 8005be4:	e743      	b.n	8005a6e <forward_dense_integer_SSSA+0x4e>
 8005be6:	ed9f 8a10 	vldr	s16, [pc, #64]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005bea:	461e      	mov	r6, r3
 8005bec:	930e      	str	r3, [sp, #56]	; 0x38
 8005bee:	eef0 8a48 	vmov.f32	s17, s16
 8005bf2:	e781      	b.n	8005af8 <forward_dense_integer_SSSA+0xd8>
 8005bf4:	2600      	movs	r6, #0
 8005bf6:	e73a      	b.n	8005a6e <forward_dense_integer_SSSA+0x4e>
 8005bf8:	6877      	ldr	r7, [r6, #4]
 8005bfa:	2f00      	cmp	r7, #0
 8005bfc:	d1d4      	bne.n	8005ba8 <forward_dense_integer_SSSA+0x188>
 8005bfe:	463e      	mov	r6, r7
 8005c00:	e7dc      	b.n	8005bbc <forward_dense_integer_SSSA+0x19c>
 8005c02:	ed9f 8a09 	vldr	s16, [pc, #36]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005c06:	e7e7      	b.n	8005bd8 <forward_dense_integer_SSSA+0x1b8>
 8005c08:	eddf 8a07 	vldr	s17, [pc, #28]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005c0c:	e7d8      	b.n	8005bc0 <forward_dense_integer_SSSA+0x1a0>
 8005c0e:	2900      	cmp	r1, #0
 8005c10:	d0e2      	beq.n	8005bd8 <forward_dense_integer_SSSA+0x1b8>
 8005c12:	eddf 8a05 	vldr	s17, [pc, #20]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005c16:	e7c9      	b.n	8005bac <forward_dense_integer_SSSA+0x18c>
 8005c18:	4629      	mov	r1, r5
 8005c1a:	e71d      	b.n	8005a58 <forward_dense_integer_SSSA+0x38>
 8005c1c:	4606      	mov	r6, r0
 8005c1e:	eddf 8a02 	vldr	s17, [pc, #8]	; 8005c28 <forward_dense_integer_SSSA+0x208>
 8005c22:	e7c9      	b.n	8005bb8 <forward_dense_integer_SSSA+0x198>
 8005c24:	960c      	str	r6, [sp, #48]	; 0x30
 8005c26:	e73e      	b.n	8005aa6 <forward_dense_integer_SSSA+0x86>
 8005c28:	00000000 	.word	0x00000000

08005c2c <nl_func_sm_array_f32>:
 8005c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c30:	ed2d 8b04 	vpush	{d8-d9}
 8005c34:	b089      	sub	sp, #36	; 0x24
 8005c36:	698f      	ldr	r7, [r1, #24]
 8005c38:	6986      	ldr	r6, [r0, #24]
 8005c3a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8005c3e:	68bd      	ldr	r5, [r7, #8]
 8005c40:	eba2 040e 	sub.w	r4, r2, lr
 8005c44:	f8dd c05c 	ldr.w	ip, [sp, #92]	; 0x5c
 8005c48:	9602      	str	r6, [sp, #8]
 8005c4a:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8005c4e:	68fc      	ldr	r4, [r7, #12]
 8005c50:	68b6      	ldr	r6, [r6, #8]
 8005c52:	eba2 020c 	sub.w	r2, r2, ip
 8005c56:	42a5      	cmp	r5, r4
 8005c58:	eb06 0682 	add.w	r6, r6, r2, lsl #2
 8005c5c:	d351      	bcc.n	8005d02 <nl_func_sm_array_f32+0xd6>
 8005c5e:	9303      	str	r3, [sp, #12]
 8005c60:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005c64:	009b      	lsls	r3, r3, #2
 8005c66:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 8005c6a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8005c6e:	f1ce 0200 	rsb	r2, lr, #0
 8005c72:	9301      	str	r3, [sp, #4]
 8005c74:	f1cc 0300 	rsb	r3, ip, #0
 8005c78:	9204      	str	r2, [sp, #16]
 8005c7a:	e9cd 1006 	strd	r1, r0, [sp, #24]
 8005c7e:	9305      	str	r3, [sp, #20]
 8005c80:	9b02      	ldr	r3, [sp, #8]
 8005c82:	9a07      	ldr	r2, [sp, #28]
 8005c84:	60bd      	str	r5, [r7, #8]
 8005c86:	609e      	str	r6, [r3, #8]
 8005c88:	9b06      	ldr	r3, [sp, #24]
 8005c8a:	6992      	ldr	r2, [r2, #24]
 8005c8c:	699b      	ldr	r3, [r3, #24]
 8005c8e:	6894      	ldr	r4, [r2, #8]
 8005c90:	9a03      	ldr	r2, [sp, #12]
 8005c92:	689b      	ldr	r3, [r3, #8]
 8005c94:	2a01      	cmp	r2, #1
 8005c96:	ed93 8a00 	vldr	s16, [r3]
 8005c9a:	d93b      	bls.n	8005d14 <nl_func_sm_array_f32+0xe8>
 8005c9c:	9901      	ldr	r1, [sp, #4]
 8005c9e:	1d1a      	adds	r2, r3, #4
 8005ca0:	eb03 0b01 	add.w	fp, r3, r1
 8005ca4:	ecf2 7a01 	vldmia	r2!, {s15}
 8005ca8:	4593      	cmp	fp, r2
 8005caa:	fe88 8a27 	vmaxnm.f32	s16, s16, s15
 8005cae:	d1f9      	bne.n	8005ca4 <nl_func_sm_array_f32+0x78>
 8005cb0:	469a      	mov	sl, r3
 8005cb2:	46a1      	mov	r9, r4
 8005cb4:	46a0      	mov	r8, r4
 8005cb6:	eddf 8a1a 	vldr	s17, [pc, #104]	; 8005d20 <nl_func_sm_array_f32+0xf4>
 8005cba:	ecba 0a01 	vldmia	sl!, {s0}
 8005cbe:	ee30 0a48 	vsub.f32	s0, s0, s16
 8005cc2:	f005 fc17 	bl	800b4f4 <expf>
 8005cc6:	45d3      	cmp	fp, sl
 8005cc8:	eca8 0a01 	vstmia	r8!, {s0}
 8005ccc:	ee78 8a80 	vadd.f32	s17, s17, s0
 8005cd0:	d1f3      	bne.n	8005cba <nl_func_sm_array_f32+0x8e>
 8005cd2:	eef5 8a40 	vcmp.f32	s17, #0.0
 8005cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cda:	d00b      	beq.n	8005cf4 <nl_func_sm_array_f32+0xc8>
 8005cdc:	ee89 7a28 	vdiv.f32	s14, s18, s17
 8005ce0:	9b01      	ldr	r3, [sp, #4]
 8005ce2:	441c      	add	r4, r3
 8005ce4:	edd9 7a00 	vldr	s15, [r9]
 8005ce8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005cec:	ece9 7a01 	vstmia	r9!, {s15}
 8005cf0:	454c      	cmp	r4, r9
 8005cf2:	d1f7      	bne.n	8005ce4 <nl_func_sm_array_f32+0xb8>
 8005cf4:	9b04      	ldr	r3, [sp, #16]
 8005cf6:	68fc      	ldr	r4, [r7, #12]
 8005cf8:	441d      	add	r5, r3
 8005cfa:	9b05      	ldr	r3, [sp, #20]
 8005cfc:	42ac      	cmp	r4, r5
 8005cfe:	441e      	add	r6, r3
 8005d00:	d9be      	bls.n	8005c80 <nl_func_sm_array_f32+0x54>
 8005d02:	9a02      	ldr	r2, [sp, #8]
 8005d04:	60bc      	str	r4, [r7, #8]
 8005d06:	68d3      	ldr	r3, [r2, #12]
 8005d08:	6093      	str	r3, [r2, #8]
 8005d0a:	b009      	add	sp, #36	; 0x24
 8005d0c:	ecbd 8b04 	vpop	{d8-d9}
 8005d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d14:	2a00      	cmp	r2, #0
 8005d16:	d0ed      	beq.n	8005cf4 <nl_func_sm_array_f32+0xc8>
 8005d18:	9a01      	ldr	r2, [sp, #4]
 8005d1a:	eb03 0b02 	add.w	fp, r3, r2
 8005d1e:	e7c7      	b.n	8005cb0 <nl_func_sm_array_f32+0x84>
 8005d20:	00000000 	.word	0x00000000

08005d24 <forward_sm>:
 8005d24:	6982      	ldr	r2, [r0, #24]
 8005d26:	8813      	ldrh	r3, [r2, #0]
 8005d28:	b333      	cbz	r3, 8005d78 <forward_sm+0x54>
 8005d2a:	6852      	ldr	r2, [r2, #4]
 8005d2c:	6851      	ldr	r1, [r2, #4]
 8005d2e:	b101      	cbz	r1, 8005d32 <forward_sm+0xe>
 8005d30:	6809      	ldr	r1, [r1, #0]
 8005d32:	2b01      	cmp	r3, #1
 8005d34:	d91d      	bls.n	8005d72 <forward_sm+0x4e>
 8005d36:	6913      	ldr	r3, [r2, #16]
 8005d38:	b1cb      	cbz	r3, 8005d6e <forward_sm+0x4a>
 8005d3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d3c:	6818      	ldr	r0, [r3, #0]
 8005d3e:	b083      	sub	sp, #12
 8005d40:	688b      	ldr	r3, [r1, #8]
 8005d42:	68cd      	ldr	r5, [r1, #12]
 8005d44:	68c2      	ldr	r2, [r0, #12]
 8005d46:	0a1b      	lsrs	r3, r3, #8
 8005d48:	686e      	ldr	r6, [r5, #4]
 8005d4a:	6857      	ldr	r7, [r2, #4]
 8005d4c:	d016      	beq.n	8005d7c <forward_sm+0x58>
 8005d4e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8005d52:	2201      	movs	r2, #1
 8005d54:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 8005d58:	429d      	cmp	r5, r3
 8005d5a:	fb04 f202 	mul.w	r2, r4, r2
 8005d5e:	d1f9      	bne.n	8005d54 <forward_sm+0x30>
 8005d60:	4633      	mov	r3, r6
 8005d62:	9701      	str	r7, [sp, #4]
 8005d64:	9600      	str	r6, [sp, #0]
 8005d66:	f7ff ff61 	bl	8005c2c <nl_func_sm_array_f32>
 8005d6a:	b003      	add	sp, #12
 8005d6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d6e:	68db      	ldr	r3, [r3, #12]
 8005d70:	deff      	udf	#255	; 0xff
 8005d72:	2300      	movs	r3, #0
 8005d74:	685b      	ldr	r3, [r3, #4]
 8005d76:	deff      	udf	#255	; 0xff
 8005d78:	685b      	ldr	r3, [r3, #4]
 8005d7a:	deff      	udf	#255	; 0xff
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	e7ef      	b.n	8005d60 <forward_sm+0x3c>

08005d80 <ai_check_custom_types>:
 8005d80:	4b13      	ldr	r3, [pc, #76]	; (8005dd0 <ai_check_custom_types+0x50>)
 8005d82:	b082      	sub	sp, #8
 8005d84:	681b      	ldr	r3, [r3, #0]
 8005d86:	9301      	str	r3, [sp, #4]
 8005d88:	b118      	cbz	r0, 8005d92 <ai_check_custom_types+0x12>
 8005d8a:	7803      	ldrb	r3, [r0, #0]
 8005d8c:	2b03      	cmp	r3, #3
 8005d8e:	d002      	beq.n	8005d96 <ai_check_custom_types+0x16>
 8005d90:	2000      	movs	r0, #0
 8005d92:	b002      	add	sp, #8
 8005d94:	4770      	bx	lr
 8005d96:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8005d9a:	4293      	cmp	r3, r2
 8005d9c:	d004      	beq.n	8005da8 <ai_check_custom_types+0x28>
 8005d9e:	2001      	movs	r0, #1
 8005da0:	f080 0001 	eor.w	r0, r0, #1
 8005da4:	b002      	add	sp, #8
 8005da6:	4770      	bx	lr
 8005da8:	7842      	ldrb	r2, [r0, #1]
 8005daa:	3001      	adds	r0, #1
 8005dac:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8005db0:	429a      	cmp	r2, r3
 8005db2:	d1f4      	bne.n	8005d9e <ai_check_custom_types+0x1e>
 8005db4:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 8005db8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8005dbc:	429a      	cmp	r2, r3
 8005dbe:	d1ee      	bne.n	8005d9e <ai_check_custom_types+0x1e>
 8005dc0:	7842      	ldrb	r2, [r0, #1]
 8005dc2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005dc6:	429a      	cmp	r2, r3
 8005dc8:	d1e9      	bne.n	8005d9e <ai_check_custom_types+0x1e>
 8005dca:	2000      	movs	r0, #0
 8005dcc:	e7e8      	b.n	8005da0 <ai_check_custom_types+0x20>
 8005dce:	bf00      	nop
 8005dd0:	0800ed90 	.word	0x0800ed90

08005dd4 <ai_layers_init_all>:
 8005dd4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8005dd6:	b16a      	cbz	r2, 8005df4 <ai_layers_init_all+0x20>
 8005dd8:	6913      	ldr	r3, [r2, #16]
 8005dda:	60d0      	str	r0, [r2, #12]
 8005ddc:	429a      	cmp	r2, r3
 8005dde:	f04f 0201 	mov.w	r2, #1
 8005de2:	d007      	beq.n	8005df4 <ai_layers_init_all+0x20>
 8005de4:	b133      	cbz	r3, 8005df4 <ai_layers_init_all+0x20>
 8005de6:	6919      	ldr	r1, [r3, #16]
 8005de8:	3201      	adds	r2, #1
 8005dea:	60d8      	str	r0, [r3, #12]
 8005dec:	4299      	cmp	r1, r3
 8005dee:	bf18      	it	ne
 8005df0:	2900      	cmpne	r1, #0
 8005df2:	d101      	bne.n	8005df8 <ai_layers_init_all+0x24>
 8005df4:	4610      	mov	r0, r2
 8005df6:	4770      	bx	lr
 8005df8:	460b      	mov	r3, r1
 8005dfa:	e7f4      	b.n	8005de6 <ai_layers_init_all+0x12>

08005dfc <ai_layers_post_init_all>:
 8005dfc:	b538      	push	{r3, r4, r5, lr}
 8005dfe:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8005e00:	b184      	cbz	r4, 8005e24 <ai_layers_post_init_all+0x28>
 8005e02:	2500      	movs	r5, #0
 8005e04:	6863      	ldr	r3, [r4, #4]
 8005e06:	4620      	mov	r0, r4
 8005e08:	07db      	lsls	r3, r3, #31
 8005e0a:	d503      	bpl.n	8005e14 <ai_layers_post_init_all+0x18>
 8005e0c:	6a23      	ldr	r3, [r4, #32]
 8005e0e:	b10b      	cbz	r3, 8005e14 <ai_layers_post_init_all+0x18>
 8005e10:	3501      	adds	r5, #1
 8005e12:	4798      	blx	r3
 8005e14:	6923      	ldr	r3, [r4, #16]
 8005e16:	429c      	cmp	r4, r3
 8005e18:	bf18      	it	ne
 8005e1a:	2b00      	cmpne	r3, #0
 8005e1c:	461c      	mov	r4, r3
 8005e1e:	d1f1      	bne.n	8005e04 <ai_layers_post_init_all+0x8>
 8005e20:	4628      	mov	r0, r5
 8005e22:	bd38      	pop	{r3, r4, r5, pc}
 8005e24:	4625      	mov	r5, r4
 8005e26:	e7fb      	b.n	8005e20 <ai_layers_post_init_all+0x24>

08005e28 <ai_layers_forward_all>:
 8005e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005e2c:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8005e2e:	4604      	mov	r4, r0
 8005e30:	6d05      	ldr	r5, [r0, #80]	; 0x50
 8005e32:	2f00      	cmp	r7, #0
 8005e34:	d02b      	beq.n	8005e8e <ai_layers_forward_all+0x66>
 8005e36:	2d00      	cmp	r5, #0
 8005e38:	d03d      	beq.n	8005eb6 <ai_layers_forward_all+0x8e>
 8005e3a:	2600      	movs	r6, #0
 8005e3c:	6545      	str	r5, [r0, #84]	; 0x54
 8005e3e:	4629      	mov	r1, r5
 8005e40:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8005e42:	2001      	movs	r0, #1
 8005e44:	46b0      	mov	r8, r6
 8005e46:	47b8      	blx	r7
 8005e48:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8005e4a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005e4c:	2002      	movs	r0, #2
 8005e4e:	47b8      	blx	r7
 8005e50:	6d65      	ldr	r5, [r4, #84]	; 0x54
 8005e52:	696b      	ldr	r3, [r5, #20]
 8005e54:	4628      	mov	r0, r5
 8005e56:	4798      	blx	r3
 8005e58:	692b      	ldr	r3, [r5, #16]
 8005e5a:	2003      	movs	r0, #3
 8005e5c:	429d      	cmp	r5, r3
 8005e5e:	4619      	mov	r1, r3
 8005e60:	d009      	beq.n	8005e76 <ai_layers_forward_all+0x4e>
 8005e62:	6563      	str	r3, [r4, #84]	; 0x54
 8005e64:	3601      	adds	r6, #1
 8005e66:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005e68:	47b8      	blx	r7
 8005e6a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8005e6c:	2900      	cmp	r1, #0
 8005e6e:	d1ec      	bne.n	8005e4a <ai_layers_forward_all+0x22>
 8005e70:	4630      	mov	r0, r6
 8005e72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e76:	2100      	movs	r1, #0
 8005e78:	f8c4 8054 	str.w	r8, [r4, #84]	; 0x54
 8005e7c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8005e7e:	3601      	adds	r6, #1
 8005e80:	47b8      	blx	r7
 8005e82:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8005e84:	2900      	cmp	r1, #0
 8005e86:	d1e0      	bne.n	8005e4a <ai_layers_forward_all+0x22>
 8005e88:	4630      	mov	r0, r6
 8005e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e8e:	b195      	cbz	r5, 8005eb6 <ai_layers_forward_all+0x8e>
 8005e90:	463e      	mov	r6, r7
 8005e92:	6545      	str	r5, [r0, #84]	; 0x54
 8005e94:	696b      	ldr	r3, [r5, #20]
 8005e96:	4628      	mov	r0, r5
 8005e98:	4798      	blx	r3
 8005e9a:	692b      	ldr	r3, [r5, #16]
 8005e9c:	3601      	adds	r6, #1
 8005e9e:	42ab      	cmp	r3, r5
 8005ea0:	461d      	mov	r5, r3
 8005ea2:	d003      	beq.n	8005eac <ai_layers_forward_all+0x84>
 8005ea4:	6563      	str	r3, [r4, #84]	; 0x54
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d1f4      	bne.n	8005e94 <ai_layers_forward_all+0x6c>
 8005eaa:	e7e1      	b.n	8005e70 <ai_layers_forward_all+0x48>
 8005eac:	2300      	movs	r3, #0
 8005eae:	4630      	mov	r0, r6
 8005eb0:	6563      	str	r3, [r4, #84]	; 0x54
 8005eb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005eb6:	462e      	mov	r6, r5
 8005eb8:	4630      	mov	r0, r6
 8005eba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005ebe:	bf00      	nop

08005ec0 <pool_func_ap_array_integer_INT8>:
 8005ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ec4:	b093      	sub	sp, #76	; 0x4c
 8005ec6:	6985      	ldr	r5, [r0, #24]
 8005ec8:	460f      	mov	r7, r1
 8005eca:	469c      	mov	ip, r3
 8005ecc:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8005ece:	6803      	ldr	r3, [r0, #0]
 8005ed0:	69a1      	ldr	r1, [r4, #24]
 8005ed2:	68a8      	ldr	r0, [r5, #8]
 8005ed4:	6825      	ldr	r5, [r4, #0]
 8005ed6:	f8bd 4074 	ldrh.w	r4, [sp, #116]	; 0x74
 8005eda:	6889      	ldr	r1, [r1, #8]
 8005edc:	940d      	str	r4, [sp, #52]	; 0x34
 8005ede:	f8bd 4078 	ldrh.w	r4, [sp, #120]	; 0x78
 8005ee2:	f8bd a070 	ldrh.w	sl, [sp, #112]	; 0x70
 8005ee6:	940e      	str	r4, [sp, #56]	; 0x38
 8005ee8:	f8bd 407c 	ldrh.w	r4, [sp, #124]	; 0x7c
 8005eec:	f8bd e084 	ldrh.w	lr, [sp, #132]	; 0x84
 8005ef0:	940f      	str	r4, [sp, #60]	; 0x3c
 8005ef2:	f8bd 4080 	ldrh.w	r4, [sp, #128]	; 0x80
 8005ef6:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8005efa:	9410      	str	r4, [sp, #64]	; 0x40
 8005efc:	f8bd 908c 	ldrh.w	r9, [sp, #140]	; 0x8c
 8005f00:	2b00      	cmp	r3, #0
 8005f02:	d03c      	beq.n	8005f7e <pool_func_ap_array_integer_INT8+0xbe>
 8005f04:	685e      	ldr	r6, [r3, #4]
 8005f06:	46b3      	mov	fp, r6
 8005f08:	2e00      	cmp	r6, #0
 8005f0a:	d031      	beq.n	8005f70 <pool_func_ap_array_integer_INT8+0xb0>
 8005f0c:	885c      	ldrh	r4, [r3, #2]
 8005f0e:	9411      	str	r4, [sp, #68]	; 0x44
 8005f10:	2c00      	cmp	r4, #0
 8005f12:	d051      	beq.n	8005fb8 <pool_func_ap_array_integer_INT8+0xf8>
 8005f14:	6834      	ldr	r4, [r6, #0]
 8005f16:	ed94 0a00 	vldr	s0, [r4]
 8005f1a:	2d00      	cmp	r5, #0
 8005f1c:	d069      	beq.n	8005ff2 <pool_func_ap_array_integer_INT8+0x132>
 8005f1e:	686c      	ldr	r4, [r5, #4]
 8005f20:	2c00      	cmp	r4, #0
 8005f22:	d054      	beq.n	8005fce <pool_func_ap_array_integer_INT8+0x10e>
 8005f24:	886e      	ldrh	r6, [r5, #2]
 8005f26:	9611      	str	r6, [sp, #68]	; 0x44
 8005f28:	2e00      	cmp	r6, #0
 8005f2a:	d033      	beq.n	8005f94 <pool_func_ap_array_integer_INT8+0xd4>
 8005f2c:	6826      	ldr	r6, [r4, #0]
 8005f2e:	edd6 0a00 	vldr	s1, [r6]
 8005f32:	2b00      	cmp	r3, #0
 8005f34:	d155      	bne.n	8005fe2 <pool_func_ap_array_integer_INT8+0x122>
 8005f36:	6864      	ldr	r4, [r4, #4]
 8005f38:	f994 4000 	ldrsb.w	r4, [r4]
 8005f3c:	f8cd 9020 	str.w	r9, [sp, #32]
 8005f40:	f8cd 801c 	str.w	r8, [sp, #28]
 8005f44:	f8cd e018 	str.w	lr, [sp, #24]
 8005f48:	f8cd c000 	str.w	ip, [sp]
 8005f4c:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
 8005f50:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8005f52:	4613      	mov	r3, r2
 8005f54:	463a      	mov	r2, r7
 8005f56:	9405      	str	r4, [sp, #20]
 8005f58:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8005f5a:	9404      	str	r4, [sp, #16]
 8005f5c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8005f5e:	9403      	str	r4, [sp, #12]
 8005f60:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8005f62:	e9cd a401 	strd	sl, r4, [sp, #4]
 8005f66:	f005 f8ab 	bl	800b0c0 <st_int8_avepool>
 8005f6a:	b013      	add	sp, #76	; 0x4c
 8005f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f70:	2d00      	cmp	r5, #0
 8005f72:	d02f      	beq.n	8005fd4 <pool_func_ap_array_integer_INT8+0x114>
 8005f74:	686c      	ldr	r4, [r5, #4]
 8005f76:	b93c      	cbnz	r4, 8005f88 <pool_func_ap_array_integer_INT8+0xc8>
 8005f78:	ed9f 0a28 	vldr	s0, [pc, #160]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005f7c:	e00d      	b.n	8005f9a <pool_func_ap_array_integer_INT8+0xda>
 8005f7e:	2d00      	cmp	r5, #0
 8005f80:	d028      	beq.n	8005fd4 <pool_func_ap_array_integer_INT8+0x114>
 8005f82:	686c      	ldr	r4, [r5, #4]
 8005f84:	2c00      	cmp	r4, #0
 8005f86:	d03f      	beq.n	8006008 <pool_func_ap_array_integer_INT8+0x148>
 8005f88:	886e      	ldrh	r6, [r5, #2]
 8005f8a:	ed9f 0a24 	vldr	s0, [pc, #144]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005f8e:	9611      	str	r6, [sp, #68]	; 0x44
 8005f90:	2e00      	cmp	r6, #0
 8005f92:	d1cb      	bne.n	8005f2c <pool_func_ap_array_integer_INT8+0x6c>
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d03e      	beq.n	8006016 <pool_func_ap_array_integer_INT8+0x156>
 8005f98:	685e      	ldr	r6, [r3, #4]
 8005f9a:	46b3      	mov	fp, r6
 8005f9c:	2e00      	cmp	r6, #0
 8005f9e:	d02f      	beq.n	8006000 <pool_func_ap_array_integer_INT8+0x140>
 8005fa0:	eddf 0a1e 	vldr	s1, [pc, #120]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005fa4:	885b      	ldrh	r3, [r3, #2]
 8005fa6:	b953      	cbnz	r3, 8005fbe <pool_func_ap_array_integer_INT8+0xfe>
 8005fa8:	2c00      	cmp	r4, #0
 8005faa:	d0c7      	beq.n	8005f3c <pool_func_ap_array_integer_INT8+0x7c>
 8005fac:	886d      	ldrh	r5, [r5, #2]
 8005fae:	9511      	str	r5, [sp, #68]	; 0x44
 8005fb0:	2d00      	cmp	r5, #0
 8005fb2:	d1c0      	bne.n	8005f36 <pool_func_ap_array_integer_INT8+0x76>
 8005fb4:	2400      	movs	r4, #0
 8005fb6:	e7c1      	b.n	8005f3c <pool_func_ap_array_integer_INT8+0x7c>
 8005fb8:	ed9f 0a18 	vldr	s0, [pc, #96]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005fbc:	e7ad      	b.n	8005f1a <pool_func_ap_array_integer_INT8+0x5a>
 8005fbe:	f8db 3004 	ldr.w	r3, [fp, #4]
 8005fc2:	f993 3000 	ldrsb.w	r3, [r3]
 8005fc6:	2d00      	cmp	r5, #0
 8005fc8:	d0f4      	beq.n	8005fb4 <pool_func_ap_array_integer_INT8+0xf4>
 8005fca:	686c      	ldr	r4, [r5, #4]
 8005fcc:	e7ec      	b.n	8005fa8 <pool_func_ap_array_integer_INT8+0xe8>
 8005fce:	2b00      	cmp	r3, #0
 8005fd0:	d1e3      	bne.n	8005f9a <pool_func_ap_array_integer_INT8+0xda>
 8005fd2:	e01b      	b.n	800600c <pool_func_ap_array_integer_INT8+0x14c>
 8005fd4:	ed9f 0a11 	vldr	s0, [pc, #68]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005fd8:	462b      	mov	r3, r5
 8005fda:	462c      	mov	r4, r5
 8005fdc:	eef0 0a40 	vmov.f32	s1, s0
 8005fe0:	e7ac      	b.n	8005f3c <pool_func_ap_array_integer_INT8+0x7c>
 8005fe2:	f8d3 b004 	ldr.w	fp, [r3, #4]
 8005fe6:	f1bb 0f00 	cmp.w	fp, #0
 8005fea:	d1db      	bne.n	8005fa4 <pool_func_ap_array_integer_INT8+0xe4>
 8005fec:	465b      	mov	r3, fp
 8005fee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005ff0:	e7de      	b.n	8005fb0 <pool_func_ap_array_integer_INT8+0xf0>
 8005ff2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005ff4:	eddf 0a09 	vldr	s1, [pc, #36]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d1e0      	bne.n	8005fbe <pool_func_ap_array_integer_INT8+0xfe>
 8005ffc:	461c      	mov	r4, r3
 8005ffe:	e79d      	b.n	8005f3c <pool_func_ap_array_integer_INT8+0x7c>
 8006000:	4633      	mov	r3, r6
 8006002:	eddf 0a06 	vldr	s1, [pc, #24]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8006006:	e7cf      	b.n	8005fa8 <pool_func_ap_array_integer_INT8+0xe8>
 8006008:	ed9f 0a04 	vldr	s0, [pc, #16]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 800600c:	2300      	movs	r3, #0
 800600e:	eddf 0a03 	vldr	s1, [pc, #12]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 8006012:	461c      	mov	r4, r3
 8006014:	e792      	b.n	8005f3c <pool_func_ap_array_integer_INT8+0x7c>
 8006016:	eddf 0a01 	vldr	s1, [pc, #4]	; 800601c <pool_func_ap_array_integer_INT8+0x15c>
 800601a:	e7cb      	b.n	8005fb4 <pool_func_ap_array_integer_INT8+0xf4>
 800601c:	00000000 	.word	0x00000000

08006020 <arm_fully_connected_s8>:
 8006020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006024:	b08b      	sub	sp, #44	; 0x2c
 8006026:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 800602a:	e9dd a915 	ldrd	sl, r9, [sp, #84]	; 0x54
 800602e:	b30c      	cbz	r4, 8006074 <arm_fully_connected_s8+0x54>
 8006030:	4606      	mov	r6, r0
 8006032:	468b      	mov	fp, r1
 8006034:	4617      	mov	r7, r2
 8006036:	4698      	mov	r8, r3
 8006038:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800603a:	3c01      	subs	r4, #1
 800603c:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800603e:	4630      	mov	r0, r6
 8006040:	9308      	str	r3, [sp, #32]
 8006042:	b2a4      	uxth	r4, r4
 8006044:	9504      	str	r5, [sp, #16]
 8006046:	4659      	mov	r1, fp
 8006048:	f8cd 8018 	str.w	r8, [sp, #24]
 800604c:	443e      	add	r6, r7
 800604e:	9705      	str	r7, [sp, #20]
 8006050:	f8cd a000 	str.w	sl, [sp]
 8006054:	e9dd 321b 	ldrd	r3, r2, [sp, #108]	; 0x6c
 8006058:	461d      	mov	r5, r3
 800605a:	9207      	str	r2, [sp, #28]
 800605c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800605e:	4445      	add	r5, r8
 8006060:	951b      	str	r5, [sp, #108]	; 0x6c
 8006062:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8006064:	9503      	str	r5, [sp, #12]
 8006066:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8006068:	e9cd 9501 	strd	r9, r5, [sp, #4]
 800606c:	f000 f808 	bl	8006080 <arm_nn_vec_mat_mult_t_s8>
 8006070:	2c00      	cmp	r4, #0
 8006072:	d1e1      	bne.n	8006038 <arm_fully_connected_s8+0x18>
 8006074:	2000      	movs	r0, #0
 8006076:	b00b      	add	sp, #44	; 0x2c
 8006078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800607c <arm_fully_connected_s8_get_buffer_size>:
 800607c:	2000      	movs	r0, #0
 800607e:	4770      	bx	lr

08006080 <arm_nn_vec_mat_mult_t_s8>:
 8006080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006084:	b093      	sub	sp, #76	; 0x4c
 8006086:	4689      	mov	r9, r1
 8006088:	910b      	str	r1, [sp, #44]	; 0x2c
 800608a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800608c:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800608e:	b28f      	uxth	r7, r1
 8006090:	991d      	ldr	r1, [sp, #116]	; 0x74
 8006092:	9007      	str	r0, [sp, #28]
 8006094:	b28d      	uxth	r5, r1
 8006096:	ea47 4706 	orr.w	r7, r7, r6, lsl #16
 800609a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800609c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80060a0:	e9dd e621 	ldrd	lr, r6, [sp, #132]	; 0x84
 80060a4:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80060a8:	2e01      	cmp	r6, #1
 80060aa:	f340 826c 	ble.w	8006586 <arm_nn_vec_mat_mult_t_s8+0x506>
 80060ae:	1eb4      	subs	r4, r6, #2
 80060b0:	469c      	mov	ip, r3
 80060b2:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80060b4:	4690      	mov	r8, r2
 80060b6:	f024 0301 	bic.w	r3, r4, #1
 80060ba:	f1ae 0110 	sub.w	r1, lr, #16
 80060be:	4276      	negs	r6, r6
 80060c0:	2201      	movs	r2, #1
 80060c2:	4463      	add	r3, ip
 80060c4:	f021 010f 	bic.w	r1, r1, #15
 80060c8:	40b2      	lsls	r2, r6
 80060ca:	960c      	str	r6, [sp, #48]	; 0x30
 80060cc:	3304      	adds	r3, #4
 80060ce:	ea4f 064e 	mov.w	r6, lr, lsl #1
 80060d2:	3a01      	subs	r2, #1
 80060d4:	9411      	str	r4, [sp, #68]	; 0x44
 80060d6:	9608      	str	r6, [sp, #32]
 80060d8:	f101 0610 	add.w	r6, r1, #16
 80060dc:	9309      	str	r3, [sp, #36]	; 0x24
 80060de:	4603      	mov	r3, r0
 80060e0:	4664      	mov	r4, ip
 80060e2:	9920      	ldr	r1, [sp, #128]	; 0x80
 80060e4:	4433      	add	r3, r6
 80060e6:	46ab      	mov	fp, r5
 80060e8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80060ec:	9606      	str	r6, [sp, #24]
 80060ee:	930a      	str	r3, [sp, #40]	; 0x28
 80060f0:	1053      	asrs	r3, r2, #1
 80060f2:	920d      	str	r2, [sp, #52]	; 0x34
 80060f4:	9310      	str	r3, [sp, #64]	; 0x40
 80060f6:	4643      	mov	r3, r8
 80060f8:	9103      	str	r1, [sp, #12]
 80060fa:	3308      	adds	r3, #8
 80060fc:	f8cd 9008 	str.w	r9, [sp, #8]
 8006100:	9301      	str	r3, [sp, #4]
 8006102:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8006104:	0fdb      	lsrs	r3, r3, #31
 8006106:	9304      	str	r3, [sp, #16]
 8006108:	1ca3      	adds	r3, r4, #2
 800610a:	9305      	str	r3, [sp, #20]
 800610c:	9b01      	ldr	r3, [sp, #4]
 800610e:	f1be 0f0f 	cmp.w	lr, #15
 8006112:	f853 ac08 	ldr.w	sl, [r3, #-8]
 8006116:	f853 3c04 	ldr.w	r3, [r3, #-4]
 800611a:	f340 83f8 	ble.w	800690e <arm_nn_vec_mat_mult_t_s8+0x88e>
 800611e:	9a02      	ldr	r2, [sp, #8]
 8006120:	465d      	mov	r5, fp
 8006122:	9806      	ldr	r0, [sp, #24]
 8006124:	4616      	mov	r6, r2
 8006126:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800612a:	eb02 0800 	add.w	r8, r2, r0
 800612e:	eb02 090e 	add.w	r9, r2, lr
 8006132:	6834      	ldr	r4, [r6, #0]
 8006134:	f8dc b000 	ldr.w	fp, [ip]
 8006138:	ea4f 2034 	mov.w	r0, r4, ror #8
 800613c:	f856 100e 	ldr.w	r1, [r6, lr]
 8006140:	ea4f 223b 	mov.w	r2, fp, ror #8
 8006144:	fa25 f080 	sxtab16	r0, r5, r0
 8006148:	fa25 f484 	sxtab16	r4, r5, r4
 800614c:	fa27 fb8b 	sxtab16	fp, r7, fp
 8006150:	fa27 f282 	sxtab16	r2, r7, r2
 8006154:	fb2b a404 	smlad	r4, fp, r4, sl
 8006158:	fa25 fa81 	sxtab16	sl, r5, r1
 800615c:	fb22 4000 	smlad	r0, r2, r0, r4
 8006160:	ea4f 2431 	mov.w	r4, r1, ror #8
 8006164:	6871      	ldr	r1, [r6, #4]
 8006166:	fa25 f484 	sxtab16	r4, r5, r4
 800616a:	fb2b 330a 	smlad	r3, fp, sl, r3
 800616e:	fb22 3a04 	smlad	sl, r2, r4, r3
 8006172:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8006176:	ea4f 2431 	mov.w	r4, r1, ror #8
 800617a:	fa27 f382 	sxtab16	r3, r7, r2
 800617e:	ea4f 2b32 	mov.w	fp, r2, ror #8
 8006182:	f8d9 2004 	ldr.w	r2, [r9, #4]
 8006186:	fa27 fb8b 	sxtab16	fp, r7, fp
 800618a:	fa25 f484 	sxtab16	r4, r5, r4
 800618e:	fa25 f181 	sxtab16	r1, r5, r1
 8006192:	fb23 0001 	smlad	r0, r3, r1, r0
 8006196:	fa25 f182 	sxtab16	r1, r5, r2
 800619a:	fb2b 0404 	smlad	r4, fp, r4, r0
 800619e:	ea4f 2232 	mov.w	r2, r2, ror #8
 80061a2:	68b0      	ldr	r0, [r6, #8]
 80061a4:	fa25 f282 	sxtab16	r2, r5, r2
 80061a8:	fb23 a301 	smlad	r3, r3, r1, sl
 80061ac:	fb2b 3202 	smlad	r2, fp, r2, r3
 80061b0:	f8dc a008 	ldr.w	sl, [ip, #8]
 80061b4:	ea4f 2330 	mov.w	r3, r0, ror #8
 80061b8:	f8d9 b008 	ldr.w	fp, [r9, #8]
 80061bc:	ea4f 213a 	mov.w	r1, sl, ror #8
 80061c0:	fa27 f98a 	sxtab16	r9, r7, sl
 80061c4:	fa27 f181 	sxtab16	r1, r7, r1
 80061c8:	fa25 f383 	sxtab16	r3, r5, r3
 80061cc:	fa25 f080 	sxtab16	r0, r5, r0
 80061d0:	fb29 4a00 	smlad	sl, r9, r0, r4
 80061d4:	fa25 f48b 	sxtab16	r4, r5, fp
 80061d8:	fb21 a303 	smlad	r3, r1, r3, sl
 80061dc:	ea4f 203b 	mov.w	r0, fp, ror #8
 80061e0:	3610      	adds	r6, #16
 80061e2:	f856 bc04 	ldr.w	fp, [r6, #-4]
 80061e6:	fa25 f080 	sxtab16	r0, r5, r0
 80061ea:	fb29 2204 	smlad	r2, r9, r4, r2
 80061ee:	fb21 2000 	smlad	r0, r1, r0, r2
 80061f2:	f8dc 100c 	ldr.w	r1, [ip, #12]
 80061f6:	eb06 090e 	add.w	r9, r6, lr
 80061fa:	ea4f 2a3b 	mov.w	sl, fp, ror #8
 80061fe:	f10c 0c10 	add.w	ip, ip, #16
 8006202:	ea4f 2431 	mov.w	r4, r1, ror #8
 8006206:	f859 2c04 	ldr.w	r2, [r9, #-4]
 800620a:	fa27 f484 	sxtab16	r4, r7, r4
 800620e:	fa27 f181 	sxtab16	r1, r7, r1
 8006212:	fa25 fa8a 	sxtab16	sl, r5, sl
 8006216:	fa25 fb8b 	sxtab16	fp, r5, fp
 800621a:	fb21 330b 	smlad	r3, r1, fp, r3
 800621e:	fa25 fb82 	sxtab16	fp, r5, r2
 8006222:	fb24 3a0a 	smlad	sl, r4, sl, r3
 8006226:	ea4f 2232 	mov.w	r2, r2, ror #8
 800622a:	fa25 f282 	sxtab16	r2, r5, r2
 800622e:	fb21 030b 	smlad	r3, r1, fp, r0
 8006232:	fb24 3302 	smlad	r3, r4, r2, r3
 8006236:	4546      	cmp	r6, r8
 8006238:	f47f af7b 	bne.w	8006132 <arm_nn_vec_mat_mult_t_s8+0xb2>
 800623c:	46ab      	mov	fp, r5
 800623e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006240:	9a06      	ldr	r2, [sp, #24]
 8006242:	4596      	cmp	lr, r2
 8006244:	f340 8133 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006248:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800624a:	1c54      	adds	r4, r2, #1
 800624c:	f991 0000 	ldrsb.w	r0, [r1]
 8006250:	f996 8000 	ldrsb.w	r8, [r6]
 8006254:	45a6      	cmp	lr, r4
 8006256:	4428      	add	r0, r5
 8006258:	f916 c00e 	ldrsb.w	ip, [r6, lr]
 800625c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800625e:	44a8      	add	r8, r5
 8006260:	44ac      	add	ip, r5
 8006262:	fb00 aa08 	mla	sl, r0, r8, sl
 8006266:	fb00 330c 	mla	r3, r0, ip, r3
 800626a:	f340 8120 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 800626e:	eb06 040e 	add.w	r4, r6, lr
 8006272:	f991 0001 	ldrsb.w	r0, [r1, #1]
 8006276:	f996 8001 	ldrsb.w	r8, [r6, #1]
 800627a:	f994 c001 	ldrsb.w	ip, [r4, #1]
 800627e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8006280:	44a8      	add	r8, r5
 8006282:	44ac      	add	ip, r5
 8006284:	4420      	add	r0, r4
 8006286:	1c94      	adds	r4, r2, #2
 8006288:	45a6      	cmp	lr, r4
 800628a:	fb00 aa08 	mla	sl, r0, r8, sl
 800628e:	fb00 330c 	mla	r3, r0, ip, r3
 8006292:	f106 0002 	add.w	r0, r6, #2
 8006296:	f340 810a 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 800629a:	f910 800e 	ldrsb.w	r8, [r0, lr]
 800629e:	1cd4      	adds	r4, r2, #3
 80062a0:	f991 0002 	ldrsb.w	r0, [r1, #2]
 80062a4:	44a8      	add	r8, r5
 80062a6:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80062a8:	f996 c002 	ldrsb.w	ip, [r6, #2]
 80062ac:	45a6      	cmp	lr, r4
 80062ae:	4428      	add	r0, r5
 80062b0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80062b2:	44ac      	add	ip, r5
 80062b4:	fb00 3308 	mla	r3, r0, r8, r3
 80062b8:	fb00 aa0c 	mla	sl, r0, ip, sl
 80062bc:	f106 0003 	add.w	r0, r6, #3
 80062c0:	f340 80f5 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 80062c4:	f910 800e 	ldrsb.w	r8, [r0, lr]
 80062c8:	1d14      	adds	r4, r2, #4
 80062ca:	f991 0003 	ldrsb.w	r0, [r1, #3]
 80062ce:	44a8      	add	r8, r5
 80062d0:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80062d2:	f996 c003 	ldrsb.w	ip, [r6, #3]
 80062d6:	45a6      	cmp	lr, r4
 80062d8:	4428      	add	r0, r5
 80062da:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80062dc:	44ac      	add	ip, r5
 80062de:	fb00 3308 	mla	r3, r0, r8, r3
 80062e2:	fb00 aa0c 	mla	sl, r0, ip, sl
 80062e6:	f106 0004 	add.w	r0, r6, #4
 80062ea:	f340 80e0 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 80062ee:	f910 800e 	ldrsb.w	r8, [r0, lr]
 80062f2:	1d54      	adds	r4, r2, #5
 80062f4:	f991 0004 	ldrsb.w	r0, [r1, #4]
 80062f8:	44a8      	add	r8, r5
 80062fa:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80062fc:	f996 c004 	ldrsb.w	ip, [r6, #4]
 8006300:	45a6      	cmp	lr, r4
 8006302:	4428      	add	r0, r5
 8006304:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006306:	44ac      	add	ip, r5
 8006308:	fb00 3308 	mla	r3, r0, r8, r3
 800630c:	fb00 aa0c 	mla	sl, r0, ip, sl
 8006310:	f106 0005 	add.w	r0, r6, #5
 8006314:	f340 80cb 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006318:	f910 800e 	ldrsb.w	r8, [r0, lr]
 800631c:	1d94      	adds	r4, r2, #6
 800631e:	f991 0005 	ldrsb.w	r0, [r1, #5]
 8006322:	44a8      	add	r8, r5
 8006324:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006326:	f996 c005 	ldrsb.w	ip, [r6, #5]
 800632a:	45a6      	cmp	lr, r4
 800632c:	4428      	add	r0, r5
 800632e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006330:	44ac      	add	ip, r5
 8006332:	fb00 3308 	mla	r3, r0, r8, r3
 8006336:	fb00 aa0c 	mla	sl, r0, ip, sl
 800633a:	f106 0006 	add.w	r0, r6, #6
 800633e:	f340 80b6 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006342:	f910 800e 	ldrsb.w	r8, [r0, lr]
 8006346:	1dd4      	adds	r4, r2, #7
 8006348:	f991 0006 	ldrsb.w	r0, [r1, #6]
 800634c:	44a8      	add	r8, r5
 800634e:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006350:	f996 c006 	ldrsb.w	ip, [r6, #6]
 8006354:	45a6      	cmp	lr, r4
 8006356:	4428      	add	r0, r5
 8006358:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800635a:	44ac      	add	ip, r5
 800635c:	fb00 3308 	mla	r3, r0, r8, r3
 8006360:	fb00 aa0c 	mla	sl, r0, ip, sl
 8006364:	f106 0007 	add.w	r0, r6, #7
 8006368:	f340 80a1 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 800636c:	f910 800e 	ldrsb.w	r8, [r0, lr]
 8006370:	f102 0408 	add.w	r4, r2, #8
 8006374:	f991 0007 	ldrsb.w	r0, [r1, #7]
 8006378:	44a8      	add	r8, r5
 800637a:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800637c:	f996 c007 	ldrsb.w	ip, [r6, #7]
 8006380:	45a6      	cmp	lr, r4
 8006382:	4428      	add	r0, r5
 8006384:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006386:	44ac      	add	ip, r5
 8006388:	fb00 3308 	mla	r3, r0, r8, r3
 800638c:	fb00 aa0c 	mla	sl, r0, ip, sl
 8006390:	f106 0008 	add.w	r0, r6, #8
 8006394:	f340 808b 	ble.w	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006398:	f910 800e 	ldrsb.w	r8, [r0, lr]
 800639c:	f102 0409 	add.w	r4, r2, #9
 80063a0:	f991 0008 	ldrsb.w	r0, [r1, #8]
 80063a4:	44a8      	add	r8, r5
 80063a6:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80063a8:	f996 c008 	ldrsb.w	ip, [r6, #8]
 80063ac:	45a6      	cmp	lr, r4
 80063ae:	4428      	add	r0, r5
 80063b0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80063b2:	44ac      	add	ip, r5
 80063b4:	fb00 3308 	mla	r3, r0, r8, r3
 80063b8:	fb00 aa0c 	mla	sl, r0, ip, sl
 80063bc:	f106 0009 	add.w	r0, r6, #9
 80063c0:	dd75      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 80063c2:	f910 800e 	ldrsb.w	r8, [r0, lr]
 80063c6:	f102 040a 	add.w	r4, r2, #10
 80063ca:	f991 0009 	ldrsb.w	r0, [r1, #9]
 80063ce:	44a8      	add	r8, r5
 80063d0:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80063d2:	f996 c009 	ldrsb.w	ip, [r6, #9]
 80063d6:	45a6      	cmp	lr, r4
 80063d8:	4428      	add	r0, r5
 80063da:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80063dc:	44ac      	add	ip, r5
 80063de:	fb00 3308 	mla	r3, r0, r8, r3
 80063e2:	fb00 aa0c 	mla	sl, r0, ip, sl
 80063e6:	f106 000a 	add.w	r0, r6, #10
 80063ea:	dd60      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 80063ec:	f910 800e 	ldrsb.w	r8, [r0, lr]
 80063f0:	f102 040b 	add.w	r4, r2, #11
 80063f4:	f991 000a 	ldrsb.w	r0, [r1, #10]
 80063f8:	44a8      	add	r8, r5
 80063fa:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 80063fc:	f996 c00a 	ldrsb.w	ip, [r6, #10]
 8006400:	45a6      	cmp	lr, r4
 8006402:	4428      	add	r0, r5
 8006404:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006406:	44ac      	add	ip, r5
 8006408:	fb00 3308 	mla	r3, r0, r8, r3
 800640c:	fb00 aa0c 	mla	sl, r0, ip, sl
 8006410:	f106 000b 	add.w	r0, r6, #11
 8006414:	dd4b      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006416:	f910 800e 	ldrsb.w	r8, [r0, lr]
 800641a:	f102 040c 	add.w	r4, r2, #12
 800641e:	f991 000b 	ldrsb.w	r0, [r1, #11]
 8006422:	44a8      	add	r8, r5
 8006424:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006426:	f996 c00b 	ldrsb.w	ip, [r6, #11]
 800642a:	45a6      	cmp	lr, r4
 800642c:	4428      	add	r0, r5
 800642e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006430:	44ac      	add	ip, r5
 8006432:	fb00 3308 	mla	r3, r0, r8, r3
 8006436:	fb00 aa0c 	mla	sl, r0, ip, sl
 800643a:	f106 000c 	add.w	r0, r6, #12
 800643e:	dd36      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006440:	f910 800e 	ldrsb.w	r8, [r0, lr]
 8006444:	f102 040d 	add.w	r4, r2, #13
 8006448:	f991 000c 	ldrsb.w	r0, [r1, #12]
 800644c:	44a8      	add	r8, r5
 800644e:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 8006450:	f996 c00c 	ldrsb.w	ip, [r6, #12]
 8006454:	45a6      	cmp	lr, r4
 8006456:	4428      	add	r0, r5
 8006458:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800645a:	44ac      	add	ip, r5
 800645c:	fb00 3308 	mla	r3, r0, r8, r3
 8006460:	fb00 aa0c 	mla	sl, r0, ip, sl
 8006464:	f106 000d 	add.w	r0, r6, #13
 8006468:	dd21      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 800646a:	f910 c00e 	ldrsb.w	ip, [r0, lr]
 800646e:	320e      	adds	r2, #14
 8006470:	f991 000d 	ldrsb.w	r0, [r1, #13]
 8006474:	f106 080e 	add.w	r8, r6, #14
 8006478:	44ac      	add	ip, r5
 800647a:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 800647c:	f996 400d 	ldrsb.w	r4, [r6, #13]
 8006480:	4596      	cmp	lr, r2
 8006482:	4428      	add	r0, r5
 8006484:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8006486:	442c      	add	r4, r5
 8006488:	fb00 330c 	mla	r3, r0, ip, r3
 800648c:	fb00 aa04 	mla	sl, r0, r4, sl
 8006490:	dd0d      	ble.n	80064ae <arm_nn_vec_mat_mult_t_s8+0x42e>
 8006492:	f991 200e 	ldrsb.w	r2, [r1, #14]
 8006496:	f918 000e 	ldrsb.w	r0, [r8, lr]
 800649a:	f996 100e 	ldrsb.w	r1, [r6, #14]
 800649e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80064a0:	4428      	add	r0, r5
 80064a2:	4429      	add	r1, r5
 80064a4:	4422      	add	r2, r4
 80064a6:	fb02 aa01 	mla	sl, r2, r1, sl
 80064aa:	fb02 3300 	mla	r3, r2, r0, r3
 80064ae:	9a03      	ldr	r2, [sp, #12]
 80064b0:	fa0a fa02 	lsl.w	sl, sl, r2
 80064b4:	9a04      	ldr	r2, [sp, #16]
 80064b6:	ebb2 7fda 	cmp.w	r2, sl, lsr #31
 80064ba:	f000 8218 	beq.w	80068ee <arm_nn_vec_mat_mult_t_s8+0x86e>
 80064be:	48d6      	ldr	r0, [pc, #856]	; (8006818 <arm_nn_vec_mat_mult_t_s8+0x798>)
 80064c0:	f04f 31ff 	mov.w	r1, #4294967295
 80064c4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80064c6:	4552      	cmp	r2, sl
 80064c8:	f040 81d2 	bne.w	8006870 <arm_nn_vec_mat_mult_t_s8+0x7f0>
 80064cc:	f1ba 4f00 	cmp.w	sl, #2147483648	; 0x80000000
 80064d0:	f040 81ce 	bne.w	8006870 <arm_nn_vec_mat_mult_t_s8+0x7f0>
 80064d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80064d6:	2a00      	cmp	r2, #0
 80064d8:	f340 81ff 	ble.w	80068da <arm_nn_vec_mat_mult_t_s8+0x85a>
 80064dc:	2400      	movs	r4, #0
 80064de:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80064e2:	4620      	mov	r0, r4
 80064e4:	4626      	mov	r6, r4
 80064e6:	9a03      	ldr	r2, [sp, #12]
 80064e8:	fa03 fc02 	lsl.w	ip, r3, r2
 80064ec:	9b04      	ldr	r3, [sp, #16]
 80064ee:	ebb3 7fdc 	cmp.w	r3, ip, lsr #31
 80064f2:	f000 8200 	beq.w	80068f6 <arm_nn_vec_mat_mult_t_s8+0x876>
 80064f6:	4ac8      	ldr	r2, [pc, #800]	; (8006818 <arm_nn_vec_mat_mult_t_s8+0x798>)
 80064f8:	f04f 33ff 	mov.w	r3, #4294967295
 80064fc:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80064fe:	4565      	cmp	r5, ip
 8006500:	f040 81d5 	bne.w	80068ae <arm_nn_vec_mat_mult_t_s8+0x82e>
 8006504:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8006508:	f040 81d1 	bne.w	80068ae <arm_nn_vec_mat_mult_t_s8+0x82e>
 800650c:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8006510:	4010      	ands	r0, r2
 8006512:	4122      	asrs	r2, r4
 8006514:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8006516:	bf48      	it	mi
 8006518:	3601      	addmi	r6, #1
 800651a:	4419      	add	r1, r3
 800651c:	42b0      	cmp	r0, r6
 800651e:	9808      	ldr	r0, [sp, #32]
 8006520:	bfc8      	it	gt
 8006522:	3201      	addgt	r2, #1
 8006524:	441a      	add	r2, r3
 8006526:	9b02      	ldr	r3, [sp, #8]
 8006528:	4403      	add	r3, r0
 800652a:	9302      	str	r3, [sp, #8]
 800652c:	9b01      	ldr	r3, [sp, #4]
 800652e:	3308      	adds	r3, #8
 8006530:	9301      	str	r3, [sp, #4]
 8006532:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006534:	4299      	cmp	r1, r3
 8006536:	bfb8      	it	lt
 8006538:	4619      	movlt	r1, r3
 800653a:	429a      	cmp	r2, r3
 800653c:	bfb8      	it	lt
 800653e:	461a      	movlt	r2, r3
 8006540:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006542:	4299      	cmp	r1, r3
 8006544:	bfa8      	it	ge
 8006546:	4619      	movge	r1, r3
 8006548:	429a      	cmp	r2, r3
 800654a:	bfa8      	it	ge
 800654c:	461a      	movge	r2, r3
 800654e:	9b05      	ldr	r3, [sp, #20]
 8006550:	f803 2c01 	strb.w	r2, [r3, #-1]
 8006554:	3302      	adds	r3, #2
 8006556:	f803 1c04 	strb.w	r1, [r3, #-4]
 800655a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800655c:	9305      	str	r3, [sp, #20]
 800655e:	429a      	cmp	r2, r3
 8006560:	f47f add4 	bne.w	800610c <arm_nn_vec_mat_mult_t_s8+0x8c>
 8006564:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006566:	465d      	mov	r5, fp
 8006568:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800656a:	085b      	lsrs	r3, r3, #1
 800656c:	9a08      	ldr	r2, [sp, #32]
 800656e:	3301      	adds	r3, #1
 8006570:	fb03 1202 	mla	r2, r3, r2, r1
 8006574:	920b      	str	r2, [sp, #44]	; 0x2c
 8006576:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006578:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800657c:	920e      	str	r2, [sp, #56]	; 0x38
 800657e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006580:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8006584:	930f      	str	r3, [sp, #60]	; 0x3c
 8006586:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006588:	07db      	lsls	r3, r3, #31
 800658a:	f140 816d 	bpl.w	8006868 <arm_nn_vec_mat_mult_t_s8+0x7e8>
 800658e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006590:	f1be 0f0f 	cmp.w	lr, #15
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	f340 81ea 	ble.w	800696e <arm_nn_vec_mat_mult_t_s8+0x8ee>
 800659a:	f1ae 0210 	sub.w	r2, lr, #16
 800659e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80065a0:	0912      	lsrs	r2, r2, #4
 80065a2:	3201      	adds	r2, #1
 80065a4:	0111      	lsls	r1, r2, #4
 80065a6:	4692      	mov	sl, r2
 80065a8:	9a07      	ldr	r2, [sp, #28]
 80065aa:	4689      	mov	r9, r1
 80065ac:	eb02 0c01 	add.w	ip, r2, r1
 80065b0:	6830      	ldr	r0, [r6, #0]
 80065b2:	6811      	ldr	r1, [r2, #0]
 80065b4:	ea4f 2830 	mov.w	r8, r0, ror #8
 80065b8:	fa25 f080 	sxtab16	r0, r5, r0
 80065bc:	fa25 f488 	sxtab16	r4, r5, r8
 80065c0:	ea4f 2831 	mov.w	r8, r1, ror #8
 80065c4:	fa27 f181 	sxtab16	r1, r7, r1
 80065c8:	fa27 f888 	sxtab16	r8, r7, r8
 80065cc:	fb21 3300 	smlad	r3, r1, r0, r3
 80065d0:	fb28 3804 	smlad	r8, r8, r4, r3
 80065d4:	6870      	ldr	r0, [r6, #4]
 80065d6:	6853      	ldr	r3, [r2, #4]
 80065d8:	ea4f 2430 	mov.w	r4, r0, ror #8
 80065dc:	ea4f 2133 	mov.w	r1, r3, ror #8
 80065e0:	fa25 f080 	sxtab16	r0, r5, r0
 80065e4:	fa25 f484 	sxtab16	r4, r5, r4
 80065e8:	fa27 f383 	sxtab16	r3, r7, r3
 80065ec:	fa27 f181 	sxtab16	r1, r7, r1
 80065f0:	fb23 8300 	smlad	r3, r3, r0, r8
 80065f4:	fb21 3404 	smlad	r4, r1, r4, r3
 80065f8:	68b0      	ldr	r0, [r6, #8]
 80065fa:	6891      	ldr	r1, [r2, #8]
 80065fc:	ea4f 2830 	mov.w	r8, r0, ror #8
 8006600:	ea4f 2331 	mov.w	r3, r1, ror #8
 8006604:	fa25 f080 	sxtab16	r0, r5, r0
 8006608:	fa25 f888 	sxtab16	r8, r5, r8
 800660c:	fa27 f181 	sxtab16	r1, r7, r1
 8006610:	fa27 f383 	sxtab16	r3, r7, r3
 8006614:	fb21 4100 	smlad	r1, r1, r0, r4
 8006618:	fb23 1108 	smlad	r1, r3, r8, r1
 800661c:	68f0      	ldr	r0, [r6, #12]
 800661e:	3210      	adds	r2, #16
 8006620:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8006624:	3610      	adds	r6, #16
 8006626:	ea4f 2830 	mov.w	r8, r0, ror #8
 800662a:	ea4f 2433 	mov.w	r4, r3, ror #8
 800662e:	fa25 f080 	sxtab16	r0, r5, r0
 8006632:	fa25 f888 	sxtab16	r8, r5, r8
 8006636:	fa27 f383 	sxtab16	r3, r7, r3
 800663a:	fa27 f484 	sxtab16	r4, r7, r4
 800663e:	fb23 1300 	smlad	r3, r3, r0, r1
 8006642:	fb24 3308 	smlad	r3, r4, r8, r3
 8006646:	4562      	cmp	r2, ip
 8006648:	d1b2      	bne.n	80065b0 <arm_nn_vec_mat_mult_t_s8+0x530>
 800664a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800664c:	9207      	str	r2, [sp, #28]
 800664e:	4652      	mov	r2, sl
 8006650:	4449      	add	r1, r9
 8006652:	0112      	lsls	r2, r2, #4
 8006654:	910b      	str	r1, [sp, #44]	; 0x2c
 8006656:	4596      	cmp	lr, r2
 8006658:	f340 80e0 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 800665c:	9d07      	ldr	r5, [sp, #28]
 800665e:	1c51      	adds	r1, r2, #1
 8006660:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006662:	f995 0000 	ldrsb.w	r0, [r5]
 8006666:	458e      	cmp	lr, r1
 8006668:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800666a:	4438      	add	r0, r7
 800666c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800666e:	f996 4000 	ldrsb.w	r4, [r6]
 8006672:	443c      	add	r4, r7
 8006674:	fb04 3300 	mla	r3, r4, r0, r3
 8006678:	f340 80d0 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 800667c:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800667e:	1c91      	adds	r1, r2, #2
 8006680:	f995 0001 	ldrsb.w	r0, [r5, #1]
 8006684:	f996 4001 	ldrsb.w	r4, [r6, #1]
 8006688:	458e      	cmp	lr, r1
 800668a:	4438      	add	r0, r7
 800668c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800668e:	443c      	add	r4, r7
 8006690:	fb04 3300 	mla	r3, r4, r0, r3
 8006694:	f340 80c2 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006698:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800669a:	1cd1      	adds	r1, r2, #3
 800669c:	f995 0002 	ldrsb.w	r0, [r5, #2]
 80066a0:	f996 4002 	ldrsb.w	r4, [r6, #2]
 80066a4:	458e      	cmp	lr, r1
 80066a6:	4438      	add	r0, r7
 80066a8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80066aa:	443c      	add	r4, r7
 80066ac:	fb04 3300 	mla	r3, r4, r0, r3
 80066b0:	f340 80b4 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80066b4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80066b6:	1d11      	adds	r1, r2, #4
 80066b8:	f995 0003 	ldrsb.w	r0, [r5, #3]
 80066bc:	f996 4003 	ldrsb.w	r4, [r6, #3]
 80066c0:	458e      	cmp	lr, r1
 80066c2:	4438      	add	r0, r7
 80066c4:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80066c6:	443c      	add	r4, r7
 80066c8:	fb04 3300 	mla	r3, r4, r0, r3
 80066cc:	f340 80a6 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80066d0:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80066d2:	1d51      	adds	r1, r2, #5
 80066d4:	f995 0004 	ldrsb.w	r0, [r5, #4]
 80066d8:	f996 4004 	ldrsb.w	r4, [r6, #4]
 80066dc:	458e      	cmp	lr, r1
 80066de:	4438      	add	r0, r7
 80066e0:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80066e2:	443c      	add	r4, r7
 80066e4:	fb04 3300 	mla	r3, r4, r0, r3
 80066e8:	f340 8098 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80066ec:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80066ee:	1d91      	adds	r1, r2, #6
 80066f0:	f995 0005 	ldrsb.w	r0, [r5, #5]
 80066f4:	f996 4005 	ldrsb.w	r4, [r6, #5]
 80066f8:	458e      	cmp	lr, r1
 80066fa:	4438      	add	r0, r7
 80066fc:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80066fe:	443c      	add	r4, r7
 8006700:	fb04 3300 	mla	r3, r4, r0, r3
 8006704:	f340 808a 	ble.w	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006708:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800670a:	1dd1      	adds	r1, r2, #7
 800670c:	f995 0006 	ldrsb.w	r0, [r5, #6]
 8006710:	f996 4006 	ldrsb.w	r4, [r6, #6]
 8006714:	458e      	cmp	lr, r1
 8006716:	4438      	add	r0, r7
 8006718:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800671a:	443c      	add	r4, r7
 800671c:	fb04 3300 	mla	r3, r4, r0, r3
 8006720:	dd7c      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006722:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006724:	f102 0108 	add.w	r1, r2, #8
 8006728:	f995 0007 	ldrsb.w	r0, [r5, #7]
 800672c:	f996 4007 	ldrsb.w	r4, [r6, #7]
 8006730:	458e      	cmp	lr, r1
 8006732:	4438      	add	r0, r7
 8006734:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8006736:	443c      	add	r4, r7
 8006738:	fb04 3300 	mla	r3, r4, r0, r3
 800673c:	dd6e      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 800673e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006740:	f102 0109 	add.w	r1, r2, #9
 8006744:	f995 0008 	ldrsb.w	r0, [r5, #8]
 8006748:	f996 4008 	ldrsb.w	r4, [r6, #8]
 800674c:	458e      	cmp	lr, r1
 800674e:	4438      	add	r0, r7
 8006750:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8006752:	443c      	add	r4, r7
 8006754:	fb04 3300 	mla	r3, r4, r0, r3
 8006758:	dd60      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 800675a:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800675c:	f102 010a 	add.w	r1, r2, #10
 8006760:	f995 0009 	ldrsb.w	r0, [r5, #9]
 8006764:	f996 4009 	ldrsb.w	r4, [r6, #9]
 8006768:	458e      	cmp	lr, r1
 800676a:	4438      	add	r0, r7
 800676c:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800676e:	443c      	add	r4, r7
 8006770:	fb04 3300 	mla	r3, r4, r0, r3
 8006774:	dd52      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006776:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006778:	f102 010b 	add.w	r1, r2, #11
 800677c:	f995 000a 	ldrsb.w	r0, [r5, #10]
 8006780:	f996 400a 	ldrsb.w	r4, [r6, #10]
 8006784:	458e      	cmp	lr, r1
 8006786:	4438      	add	r0, r7
 8006788:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800678a:	443c      	add	r4, r7
 800678c:	fb04 3300 	mla	r3, r4, r0, r3
 8006790:	dd44      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006792:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006794:	f102 010c 	add.w	r1, r2, #12
 8006798:	f995 000b 	ldrsb.w	r0, [r5, #11]
 800679c:	f996 400b 	ldrsb.w	r4, [r6, #11]
 80067a0:	458e      	cmp	lr, r1
 80067a2:	4438      	add	r0, r7
 80067a4:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80067a6:	443c      	add	r4, r7
 80067a8:	fb04 3300 	mla	r3, r4, r0, r3
 80067ac:	dd36      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80067ae:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80067b0:	f102 010d 	add.w	r1, r2, #13
 80067b4:	f995 000c 	ldrsb.w	r0, [r5, #12]
 80067b8:	f996 400c 	ldrsb.w	r4, [r6, #12]
 80067bc:	458e      	cmp	lr, r1
 80067be:	4438      	add	r0, r7
 80067c0:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80067c2:	443c      	add	r4, r7
 80067c4:	fb04 3300 	mla	r3, r4, r0, r3
 80067c8:	dd28      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80067ca:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80067cc:	f102 010e 	add.w	r1, r2, #14
 80067d0:	f995 000d 	ldrsb.w	r0, [r5, #13]
 80067d4:	f996 400d 	ldrsb.w	r4, [r6, #13]
 80067d8:	458e      	cmp	lr, r1
 80067da:	4438      	add	r0, r7
 80067dc:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80067de:	443c      	add	r4, r7
 80067e0:	fb04 3300 	mla	r3, r4, r0, r3
 80067e4:	dd1a      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 80067e6:	f995 100e 	ldrsb.w	r1, [r5, #14]
 80067ea:	462c      	mov	r4, r5
 80067ec:	f996 000e 	ldrsb.w	r0, [r6, #14]
 80067f0:	320f      	adds	r2, #15
 80067f2:	4635      	mov	r5, r6
 80067f4:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80067f6:	4438      	add	r0, r7
 80067f8:	4596      	cmp	lr, r2
 80067fa:	4431      	add	r1, r6
 80067fc:	fb00 3301 	mla	r3, r0, r1, r3
 8006800:	dd0c      	ble.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006802:	f995 200f 	ldrsb.w	r2, [r5, #15]
 8006806:	f994 100f 	ldrsb.w	r1, [r4, #15]
 800680a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800680c:	443a      	add	r2, r7
 800680e:	4401      	add	r1, r0
 8006810:	fb01 3302 	mla	r3, r1, r2, r3
 8006814:	e002      	b.n	800681c <arm_nn_vec_mat_mult_t_s8+0x79c>
 8006816:	bf00      	nop
 8006818:	c0000001 	.word	0xc0000001
 800681c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800681e:	ea22 71e2 	bic.w	r1, r2, r2, asr #31
 8006822:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8006824:	fa03 f101 	lsl.w	r1, r3, r1
 8006828:	0fd2      	lsrs	r2, r2, #31
 800682a:	ebb2 7fd1 	cmp.w	r2, r1, lsr #31
 800682e:	f000 80a0 	beq.w	8006972 <arm_nn_vec_mat_mult_t_s8+0x8f2>
 8006832:	4a52      	ldr	r2, [pc, #328]	; (800697c <arm_nn_vec_mat_mult_t_s8+0x8fc>)
 8006834:	f04f 33ff 	mov.w	r3, #4294967295
 8006838:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800683a:	4288      	cmp	r0, r1
 800683c:	d16b      	bne.n	8006916 <arm_nn_vec_mat_mult_t_s8+0x896>
 800683e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8006842:	d168      	bne.n	8006916 <arm_nn_vec_mat_mult_t_s8+0x896>
 8006844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8006846:	2b00      	cmp	r3, #0
 8006848:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800684c:	f340 808d 	ble.w	800696a <arm_nn_vec_mat_mult_t_s8+0x8ea>
 8006850:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8006852:	4413      	add	r3, r2
 8006854:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8006856:	4293      	cmp	r3, r2
 8006858:	bfb8      	it	lt
 800685a:	4613      	movlt	r3, r2
 800685c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800685e:	4293      	cmp	r3, r2
 8006860:	bfa8      	it	ge
 8006862:	4613      	movge	r3, r2
 8006864:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006866:	7013      	strb	r3, [r2, #0]
 8006868:	2000      	movs	r0, #0
 800686a:	b013      	add	sp, #76	; 0x4c
 800686c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006870:	fbc2 010a 	smlal	r0, r1, r2, sl
 8006874:	2800      	cmp	r0, #0
 8006876:	f171 0200 	sbcs.w	r2, r1, #0
 800687a:	da06      	bge.n	800688a <arm_nn_vec_mat_mult_t_s8+0x80a>
 800687c:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8006880:	2500      	movs	r5, #0
 8006882:	1824      	adds	r4, r4, r0
 8006884:	414d      	adcs	r5, r1
 8006886:	4620      	mov	r0, r4
 8006888:	4629      	mov	r1, r5
 800688a:	0fc2      	lsrs	r2, r0, #31
 800688c:	ea42 0141 	orr.w	r1, r2, r1, lsl #1
 8006890:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006892:	2a00      	cmp	r2, #0
 8006894:	dd23      	ble.n	80068de <arm_nn_vec_mat_mult_t_s8+0x85e>
 8006896:	2900      	cmp	r1, #0
 8006898:	da35      	bge.n	8006906 <arm_nn_vec_mat_mult_t_s8+0x886>
 800689a:	2600      	movs	r6, #0
 800689c:	4632      	mov	r2, r6
 800689e:	4630      	mov	r0, r6
 80068a0:	4634      	mov	r4, r6
 80068a2:	f106 0c01 	add.w	ip, r6, #1
 80068a6:	4594      	cmp	ip, r2
 80068a8:	bfb8      	it	lt
 80068aa:	3101      	addlt	r1, #1
 80068ac:	e61b      	b.n	80064e6 <arm_nn_vec_mat_mult_t_s8+0x466>
 80068ae:	fbc5 230c 	smlal	r2, r3, r5, ip
 80068b2:	4699      	mov	r9, r3
 80068b4:	2a00      	cmp	r2, #0
 80068b6:	4690      	mov	r8, r2
 80068b8:	f179 0300 	sbcs.w	r3, r9, #0
 80068bc:	da08      	bge.n	80068d0 <arm_nn_vec_mat_mult_t_s8+0x850>
 80068be:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 80068c2:	2300      	movs	r3, #0
 80068c4:	eb12 0208 	adds.w	r2, r2, r8
 80068c8:	eb43 0309 	adc.w	r3, r3, r9
 80068cc:	4690      	mov	r8, r2
 80068ce:	4699      	mov	r9, r3
 80068d0:	ea4f 72d8 	mov.w	r2, r8, lsr #31
 80068d4:	ea42 0249 	orr.w	r2, r2, r9, lsl #1
 80068d8:	e61a      	b.n	8006510 <arm_nn_vec_mat_mult_t_s8+0x490>
 80068da:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80068de:	980d      	ldr	r0, [sp, #52]	; 0x34
 80068e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80068e2:	ea01 0200 	and.w	r2, r1, r0
 80068e6:	4121      	asrs	r1, r4
 80068e8:	d509      	bpl.n	80068fe <arm_nn_vec_mat_mult_t_s8+0x87e>
 80068ea:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80068ec:	e7d9      	b.n	80068a2 <arm_nn_vec_mat_mult_t_s8+0x822>
 80068ee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80068f2:	2100      	movs	r1, #0
 80068f4:	e5e6      	b.n	80064c4 <arm_nn_vec_mat_mult_t_s8+0x444>
 80068f6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80068fa:	2300      	movs	r3, #0
 80068fc:	e5fe      	b.n	80064fc <arm_nn_vec_mat_mult_t_s8+0x47c>
 80068fe:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
 8006902:	4666      	mov	r6, ip
 8006904:	e7cf      	b.n	80068a6 <arm_nn_vec_mat_mult_t_s8+0x826>
 8006906:	2400      	movs	r4, #0
 8006908:	4620      	mov	r0, r4
 800690a:	4626      	mov	r6, r4
 800690c:	e5eb      	b.n	80064e6 <arm_nn_vec_mat_mult_t_s8+0x466>
 800690e:	9e02      	ldr	r6, [sp, #8]
 8006910:	2200      	movs	r2, #0
 8006912:	9907      	ldr	r1, [sp, #28]
 8006914:	e495      	b.n	8006242 <arm_nn_vec_mat_mult_t_s8+0x1c2>
 8006916:	fbc0 2301 	smlal	r2, r3, r0, r1
 800691a:	461d      	mov	r5, r3
 800691c:	2a00      	cmp	r2, #0
 800691e:	4614      	mov	r4, r2
 8006920:	f175 0300 	sbcs.w	r3, r5, #0
 8006924:	db14      	blt.n	8006950 <arm_nn_vec_mat_mult_t_s8+0x8d0>
 8006926:	0fe2      	lsrs	r2, r4, #31
 8006928:	ea42 0345 	orr.w	r3, r2, r5, lsl #1
 800692c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800692e:	2a00      	cmp	r2, #0
 8006930:	dc8e      	bgt.n	8006850 <arm_nn_vec_mat_mult_t_s8+0x7d0>
 8006932:	4251      	negs	r1, r2
 8006934:	2201      	movs	r2, #1
 8006936:	408a      	lsls	r2, r1
 8006938:	3a01      	subs	r2, #1
 800693a:	ea02 0003 	and.w	r0, r2, r3
 800693e:	410b      	asrs	r3, r1
 8006940:	ea4f 0262 	mov.w	r2, r2, asr #1
 8006944:	bf48      	it	mi
 8006946:	3201      	addmi	r2, #1
 8006948:	4290      	cmp	r0, r2
 800694a:	bfc8      	it	gt
 800694c:	3301      	addgt	r3, #1
 800694e:	e77f      	b.n	8006850 <arm_nn_vec_mat_mult_t_s8+0x7d0>
 8006950:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8006954:	2100      	movs	r1, #0
 8006956:	1824      	adds	r4, r4, r0
 8006958:	414d      	adcs	r5, r1
 800695a:	0fe2      	lsrs	r2, r4, #31
 800695c:	ea42 0345 	orr.w	r3, r2, r5, lsl #1
 8006960:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8006962:	2a00      	cmp	r2, #0
 8006964:	f73f af74 	bgt.w	8006850 <arm_nn_vec_mat_mult_t_s8+0x7d0>
 8006968:	e7e3      	b.n	8006932 <arm_nn_vec_mat_mult_t_s8+0x8b2>
 800696a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800696c:	e7e1      	b.n	8006932 <arm_nn_vec_mat_mult_t_s8+0x8b2>
 800696e:	2200      	movs	r2, #0
 8006970:	e671      	b.n	8006656 <arm_nn_vec_mat_mult_t_s8+0x5d6>
 8006972:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8006976:	2300      	movs	r3, #0
 8006978:	e75e      	b.n	8006838 <arm_nn_vec_mat_mult_t_s8+0x7b8>
 800697a:	bf00      	nop
 800697c:	c0000001 	.word	0xc0000001

08006980 <arm_float_to_q15>:
 8006980:	b4f0      	push	{r4, r5, r6, r7}
 8006982:	0897      	lsrs	r7, r2, #2
 8006984:	d06b      	beq.n	8006a5e <arm_float_to_q15+0xde>
 8006986:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800698a:	f100 0510 	add.w	r5, r0, #16
 800698e:	eefe 5a00 	vmov.f32	s11, #224	; 0xbf000000 -0.5
 8006992:	f101 0408 	add.w	r4, r1, #8
 8006996:	463e      	mov	r6, r7
 8006998:	ed9f 6a55 	vldr	s12, [pc, #340]	; 8006af0 <arm_float_to_q15+0x170>
 800699c:	e00b      	b.n	80069b6 <arm_float_to_q15+0x36>
 800699e:	ee17 3a10 	vmov	r3, s14
 80069a2:	f303 030f 	ssat	r3, #16, r3
 80069a6:	3e01      	subs	r6, #1
 80069a8:	f824 3c02 	strh.w	r3, [r4, #-2]
 80069ac:	f105 0510 	add.w	r5, r5, #16
 80069b0:	f104 0408 	add.w	r4, r4, #8
 80069b4:	d04f      	beq.n	8006a56 <arm_float_to_q15+0xd6>
 80069b6:	ed55 7a04 	vldr	s15, [r5, #-16]
 80069ba:	ee27 7a86 	vmul.f32	s14, s15, s12
 80069be:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80069c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80069c6:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 80069ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80069ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069d2:	ee17 3a90 	vmov	r3, s15
 80069d6:	f303 030f 	ssat	r3, #16, r3
 80069da:	f824 3c08 	strh.w	r3, [r4, #-8]
 80069de:	ed55 7a03 	vldr	s15, [r5, #-12]
 80069e2:	ee27 7a86 	vmul.f32	s14, s15, s12
 80069e6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80069ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80069ee:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 80069f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80069f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069fa:	ee17 3a90 	vmov	r3, s15
 80069fe:	f303 030f 	ssat	r3, #16, r3
 8006a02:	f824 3c06 	strh.w	r3, [r4, #-6]
 8006a06:	ed55 7a02 	vldr	s15, [r5, #-8]
 8006a0a:	ee27 7a86 	vmul.f32	s14, s15, s12
 8006a0e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006a12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a16:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 8006a1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006a1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a22:	ee17 3a90 	vmov	r3, s15
 8006a26:	f303 030f 	ssat	r3, #16, r3
 8006a2a:	f824 3c04 	strh.w	r3, [r4, #-4]
 8006a2e:	ed55 7a01 	vldr	s15, [r5, #-4]
 8006a32:	ee67 7a86 	vmul.f32	s15, s15, s12
 8006a36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006a3a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8006a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a42:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006a46:	dcaa      	bgt.n	800699e <arm_float_to_q15+0x1e>
 8006a48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006a4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a50:	ee17 3a90 	vmov	r3, s15
 8006a54:	e7a5      	b.n	80069a2 <arm_float_to_q15+0x22>
 8006a56:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8006a5a:	eb00 1007 	add.w	r0, r0, r7, lsl #4
 8006a5e:	f012 0203 	ands.w	r2, r2, #3
 8006a62:	d042      	beq.n	8006aea <arm_float_to_q15+0x16a>
 8006a64:	edd0 7a00 	vldr	s15, [r0]
 8006a68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006a6c:	eddf 5a20 	vldr	s11, [pc, #128]	; 8006af0 <arm_float_to_q15+0x170>
 8006a70:	eebe 6a00 	vmov.f32	s12, #224	; 0xbf000000 -0.5
 8006a74:	ee67 6aa5 	vmul.f32	s13, s15, s11
 8006a78:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8006a7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a80:	fe77 7a06 	vselgt.f32	s15, s14, s12
 8006a84:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006a88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a8c:	ee17 3a90 	vmov	r3, s15
 8006a90:	f303 030f 	ssat	r3, #16, r3
 8006a94:	2a01      	cmp	r2, #1
 8006a96:	800b      	strh	r3, [r1, #0]
 8006a98:	d027      	beq.n	8006aea <arm_float_to_q15+0x16a>
 8006a9a:	edd0 7a01 	vldr	s15, [r0, #4]
 8006a9e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8006aa2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006aaa:	fe77 6a06 	vselgt.f32	s13, s14, s12
 8006aae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ab2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ab6:	ee17 3a90 	vmov	r3, s15
 8006aba:	f303 030f 	ssat	r3, #16, r3
 8006abe:	2a02      	cmp	r2, #2
 8006ac0:	804b      	strh	r3, [r1, #2]
 8006ac2:	d012      	beq.n	8006aea <arm_float_to_q15+0x16a>
 8006ac4:	edd0 7a02 	vldr	s15, [r0, #8]
 8006ac8:	ee67 5aa5 	vmul.f32	s11, s15, s11
 8006acc:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8006ad0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ad4:	fe37 7a06 	vselgt.f32	s14, s14, s12
 8006ad8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8006adc:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006ae0:	ee17 3a10 	vmov	r3, s14
 8006ae4:	f303 030f 	ssat	r3, #16, r3
 8006ae8:	808b      	strh	r3, [r1, #4]
 8006aea:	bcf0      	pop	{r4, r5, r6, r7}
 8006aec:	4770      	bx	lr
 8006aee:	bf00      	nop
 8006af0:	47000000 	.word	0x47000000

08006af4 <arm_float_to_q7>:
 8006af4:	b4f0      	push	{r4, r5, r6, r7}
 8006af6:	0897      	lsrs	r7, r2, #2
 8006af8:	d066      	beq.n	8006bc8 <arm_float_to_q7+0xd4>
 8006afa:	1d0c      	adds	r4, r1, #4
 8006afc:	ea4f 0c87 	mov.w	ip, r7, lsl #2
 8006b00:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8006b04:	f100 0510 	add.w	r5, r0, #16
 8006b08:	eefe 5a00 	vmov.f32	s11, #224	; 0xbf000000 -0.5
 8006b0c:	eb04 060c 	add.w	r6, r4, ip
 8006b10:	ed9f 6a5b 	vldr	s12, [pc, #364]	; 8006c80 <arm_float_to_q7+0x18c>
 8006b14:	ed55 7a04 	vldr	s15, [r5, #-16]
 8006b18:	ee27 7a86 	vmul.f32	s14, s15, s12
 8006b1c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006b20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b24:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 8006b28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b30:	ee17 3a90 	vmov	r3, s15
 8006b34:	b21b      	sxth	r3, r3
 8006b36:	f303 0307 	ssat	r3, #8, r3
 8006b3a:	f804 3c04 	strb.w	r3, [r4, #-4]
 8006b3e:	ed55 7a03 	vldr	s15, [r5, #-12]
 8006b42:	ee27 7a86 	vmul.f32	s14, s15, s12
 8006b46:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006b4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b4e:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 8006b52:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b5a:	ee17 3a90 	vmov	r3, s15
 8006b5e:	b21b      	sxth	r3, r3
 8006b60:	f303 0307 	ssat	r3, #8, r3
 8006b64:	f804 3c03 	strb.w	r3, [r4, #-3]
 8006b68:	ed55 7a02 	vldr	s15, [r5, #-8]
 8006b6c:	ee27 7a86 	vmul.f32	s14, s15, s12
 8006b70:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8006b74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b78:	fe76 7aa5 	vselgt.f32	s15, s13, s11
 8006b7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b84:	ee17 3a90 	vmov	r3, s15
 8006b88:	b21b      	sxth	r3, r3
 8006b8a:	f303 0307 	ssat	r3, #8, r3
 8006b8e:	f804 3c02 	strb.w	r3, [r4, #-2]
 8006b92:	ed55 7a01 	vldr	s15, [r5, #-4]
 8006b96:	ee67 7a86 	vmul.f32	s15, s15, s12
 8006b9a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8006b9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ba2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8006ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006baa:	ee17 3a10 	vmov	r3, s14
 8006bae:	b21b      	sxth	r3, r3
 8006bb0:	dd55      	ble.n	8006c5e <arm_float_to_q7+0x16a>
 8006bb2:	f303 0307 	ssat	r3, #8, r3
 8006bb6:	f804 3c01 	strb.w	r3, [r4, #-1]
 8006bba:	3404      	adds	r4, #4
 8006bbc:	3510      	adds	r5, #16
 8006bbe:	42a6      	cmp	r6, r4
 8006bc0:	d1a8      	bne.n	8006b14 <arm_float_to_q7+0x20>
 8006bc2:	4461      	add	r1, ip
 8006bc4:	eb00 1007 	add.w	r0, r0, r7, lsl #4
 8006bc8:	f012 0203 	ands.w	r2, r2, #3
 8006bcc:	d045      	beq.n	8006c5a <arm_float_to_q7+0x166>
 8006bce:	edd0 7a00 	vldr	s15, [r0]
 8006bd2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006bd6:	ed9f 5a2a 	vldr	s10, [pc, #168]	; 8006c80 <arm_float_to_q7+0x18c>
 8006bda:	eefe 5a00 	vmov.f32	s11, #224	; 0xbf000000 -0.5
 8006bde:	ee67 6a85 	vmul.f32	s13, s15, s10
 8006be2:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8006be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bea:	fe77 7a25 	vselgt.f32	s15, s14, s11
 8006bee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006bf2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006bf6:	ee17 3a90 	vmov	r3, s15
 8006bfa:	b21b      	sxth	r3, r3
 8006bfc:	f303 0307 	ssat	r3, #8, r3
 8006c00:	2a01      	cmp	r2, #1
 8006c02:	700b      	strb	r3, [r1, #0]
 8006c04:	d029      	beq.n	8006c5a <arm_float_to_q7+0x166>
 8006c06:	edd0 6a01 	vldr	s13, [r0, #4]
 8006c0a:	ee26 6a85 	vmul.f32	s12, s13, s10
 8006c0e:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8006c12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c16:	fe77 6a25 	vselgt.f32	s13, s14, s11
 8006c1a:	ee76 6a86 	vadd.f32	s13, s13, s12
 8006c1e:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 8006c22:	ee16 3a90 	vmov	r3, s13
 8006c26:	b21b      	sxth	r3, r3
 8006c28:	f303 0307 	ssat	r3, #8, r3
 8006c2c:	2a02      	cmp	r2, #2
 8006c2e:	704b      	strb	r3, [r1, #1]
 8006c30:	d013      	beq.n	8006c5a <arm_float_to_q7+0x166>
 8006c32:	edd0 7a02 	vldr	s15, [r0, #8]
 8006c36:	ee27 5a85 	vmul.f32	s10, s15, s10
 8006c3a:	eeb5 5ac0 	vcmpe.f32	s10, #0.0
 8006c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c42:	fe77 7a25 	vselgt.f32	s15, s14, s11
 8006c46:	ee77 7a85 	vadd.f32	s15, s15, s10
 8006c4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c4e:	ee17 3a90 	vmov	r3, s15
 8006c52:	b21b      	sxth	r3, r3
 8006c54:	f303 0307 	ssat	r3, #8, r3
 8006c58:	708b      	strb	r3, [r1, #2]
 8006c5a:	bcf0      	pop	{r4, r5, r6, r7}
 8006c5c:	4770      	bx	lr
 8006c5e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8006c62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c66:	ee17 3a90 	vmov	r3, s15
 8006c6a:	b21b      	sxth	r3, r3
 8006c6c:	f303 0307 	ssat	r3, #8, r3
 8006c70:	f804 3c01 	strb.w	r3, [r4, #-1]
 8006c74:	3404      	adds	r4, #4
 8006c76:	3510      	adds	r5, #16
 8006c78:	42b4      	cmp	r4, r6
 8006c7a:	f47f af4b 	bne.w	8006b14 <arm_float_to_q7+0x20>
 8006c7e:	e7a0      	b.n	8006bc2 <arm_float_to_q7+0xce>
 8006c80:	43000000 	.word	0x43000000

08006c84 <arm_q15_to_float>:
 8006c84:	b470      	push	{r4, r5, r6}
 8006c86:	0896      	lsrs	r6, r2, #2
 8006c88:	d038      	beq.n	8006cfc <arm_q15_to_float+0x78>
 8006c8a:	f100 0408 	add.w	r4, r0, #8
 8006c8e:	f101 0310 	add.w	r3, r1, #16
 8006c92:	4635      	mov	r5, r6
 8006c94:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 8006d50 <arm_q15_to_float+0xcc>
 8006c98:	f934 cc08 	ldrsh.w	ip, [r4, #-8]
 8006c9c:	3d01      	subs	r5, #1
 8006c9e:	f104 0408 	add.w	r4, r4, #8
 8006ca2:	f103 0310 	add.w	r3, r3, #16
 8006ca6:	ee07 ca90 	vmov	s15, ip
 8006caa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cae:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006cb2:	ed43 7a08 	vstr	s15, [r3, #-32]	; 0xffffffe0
 8006cb6:	f934 cc0e 	ldrsh.w	ip, [r4, #-14]
 8006cba:	ee07 ca90 	vmov	s15, ip
 8006cbe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cc2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006cc6:	ed43 7a07 	vstr	s15, [r3, #-28]	; 0xffffffe4
 8006cca:	f934 cc0c 	ldrsh.w	ip, [r4, #-12]
 8006cce:	ee07 ca90 	vmov	s15, ip
 8006cd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cd6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006cda:	ed43 7a06 	vstr	s15, [r3, #-24]	; 0xffffffe8
 8006cde:	f934 cc0a 	ldrsh.w	ip, [r4, #-10]
 8006ce2:	ee07 ca90 	vmov	s15, ip
 8006ce6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cea:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006cee:	ed43 7a05 	vstr	s15, [r3, #-20]	; 0xffffffec
 8006cf2:	d1d1      	bne.n	8006c98 <arm_q15_to_float+0x14>
 8006cf4:	eb01 1106 	add.w	r1, r1, r6, lsl #4
 8006cf8:	eb00 00c6 	add.w	r0, r0, r6, lsl #3
 8006cfc:	f012 0203 	ands.w	r2, r2, #3
 8006d00:	d023      	beq.n	8006d4a <arm_q15_to_float+0xc6>
 8006d02:	f9b0 3000 	ldrsh.w	r3, [r0]
 8006d06:	2a01      	cmp	r2, #1
 8006d08:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8006d50 <arm_q15_to_float+0xcc>
 8006d0c:	ee07 3a90 	vmov	s15, r3
 8006d10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d14:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006d18:	edc1 7a00 	vstr	s15, [r1]
 8006d1c:	d015      	beq.n	8006d4a <arm_q15_to_float+0xc6>
 8006d1e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8006d22:	2a02      	cmp	r2, #2
 8006d24:	ee07 3a90 	vmov	s15, r3
 8006d28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d2c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006d30:	edc1 7a01 	vstr	s15, [r1, #4]
 8006d34:	d009      	beq.n	8006d4a <arm_q15_to_float+0xc6>
 8006d36:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8006d3a:	ee07 3a90 	vmov	s15, r3
 8006d3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d42:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006d46:	edc1 7a02 	vstr	s15, [r1, #8]
 8006d4a:	bc70      	pop	{r4, r5, r6}
 8006d4c:	4770      	bx	lr
 8006d4e:	bf00      	nop
 8006d50:	38000000 	.word	0x38000000

08006d54 <arm_q7_to_float>:
 8006d54:	b470      	push	{r4, r5, r6}
 8006d56:	0895      	lsrs	r5, r2, #2
 8006d58:	d036      	beq.n	8006dc8 <arm_q7_to_float+0x74>
 8006d5a:	eb00 0685 	add.w	r6, r0, r5, lsl #2
 8006d5e:	f101 0310 	add.w	r3, r1, #16
 8006d62:	3004      	adds	r0, #4
 8006d64:	ed9f 7a2d 	vldr	s14, [pc, #180]	; 8006e1c <arm_q7_to_float+0xc8>
 8006d68:	1d34      	adds	r4, r6, #4
 8006d6a:	f910 cc04 	ldrsb.w	ip, [r0, #-4]
 8006d6e:	3004      	adds	r0, #4
 8006d70:	3310      	adds	r3, #16
 8006d72:	ee07 ca90 	vmov	s15, ip
 8006d76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d7a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006d7e:	ed43 7a08 	vstr	s15, [r3, #-32]	; 0xffffffe0
 8006d82:	f910 cc07 	ldrsb.w	ip, [r0, #-7]
 8006d86:	ee07 ca90 	vmov	s15, ip
 8006d8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d8e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006d92:	ed43 7a07 	vstr	s15, [r3, #-28]	; 0xffffffe4
 8006d96:	f910 cc06 	ldrsb.w	ip, [r0, #-6]
 8006d9a:	ee07 ca90 	vmov	s15, ip
 8006d9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006da2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006da6:	ed43 7a06 	vstr	s15, [r3, #-24]	; 0xffffffe8
 8006daa:	f910 cc05 	ldrsb.w	ip, [r0, #-5]
 8006dae:	42a0      	cmp	r0, r4
 8006db0:	ee07 ca90 	vmov	s15, ip
 8006db4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006db8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006dbc:	ed43 7a05 	vstr	s15, [r3, #-20]	; 0xffffffec
 8006dc0:	d1d3      	bne.n	8006d6a <arm_q7_to_float+0x16>
 8006dc2:	eb01 1105 	add.w	r1, r1, r5, lsl #4
 8006dc6:	4630      	mov	r0, r6
 8006dc8:	f012 0203 	ands.w	r2, r2, #3
 8006dcc:	d023      	beq.n	8006e16 <arm_q7_to_float+0xc2>
 8006dce:	f990 3000 	ldrsb.w	r3, [r0]
 8006dd2:	2a01      	cmp	r2, #1
 8006dd4:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8006e1c <arm_q7_to_float+0xc8>
 8006dd8:	ee07 3a90 	vmov	s15, r3
 8006ddc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006de0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006de4:	edc1 7a00 	vstr	s15, [r1]
 8006de8:	d015      	beq.n	8006e16 <arm_q7_to_float+0xc2>
 8006dea:	f990 3001 	ldrsb.w	r3, [r0, #1]
 8006dee:	2a02      	cmp	r2, #2
 8006df0:	ee07 3a90 	vmov	s15, r3
 8006df4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006df8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006dfc:	edc1 7a01 	vstr	s15, [r1, #4]
 8006e00:	d009      	beq.n	8006e16 <arm_q7_to_float+0xc2>
 8006e02:	f990 3002 	ldrsb.w	r3, [r0, #2]
 8006e06:	ee07 3a90 	vmov	s15, r3
 8006e0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006e12:	edc1 7a02 	vstr	s15, [r1, #8]
 8006e16:	bc70      	pop	{r4, r5, r6}
 8006e18:	4770      	bx	lr
 8006e1a:	bf00      	nop
 8006e1c:	3c000000 	.word	0x3c000000

08006e20 <align_factor_cmsisnn>:
 8006e20:	2900      	cmp	r1, #0
 8006e22:	d068      	beq.n	8006ef6 <align_factor_cmsisnn+0xd6>
 8006e24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006e28:	ed2d 8b04 	vpush	{d8-d9}
 8006e2c:	ee80 9a20 	vdiv.f32	s18, s0, s1
 8006e30:	461e      	mov	r6, r3
 8006e32:	4615      	mov	r5, r2
 8006e34:	4682      	mov	sl, r0
 8006e36:	008c      	lsls	r4, r1, #2
 8006e38:	f04f 0900 	mov.w	r9, #0
 8006e3c:	eddf 9a2e 	vldr	s19, [pc, #184]	; 8006ef8 <align_factor_cmsisnn+0xd8>
 8006e40:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 8006e44:	f06f 0816 	mvn.w	r8, #22
 8006e48:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 8006e4c:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8006e50:	edda 7a00 	vldr	s15, [sl]
 8006e54:	ee69 7a27 	vmul.f32	s15, s18, s15
 8006e58:	eef4 7ae8 	vcmpe.f32	s15, s17
 8006e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e60:	d429      	bmi.n	8006eb6 <align_factor_cmsisnn+0x96>
 8006e62:	dd46      	ble.n	8006ef2 <align_factor_cmsisnn+0xd2>
 8006e64:	ee67 7a88 	vmul.f32	s15, s15, s16
 8006e68:	f04f 31ff 	mov.w	r1, #4294967295
 8006e6c:	e005      	b.n	8006e7a <align_factor_cmsisnn+0x5a>
 8006e6e:	3901      	subs	r1, #1
 8006e70:	ee67 7a88 	vmul.f32	s15, s15, s16
 8006e74:	f111 0f1f 	cmn.w	r1, #31
 8006e78:	d031      	beq.n	8006ede <align_factor_cmsisnn+0xbe>
 8006e7a:	eef4 7ae8 	vcmpe.f32	s15, s17
 8006e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e82:	dcf4      	bgt.n	8006e6e <align_factor_cmsisnn+0x4e>
 8006e84:	4249      	negs	r1, r1
 8006e86:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8006e8a:	f846 1009 	str.w	r1, [r6, r9]
 8006e8e:	ee17 0a90 	vmov	r0, s15
 8006e92:	f7f9 fec1 	bl	8000c18 <__aeabi_f2lz>
 8006e96:	eb05 0309 	add.w	r3, r5, r9
 8006e9a:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
 8006e9e:	bf18      	it	ne
 8006ea0:	ea87 70e1 	eorne.w	r0, r7, r1, asr #31
 8006ea4:	f109 0904 	add.w	r9, r9, #4
 8006ea8:	6018      	str	r0, [r3, #0]
 8006eaa:	454c      	cmp	r4, r9
 8006eac:	d1d0      	bne.n	8006e50 <align_factor_cmsisnn+0x30>
 8006eae:	ecbd 8b04 	vpop	{d8-d9}
 8006eb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006eb6:	eef4 7ac8 	vcmpe.f32	s15, s16
 8006eba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ebe:	d518      	bpl.n	8006ef2 <align_factor_cmsisnn+0xd2>
 8006ec0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006ec4:	2101      	movs	r1, #1
 8006ec6:	e004      	b.n	8006ed2 <align_factor_cmsisnn+0xb2>
 8006ec8:	3101      	adds	r1, #1
 8006eca:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006ece:	2918      	cmp	r1, #24
 8006ed0:	d009      	beq.n	8006ee6 <align_factor_cmsisnn+0xc6>
 8006ed2:	eef4 7ac8 	vcmpe.f32	s15, s16
 8006ed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006eda:	d4f5      	bmi.n	8006ec8 <align_factor_cmsisnn+0xa8>
 8006edc:	e7d2      	b.n	8006e84 <align_factor_cmsisnn+0x64>
 8006ede:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006ee2:	211e      	movs	r1, #30
 8006ee4:	e7cf      	b.n	8006e86 <align_factor_cmsisnn+0x66>
 8006ee6:	f846 8009 	str.w	r8, [r6, r9]
 8006eea:	eb05 0309 	add.w	r3, r5, r9
 8006eee:	2000      	movs	r0, #0
 8006ef0:	e7d8      	b.n	8006ea4 <align_factor_cmsisnn+0x84>
 8006ef2:	2100      	movs	r1, #0
 8006ef4:	e7c7      	b.n	8006e86 <align_factor_cmsisnn+0x66>
 8006ef6:	4770      	bx	lr
 8006ef8:	4f000000 	.word	0x4f000000

08006efc <align_factor_ch>:
 8006efc:	2900      	cmp	r1, #0
 8006efe:	d06d      	beq.n	8006fdc <align_factor_ch+0xe0>
 8006f00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006f04:	ed2d 8b04 	vpush	{d8-d9}
 8006f08:	ee80 9a20 	vdiv.f32	s18, s0, s1
 8006f0c:	4604      	mov	r4, r0
 8006f0e:	4690      	mov	r8, r2
 8006f10:	461d      	mov	r5, r3
 8006f12:	eb00 0681 	add.w	r6, r0, r1, lsl #2
 8006f16:	eddf 9a32 	vldr	s19, [pc, #200]	; 8006fe0 <align_factor_ch+0xe4>
 8006f1a:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 8006f1e:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 8006f22:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8006f26:	ecf4 7a01 	vldmia	r4!, {s15}
 8006f2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8006f2e:	eef4 7a68 	vcmp.f32	s15, s17
 8006f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f36:	d52f      	bpl.n	8006f98 <align_factor_ch+0x9c>
 8006f38:	eef5 7a40 	vcmp.f32	s15, #0.0
 8006f3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f40:	dd2a      	ble.n	8006f98 <align_factor_ch+0x9c>
 8006f42:	eef4 7ac8 	vcmpe.f32	s15, s16
 8006f46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f4a:	d545      	bpl.n	8006fd8 <align_factor_ch+0xdc>
 8006f4c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006f50:	2301      	movs	r3, #1
 8006f52:	e004      	b.n	8006f5e <align_factor_ch+0x62>
 8006f54:	2a18      	cmp	r2, #24
 8006f56:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006f5a:	b213      	sxth	r3, r2
 8006f5c:	d033      	beq.n	8006fc6 <align_factor_ch+0xca>
 8006f5e:	eef4 7ac8 	vcmpe.f32	s15, s16
 8006f62:	1c5a      	adds	r2, r3, #1
 8006f64:	b292      	uxth	r2, r2
 8006f66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f6a:	d4f3      	bmi.n	8006f54 <align_factor_ch+0x58>
 8006f6c:	ee67 7aa9 	vmul.f32	s15, s15, s19
 8006f70:	802b      	strh	r3, [r5, #0]
 8006f72:	ee17 0a90 	vmov	r0, s15
 8006f76:	f7f9 fe4f 	bl	8000c18 <__aeabi_f2lz>
 8006f7a:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
 8006f7e:	bf18      	it	ne
 8006f80:	ea87 70e1 	eorne.w	r0, r7, r1, asr #31
 8006f84:	42a6      	cmp	r6, r4
 8006f86:	f848 0b04 	str.w	r0, [r8], #4
 8006f8a:	f105 0502 	add.w	r5, r5, #2
 8006f8e:	d1ca      	bne.n	8006f26 <align_factor_ch+0x2a>
 8006f90:	ecbd 8b04 	vpop	{d8-d9}
 8006f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f98:	eef4 7ae8 	vcmpe.f32	s15, s17
 8006f9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006fa0:	dd1a      	ble.n	8006fd8 <align_factor_ch+0xdc>
 8006fa2:	ee67 7a88 	vmul.f32	s15, s15, s16
 8006fa6:	f04f 33ff 	mov.w	r3, #4294967295
 8006faa:	e005      	b.n	8006fb8 <align_factor_ch+0xbc>
 8006fac:	b213      	sxth	r3, r2
 8006fae:	ee67 7a88 	vmul.f32	s15, s15, s16
 8006fb2:	f113 0f1f 	cmn.w	r3, #31
 8006fb6:	d00a      	beq.n	8006fce <align_factor_ch+0xd2>
 8006fb8:	eef4 7ae8 	vcmpe.f32	s15, s17
 8006fbc:	1e5a      	subs	r2, r3, #1
 8006fbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006fc2:	dcf3      	bgt.n	8006fac <align_factor_ch+0xb0>
 8006fc4:	e7d2      	b.n	8006f6c <align_factor_ch+0x70>
 8006fc6:	2317      	movs	r3, #23
 8006fc8:	2000      	movs	r0, #0
 8006fca:	802b      	strh	r3, [r5, #0]
 8006fcc:	e7da      	b.n	8006f84 <align_factor_ch+0x88>
 8006fce:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006fd2:	f06f 031d 	mvn.w	r3, #29
 8006fd6:	e7c9      	b.n	8006f6c <align_factor_ch+0x70>
 8006fd8:	2300      	movs	r3, #0
 8006fda:	e7c7      	b.n	8006f6c <align_factor_ch+0x70>
 8006fdc:	4770      	bx	lr
 8006fde:	bf00      	nop
 8006fe0:	4f000000 	.word	0x4f000000

08006fe4 <st_sssa8_ch_conv_dw_Wadapt>:
 8006fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fe8:	b089      	sub	sp, #36	; 0x24
 8006fea:	4615      	mov	r5, r2
 8006fec:	ea5f 0a91 	movs.w	sl, r1, lsr #2
 8006ff0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8006ff2:	9204      	str	r2, [sp, #16]
 8006ff4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8006ff8:	9007      	str	r0, [sp, #28]
 8006ffa:	9305      	str	r3, [sp, #20]
 8006ffc:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8007000:	d07a      	beq.n	80070f8 <st_sssa8_ch_conv_dw_Wadapt+0x114>
 8007002:	fb03 fb05 	mul.w	fp, r3, r5
 8007006:	f10a 32ff 	add.w	r2, sl, #4294967295
 800700a:	4606      	mov	r6, r0
 800700c:	3004      	adds	r0, #4
 800700e:	f3cb 044f 	ubfx	r4, fp, #1, #16
 8007012:	b292      	uxth	r2, r2
 8007014:	ea4f 0841 	mov.w	r8, r1, lsl #1
 8007018:	f8cd a018 	str.w	sl, [sp, #24]
 800701c:	9400      	str	r4, [sp, #0]
 800701e:	fb15 f403 	smulbb	r4, r5, r3
 8007022:	9b00      	ldr	r3, [sp, #0]
 8007024:	eb00 0b82 	add.w	fp, r0, r2, lsl #2
 8007028:	f004 0201 	and.w	r2, r4, #1
 800702c:	46b1      	mov	r9, r6
 800702e:	3b01      	subs	r3, #1
 8007030:	f8df c118 	ldr.w	ip, [pc, #280]	; 800714c <st_sssa8_ch_conv_dw_Wadapt+0x168>
 8007034:	9201      	str	r2, [sp, #4]
 8007036:	b29b      	uxth	r3, r3
 8007038:	011a      	lsls	r2, r3, #4
 800703a:	3301      	adds	r3, #1
 800703c:	3220      	adds	r2, #32
 800703e:	9203      	str	r2, [sp, #12]
 8007040:	fb03 f208 	mul.w	r2, r3, r8
 8007044:	011b      	lsls	r3, r3, #4
 8007046:	469a      	mov	sl, r3
 8007048:	9202      	str	r2, [sp, #8]
 800704a:	9b00      	ldr	r3, [sp, #0]
 800704c:	464e      	mov	r6, r9
 800704e:	b33b      	cbz	r3, 80070a0 <st_sssa8_ch_conv_dw_Wadapt+0xbc>
 8007050:	9b03      	ldr	r3, [sp, #12]
 8007052:	f107 0510 	add.w	r5, r7, #16
 8007056:	eb07 0e03 	add.w	lr, r7, r3
 800705a:	6833      	ldr	r3, [r6, #0]
 800705c:	5872      	ldr	r2, [r6, r1]
 800705e:	4446      	add	r6, r8
 8007060:	b29c      	uxth	r4, r3
 8007062:	ea02 000c 	and.w	r0, r2, ip
 8007066:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 800706a:	ea40 4313 	orr.w	r3, r0, r3, lsr #16
 800706e:	ea4f 2032 	mov.w	r0, r2, ror #8
 8007072:	fa2f f282 	sxtb16	r2, r2
 8007076:	fa2f f080 	sxtb16	r0, r0
 800707a:	f845 2c10 	str.w	r2, [r5, #-16]
 800707e:	ea4f 2233 	mov.w	r2, r3, ror #8
 8007082:	f845 0c0c 	str.w	r0, [r5, #-12]
 8007086:	fa2f f282 	sxtb16	r2, r2
 800708a:	fa2f f383 	sxtb16	r3, r3
 800708e:	e945 3202 	strd	r3, r2, [r5, #-8]
 8007092:	3510      	adds	r5, #16
 8007094:	45ae      	cmp	lr, r5
 8007096:	d1e0      	bne.n	800705a <st_sssa8_ch_conv_dw_Wadapt+0x76>
 8007098:	9b02      	ldr	r3, [sp, #8]
 800709a:	4457      	add	r7, sl
 800709c:	eb09 0603 	add.w	r6, r9, r3
 80070a0:	9b01      	ldr	r3, [sp, #4]
 80070a2:	b1fb      	cbz	r3, 80070e4 <st_sssa8_ch_conv_dw_Wadapt+0x100>
 80070a4:	6833      	ldr	r3, [r6, #0]
 80070a6:	2400      	movs	r4, #0
 80070a8:	3708      	adds	r7, #8
 80070aa:	ea03 020c 	and.w	r2, r3, ip
 80070ae:	4620      	mov	r0, r4
 80070b0:	ea0c 2503 	and.w	r5, ip, r3, lsl #8
 80070b4:	ea42 6213 	orr.w	r2, r2, r3, lsr #24
 80070b8:	b29b      	uxth	r3, r3
 80070ba:	ea4f 4232 	mov.w	r2, r2, ror #16
 80070be:	432b      	orrs	r3, r5
 80070c0:	fa2f f282 	sxtb16	r2, r2
 80070c4:	fa2f f383 	sxtb16	r3, r3
 80070c8:	f362 040f 	bfi	r4, r2, #0, #16
 80070cc:	f363 000f 	bfi	r0, r3, #0, #16
 80070d0:	0c12      	lsrs	r2, r2, #16
 80070d2:	0c1b      	lsrs	r3, r3, #16
 80070d4:	f362 441f 	bfi	r4, r2, #16, #16
 80070d8:	f363 401f 	bfi	r0, r3, #16, #16
 80070dc:	f847 4c04 	str.w	r4, [r7, #-4]
 80070e0:	f847 0c08 	str.w	r0, [r7, #-8]
 80070e4:	f109 0904 	add.w	r9, r9, #4
 80070e8:	45cb      	cmp	fp, r9
 80070ea:	d1ae      	bne.n	800704a <st_sssa8_ch_conv_dw_Wadapt+0x66>
 80070ec:	f8dd a018 	ldr.w	sl, [sp, #24]
 80070f0:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80070f4:	fa1f fa8a 	uxth.w	sl, sl
 80070f8:	f011 0603 	ands.w	r6, r1, #3
 80070fc:	d023      	beq.n	8007146 <st_sssa8_ch_conv_dw_Wadapt+0x162>
 80070fe:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8007102:	fb13 f302 	smulbb	r3, r3, r2
 8007106:	b29b      	uxth	r3, r3
 8007108:	b1eb      	cbz	r3, 8007146 <st_sssa8_ch_conv_dw_Wadapt+0x162>
 800710a:	3b01      	subs	r3, #1
 800710c:	4456      	add	r6, sl
 800710e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8007112:	b29b      	uxth	r3, r3
 8007114:	b2b6      	uxth	r6, r6
 8007116:	f103 0c01 	add.w	ip, r3, #1
 800711a:	005b      	lsls	r3, r3, #1
 800711c:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8007120:	1c9d      	adds	r5, r3, #2
 8007122:	f10a 0001 	add.w	r0, sl, #1
 8007126:	eb0e 020a 	add.w	r2, lr, sl
 800712a:	197c      	adds	r4, r7, r5
 800712c:	463b      	mov	r3, r7
 800712e:	fa1f fa80 	uxth.w	sl, r0
 8007132:	f992 0000 	ldrsb.w	r0, [r2]
 8007136:	440a      	add	r2, r1
 8007138:	f823 0b02 	strh.w	r0, [r3], #2
 800713c:	42a3      	cmp	r3, r4
 800713e:	d1f8      	bne.n	8007132 <st_sssa8_ch_conv_dw_Wadapt+0x14e>
 8007140:	45b2      	cmp	sl, r6
 8007142:	4467      	add	r7, ip
 8007144:	d1ed      	bne.n	8007122 <st_sssa8_ch_conv_dw_Wadapt+0x13e>
 8007146:	b009      	add	sp, #36	; 0x24
 8007148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800714c:	ffff0000 	.word	0xffff0000

08007150 <st_sssa8_ch_convolve_dw>:
 8007150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007154:	b0dd      	sub	sp, #372	; 0x174
 8007156:	f8bd 719c 	ldrh.w	r7, [sp, #412]	; 0x19c
 800715a:	f8bd 41a4 	ldrh.w	r4, [sp, #420]	; 0x1a4
 800715e:	9020      	str	r0, [sp, #128]	; 0x80
 8007160:	ea4f 0887 	mov.w	r8, r7, lsl #2
 8007164:	f8bd 01a0 	ldrh.w	r0, [sp, #416]	; 0x1a0
 8007168:	007e      	lsls	r6, r7, #1
 800716a:	910a      	str	r1, [sp, #40]	; 0x28
 800716c:	eb08 0107 	add.w	r1, r8, r7
 8007170:	fb04 f900 	mul.w	r9, r4, r0
 8007174:	f99d 51c8 	ldrsb.w	r5, [sp, #456]	; 0x1c8
 8007178:	921a      	str	r2, [sp, #104]	; 0x68
 800717a:	fb07 1109 	mla	r1, r7, r9, r1
 800717e:	9a76      	ldr	r2, [sp, #472]	; 0x1d8
 8007180:	9033      	str	r0, [sp, #204]	; 0xcc
 8007182:	19f0      	adds	r0, r6, r7
 8007184:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8007188:	931f      	str	r3, [sp, #124]	; 0x7c
 800718a:	9b76      	ldr	r3, [sp, #472]	; 0x1d8
 800718c:	9219      	str	r2, [sp, #100]	; 0x64
 800718e:	f8bd 21a8 	ldrh.w	r2, [sp, #424]	; 0x1a8
 8007192:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8007196:	9438      	str	r4, [sp, #224]	; 0xe0
 8007198:	9232      	str	r2, [sp, #200]	; 0xc8
 800719a:	f8bd 21ac 	ldrh.w	r2, [sp, #428]	; 0x1ac
 800719e:	9615      	str	r6, [sp, #84]	; 0x54
 80071a0:	9239      	str	r2, [sp, #228]	; 0xe4
 80071a2:	f8bd 21b0 	ldrh.w	r2, [sp, #432]	; 0x1b0
 80071a6:	9326      	str	r3, [sp, #152]	; 0x98
 80071a8:	9223      	str	r2, [sp, #140]	; 0x8c
 80071aa:	f8bd 21b4 	ldrh.w	r2, [sp, #436]	; 0x1b4
 80071ae:	9237      	str	r2, [sp, #220]	; 0xdc
 80071b0:	f99d 21c4 	ldrsb.w	r2, [sp, #452]	; 0x1c4
 80071b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80071b6:	f8bd 21d0 	ldrh.w	r2, [sp, #464]	; 0x1d0
 80071ba:	9225      	str	r2, [sp, #148]	; 0x94
 80071bc:	f8bd 21d4 	ldrh.w	r2, [sp, #468]	; 0x1d4
 80071c0:	923a      	str	r2, [sp, #232]	; 0xe8
 80071c2:	b19f      	cbz	r7, 80071ec <st_sssa8_ch_convolve_dw+0x9c>
 80071c4:	9970      	ldr	r1, [sp, #448]	; 0x1c0
 80071c6:	1f1c      	subs	r4, r3, #4
 80071c8:	f04f 0c01 	mov.w	ip, #1
 80071cc:	198e      	adds	r6, r1, r6
 80071ce:	f931 3b02 	ldrsh.w	r3, [r1], #2
 80071d2:	fa0c f003 	lsl.w	r0, ip, r3
 80071d6:	fa05 f203 	lsl.w	r2, r5, r3
 80071da:	2b00      	cmp	r3, #0
 80071dc:	eb02 0250 	add.w	r2, r2, r0, lsr #1
 80071e0:	f340 84b3 	ble.w	8007b4a <st_sssa8_ch_convolve_dw+0x9fa>
 80071e4:	428e      	cmp	r6, r1
 80071e6:	f844 2f04 	str.w	r2, [r4, #4]!
 80071ea:	d1f0      	bne.n	80071ce <st_sssa8_ch_convolve_dw+0x7e>
 80071ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80071ee:	a944      	add	r1, sp, #272	; 0x110
 80071f0:	ab40      	add	r3, sp, #256	; 0x100
 80071f2:	aa3c      	add	r2, sp, #240	; 0xf0
 80071f4:	943e      	str	r4, [sp, #248]	; 0xf8
 80071f6:	a848      	add	r0, sp, #288	; 0x120
 80071f8:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80071fa:	9100      	str	r1, [sp, #0]
 80071fc:	a952      	add	r1, sp, #328	; 0x148
 80071fe:	943d      	str	r4, [sp, #244]	; 0xf4
 8007200:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8007202:	9442      	str	r4, [sp, #264]	; 0x108
 8007204:	9c3a      	ldr	r4, [sp, #232]	; 0xe8
 8007206:	9441      	str	r4, [sp, #260]	; 0x104
 8007208:	9c33      	ldr	r4, [sp, #204]	; 0xcc
 800720a:	9446      	str	r4, [sp, #280]	; 0x118
 800720c:	9c38      	ldr	r4, [sp, #224]	; 0xe0
 800720e:	9445      	str	r4, [sp, #276]	; 0x114
 8007210:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 8007212:	9454      	str	r4, [sp, #336]	; 0x150
 8007214:	9c37      	ldr	r4, [sp, #220]	; 0xdc
 8007216:	9455      	str	r4, [sp, #340]	; 0x154
 8007218:	9c32      	ldr	r4, [sp, #200]	; 0xc8
 800721a:	9456      	str	r4, [sp, #344]	; 0x158
 800721c:	9c39      	ldr	r4, [sp, #228]	; 0xe4
 800721e:	9457      	str	r4, [sp, #348]	; 0x15c
 8007220:	f001 ff0a 	bl	8009038 <ai_padding_opt_init>
 8007224:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007226:	fbb7 f3f3 	udiv	r3, r7, r3
 800722a:	079a      	lsls	r2, r3, #30
 800722c:	931b      	str	r3, [sp, #108]	; 0x6c
 800722e:	f040 8493 	bne.w	8007b58 <st_sssa8_ch_convolve_dw+0xa08>
 8007232:	109c      	asrs	r4, r3, #2
 8007234:	2304      	movs	r3, #4
 8007236:	931b      	str	r3, [sp, #108]	; 0x6c
 8007238:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800723a:	425b      	negs	r3, r3
 800723c:	b29a      	uxth	r2, r3
 800723e:	ea42 4b03 	orr.w	fp, r2, r3, lsl #16
 8007242:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
 8007244:	2b00      	cmp	r3, #0
 8007246:	f000 8243 	beq.w	80076d0 <st_sssa8_ch_convolve_dw+0x580>
 800724a:	f3c9 014f 	ubfx	r1, r9, #1, #16
 800724e:	08ba      	lsrs	r2, r7, #2
 8007250:	9838      	ldr	r0, [sp, #224]	; 0xe0
 8007252:	1e4d      	subs	r5, r1, #1
 8007254:	9110      	str	r1, [sp, #64]	; 0x40
 8007256:	996e      	ldr	r1, [sp, #440]	; 0x1b8
 8007258:	fa1f fa85 	uxth.w	sl, r5
 800725c:	2500      	movs	r5, #0
 800725e:	f101 0e20 	add.w	lr, r1, #32
 8007262:	9939      	ldr	r1, [sp, #228]	; 0xe4
 8007264:	9536      	str	r5, [sp, #216]	; 0xd8
 8007266:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8007268:	f1c1 0c00 	rsb	ip, r1, #0
 800726c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 800726e:	9224      	str	r2, [sp, #144]	; 0x90
 8007270:	4629      	mov	r1, r5
 8007272:	fb13 f300 	smulbb	r3, r3, r0
 8007276:	3a01      	subs	r2, #1
 8007278:	fb01 f104 	mul.w	r1, r1, r4
 800727c:	9826      	ldr	r0, [sp, #152]	; 0x98
 800727e:	b292      	uxth	r2, r2
 8007280:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8007282:	4440      	add	r0, r8
 8007284:	9135      	str	r1, [sp, #212]	; 0xd4
 8007286:	f102 0901 	add.w	r9, r2, #1
 800728a:	eb0e 1102 	add.w	r1, lr, r2, lsl #4
 800728e:	eba7 0808 	sub.w	r8, r7, r8
 8007292:	9029      	str	r0, [sp, #164]	; 0xa4
 8007294:	9112      	str	r1, [sp, #72]	; 0x48
 8007296:	b29b      	uxth	r3, r3
 8007298:	eb00 0648 	add.w	r6, r0, r8, lsl #1
 800729c:	9976      	ldr	r1, [sp, #472]	; 0x1d8
 800729e:	ea4f 1009 	mov.w	r0, r9, lsl #4
 80072a2:	931c      	str	r3, [sp, #112]	; 0x70
 80072a4:	3b01      	subs	r3, #1
 80072a6:	9628      	str	r6, [sp, #160]	; 0xa0
 80072a8:	4401      	add	r1, r0
 80072aa:	f10a 0601 	add.w	r6, sl, #1
 80072ae:	b29b      	uxth	r3, r3
 80072b0:	46b8      	mov	r8, r7
 80072b2:	9130      	str	r1, [sp, #192]	; 0xc0
 80072b4:	1821      	adds	r1, r4, r0
 80072b6:	3301      	adds	r3, #1
 80072b8:	2400      	movs	r4, #0
 80072ba:	912d      	str	r1, [sp, #180]	; 0xb4
 80072bc:	996e      	ldr	r1, [sp, #440]	; 0x1b8
 80072be:	4401      	add	r1, r0
 80072c0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80072c2:	912c      	str	r1, [sp, #176]	; 0xb0
 80072c4:	0059      	lsls	r1, r3, #1
 80072c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80072c8:	911e      	str	r1, [sp, #120]	; 0x78
 80072ca:	eb00 01c9 	add.w	r1, r0, r9, lsl #3
 80072ce:	912f      	str	r1, [sp, #188]	; 0xbc
 80072d0:	9915      	ldr	r1, [sp, #84]	; 0x54
 80072d2:	fb06 f101 	mul.w	r1, r6, r1
 80072d6:	9116      	str	r1, [sp, #88]	; 0x58
 80072d8:	ea4f 0189 	mov.w	r1, r9, lsl #2
 80072dc:	912b      	str	r1, [sp, #172]	; 0xac
 80072de:	f003 0101 	and.w	r1, r3, #1
 80072e2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80072e4:	9111      	str	r1, [sp, #68]	; 0x44
 80072e6:	ea4f 110a 	mov.w	r1, sl, lsl #4
 80072ea:	fb05 f303 	mul.w	r3, r5, r3
 80072ee:	912a      	str	r1, [sp, #168]	; 0xa8
 80072f0:	0131      	lsls	r1, r6, #4
 80072f2:	933b      	str	r3, [sp, #236]	; 0xec
 80072f4:	9117      	str	r1, [sp, #92]	; 0x5c
 80072f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80072f8:	f8cd b0c4 	str.w	fp, [sp, #196]	; 0xc4
 80072fc:	0093      	lsls	r3, r2, #2
 80072fe:	932e      	str	r3, [sp, #184]	; 0xb8
 8007300:	f007 0303 	and.w	r3, r7, #3
 8007304:	9322      	str	r3, [sp, #136]	; 0x88
 8007306:	fa1f f38c 	uxth.w	r3, ip
 800730a:	9334      	str	r3, [sp, #208]	; 0xd0
 800730c:	a848      	add	r0, sp, #288	; 0x120
 800730e:	f001 feed 	bl	80090ec <ai_padding_opt_phase1>
 8007312:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8007314:	2b00      	cmp	r3, #0
 8007316:	f000 81cd 	beq.w	80076b4 <st_sssa8_ch_convolve_dw+0x564>
 800731a:	f9bd 00d0 	ldrsh.w	r0, [sp, #208]	; 0xd0
 800731e:	2100      	movs	r1, #0
 8007320:	46c3      	mov	fp, r8
 8007322:	9027      	str	r0, [sp, #156]	; 0x9c
 8007324:	9837      	ldr	r0, [sp, #220]	; 0xdc
 8007326:	9121      	str	r1, [sp, #132]	; 0x84
 8007328:	e9dd 3238 	ldrd	r3, r2, [sp, #224]	; 0xe0
 800732c:	1a9a      	subs	r2, r3, r2
 800732e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8007330:	425b      	negs	r3, r3
 8007332:	fb00 2204 	mla	r2, r0, r4, r2
 8007336:	b29b      	uxth	r3, r3
 8007338:	9218      	str	r2, [sp, #96]	; 0x60
 800733a:	460a      	mov	r2, r1
 800733c:	931d      	str	r3, [sp, #116]	; 0x74
 800733e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007340:	3b01      	subs	r3, #1
 8007342:	9314      	str	r3, [sp, #80]	; 0x50
 8007344:	9b48      	ldr	r3, [sp, #288]	; 0x120
 8007346:	2b00      	cmp	r3, #0
 8007348:	f000 82af 	beq.w	80078aa <st_sssa8_ch_convolve_dw+0x75a>
 800734c:	3b01      	subs	r3, #1
 800734e:	2101      	movs	r1, #1
 8007350:	9348      	str	r3, [sp, #288]	; 0x120
 8007352:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007354:	f8ad 1146 	strh.w	r1, [sp, #326]	; 0x146
 8007358:	2b01      	cmp	r3, #1
 800735a:	f000 82f4 	beq.w	8007946 <st_sssa8_ch_convolve_dw+0x7f6>
 800735e:	2b04      	cmp	r3, #4
 8007360:	f000 838d 	beq.w	8007a7e <st_sssa8_ch_convolve_dw+0x92e>
 8007364:	2b02      	cmp	r3, #2
 8007366:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007368:	4618      	mov	r0, r3
 800736a:	f000 8330 	beq.w	80079ce <st_sssa8_ch_convolve_dw+0x87e>
 800736e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8007370:	4298      	cmp	r0, r3
 8007372:	dd45      	ble.n	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007374:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8007376:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8007378:	fb02 0201 	mla	r2, r2, r1, r0
 800737c:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800737e:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	; 0x74
 8007382:	1a12      	subs	r2, r2, r0
 8007384:	9109      	str	r1, [sp, #36]	; 0x24
 8007386:	4291      	cmp	r1, r2
 8007388:	9203      	str	r2, [sp, #12]
 800738a:	da39      	bge.n	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 800738c:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8007390:	46d9      	mov	r9, fp
 8007392:	461a      	mov	r2, r3
 8007394:	9305      	str	r3, [sp, #20]
 8007396:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007398:	0fd2      	lsrs	r2, r2, #31
 800739a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800739c:	f1ca 0b00 	rsb	fp, sl, #0
 80073a0:	fb01 f103 	mul.w	r1, r1, r3
 80073a4:	4298      	cmp	r0, r3
 80073a6:	bfd8      	it	le
 80073a8:	f042 0201 	orrle.w	r2, r2, #1
 80073ac:	9107      	str	r1, [sp, #28]
 80073ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 80073b0:	9204      	str	r2, [sp, #16]
 80073b2:	4688      	mov	r8, r1
 80073b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80073b6:	428b      	cmp	r3, r1
 80073b8:	bfcc      	ite	gt
 80073ba:	2300      	movgt	r3, #0
 80073bc:	2301      	movle	r3, #1
 80073be:	ea53 73d8 	orrs.w	r3, r3, r8, lsr #31
 80073c2:	d103      	bne.n	80073cc <st_sssa8_ch_convolve_dw+0x27c>
 80073c4:	9b04      	ldr	r3, [sp, #16]
 80073c6:	2b00      	cmp	r3, #0
 80073c8:	f000 81de 	beq.w	8007788 <st_sssa8_ch_convolve_dw+0x638>
 80073cc:	464a      	mov	r2, r9
 80073ce:	4651      	mov	r1, sl
 80073d0:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80073d4:	f001 fea6 	bl	8009124 <st_uint8_fill>
 80073d8:	f108 0801 	add.w	r8, r8, #1
 80073dc:	9b03      	ldr	r3, [sp, #12]
 80073de:	44ca      	add	sl, r9
 80073e0:	ebab 0b09 	sub.w	fp, fp, r9
 80073e4:	fa0f f888 	sxth.w	r8, r8
 80073e8:	4598      	cmp	r8, r3
 80073ea:	4641      	mov	r1, r8
 80073ec:	dbe2      	blt.n	80073b4 <st_sssa8_ch_convolve_dw+0x264>
 80073ee:	9b05      	ldr	r3, [sp, #20]
 80073f0:	9918      	ldr	r1, [sp, #96]	; 0x60
 80073f2:	3301      	adds	r3, #1
 80073f4:	b21b      	sxth	r3, r3
 80073f6:	428b      	cmp	r3, r1
 80073f8:	461a      	mov	r2, r3
 80073fa:	9305      	str	r3, [sp, #20]
 80073fc:	dbcb      	blt.n	8007396 <st_sssa8_ch_convolve_dw+0x246>
 80073fe:	46cb      	mov	fp, r9
 8007400:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8007402:	2b00      	cmp	r3, #0
 8007404:	f000 8288 	beq.w	8007918 <st_sssa8_ch_convolve_dw+0x7c8>
 8007408:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800740a:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
 800740c:	f102 0810 	add.w	r8, r2, #16
 8007410:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8007412:	3310      	adds	r3, #16
 8007414:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 8007418:	3204      	adds	r2, #4
 800741a:	f8dd 90c4 	ldr.w	r9, [sp, #196]	; 0xc4
 800741e:	9309      	str	r3, [sp, #36]	; 0x24
 8007420:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8007422:	9205      	str	r2, [sp, #20]
 8007424:	3308      	adds	r3, #8
 8007426:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8007428:	9306      	str	r3, [sp, #24]
 800742a:	9208      	str	r2, [sp, #32]
 800742c:	9b76      	ldr	r3, [sp, #472]	; 0x1d8
 800742e:	e9dd c229 	ldrd	ip, r2, [sp, #164]	; 0xa4
 8007432:	3310      	adds	r3, #16
 8007434:	3220      	adds	r2, #32
 8007436:	f8cd c01c 	str.w	ip, [sp, #28]
 800743a:	469b      	mov	fp, r3
 800743c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800743e:	9213      	str	r2, [sp, #76]	; 0x4c
 8007440:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8007444:	920e      	str	r2, [sp, #56]	; 0x38
 8007446:	f853 6c10 	ldr.w	r6, [r3, #-16]
 800744a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800744e:	9908      	ldr	r1, [sp, #32]
 8007450:	e953 5403 	ldrd	r5, r4, [r3, #-12]
 8007454:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007456:	2b00      	cmp	r3, #0
 8007458:	d04b      	beq.n	80074f2 <st_sssa8_ch_convolve_dw+0x3a2>
 800745a:	9b07      	ldr	r3, [sp, #28]
 800745c:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800745e:	461a      	mov	r2, r3
 8007460:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 8007464:	eb03 0c07 	add.w	ip, r3, r7
 8007468:	464f      	mov	r7, r9
 800746a:	3210      	adds	r2, #16
 800746c:	e9cd 8b0c 	strd	r8, fp, [sp, #48]	; 0x30
 8007470:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
 8007474:	e9cd 4003 	strd	r4, r0, [sp, #12]
 8007478:	f8d1 8000 	ldr.w	r8, [r1]
 800747c:	f851 900a 	ldr.w	r9, [r1, sl]
 8007480:	4bc0      	ldr	r3, [pc, #768]	; (8007784 <st_sssa8_ch_convolve_dw+0x634>)
 8007482:	fa1f fe88 	uxth.w	lr, r8
 8007486:	f852 0c10 	ldr.w	r0, [r2, #-16]
 800748a:	ea09 0303 	and.w	r3, r9, r3
 800748e:	ea4e 4e09 	orr.w	lr, lr, r9, lsl #16
 8007492:	ea43 4318 	orr.w	r3, r3, r8, lsr #16
 8007496:	fa27 f88e 	sxtab16	r8, r7, lr
 800749a:	fb20 6608 	smlad	r6, r0, r8, r6
 800749e:	ea4f 2e3e 	mov.w	lr, lr, ror #8
 80074a2:	f852 0c0c 	ldr.w	r0, [r2, #-12]
 80074a6:	fa27 fe8e 	sxtab16	lr, r7, lr
 80074aa:	fb20 550e 	smlad	r5, r0, lr, r5
 80074ae:	fa27 fe83 	sxtab16	lr, r7, r3
 80074b2:	f852 0c08 	ldr.w	r0, [r2, #-8]
 80074b6:	9c03      	ldr	r4, [sp, #12]
 80074b8:	fb20 400e 	smlad	r0, r0, lr, r4
 80074bc:	9003      	str	r0, [sp, #12]
 80074be:	ea4f 2333 	mov.w	r3, r3, ror #8
 80074c2:	f852 0c04 	ldr.w	r0, [r2, #-4]
 80074c6:	fa27 f383 	sxtab16	r3, r7, r3
 80074ca:	9c04      	ldr	r4, [sp, #16]
 80074cc:	fb20 4303 	smlad	r3, r0, r3, r4
 80074d0:	3210      	adds	r2, #16
 80074d2:	9304      	str	r3, [sp, #16]
 80074d4:	4459      	add	r1, fp
 80074d6:	4594      	cmp	ip, r2
 80074d8:	d1ce      	bne.n	8007478 <st_sssa8_ch_convolve_dw+0x328>
 80074da:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80074dc:	4618      	mov	r0, r3
 80074de:	9b07      	ldr	r3, [sp, #28]
 80074e0:	46b9      	mov	r9, r7
 80074e2:	9c03      	ldr	r4, [sp, #12]
 80074e4:	4413      	add	r3, r2
 80074e6:	9a08      	ldr	r2, [sp, #32]
 80074e8:	9307      	str	r3, [sp, #28]
 80074ea:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80074ec:	e9dd 8b0c 	ldrd	r8, fp, [sp, #48]	; 0x30
 80074f0:	1899      	adds	r1, r3, r2
 80074f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80074f4:	b30b      	cbz	r3, 800753a <st_sssa8_ch_convolve_dw+0x3ea>
 80074f6:	680b      	ldr	r3, [r1, #0]
 80074f8:	9a07      	ldr	r2, [sp, #28]
 80074fa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80074fc:	fa4f fc83 	sxtb.w	ip, r3
 8007500:	f8b2 e000 	ldrh.w	lr, [r2]
 8007504:	f343 2107 	sbfx	r1, r3, #8, #8
 8007508:	f343 4207 	sbfx	r2, r3, #16, #8
 800750c:	ebc7 6a23 	rsb	sl, r7, r3, asr #24
 8007510:	ebac 0c07 	sub.w	ip, ip, r7
 8007514:	1bc9      	subs	r1, r1, r7
 8007516:	1bd2      	subs	r2, r2, r7
 8007518:	9f07      	ldr	r7, [sp, #28]
 800751a:	fb1e 660c 	smlabb	r6, lr, ip, r6
 800751e:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 8007522:	463b      	mov	r3, r7
 8007524:	f8b7 e004 	ldrh.w	lr, [r7, #4]
 8007528:	fb1c 5501 	smlabb	r5, ip, r1, r5
 800752c:	88f9      	ldrh	r1, [r7, #6]
 800752e:	fb1e 4402 	smlabb	r4, lr, r2, r4
 8007532:	3308      	adds	r3, #8
 8007534:	fb11 000a 	smlabb	r0, r1, sl, r0
 8007538:	9307      	str	r3, [sp, #28]
 800753a:	9b06      	ldr	r3, [sp, #24]
 800753c:	f85b 1c10 	ldr.w	r1, [fp, #-16]
 8007540:	f933 3c08 	ldrsh.w	r3, [r3, #-8]
 8007544:	f858 2c10 	ldr.w	r2, [r8, #-16]
 8007548:	2b00      	cmp	r3, #0
 800754a:	f340 80fe 	ble.w	800774a <st_sssa8_ch_convolve_dw+0x5fa>
 800754e:	0076      	lsls	r6, r6, #1
 8007550:	fb56 2601 	smmla	r6, r6, r1, r2
 8007554:	411e      	asrs	r6, r3
 8007556:	f306 0607 	ssat	r6, #8, r6
 800755a:	9b05      	ldr	r3, [sp, #20]
 800755c:	f803 6c04 	strb.w	r6, [r3, #-4]
 8007560:	9b06      	ldr	r3, [sp, #24]
 8007562:	f933 1c06 	ldrsh.w	r1, [r3, #-6]
 8007566:	2900      	cmp	r1, #0
 8007568:	f340 80dc 	ble.w	8007724 <st_sssa8_ch_convolve_dw+0x5d4>
 800756c:	f85b 3c0c 	ldr.w	r3, [fp, #-12]
 8007570:	006d      	lsls	r5, r5, #1
 8007572:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 8007576:	fb55 2503 	smmla	r5, r5, r3, r2
 800757a:	410d      	asrs	r5, r1
 800757c:	f305 0507 	ssat	r5, #8, r5
 8007580:	9b05      	ldr	r3, [sp, #20]
 8007582:	f803 5c03 	strb.w	r5, [r3, #-3]
 8007586:	9b06      	ldr	r3, [sp, #24]
 8007588:	f933 1c04 	ldrsh.w	r1, [r3, #-4]
 800758c:	2900      	cmp	r1, #0
 800758e:	f340 80b6 	ble.w	80076fe <st_sssa8_ch_convolve_dw+0x5ae>
 8007592:	f85b 3c08 	ldr.w	r3, [fp, #-8]
 8007596:	0064      	lsls	r4, r4, #1
 8007598:	f858 2c08 	ldr.w	r2, [r8, #-8]
 800759c:	fb54 2403 	smmla	r4, r4, r3, r2
 80075a0:	410c      	asrs	r4, r1
 80075a2:	f304 0407 	ssat	r4, #8, r4
 80075a6:	9b05      	ldr	r3, [sp, #20]
 80075a8:	f803 4c02 	strb.w	r4, [r3, #-2]
 80075ac:	9b06      	ldr	r3, [sp, #24]
 80075ae:	f933 1c02 	ldrsh.w	r1, [r3, #-2]
 80075b2:	2900      	cmp	r1, #0
 80075b4:	f340 8090 	ble.w	80076d8 <st_sssa8_ch_convolve_dw+0x588>
 80075b8:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 80075bc:	0040      	lsls	r0, r0, #1
 80075be:	f858 2c04 	ldr.w	r2, [r8, #-4]
 80075c2:	fb50 2003 	smmla	r0, r0, r3, r2
 80075c6:	4108      	asrs	r0, r1
 80075c8:	f300 0007 	ssat	r0, #8, r0
 80075cc:	9b05      	ldr	r3, [sp, #20]
 80075ce:	f803 0c01 	strb.w	r0, [r3, #-1]
 80075d2:	9a06      	ldr	r2, [sp, #24]
 80075d4:	f10b 0b10 	add.w	fp, fp, #16
 80075d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80075da:	f108 0810 	add.w	r8, r8, #16
 80075de:	3208      	adds	r2, #8
 80075e0:	3310      	adds	r3, #16
 80075e2:	9206      	str	r2, [sp, #24]
 80075e4:	9a05      	ldr	r2, [sp, #20]
 80075e6:	9309      	str	r3, [sp, #36]	; 0x24
 80075e8:	3204      	adds	r2, #4
 80075ea:	9205      	str	r2, [sp, #20]
 80075ec:	9a08      	ldr	r2, [sp, #32]
 80075ee:	3204      	adds	r2, #4
 80075f0:	9208      	str	r2, [sp, #32]
 80075f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80075f4:	429a      	cmp	r2, r3
 80075f6:	f47f af26 	bne.w	8007446 <st_sssa8_ch_convolve_dw+0x2f6>
 80075fa:	9b73      	ldr	r3, [sp, #460]	; 0x1cc
 80075fc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80075fe:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8007602:	4413      	add	r3, r2
 8007604:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 8007608:	f8dd 80c0 	ldr.w	r8, [sp, #192]	; 0xc0
 800760c:	9373      	str	r3, [sp, #460]	; 0x1cc
 800760e:	e9dd ae2c 	ldrd	sl, lr, [sp, #176]	; 0xb0
 8007612:	e9dd 692e 	ldrd	r6, r9, [sp, #184]	; 0xb8
 8007616:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007618:	2b00      	cmp	r3, #0
 800761a:	d03d      	beq.n	8007698 <st_sssa8_ch_convolve_dw+0x548>
 800761c:	4433      	add	r3, r6
 800761e:	f1ae 0704 	sub.w	r7, lr, #4
 8007622:	f1a9 0902 	sub.w	r9, r9, #2
 8007626:	f1a8 0804 	sub.w	r8, r8, #4
 800762a:	b29b      	uxth	r3, r3
 800762c:	f8dd e1cc 	ldr.w	lr, [sp, #460]	; 0x1cc
 8007630:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 8007634:	9303      	str	r3, [sp, #12]
 8007636:	1c73      	adds	r3, r6, #1
 8007638:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800763a:	1991      	adds	r1, r2, r6
 800763c:	b29e      	uxth	r6, r3
 800763e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8007640:	f85a 2b04 	ldr.w	r2, [sl], #4
 8007644:	b163      	cbz	r3, 8007660 <st_sssa8_ch_convolve_dw+0x510>
 8007646:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8007648:	eb0c 0403 	add.w	r4, ip, r3
 800764c:	f991 3000 	ldrsb.w	r3, [r1]
 8007650:	4459      	add	r1, fp
 8007652:	f83c 0b02 	ldrh.w	r0, [ip], #2
 8007656:	1b5b      	subs	r3, r3, r5
 8007658:	45a4      	cmp	ip, r4
 800765a:	fb10 2203 	smlabb	r2, r0, r3, r2
 800765e:	d1f5      	bne.n	800764c <st_sssa8_ch_convolve_dw+0x4fc>
 8007660:	f939 3f02 	ldrsh.w	r3, [r9, #2]!
 8007664:	f858 0f04 	ldr.w	r0, [r8, #4]!
 8007668:	2b00      	cmp	r3, #0
 800766a:	f857 1f04 	ldr.w	r1, [r7, #4]!
 800766e:	dd7b      	ble.n	8007768 <st_sssa8_ch_convolve_dw+0x618>
 8007670:	0052      	lsls	r2, r2, #1
 8007672:	fb52 1200 	smmla	r2, r2, r0, r1
 8007676:	411a      	asrs	r2, r3
 8007678:	f302 0207 	ssat	r2, #8, r2
 800767c:	f88e 2000 	strb.w	r2, [lr]
 8007680:	9b03      	ldr	r3, [sp, #12]
 8007682:	f10e 0e01 	add.w	lr, lr, #1
 8007686:	429e      	cmp	r6, r3
 8007688:	d1d5      	bne.n	8007636 <st_sssa8_ch_convolve_dw+0x4e6>
 800768a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800768c:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 800768e:	3b01      	subs	r3, #1
 8007690:	b29b      	uxth	r3, r3
 8007692:	3301      	adds	r3, #1
 8007694:	441a      	add	r2, r3
 8007696:	9273      	str	r2, [sp, #460]	; 0x1cc
 8007698:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800769a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800769c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800769e:	440b      	add	r3, r1
 80076a0:	3201      	adds	r2, #1
 80076a2:	b29b      	uxth	r3, r3
 80076a4:	b212      	sxth	r2, r2
 80076a6:	931d      	str	r3, [sp, #116]	; 0x74
 80076a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80076aa:	9221      	str	r2, [sp, #132]	; 0x84
 80076ac:	4293      	cmp	r3, r2
 80076ae:	f73f ae49 	bgt.w	8007344 <st_sssa8_ch_convolve_dw+0x1f4>
 80076b2:	46d8      	mov	r8, fp
 80076b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80076b6:	9937      	ldr	r1, [sp, #220]	; 0xdc
 80076b8:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80076ba:	440b      	add	r3, r1
 80076bc:	3201      	adds	r2, #1
 80076be:	b29b      	uxth	r3, r3
 80076c0:	b212      	sxth	r2, r2
 80076c2:	9334      	str	r3, [sp, #208]	; 0xd0
 80076c4:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
 80076c6:	4614      	mov	r4, r2
 80076c8:	9236      	str	r2, [sp, #216]	; 0xd8
 80076ca:	4293      	cmp	r3, r2
 80076cc:	f73f ae1e 	bgt.w	800730c <st_sssa8_ch_convolve_dw+0x1bc>
 80076d0:	2000      	movs	r0, #0
 80076d2:	b05d      	add	sp, #372	; 0x174
 80076d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076d8:	f1c1 0101 	rsb	r1, r1, #1
 80076dc:	fa00 f201 	lsl.w	r2, r0, r1
 80076e0:	f302 021f 	ssat	r2, #32, r2
 80076e4:	f85b 3c04 	ldr.w	r3, [fp, #-4]
 80076e8:	fb52 f213 	smmulr	r2, r2, r3
 80076ec:	f858 3c04 	ldr.w	r3, [r8, #-4]
 80076f0:	4413      	add	r3, r2
 80076f2:	f303 0307 	ssat	r3, #8, r3
 80076f6:	9a05      	ldr	r2, [sp, #20]
 80076f8:	f802 3c01 	strb.w	r3, [r2, #-1]
 80076fc:	e769      	b.n	80075d2 <st_sssa8_ch_convolve_dw+0x482>
 80076fe:	f1c1 0101 	rsb	r1, r1, #1
 8007702:	fa04 f201 	lsl.w	r2, r4, r1
 8007706:	f302 021f 	ssat	r2, #32, r2
 800770a:	f85b 3c08 	ldr.w	r3, [fp, #-8]
 800770e:	fb52 f213 	smmulr	r2, r2, r3
 8007712:	f858 3c08 	ldr.w	r3, [r8, #-8]
 8007716:	4413      	add	r3, r2
 8007718:	f303 0307 	ssat	r3, #8, r3
 800771c:	9a05      	ldr	r2, [sp, #20]
 800771e:	f802 3c02 	strb.w	r3, [r2, #-2]
 8007722:	e743      	b.n	80075ac <st_sssa8_ch_convolve_dw+0x45c>
 8007724:	f1c1 0101 	rsb	r1, r1, #1
 8007728:	fa05 f201 	lsl.w	r2, r5, r1
 800772c:	f302 021f 	ssat	r2, #32, r2
 8007730:	f85b 3c0c 	ldr.w	r3, [fp, #-12]
 8007734:	fb52 f213 	smmulr	r2, r2, r3
 8007738:	f858 3c0c 	ldr.w	r3, [r8, #-12]
 800773c:	4413      	add	r3, r2
 800773e:	f303 0307 	ssat	r3, #8, r3
 8007742:	9a05      	ldr	r2, [sp, #20]
 8007744:	f802 3c03 	strb.w	r3, [r2, #-3]
 8007748:	e71d      	b.n	8007586 <st_sssa8_ch_convolve_dw+0x436>
 800774a:	f1c3 0301 	rsb	r3, r3, #1
 800774e:	fa06 f303 	lsl.w	r3, r6, r3
 8007752:	f303 031f 	ssat	r3, #32, r3
 8007756:	fb53 f311 	smmulr	r3, r3, r1
 800775a:	4413      	add	r3, r2
 800775c:	f303 0307 	ssat	r3, #8, r3
 8007760:	9a05      	ldr	r2, [sp, #20]
 8007762:	f802 3c04 	strb.w	r3, [r2, #-4]
 8007766:	e6fb      	b.n	8007560 <st_sssa8_ch_convolve_dw+0x410>
 8007768:	f1c3 0301 	rsb	r3, r3, #1
 800776c:	fa02 f303 	lsl.w	r3, r2, r3
 8007770:	f303 031f 	ssat	r3, #32, r3
 8007774:	fb53 f310 	smmulr	r3, r3, r0
 8007778:	440b      	add	r3, r1
 800777a:	f303 0307 	ssat	r3, #8, r3
 800777e:	f88e 3000 	strb.w	r3, [lr]
 8007782:	e77d      	b.n	8007680 <st_sssa8_ch_convolve_dw+0x530>
 8007784:	ffff0000 	.word	0xffff0000
 8007788:	9b07      	ldr	r3, [sp, #28]
 800778a:	9820      	ldr	r0, [sp, #128]	; 0x80
 800778c:	4419      	add	r1, r3
 800778e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007790:	fb03 0101 	mla	r1, r3, r1, r0
 8007794:	2b00      	cmp	r3, #0
 8007796:	f43f ae1f 	beq.w	80073d8 <st_sssa8_ch_convolve_dw+0x288>
 800779a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800779c:	2f00      	cmp	r7, #0
 800779e:	f43f ae1b 	beq.w	80073d8 <st_sssa8_ch_convolve_dw+0x288>
 80077a2:	18ca      	adds	r2, r1, r3
 80077a4:	1ebb      	subs	r3, r7, #2
 80077a6:	465c      	mov	r4, fp
 80077a8:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 80077ac:	9306      	str	r3, [sp, #24]
 80077ae:	1efb      	subs	r3, r7, #3
 80077b0:	4650      	mov	r0, sl
 80077b2:	46a1      	mov	r9, r4
 80077b4:	9308      	str	r3, [sp, #32]
 80077b6:	1f3b      	subs	r3, r7, #4
 80077b8:	e9cd 8b0e 	strd	r8, fp, [sp, #56]	; 0x38
 80077bc:	4693      	mov	fp, r2
 80077be:	e9cd 3a0c 	strd	r3, sl, [sp, #48]	; 0x30
 80077c2:	19c6      	adds	r6, r0, r7
 80077c4:	f101 0e01 	add.w	lr, r1, #1
 80077c8:	42b1      	cmp	r1, r6
 80077ca:	bf38      	it	cc
 80077cc:	4570      	cmpcc	r0, lr
 80077ce:	d362      	bcc.n	8007896 <st_sssa8_ch_convolve_dw+0x746>
 80077d0:	2f0b      	cmp	r7, #11
 80077d2:	d960      	bls.n	8007896 <st_sssa8_ch_convolve_dw+0x746>
 80077d4:	f009 0303 	and.w	r3, r9, #3
 80077d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80077da:	1cda      	adds	r2, r3, #3
 80077dc:	42a2      	cmp	r2, r4
 80077de:	f200 80a5 	bhi.w	800792c <st_sssa8_ch_convolve_dw+0x7dc>
 80077e2:	2b00      	cmp	r3, #0
 80077e4:	d05e      	beq.n	80078a4 <st_sssa8_ch_convolve_dw+0x754>
 80077e6:	780a      	ldrb	r2, [r1, #0]
 80077e8:	2b01      	cmp	r3, #1
 80077ea:	f100 0a01 	add.w	sl, r0, #1
 80077ee:	9d06      	ldr	r5, [sp, #24]
 80077f0:	7002      	strb	r2, [r0, #0]
 80077f2:	d00b      	beq.n	800780c <st_sssa8_ch_convolve_dw+0x6bc>
 80077f4:	780a      	ldrb	r2, [r1, #0]
 80077f6:	2b03      	cmp	r3, #3
 80077f8:	f100 0a02 	add.w	sl, r0, #2
 80077fc:	9d08      	ldr	r5, [sp, #32]
 80077fe:	7042      	strb	r2, [r0, #1]
 8007800:	d104      	bne.n	800780c <st_sssa8_ch_convolve_dw+0x6bc>
 8007802:	780a      	ldrb	r2, [r1, #0]
 8007804:	f100 0a03 	add.w	sl, r0, #3
 8007808:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800780a:	7082      	strb	r2, [r0, #2]
 800780c:	f891 c000 	ldrb.w	ip, [r1]
 8007810:	2400      	movs	r4, #0
 8007812:	eba7 0803 	sub.w	r8, r7, r3
 8007816:	2200      	movs	r2, #0
 8007818:	f36c 0407 	bfi	r4, ip, #0, #8
 800781c:	4403      	add	r3, r0
 800781e:	ea4f 0098 	mov.w	r0, r8, lsr #2
 8007822:	f36c 240f 	bfi	r4, ip, #8, #8
 8007826:	f36c 4417 	bfi	r4, ip, #16, #8
 800782a:	f36c 641f 	bfi	r4, ip, #24, #8
 800782e:	3201      	adds	r2, #1
 8007830:	f843 4b04 	str.w	r4, [r3], #4
 8007834:	4282      	cmp	r2, r0
 8007836:	d3fa      	bcc.n	800782e <st_sssa8_ch_convolve_dw+0x6de>
 8007838:	f028 0203 	bic.w	r2, r8, #3
 800783c:	4542      	cmp	r2, r8
 800783e:	4492      	add	sl, r2
 8007840:	eba5 0502 	sub.w	r5, r5, r2
 8007844:	d01a      	beq.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 8007846:	780b      	ldrb	r3, [r1, #0]
 8007848:	f88a 3000 	strb.w	r3, [sl]
 800784c:	b1b5      	cbz	r5, 800787c <st_sssa8_ch_convolve_dw+0x72c>
 800784e:	780b      	ldrb	r3, [r1, #0]
 8007850:	2d01      	cmp	r5, #1
 8007852:	f88a 3001 	strb.w	r3, [sl, #1]
 8007856:	d011      	beq.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 8007858:	780b      	ldrb	r3, [r1, #0]
 800785a:	2d02      	cmp	r5, #2
 800785c:	f88a 3002 	strb.w	r3, [sl, #2]
 8007860:	d00c      	beq.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 8007862:	780b      	ldrb	r3, [r1, #0]
 8007864:	2d03      	cmp	r5, #3
 8007866:	f88a 3003 	strb.w	r3, [sl, #3]
 800786a:	d007      	beq.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 800786c:	780b      	ldrb	r3, [r1, #0]
 800786e:	2d04      	cmp	r5, #4
 8007870:	f88a 3004 	strb.w	r3, [sl, #4]
 8007874:	d002      	beq.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 8007876:	780b      	ldrb	r3, [r1, #0]
 8007878:	f88a 3005 	strb.w	r3, [sl, #5]
 800787c:	45de      	cmp	lr, fp
 800787e:	4671      	mov	r1, lr
 8007880:	4630      	mov	r0, r6
 8007882:	eba9 0907 	sub.w	r9, r9, r7
 8007886:	d19c      	bne.n	80077c2 <st_sssa8_ch_convolve_dw+0x672>
 8007888:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 800788c:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8007890:	e9dd a80d 	ldrd	sl, r8, [sp, #52]	; 0x34
 8007894:	e5a0      	b.n	80073d8 <st_sssa8_ch_convolve_dw+0x288>
 8007896:	4603      	mov	r3, r0
 8007898:	780a      	ldrb	r2, [r1, #0]
 800789a:	f803 2b01 	strb.w	r2, [r3], #1
 800789e:	429e      	cmp	r6, r3
 80078a0:	d1fa      	bne.n	8007898 <st_sssa8_ch_convolve_dw+0x748>
 80078a2:	e7eb      	b.n	800787c <st_sssa8_ch_convolve_dw+0x72c>
 80078a4:	4625      	mov	r5, r4
 80078a6:	4682      	mov	sl, r0
 80078a8:	e7b0      	b.n	800780c <st_sssa8_ch_convolve_dw+0x6bc>
 80078aa:	9b49      	ldr	r3, [sp, #292]	; 0x124
 80078ac:	2b00      	cmp	r3, #0
 80078ae:	d040      	beq.n	8007932 <st_sssa8_ch_convolve_dw+0x7e2>
 80078b0:	3b01      	subs	r3, #1
 80078b2:	f8bd 1144 	ldrh.w	r1, [sp, #324]	; 0x144
 80078b6:	9349      	str	r3, [sp, #292]	; 0x124
 80078b8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80078ba:	f8ad 1146 	strh.w	r1, [sp, #326]	; 0x146
 80078be:	2b01      	cmp	r3, #1
 80078c0:	f47f ad4d 	bne.w	800735e <st_sssa8_ch_convolve_dw+0x20e>
 80078c4:	2901      	cmp	r1, #1
 80078c6:	d03e      	beq.n	8007946 <st_sssa8_ch_convolve_dw+0x7f6>
 80078c8:	9f18      	ldr	r7, [sp, #96]	; 0x60
 80078ca:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80078cc:	f9bd 5074 	ldrsh.w	r5, [sp, #116]	; 0x74
 80078d0:	4297      	cmp	r7, r2
 80078d2:	f77f ad95 	ble.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 80078d6:	9e19      	ldr	r6, [sp, #100]	; 0x64
 80078d8:	4614      	mov	r4, r2
 80078da:	f8cd b00c 	str.w	fp, [sp, #12]
 80078de:	4610      	mov	r0, r2
 80078e0:	46b3      	mov	fp, r6
 80078e2:	f8dd 80ec 	ldr.w	r8, [sp, #236]	; 0xec
 80078e6:	f8dd 9080 	ldr.w	r9, [sp, #128]	; 0x80
 80078ea:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80078ee:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80078f0:	3401      	adds	r4, #1
 80078f2:	fb00 500a 	mla	r0, r0, sl, r5
 80078f6:	4659      	mov	r1, fp
 80078f8:	4642      	mov	r2, r8
 80078fa:	b224      	sxth	r4, r4
 80078fc:	fb06 9000 	mla	r0, r6, r0, r9
 8007900:	f003 fdb2 	bl	800b468 <arm_copy_q7>
 8007904:	44c3      	add	fp, r8
 8007906:	42bc      	cmp	r4, r7
 8007908:	4620      	mov	r0, r4
 800790a:	dbf1      	blt.n	80078f0 <st_sssa8_ch_convolve_dw+0x7a0>
 800790c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800790e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8007912:	2b00      	cmp	r3, #0
 8007914:	f47f ad78 	bne.w	8007408 <st_sssa8_ch_convolve_dw+0x2b8>
 8007918:	461e      	mov	r6, r3
 800791a:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800791e:	f8dd e098 	ldr.w	lr, [sp, #152]	; 0x98
 8007922:	f8dd 81d8 	ldr.w	r8, [sp, #472]	; 0x1d8
 8007926:	e9dd 9c28 	ldrd	r9, ip, [sp, #160]	; 0xa0
 800792a:	e674      	b.n	8007616 <st_sssa8_ch_convolve_dw+0x4c6>
 800792c:	4625      	mov	r5, r4
 800792e:	4682      	mov	sl, r0
 8007930:	e789      	b.n	8007846 <st_sssa8_ch_convolve_dw+0x6f6>
 8007932:	9b4a      	ldr	r3, [sp, #296]	; 0x128
 8007934:	2101      	movs	r1, #1
 8007936:	3b01      	subs	r3, #1
 8007938:	f8ad 1146 	strh.w	r1, [sp, #326]	; 0x146
 800793c:	934a      	str	r3, [sp, #296]	; 0x128
 800793e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007940:	2b01      	cmp	r3, #1
 8007942:	f47f ad0c 	bne.w	800735e <st_sssa8_ch_convolve_dw+0x20e>
 8007946:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007948:	4618      	mov	r0, r3
 800794a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800794c:	4298      	cmp	r0, r3
 800794e:	f77f ad57 	ble.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007952:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8007954:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8007956:	fb02 0201 	mla	r2, r2, r1, r0
 800795a:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800795c:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	; 0x74
 8007960:	1a15      	subs	r5, r2, r0
 8007962:	9104      	str	r1, [sp, #16]
 8007964:	428d      	cmp	r5, r1
 8007966:	f77f ad4b 	ble.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 800796a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800796e:	4698      	mov	r8, r3
 8007970:	461a      	mov	r2, r3
 8007972:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8007976:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8007978:	fb06 f302 	mul.w	r3, r6, r2
 800797c:	ea4f 77d8 	mov.w	r7, r8, lsr #31
 8007980:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007984:	9303      	str	r3, [sp, #12]
 8007986:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007988:	4664      	mov	r4, ip
 800798a:	4293      	cmp	r3, r2
 800798c:	bfd8      	it	le
 800798e:	f047 0701 	orrle.w	r7, r7, #1
 8007992:	4566      	cmp	r6, ip
 8007994:	465a      	mov	r2, fp
 8007996:	4651      	mov	r1, sl
 8007998:	4648      	mov	r0, r9
 800799a:	bfcc      	ite	gt
 800799c:	2300      	movgt	r3, #0
 800799e:	2301      	movle	r3, #1
 80079a0:	ea53 73d4 	orrs.w	r3, r3, r4, lsr #31
 80079a4:	d102      	bne.n	80079ac <st_sssa8_ch_convolve_dw+0x85c>
 80079a6:	2f00      	cmp	r7, #0
 80079a8:	f000 80c4 	beq.w	8007b34 <st_sssa8_ch_convolve_dw+0x9e4>
 80079ac:	f001 fbba 	bl	8009124 <st_uint8_fill>
 80079b0:	3401      	adds	r4, #1
 80079b2:	44da      	add	sl, fp
 80079b4:	b224      	sxth	r4, r4
 80079b6:	42ac      	cmp	r4, r5
 80079b8:	46a4      	mov	ip, r4
 80079ba:	dbea      	blt.n	8007992 <st_sssa8_ch_convolve_dw+0x842>
 80079bc:	f108 0801 	add.w	r8, r8, #1
 80079c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80079c2:	fa0f f888 	sxth.w	r8, r8
 80079c6:	4598      	cmp	r8, r3
 80079c8:	4642      	mov	r2, r8
 80079ca:	dbd5      	blt.n	8007978 <st_sssa8_ch_convolve_dw+0x828>
 80079cc:	e518      	b.n	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 80079ce:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80079d0:	4288      	cmp	r0, r1
 80079d2:	f77f ad15 	ble.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 80079d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80079d8:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80079da:	fb02 0203 	mla	r2, r2, r3, r0
 80079de:	9832      	ldr	r0, [sp, #200]	; 0xc8
 80079e0:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80079e4:	1a15      	subs	r5, r2, r0
 80079e6:	9304      	str	r3, [sp, #16]
 80079e8:	42ab      	cmp	r3, r5
 80079ea:	f6bf ad09 	bge.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 80079ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80079f2:	460e      	mov	r6, r1
 80079f4:	4689      	mov	r9, r1
 80079f6:	f89d 802c 	ldrb.w	r8, [sp, #44]	; 0x2c
 80079fa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80079fc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80079fe:	9a04      	ldr	r2, [sp, #16]
 8007a00:	454b      	cmp	r3, r9
 8007a02:	fb09 f307 	mul.w	r3, r9, r7
 8007a06:	4614      	mov	r4, r2
 8007a08:	bfcc      	ite	gt
 8007a0a:	2100      	movgt	r1, #0
 8007a0c:	2101      	movle	r1, #1
 8007a0e:	9303      	str	r3, [sp, #12]
 8007a10:	ea41 79d6 	orr.w	r9, r1, r6, lsr #31
 8007a14:	464b      	mov	r3, r9
 8007a16:	46b1      	mov	r9, r6
 8007a18:	461e      	mov	r6, r3
 8007a1a:	4297      	cmp	r7, r2
 8007a1c:	bfcc      	ite	gt
 8007a1e:	2300      	movgt	r3, #0
 8007a20:	2301      	movle	r3, #1
 8007a22:	ea53 73d4 	orrs.w	r3, r3, r4, lsr #31
 8007a26:	d100      	bne.n	8007a2a <st_sssa8_ch_convolve_dw+0x8da>
 8007a28:	b196      	cbz	r6, 8007a50 <st_sssa8_ch_convolve_dw+0x900>
 8007a2a:	465a      	mov	r2, fp
 8007a2c:	4651      	mov	r1, sl
 8007a2e:	4640      	mov	r0, r8
 8007a30:	f001 fb78 	bl	8009124 <st_uint8_fill>
 8007a34:	3401      	adds	r4, #1
 8007a36:	44da      	add	sl, fp
 8007a38:	b224      	sxth	r4, r4
 8007a3a:	42ac      	cmp	r4, r5
 8007a3c:	4622      	mov	r2, r4
 8007a3e:	dbec      	blt.n	8007a1a <st_sssa8_ch_convolve_dw+0x8ca>
 8007a40:	464e      	mov	r6, r9
 8007a42:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007a44:	3601      	adds	r6, #1
 8007a46:	b236      	sxth	r6, r6
 8007a48:	429e      	cmp	r6, r3
 8007a4a:	46b1      	mov	r9, r6
 8007a4c:	dbd6      	blt.n	80079fc <st_sssa8_ch_convolve_dw+0x8ac>
 8007a4e:	e4d7      	b.n	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007a50:	9b03      	ldr	r3, [sp, #12]
 8007a52:	9820      	ldr	r0, [sp, #128]	; 0x80
 8007a54:	441a      	add	r2, r3
 8007a56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007a58:	fb03 0102 	mla	r1, r3, r2, r0
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	d0e9      	beq.n	8007a34 <st_sssa8_ch_convolve_dw+0x8e4>
 8007a60:	eb01 0c03 	add.w	ip, r1, r3
 8007a64:	4650      	mov	r0, sl
 8007a66:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007a6a:	021b      	lsls	r3, r3, #8
 8007a6c:	4561      	cmp	r1, ip
 8007a6e:	ea4f 2233 	mov.w	r2, r3, ror #8
 8007a72:	fa33 f382 	uxtab16	r3, r3, r2
 8007a76:	f820 3b02 	strh.w	r3, [r0], #2
 8007a7a:	d1f4      	bne.n	8007a66 <st_sssa8_ch_convolve_dw+0x916>
 8007a7c:	e7da      	b.n	8007a34 <st_sssa8_ch_convolve_dw+0x8e4>
 8007a7e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007a80:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8007a82:	4618      	mov	r0, r3
 8007a84:	4288      	cmp	r0, r1
 8007a86:	f77f acbb 	ble.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007a8a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007a8c:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8007a8e:	fb02 0203 	mla	r2, r2, r3, r0
 8007a92:	9832      	ldr	r0, [sp, #200]	; 0xc8
 8007a94:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8007a98:	1a15      	subs	r5, r2, r0
 8007a9a:	9304      	str	r3, [sp, #16]
 8007a9c:	42ab      	cmp	r3, r5
 8007a9e:	f6bf acaf 	bge.w	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007aa2:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8007aa6:	4689      	mov	r9, r1
 8007aa8:	460a      	mov	r2, r1
 8007aaa:	f89d 802c 	ldrb.w	r8, [sp, #44]	; 0x2c
 8007aae:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8007ab0:	fb06 f302 	mul.w	r3, r6, r2
 8007ab4:	ea4f 77d9 	mov.w	r7, r9, lsr #31
 8007ab8:	9904      	ldr	r1, [sp, #16]
 8007aba:	9303      	str	r3, [sp, #12]
 8007abc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007abe:	460c      	mov	r4, r1
 8007ac0:	4293      	cmp	r3, r2
 8007ac2:	bfd8      	it	le
 8007ac4:	f047 0701 	orrle.w	r7, r7, #1
 8007ac8:	428e      	cmp	r6, r1
 8007aca:	bfcc      	ite	gt
 8007acc:	2300      	movgt	r3, #0
 8007ace:	2301      	movle	r3, #1
 8007ad0:	ea53 73d4 	orrs.w	r3, r3, r4, lsr #31
 8007ad4:	d100      	bne.n	8007ad8 <st_sssa8_ch_convolve_dw+0x988>
 8007ad6:	b19f      	cbz	r7, 8007b00 <st_sssa8_ch_convolve_dw+0x9b0>
 8007ad8:	465a      	mov	r2, fp
 8007ada:	4651      	mov	r1, sl
 8007adc:	4640      	mov	r0, r8
 8007ade:	f001 fb21 	bl	8009124 <st_uint8_fill>
 8007ae2:	3401      	adds	r4, #1
 8007ae4:	44da      	add	sl, fp
 8007ae6:	b224      	sxth	r4, r4
 8007ae8:	42ac      	cmp	r4, r5
 8007aea:	4621      	mov	r1, r4
 8007aec:	dbec      	blt.n	8007ac8 <st_sssa8_ch_convolve_dw+0x978>
 8007aee:	f109 0901 	add.w	r9, r9, #1
 8007af2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007af4:	fa0f f989 	sxth.w	r9, r9
 8007af8:	4599      	cmp	r9, r3
 8007afa:	464a      	mov	r2, r9
 8007afc:	dbd8      	blt.n	8007ab0 <st_sssa8_ch_convolve_dw+0x960>
 8007afe:	e47f      	b.n	8007400 <st_sssa8_ch_convolve_dw+0x2b0>
 8007b00:	9b03      	ldr	r3, [sp, #12]
 8007b02:	185a      	adds	r2, r3, r1
 8007b04:	e9dd 311f 	ldrd	r3, r1, [sp, #124]	; 0x7c
 8007b08:	fb03 1202 	mla	r2, r3, r2, r1
 8007b0c:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8007b0e:	2b00      	cmp	r3, #0
 8007b10:	d0e7      	beq.n	8007ae2 <st_sssa8_ch_convolve_dw+0x992>
 8007b12:	18d0      	adds	r0, r2, r3
 8007b14:	4651      	mov	r1, sl
 8007b16:	f812 cb01 	ldrb.w	ip, [r2], #1
 8007b1a:	ea4f 630c 	mov.w	r3, ip, lsl #24
 8007b1e:	4282      	cmp	r2, r0
 8007b20:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 8007b24:	ea4f 2c33 	mov.w	ip, r3, ror #8
 8007b28:	fa33 f38c 	uxtab16	r3, r3, ip
 8007b2c:	f841 3b04 	str.w	r3, [r1], #4
 8007b30:	d1f1      	bne.n	8007b16 <st_sssa8_ch_convolve_dw+0x9c6>
 8007b32:	e7d6      	b.n	8007ae2 <st_sssa8_ch_convolve_dw+0x992>
 8007b34:	9b03      	ldr	r3, [sp, #12]
 8007b36:	eb03 000c 	add.w	r0, r3, ip
 8007b3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007b3c:	461a      	mov	r2, r3
 8007b3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8007b40:	fb02 3000 	mla	r0, r2, r0, r3
 8007b44:	f003 fc90 	bl	800b468 <arm_copy_q7>
 8007b48:	e732      	b.n	80079b0 <st_sssa8_ch_convolve_dw+0x860>
 8007b4a:	428e      	cmp	r6, r1
 8007b4c:	f844 5f04 	str.w	r5, [r4, #4]!
 8007b50:	f47f ab3d 	bne.w	80071ce <st_sssa8_ch_convolve_dw+0x7e>
 8007b54:	f7ff bb4a 	b.w	80071ec <st_sssa8_ch_convolve_dw+0x9c>
 8007b58:	2401      	movs	r4, #1
 8007b5a:	f7ff bb6d 	b.w	8007238 <st_sssa8_ch_convolve_dw+0xe8>
 8007b5e:	bf00      	nop

08007b60 <st_sssa8_ch_convolve_rank1upd>:
 8007b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b64:	b083      	sub	sp, #12
 8007b66:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8007b6a:	f99d a038 	ldrsb.w	sl, [sp, #56]	; 0x38
 8007b6e:	fb13 f304 	smulbb	r3, r3, r4
 8007b72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8007b74:	eb02 0442 	add.w	r4, r2, r2, lsl #1
 8007b78:	fb13 f600 	smulbb	r6, r3, r0
 8007b7c:	2a00      	cmp	r2, #0
 8007b7e:	d06c      	beq.n	8007c5a <st_sssa8_ch_convolve_rank1upd+0xfa>
 8007b80:	b2b6      	uxth	r6, r6
 8007b82:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8007b86:	ea4f 0944 	mov.w	r9, r4, lsl #1
 8007b8a:	ea4f 0b96 	mov.w	fp, r6, lsr #2
 8007b8e:	f006 0603 	and.w	r6, r6, #3
 8007b92:	eb08 0e82 	add.w	lr, r8, r2, lsl #2
 8007b96:	f1a9 0904 	sub.w	r9, r9, #4
 8007b9a:	f1ab 0381 	sub.w	r3, fp, #129	; 0x81
 8007b9e:	f1ab 0080 	sub.w	r0, fp, #128	; 0x80
 8007ba2:	44a9      	add	r9, r5
 8007ba4:	f3c3 13c8 	ubfx	r3, r3, #7, #9
 8007ba8:	ebc3 2243 	rsb	r2, r3, r3, lsl #9
 8007bac:	3301      	adds	r3, #1
 8007bae:	eb00 12c2 	add.w	r2, r0, r2, lsl #7
 8007bb2:	ea4f 2c43 	mov.w	ip, r3, lsl #9
 8007bb6:	b293      	uxth	r3, r2
 8007bb8:	9301      	str	r3, [sp, #4]
 8007bba:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
 8007bbe:	d94f      	bls.n	8007c60 <st_sssa8_ch_convolve_rank1upd+0x100>
 8007bc0:	eb01 050c 	add.w	r5, r1, ip
 8007bc4:	2400      	movs	r4, #0
 8007bc6:	2300      	movs	r3, #0
 8007bc8:	f501 7000 	add.w	r0, r1, #512	; 0x200
 8007bcc:	461f      	mov	r7, r3
 8007bce:	f851 2b04 	ldr.w	r2, [r1], #4
 8007bd2:	fa2f f382 	sxtb16	r3, r2
 8007bd6:	4288      	cmp	r0, r1
 8007bd8:	ea4f 2232 	mov.w	r2, r2, ror #8
 8007bdc:	fa97 f313 	qadd16	r3, r7, r3
 8007be0:	fa2f f282 	sxtb16	r2, r2
 8007be4:	fa93 f712 	qadd16	r7, r3, r2
 8007be8:	d1f1      	bne.n	8007bce <st_sssa8_ch_convolve_rank1upd+0x6e>
 8007bea:	b23a      	sxth	r2, r7
 8007bec:	4285      	cmp	r5, r0
 8007bee:	4601      	mov	r1, r0
 8007bf0:	eb02 4327 	add.w	r3, r2, r7, asr #16
 8007bf4:	441c      	add	r4, r3
 8007bf6:	d1e6      	bne.n	8007bc6 <st_sssa8_ch_convolve_rank1upd+0x66>
 8007bf8:	9801      	ldr	r0, [sp, #4]
 8007bfa:	b1b8      	cbz	r0, 8007c2c <st_sssa8_ch_convolve_rank1upd+0xcc>
 8007bfc:	3801      	subs	r0, #1
 8007bfe:	2200      	movs	r2, #0
 8007c00:	b280      	uxth	r0, r0
 8007c02:	3001      	adds	r0, #1
 8007c04:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8007c08:	f851 3b04 	ldr.w	r3, [r1], #4
 8007c0c:	fa2f f583 	sxtb16	r5, r3
 8007c10:	4281      	cmp	r1, r0
 8007c12:	ea4f 2333 	mov.w	r3, r3, ror #8
 8007c16:	fa92 f215 	qadd16	r2, r2, r5
 8007c1a:	fa2f f383 	sxtb16	r3, r3
 8007c1e:	fa92 f213 	qadd16	r2, r2, r3
 8007c22:	d1f1      	bne.n	8007c08 <st_sssa8_ch_convolve_rank1upd+0xa8>
 8007c24:	b213      	sxth	r3, r2
 8007c26:	eb03 4222 	add.w	r2, r3, r2, asr #16
 8007c2a:	4414      	add	r4, r2
 8007c2c:	b16e      	cbz	r6, 8007c4a <st_sssa8_ch_convolve_rank1upd+0xea>
 8007c2e:	f991 3000 	ldrsb.w	r3, [r1]
 8007c32:	2e01      	cmp	r6, #1
 8007c34:	441c      	add	r4, r3
 8007c36:	d018      	beq.n	8007c6a <st_sssa8_ch_convolve_rank1upd+0x10a>
 8007c38:	f991 3001 	ldrsb.w	r3, [r1, #1]
 8007c3c:	2e02      	cmp	r6, #2
 8007c3e:	441c      	add	r4, r3
 8007c40:	d011      	beq.n	8007c66 <st_sssa8_ch_convolve_rank1upd+0x106>
 8007c42:	f991 3002 	ldrsb.w	r3, [r1, #2]
 8007c46:	3103      	adds	r1, #3
 8007c48:	441c      	add	r4, r3
 8007c4a:	f858 3b04 	ldr.w	r3, [r8], #4
 8007c4e:	fb0a 3414 	mls	r4, sl, r4, r3
 8007c52:	45c6      	cmp	lr, r8
 8007c54:	f849 4f04 	str.w	r4, [r9, #4]!
 8007c58:	d1af      	bne.n	8007bba <st_sssa8_ch_convolve_rank1upd+0x5a>
 8007c5a:	b003      	add	sp, #12
 8007c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c60:	4658      	mov	r0, fp
 8007c62:	2400      	movs	r4, #0
 8007c64:	e7c9      	b.n	8007bfa <st_sssa8_ch_convolve_rank1upd+0x9a>
 8007c66:	3102      	adds	r1, #2
 8007c68:	e7ef      	b.n	8007c4a <st_sssa8_ch_convolve_rank1upd+0xea>
 8007c6a:	3101      	adds	r1, #1
 8007c6c:	e7ed      	b.n	8007c4a <st_sssa8_ch_convolve_rank1upd+0xea>
 8007c6e:	bf00      	nop

08007c70 <st_sssa8_ch_convolve>:
 8007c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c74:	b0d3      	sub	sp, #332	; 0x14c
 8007c76:	4699      	mov	r9, r3
 8007c78:	4688      	mov	r8, r1
 8007c7a:	f8bd 5174 	ldrh.w	r5, [sp, #372]	; 0x174
 8007c7e:	f8bd 6178 	ldrh.w	r6, [sp, #376]	; 0x178
 8007c82:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8007c84:	ebc5 04c5 	rsb	r4, r5, r5, lsl #3
 8007c88:	f8bd 717c 	ldrh.w	r7, [sp, #380]	; 0x17c
 8007c8c:	4629      	mov	r1, r5
 8007c8e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8007c92:	900d      	str	r0, [sp, #52]	; 0x34
 8007c94:	fb16 f307 	smulbb	r3, r6, r7
 8007c98:	ebc5 7045 	rsb	r0, r5, r5, lsl #29
 8007c9c:	9519      	str	r5, [sp, #100]	; 0x64
 8007c9e:	00ad      	lsls	r5, r5, #2
 8007ca0:	fb13 f309 	smulbb	r3, r3, r9
 8007ca4:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
 8007ca8:	920b      	str	r2, [sp, #44]	; 0x2c
 8007caa:	b29b      	uxth	r3, r3
 8007cac:	4602      	mov	r2, r0
 8007cae:	9022      	str	r0, [sp, #136]	; 0x88
 8007cb0:	931a      	str	r3, [sp, #104]	; 0x68
 8007cb2:	442a      	add	r2, r5
 8007cb4:	f8bd 3184 	ldrh.w	r3, [sp, #388]	; 0x184
 8007cb8:	f8bd 0180 	ldrh.w	r0, [sp, #384]	; 0x180
 8007cbc:	9323      	str	r3, [sp, #140]	; 0x8c
 8007cbe:	f8bd 3188 	ldrh.w	r3, [sp, #392]	; 0x188
 8007cc2:	9617      	str	r6, [sp, #92]	; 0x5c
 8007cc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8007cc6:	f8bd 318c 	ldrh.w	r3, [sp, #396]	; 0x18c
 8007cca:	9414      	str	r4, [sp, #80]	; 0x50
 8007ccc:	931b      	str	r3, [sp, #108]	; 0x6c
 8007cce:	f8bd 31a8 	ldrh.w	r3, [sp, #424]	; 0x1a8
 8007cd2:	9725      	str	r7, [sp, #148]	; 0x94
 8007cd4:	9311      	str	r3, [sp, #68]	; 0x44
 8007cd6:	f8bd 31ac 	ldrh.w	r3, [sp, #428]	; 0x1ac
 8007cda:	9507      	str	r5, [sp, #28]
 8007cdc:	9224      	str	r2, [sp, #144]	; 0x90
 8007cde:	9015      	str	r0, [sp, #84]	; 0x54
 8007ce0:	9c66      	ldr	r4, [sp, #408]	; 0x198
 8007ce2:	f99d b19c 	ldrsb.w	fp, [sp, #412]	; 0x19c
 8007ce6:	f99d 61a0 	ldrsb.w	r6, [sp, #416]	; 0x1a0
 8007cea:	9320      	str	r3, [sp, #128]	; 0x80
 8007cec:	2900      	cmp	r1, #0
 8007cee:	f000 8505 	beq.w	80086fc <st_sssa8_ch_convolve+0xa8c>
 8007cf2:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007cf6:	4620      	mov	r0, r4
 8007cf8:	1f15      	subs	r5, r2, #4
 8007cfa:	2701      	movs	r7, #1
 8007cfc:	4464      	add	r4, ip
 8007cfe:	f930 3b02 	ldrsh.w	r3, [r0], #2
 8007d02:	fa07 f103 	lsl.w	r1, r7, r3
 8007d06:	fa06 f203 	lsl.w	r2, r6, r3
 8007d0a:	2b00      	cmp	r3, #0
 8007d0c:	eb02 0251 	add.w	r2, r2, r1, lsr #1
 8007d10:	f340 816a 	ble.w	8007fe8 <st_sssa8_ch_convolve+0x378>
 8007d14:	4284      	cmp	r4, r0
 8007d16:	f845 2f04 	str.w	r2, [r5, #4]!
 8007d1a:	d1f0      	bne.n	8007cfe <st_sssa8_ch_convolve+0x8e>
 8007d1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8007d1e:	9a07      	ldr	r2, [sp, #28]
 8007d20:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8007d22:	189d      	adds	r5, r3, r2
 8007d24:	eba4 010c 	sub.w	r1, r4, ip
 8007d28:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8007d2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007d2c:	aa3a      	add	r2, sp, #232	; 0xe8
 8007d2e:	974a      	str	r7, [sp, #296]	; 0x128
 8007d30:	ea4f 0a49 	mov.w	sl, r9, lsl #1
 8007d34:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007d36:	ab36      	add	r3, sp, #216	; 0xd8
 8007d38:	9433      	str	r4, [sp, #204]	; 0xcc
 8007d3a:	a83e      	add	r0, sp, #248	; 0xf8
 8007d3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8007d3e:	974b      	str	r7, [sp, #300]	; 0x12c
 8007d40:	9438      	str	r4, [sp, #224]	; 0xe0
 8007d42:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8007d44:	9c20      	ldr	r4, [sp, #128]	; 0x80
 8007d46:	974c      	str	r7, [sp, #304]	; 0x130
 8007d48:	9437      	str	r4, [sp, #220]	; 0xdc
 8007d4a:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 8007d4c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8007d4e:	9200      	str	r2, [sp, #0]
 8007d50:	aa32      	add	r2, sp, #200	; 0xc8
 8007d52:	9121      	str	r1, [sp, #132]	; 0x84
 8007d54:	a948      	add	r1, sp, #288	; 0x120
 8007d56:	f8cd 80d0 	str.w	r8, [sp, #208]	; 0xd0
 8007d5a:	974d      	str	r7, [sp, #308]	; 0x134
 8007d5c:	e9cd 643b 	strd	r6, r4, [sp, #236]	; 0xec
 8007d60:	f001 f96a 	bl	8009038 <ai_padding_opt_init>
 8007d64:	fb0a f204 	mul.w	r2, sl, r4
 8007d68:	e9dd 3119 	ldrd	r3, r1, [sp, #100]	; 0x64
 8007d6c:	fb06 f202 	mul.w	r2, r6, r2
 8007d70:	fb03 f301 	mul.w	r3, r3, r1
 8007d74:	9914      	ldr	r1, [sp, #80]	; 0x50
 8007d76:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8007d7a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8007d7e:	921c      	str	r2, [sp, #112]	; 0x70
 8007d80:	f340 84ae 	ble.w	80086e0 <st_sssa8_ch_convolve+0xa70>
 8007d84:	2300      	movs	r3, #0
 8007d86:	932e      	str	r3, [sp, #184]	; 0xb8
 8007d88:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8007d8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8007d8c:	9969      	ldr	r1, [sp, #420]	; 0x1a4
 8007d8e:	fb03 f302 	mul.w	r3, r3, r2
 8007d92:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8007d94:	fb02 1303 	mla	r3, r2, r3, r1
 8007d98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007d9a:	429a      	cmp	r2, r3
 8007d9c:	f080 812a 	bcs.w	8007ff4 <st_sssa8_ch_convolve+0x384>
 8007da0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007da2:	fb03 f308 	mul.w	r3, r3, r8
 8007da6:	fb09 2303 	mla	r3, r9, r3, r2
 8007daa:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 8007dac:	429a      	cmp	r2, r3
 8007dae:	bf2c      	ite	cs
 8007db0:	2300      	movcs	r3, #0
 8007db2:	2301      	movcc	r3, #1
 8007db4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8007db6:	f44f 6220 	mov.w	r2, #2560	; 0xa00
 8007dba:	fb92 f2f1 	sdiv	r2, r2, r1
 8007dbe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8007dc0:	f022 0201 	bic.w	r2, r2, #1
 8007dc4:	428a      	cmp	r2, r1
 8007dc6:	bf28      	it	cs
 8007dc8:	460a      	movcs	r2, r1
 8007dca:	2a01      	cmp	r2, #1
 8007dcc:	921f      	str	r2, [sp, #124]	; 0x7c
 8007dce:	f240 82ec 	bls.w	80083aa <st_sssa8_ch_convolve+0x73a>
 8007dd2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8007dd4:	460a      	mov	r2, r1
 8007dd6:	fbb1 f1f0 	udiv	r1, r1, r0
 8007dda:	fb00 2211 	mls	r2, r0, r1, r2
 8007dde:	b289      	uxth	r1, r1
 8007de0:	b292      	uxth	r2, r2
 8007de2:	912c      	str	r1, [sp, #176]	; 0xb0
 8007de4:	b11a      	cbz	r2, 8007dee <st_sssa8_ch_convolve+0x17e>
 8007de6:	460a      	mov	r2, r1
 8007de8:	3201      	adds	r2, #1
 8007dea:	b292      	uxth	r2, r2
 8007dec:	922c      	str	r2, [sp, #176]	; 0xb0
 8007dee:	2b00      	cmp	r3, #0
 8007df0:	f040 8102 	bne.w	8007ff8 <st_sssa8_ch_convolve+0x388>
 8007df4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8007df6:	fa0f fb8b 	sxth.w	fp, fp
 8007dfa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8007dfc:	fb09 f201 	mul.w	r2, r9, r1
 8007e00:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007e02:	005b      	lsls	r3, r3, #1
 8007e04:	9216      	str	r2, [sp, #88]	; 0x58
 8007e06:	0052      	lsls	r2, r2, #1
 8007e08:	fb01 f303 	mul.w	r3, r1, r3
 8007e0c:	9207      	str	r2, [sp, #28]
 8007e0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007e10:	9026      	str	r0, [sp, #152]	; 0x98
 8007e12:	fb0a 2303 	mla	r3, sl, r3, r2
 8007e16:	4652      	mov	r2, sl
 8007e18:	46ca      	mov	sl, r9
 8007e1a:	9313      	str	r3, [sp, #76]	; 0x4c
 8007e1c:	465b      	mov	r3, fp
 8007e1e:	4691      	mov	r9, r2
 8007e20:	46c3      	mov	fp, r8
 8007e22:	4698      	mov	r8, r3
 8007e24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8007e26:	1e5a      	subs	r2, r3, #1
 8007e28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e2c:	b292      	uxth	r2, r2
 8007e2e:	429a      	cmp	r2, r3
 8007e30:	922c      	str	r2, [sp, #176]	; 0xb0
 8007e32:	f000 82b6 	beq.w	80083a2 <st_sssa8_ch_convolve+0x732>
 8007e36:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8007e38:	b92b      	cbnz	r3, 8007e46 <st_sssa8_ch_convolve+0x1d6>
 8007e3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007e3c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8007e3e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8007e40:	985c      	ldr	r0, [sp, #368]	; 0x170
 8007e42:	f001 fdbb 	bl	80099bc <st_int8_to16_dual>
 8007e46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8007e48:	2b00      	cmp	r3, #0
 8007e4a:	f000 80a9 	beq.w	8007fa0 <st_sssa8_ch_convolve+0x330>
 8007e4e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007e50:	2400      	movs	r4, #0
 8007e52:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8007e54:	425b      	negs	r3, r3
 8007e56:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 8007e58:	941e      	str	r4, [sp, #120]	; 0x78
 8007e5a:	b29b      	uxth	r3, r3
 8007e5c:	921d      	str	r2, [sp, #116]	; 0x74
 8007e5e:	9318      	str	r3, [sp, #96]	; 0x60
 8007e60:	4643      	mov	r3, r8
 8007e62:	46c8      	mov	r8, r9
 8007e64:	46b9      	mov	r9, r7
 8007e66:	461f      	mov	r7, r3
 8007e68:	a83e      	add	r0, sp, #248	; 0xf8
 8007e6a:	f001 f93f 	bl	80090ec <ai_padding_opt_phase1>
 8007e6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d06e      	beq.n	8007f52 <st_sssa8_ch_convolve+0x2e2>
 8007e74:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8007e76:	2500      	movs	r5, #0
 8007e78:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8007e7a:	9510      	str	r5, [sp, #64]	; 0x40
 8007e7c:	1a99      	subs	r1, r3, r2
 8007e7e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007e80:	425a      	negs	r2, r3
 8007e82:	f9bd 3060 	ldrsh.w	r3, [sp, #96]	; 0x60
 8007e86:	9312      	str	r3, [sp, #72]	; 0x48
 8007e88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007e8a:	fb04 1303 	mla	r3, r4, r3, r1
 8007e8e:	9308      	str	r3, [sp, #32]
 8007e90:	b293      	uxth	r3, r2
 8007e92:	930a      	str	r3, [sp, #40]	; 0x28
 8007e94:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 8007e96:	2a00      	cmp	r2, #0
 8007e98:	f040 8192 	bne.w	80081c0 <st_sssa8_ch_convolve+0x550>
 8007e9c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8007e9e:	2a00      	cmp	r2, #0
 8007ea0:	f040 8194 	bne.w	80081cc <st_sssa8_ch_convolve+0x55c>
 8007ea4:	9a40      	ldr	r2, [sp, #256]	; 0x100
 8007ea6:	2101      	movs	r1, #1
 8007ea8:	3a01      	subs	r2, #1
 8007eaa:	f8ad 111e 	strh.w	r1, [sp, #286]	; 0x11e
 8007eae:	9240      	str	r2, [sp, #256]	; 0x100
 8007eb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007eb2:	9a08      	ldr	r2, [sp, #32]
 8007eb4:	4293      	cmp	r3, r2
 8007eb6:	da3a      	bge.n	8007f2e <st_sssa8_ch_convolve+0x2be>
 8007eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007eba:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8007ebc:	fb05 2503 	mla	r5, r5, r3, r2
 8007ec0:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8007ec4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8007ec6:	930e      	str	r3, [sp, #56]	; 0x38
 8007ec8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007eca:	1aad      	subs	r5, r5, r2
 8007ecc:	461e      	mov	r6, r3
 8007ece:	461a      	mov	r2, r3
 8007ed0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8007ed2:	428d      	cmp	r5, r1
 8007ed4:	dd25      	ble.n	8007f22 <st_sssa8_ch_convolve+0x2b2>
 8007ed6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007ed8:	460c      	mov	r4, r1
 8007eda:	9609      	str	r6, [sp, #36]	; 0x24
 8007edc:	468c      	mov	ip, r1
 8007ede:	4293      	cmp	r3, r2
 8007ee0:	fb02 f20b 	mul.w	r2, r2, fp
 8007ee4:	bfcc      	ite	gt
 8007ee6:	2300      	movgt	r3, #0
 8007ee8:	2301      	movle	r3, #1
 8007eea:	920c      	str	r2, [sp, #48]	; 0x30
 8007eec:	ea43 73d6 	orr.w	r3, r3, r6, lsr #31
 8007ef0:	461e      	mov	r6, r3
 8007ef2:	45e3      	cmp	fp, ip
 8007ef4:	4652      	mov	r2, sl
 8007ef6:	4649      	mov	r1, r9
 8007ef8:	4638      	mov	r0, r7
 8007efa:	bfcc      	ite	gt
 8007efc:	f04f 0e00 	movgt.w	lr, #0
 8007f00:	f04f 0e01 	movle.w	lr, #1
 8007f04:	ea5e 73d4 	orrs.w	r3, lr, r4, lsr #31
 8007f08:	d102      	bne.n	8007f10 <st_sssa8_ch_convolve+0x2a0>
 8007f0a:	2e00      	cmp	r6, #0
 8007f0c:	f000 8146 	beq.w	800819c <st_sssa8_ch_convolve+0x52c>
 8007f10:	f003 facc 	bl	800b4ac <arm_fill_q15>
 8007f14:	3401      	adds	r4, #1
 8007f16:	44c1      	add	r9, r8
 8007f18:	b224      	sxth	r4, r4
 8007f1a:	42ac      	cmp	r4, r5
 8007f1c:	46a4      	mov	ip, r4
 8007f1e:	dbe8      	blt.n	8007ef2 <st_sssa8_ch_convolve+0x282>
 8007f20:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8007f22:	3601      	adds	r6, #1
 8007f24:	9b08      	ldr	r3, [sp, #32]
 8007f26:	b236      	sxth	r6, r6
 8007f28:	429e      	cmp	r6, r3
 8007f2a:	4632      	mov	r2, r6
 8007f2c:	dbd0      	blt.n	8007ed0 <st_sssa8_ch_convolve+0x260>
 8007f2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007f30:	454b      	cmp	r3, r9
 8007f32:	f000 8179 	beq.w	8008228 <st_sssa8_ch_convolve+0x5b8>
 8007f36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007f38:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007f3a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007f3c:	4403      	add	r3, r0
 8007f3e:	3101      	adds	r1, #1
 8007f40:	461a      	mov	r2, r3
 8007f42:	b20b      	sxth	r3, r1
 8007f44:	b292      	uxth	r2, r2
 8007f46:	9310      	str	r3, [sp, #64]	; 0x40
 8007f48:	461d      	mov	r5, r3
 8007f4a:	920a      	str	r2, [sp, #40]	; 0x28
 8007f4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8007f4e:	429a      	cmp	r2, r3
 8007f50:	dca0      	bgt.n	8007e94 <st_sssa8_ch_convolve+0x224>
 8007f52:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8007f54:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8007f56:	991e      	ldr	r1, [sp, #120]	; 0x78
 8007f58:	4403      	add	r3, r0
 8007f5a:	3101      	adds	r1, #1
 8007f5c:	461a      	mov	r2, r3
 8007f5e:	b20b      	sxth	r3, r1
 8007f60:	b292      	uxth	r2, r2
 8007f62:	931e      	str	r3, [sp, #120]	; 0x78
 8007f64:	461c      	mov	r4, r3
 8007f66:	9218      	str	r2, [sp, #96]	; 0x60
 8007f68:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8007f6a:	429a      	cmp	r2, r3
 8007f6c:	f73f af7c 	bgt.w	8007e68 <st_sssa8_ch_convolve+0x1f8>
 8007f70:	463b      	mov	r3, r7
 8007f72:	9914      	ldr	r1, [sp, #80]	; 0x50
 8007f74:	464f      	mov	r7, r9
 8007f76:	46c1      	mov	r9, r8
 8007f78:	4698      	mov	r8, r3
 8007f7a:	42b9      	cmp	r1, r7
 8007f7c:	d010      	beq.n	8007fa0 <st_sssa8_ch_convolve+0x330>
 8007f7e:	9865      	ldr	r0, [sp, #404]	; 0x194
 8007f80:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8007f82:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8007f84:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8007f86:	9003      	str	r0, [sp, #12]
 8007f88:	9401      	str	r4, [sp, #4]
 8007f8a:	9821      	ldr	r0, [sp, #132]	; 0x84
 8007f8c:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8007f8e:	9305      	str	r3, [sp, #20]
 8007f90:	9204      	str	r2, [sp, #16]
 8007f92:	9002      	str	r0, [sp, #8]
 8007f94:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007f96:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007f98:	981c      	ldr	r0, [sp, #112]	; 0x70
 8007f9a:	9400      	str	r4, [sp, #0]
 8007f9c:	f002 fee2 	bl	800ad64 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8007fa0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8007fa2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8007fa4:	4611      	mov	r1, r2
 8007fa6:	1a9b      	subs	r3, r3, r2
 8007fa8:	b298      	uxth	r0, r3
 8007faa:	4282      	cmp	r2, r0
 8007fac:	9026      	str	r0, [sp, #152]	; 0x98
 8007fae:	bf28      	it	cs
 8007fb0:	4601      	movcs	r1, r0
 8007fb2:	460b      	mov	r3, r1
 8007fb4:	b1b1      	cbz	r1, 8007fe4 <st_sssa8_ch_convolve+0x374>
 8007fb6:	4611      	mov	r1, r2
 8007fb8:	9d5c      	ldr	r5, [sp, #368]	; 0x170
 8007fba:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8007fbc:	0092      	lsls	r2, r2, #2
 8007fbe:	fb04 5001 	mla	r0, r4, r1, r5
 8007fc2:	905c      	str	r0, [sp, #368]	; 0x170
 8007fc4:	9821      	ldr	r0, [sp, #132]	; 0x84
 8007fc6:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8007fca:	9021      	str	r0, [sp, #132]	; 0x84
 8007fcc:	9869      	ldr	r0, [sp, #420]	; 0x1a4
 8007fce:	4408      	add	r0, r1
 8007fd0:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007fd2:	4411      	add	r1, r2
 8007fd4:	9069      	str	r0, [sp, #420]	; 0x1a4
 8007fd6:	9122      	str	r1, [sp, #136]	; 0x88
 8007fd8:	9965      	ldr	r1, [sp, #404]	; 0x194
 8007fda:	4411      	add	r1, r2
 8007fdc:	9165      	str	r1, [sp, #404]	; 0x194
 8007fde:	9924      	ldr	r1, [sp, #144]	; 0x90
 8007fe0:	4411      	add	r1, r2
 8007fe2:	9124      	str	r1, [sp, #144]	; 0x90
 8007fe4:	931f      	str	r3, [sp, #124]	; 0x7c
 8007fe6:	e71d      	b.n	8007e24 <st_sssa8_ch_convolve+0x1b4>
 8007fe8:	4284      	cmp	r4, r0
 8007fea:	f845 6f04 	str.w	r6, [r5, #4]!
 8007fee:	f47f ae86 	bne.w	8007cfe <st_sssa8_ch_convolve+0x8e>
 8007ff2:	e693      	b.n	8007d1c <st_sssa8_ch_convolve+0xac>
 8007ff4:	2300      	movs	r3, #0
 8007ff6:	e6dd      	b.n	8007db4 <st_sssa8_ch_convolve+0x144>
 8007ff8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	f000 81d1 	beq.w	80083a2 <st_sssa8_ch_convolve+0x732>
 8008000:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8008002:	2400      	movs	r4, #0
 8008004:	9925      	ldr	r1, [sp, #148]	; 0x94
 8008006:	4242      	negs	r2, r0
 8008008:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800800a:	004b      	lsls	r3, r1, #1
 800800c:	f8cd a0ac 	str.w	sl, [sp, #172]	; 0xac
 8008010:	b292      	uxth	r2, r2
 8008012:	fb09 f506 	mul.w	r5, r9, r6
 8008016:	fb06 f303 	mul.w	r3, r6, r3
 800801a:	1a09      	subs	r1, r1, r0
 800801c:	922f      	str	r2, [sp, #188]	; 0xbc
 800801e:	fa0f f68b 	sxth.w	r6, fp
 8008022:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008024:	46c3      	mov	fp, r8
 8008026:	9507      	str	r5, [sp, #28]
 8008028:	fb0a 2303 	mla	r3, sl, r3, r2
 800802c:	46ca      	mov	sl, r9
 800802e:	9430      	str	r4, [sp, #192]	; 0xc0
 8008030:	9316      	str	r3, [sp, #88]	; 0x58
 8008032:	006b      	lsls	r3, r5, #1
 8008034:	9613      	str	r6, [sp, #76]	; 0x4c
 8008036:	9131      	str	r1, [sp, #196]	; 0xc4
 8008038:	931d      	str	r3, [sp, #116]	; 0x74
 800803a:	a83e      	add	r0, sp, #248	; 0xf8
 800803c:	f001 f856 	bl	80090ec <ai_padding_opt_phase1>
 8008040:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008042:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008044:	fb04 f303 	mul.w	r3, r4, r3
 8008048:	9969      	ldr	r1, [sp, #420]	; 0x1a4
 800804a:	fb02 1303 	mla	r3, r2, r3, r1
 800804e:	9323      	str	r3, [sp, #140]	; 0x8c
 8008050:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8008052:	b92b      	cbnz	r3, 8008060 <st_sssa8_ch_convolve+0x3f0>
 8008054:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8008056:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8008058:	991c      	ldr	r1, [sp, #112]	; 0x70
 800805a:	985c      	ldr	r0, [sp, #368]	; 0x170
 800805c:	f001 fcae 	bl	80099bc <st_int8_to16_dual>
 8008060:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008062:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8008064:	fb03 2304 	mla	r3, r3, r4, r2
 8008068:	9308      	str	r3, [sp, #32]
 800806a:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 800806e:	9312      	str	r3, [sp, #72]	; 0x48
 8008070:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8008072:	9325      	str	r3, [sp, #148]	; 0x94
 8008074:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008076:	932a      	str	r3, [sp, #168]	; 0xa8
 8008078:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800807a:	9318      	str	r3, [sp, #96]	; 0x60
 800807c:	9b5c      	ldr	r3, [sp, #368]	; 0x170
 800807e:	932d      	str	r3, [sp, #180]	; 0xb4
 8008080:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8008082:	9326      	str	r3, [sp, #152]	; 0x98
 8008084:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008086:	9328      	str	r3, [sp, #160]	; 0xa0
 8008088:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800808a:	9329      	str	r3, [sp, #164]	; 0xa4
 800808c:	9b65      	ldr	r3, [sp, #404]	; 0x194
 800808e:	9327      	str	r3, [sp, #156]	; 0x9c
 8008090:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8008092:	1e5a      	subs	r2, r3, #1
 8008094:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008098:	b292      	uxth	r2, r2
 800809a:	429a      	cmp	r2, r3
 800809c:	9225      	str	r2, [sp, #148]	; 0x94
 800809e:	f000 8172 	beq.w	8008386 <st_sssa8_ch_convolve+0x716>
 80080a2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80080a4:	9a41      	ldr	r2, [sp, #260]	; 0x104
 80080a6:	9942      	ldr	r1, [sp, #264]	; 0x108
 80080a8:	9340      	str	r3, [sp, #256]	; 0x100
 80080aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80080ac:	e9cd 213e 	strd	r2, r1, [sp, #248]	; 0xf8
 80080b0:	2b00      	cmp	r3, #0
 80080b2:	f000 813e 	beq.w	8008332 <st_sssa8_ch_convolve+0x6c2>
 80080b6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80080b8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80080ba:	4259      	negs	r1, r3
 80080bc:	2300      	movs	r3, #0
 80080be:	901e      	str	r0, [sp, #120]	; 0x78
 80080c0:	b289      	uxth	r1, r1
 80080c2:	9310      	str	r3, [sp, #64]	; 0x40
 80080c4:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 80080c8:	910a      	str	r1, [sp, #40]	; 0x28
 80080ca:	4619      	mov	r1, r3
 80080cc:	2a00      	cmp	r2, #0
 80080ce:	d15f      	bne.n	8008190 <st_sssa8_ch_convolve+0x520>
 80080d0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80080d2:	2a00      	cmp	r2, #0
 80080d4:	f040 80cc 	bne.w	8008270 <st_sssa8_ch_convolve+0x600>
 80080d8:	9a40      	ldr	r2, [sp, #256]	; 0x100
 80080da:	2001      	movs	r0, #1
 80080dc:	3a01      	subs	r2, #1
 80080de:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 80080e2:	9240      	str	r2, [sp, #256]	; 0x100
 80080e4:	9b08      	ldr	r3, [sp, #32]
 80080e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80080e8:	4293      	cmp	r3, r2
 80080ea:	dd3b      	ble.n	8008164 <st_sssa8_ch_convolve+0x4f4>
 80080ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80080ee:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80080f0:	f8dd 80ac 	ldr.w	r8, [sp, #172]	; 0xac
 80080f4:	fb01 2103 	mla	r1, r1, r3, r2
 80080f8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80080fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80080fe:	930e      	str	r3, [sp, #56]	; 0x38
 8008100:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008102:	4617      	mov	r7, r2
 8008104:	1ace      	subs	r6, r1, r3
 8008106:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008108:	429e      	cmp	r6, r3
 800810a:	dd25      	ble.n	8008158 <st_sssa8_ch_convolve+0x4e8>
 800810c:	f3c7 35c0 	ubfx	r5, r7, #15, #1
 8008110:	461c      	mov	r4, r3
 8008112:	469c      	mov	ip, r3
 8008114:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008116:	fb0b f102 	mul.w	r1, fp, r2
 800811a:	4293      	cmp	r3, r2
 800811c:	bfd8      	it	le
 800811e:	f045 0501 	orrle.w	r5, r5, #1
 8008122:	9709      	str	r7, [sp, #36]	; 0x24
 8008124:	910c      	str	r1, [sp, #48]	; 0x30
 8008126:	462f      	mov	r7, r5
 8008128:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800812a:	45e3      	cmp	fp, ip
 800812c:	4652      	mov	r2, sl
 800812e:	4649      	mov	r1, r9
 8008130:	4628      	mov	r0, r5
 8008132:	bfcc      	ite	gt
 8008134:	f04f 0e00 	movgt.w	lr, #0
 8008138:	f04f 0e01 	movle.w	lr, #1
 800813c:	ea5e 73d4 	orrs.w	r3, lr, r4, lsr #31
 8008140:	d101      	bne.n	8008146 <st_sssa8_ch_convolve+0x4d6>
 8008142:	2f00      	cmp	r7, #0
 8008144:	d033      	beq.n	80081ae <st_sssa8_ch_convolve+0x53e>
 8008146:	f003 f9b1 	bl	800b4ac <arm_fill_q15>
 800814a:	3401      	adds	r4, #1
 800814c:	44c1      	add	r9, r8
 800814e:	b224      	sxth	r4, r4
 8008150:	42b4      	cmp	r4, r6
 8008152:	46a4      	mov	ip, r4
 8008154:	dbe9      	blt.n	800812a <st_sssa8_ch_convolve+0x4ba>
 8008156:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8008158:	3701      	adds	r7, #1
 800815a:	9b08      	ldr	r3, [sp, #32]
 800815c:	b23f      	sxth	r7, r7
 800815e:	429f      	cmp	r7, r3
 8008160:	463a      	mov	r2, r7
 8008162:	dbd0      	blt.n	8008106 <st_sssa8_ch_convolve+0x496>
 8008164:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8008166:	454b      	cmp	r3, r9
 8008168:	f000 80ac 	beq.w	80082c4 <st_sssa8_ch_convolve+0x654>
 800816c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800816e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8008170:	9910      	ldr	r1, [sp, #64]	; 0x40
 8008172:	4403      	add	r3, r0
 8008174:	3101      	adds	r1, #1
 8008176:	461a      	mov	r2, r3
 8008178:	b20b      	sxth	r3, r1
 800817a:	b292      	uxth	r2, r2
 800817c:	9310      	str	r3, [sp, #64]	; 0x40
 800817e:	4619      	mov	r1, r3
 8008180:	920a      	str	r2, [sp, #40]	; 0x28
 8008182:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008184:	429a      	cmp	r2, r3
 8008186:	f340 80c0 	ble.w	800830a <st_sssa8_ch_convolve+0x69a>
 800818a:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 800818c:	2a00      	cmp	r2, #0
 800818e:	d09f      	beq.n	80080d0 <st_sssa8_ch_convolve+0x460>
 8008190:	3a01      	subs	r2, #1
 8008192:	2001      	movs	r0, #1
 8008194:	923e      	str	r2, [sp, #248]	; 0xf8
 8008196:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 800819a:	e7a3      	b.n	80080e4 <st_sssa8_ch_convolve+0x474>
 800819c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800819e:	eb03 000c 	add.w	r0, r3, ip
 80081a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80081a4:	fb0a 3000 	mla	r0, sl, r0, r3
 80081a8:	f001 fb66 	bl	8009878 <st_int8_to16_no_shift>
 80081ac:	e6b2      	b.n	8007f14 <st_sssa8_ch_convolve+0x2a4>
 80081ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80081b0:	eb03 000c 	add.w	r0, r3, ip
 80081b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80081b6:	fb0a 3000 	mla	r0, sl, r0, r3
 80081ba:	f001 fb5d 	bl	8009878 <st_int8_to16_no_shift>
 80081be:	e7c4      	b.n	800814a <st_sssa8_ch_convolve+0x4da>
 80081c0:	3a01      	subs	r2, #1
 80081c2:	2101      	movs	r1, #1
 80081c4:	923e      	str	r2, [sp, #248]	; 0xf8
 80081c6:	f8ad 111e 	strh.w	r1, [sp, #286]	; 0x11e
 80081ca:	e671      	b.n	8007eb0 <st_sssa8_ch_convolve+0x240>
 80081cc:	f8bd 111c 	ldrh.w	r1, [sp, #284]	; 0x11c
 80081d0:	3a01      	subs	r2, #1
 80081d2:	2901      	cmp	r1, #1
 80081d4:	923f      	str	r2, [sp, #252]	; 0xfc
 80081d6:	f8ad 111e 	strh.w	r1, [sp, #286]	; 0x11e
 80081da:	f43f ae69 	beq.w	8007eb0 <st_sssa8_ch_convolve+0x240>
 80081de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80081e0:	9e08      	ldr	r6, [sp, #32]
 80081e2:	f9bd 4028 	ldrsh.w	r4, [sp, #40]	; 0x28
 80081e6:	42b3      	cmp	r3, r6
 80081e8:	f6bf aea1 	bge.w	8007f2e <st_sssa8_ch_convolve+0x2be>
 80081ec:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80081f0:	461d      	mov	r5, r3
 80081f2:	970c      	str	r7, [sp, #48]	; 0x30
 80081f4:	4618      	mov	r0, r3
 80081f6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80081fa:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80081fc:	3501      	adds	r5, #1
 80081fe:	fb00 400b 	mla	r0, r0, fp, r4
 8008202:	9b07      	ldr	r3, [sp, #28]
 8008204:	4649      	mov	r1, r9
 8008206:	b22d      	sxth	r5, r5
 8008208:	fb0a 7000 	mla	r0, sl, r0, r7
 800820c:	4642      	mov	r2, r8
 800820e:	4499      	add	r9, r3
 8008210:	f001 fb32 	bl	8009878 <st_int8_to16_no_shift>
 8008214:	42b5      	cmp	r5, r6
 8008216:	4628      	mov	r0, r5
 8008218:	dbf0      	blt.n	80081fc <st_sssa8_ch_convolve+0x58c>
 800821a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800821c:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 8008220:	454b      	cmp	r3, r9
 8008222:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8008224:	f47f ae87 	bne.w	8007f36 <st_sssa8_ch_convolve+0x2c6>
 8008228:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800822a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800822c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800822e:	9965      	ldr	r1, [sp, #404]	; 0x194
 8008230:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008232:	9401      	str	r4, [sp, #4]
 8008234:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008236:	9305      	str	r3, [sp, #20]
 8008238:	9204      	str	r2, [sp, #16]
 800823a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800823c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800823e:	9103      	str	r1, [sp, #12]
 8008240:	9002      	str	r0, [sp, #8]
 8008242:	9914      	ldr	r1, [sp, #80]	; 0x50
 8008244:	981c      	ldr	r0, [sp, #112]	; 0x70
 8008246:	9400      	str	r4, [sp, #0]
 8008248:	f002 fac4 	bl	800a7d4 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 800824c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800824e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008250:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008252:	440b      	add	r3, r1
 8008254:	901d      	str	r0, [sp, #116]	; 0x74
 8008256:	3201      	adds	r2, #1
 8008258:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 800825c:	b29b      	uxth	r3, r3
 800825e:	b212      	sxth	r2, r2
 8008260:	930a      	str	r3, [sp, #40]	; 0x28
 8008262:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008264:	4615      	mov	r5, r2
 8008266:	9210      	str	r2, [sp, #64]	; 0x40
 8008268:	4293      	cmp	r3, r2
 800826a:	f73f ae13 	bgt.w	8007e94 <st_sssa8_ch_convolve+0x224>
 800826e:	e670      	b.n	8007f52 <st_sssa8_ch_convolve+0x2e2>
 8008270:	f8bd 011c 	ldrh.w	r0, [sp, #284]	; 0x11c
 8008274:	3a01      	subs	r2, #1
 8008276:	2801      	cmp	r0, #1
 8008278:	923f      	str	r2, [sp, #252]	; 0xfc
 800827a:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 800827e:	f43f af31 	beq.w	80080e4 <st_sssa8_ch_convolve+0x474>
 8008282:	9f08      	ldr	r7, [sp, #32]
 8008284:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008286:	f9bd 4028 	ldrsh.w	r4, [sp, #40]	; 0x28
 800828a:	4297      	cmp	r7, r2
 800828c:	f77f af6a 	ble.w	8008164 <st_sssa8_ch_convolve+0x4f4>
 8008290:	464e      	mov	r6, r9
 8008292:	4615      	mov	r5, r2
 8008294:	4610      	mov	r0, r2
 8008296:	f8dd 9074 	ldr.w	r9, [sp, #116]	; 0x74
 800829a:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800829e:	3501      	adds	r5, #1
 80082a0:	fb00 400b 	mla	r0, r0, fp, r4
 80082a4:	4631      	mov	r1, r6
 80082a6:	9a07      	ldr	r2, [sp, #28]
 80082a8:	b22d      	sxth	r5, r5
 80082aa:	fb0a 8000 	mla	r0, sl, r0, r8
 80082ae:	f001 fae3 	bl	8009878 <st_int8_to16_no_shift>
 80082b2:	444e      	add	r6, r9
 80082b4:	42bd      	cmp	r5, r7
 80082b6:	4628      	mov	r0, r5
 80082b8:	dbf1      	blt.n	800829e <st_sssa8_ch_convolve+0x62e>
 80082ba:	46b1      	mov	r9, r6
 80082bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80082be:	454b      	cmp	r3, r9
 80082c0:	f47f af54 	bne.w	800816c <st_sssa8_ch_convolve+0x4fc>
 80082c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80082c6:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80082c8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80082ca:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80082cc:	9204      	str	r2, [sp, #16]
 80082ce:	9401      	str	r4, [sp, #4]
 80082d0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80082d2:	9305      	str	r3, [sp, #20]
 80082d4:	9002      	str	r0, [sp, #8]
 80082d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80082d8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80082da:	9400      	str	r4, [sp, #0]
 80082dc:	e9dd 1227 	ldrd	r1, r2, [sp, #156]	; 0x9c
 80082e0:	9103      	str	r1, [sp, #12]
 80082e2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80082e4:	f002 fa76 	bl	800a7d4 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 80082e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80082ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80082ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80082ee:	440b      	add	r3, r1
 80082f0:	901e      	str	r0, [sp, #120]	; 0x78
 80082f2:	3201      	adds	r2, #1
 80082f4:	b29b      	uxth	r3, r3
 80082f6:	b212      	sxth	r2, r2
 80082f8:	930a      	str	r3, [sp, #40]	; 0x28
 80082fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80082fc:	4611      	mov	r1, r2
 80082fe:	9210      	str	r2, [sp, #64]	; 0x40
 8008300:	4293      	cmp	r3, r2
 8008302:	dd16      	ble.n	8008332 <st_sssa8_ch_convolve+0x6c2>
 8008304:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 8008308:	e73f      	b.n	800818a <st_sssa8_ch_convolve+0x51a>
 800830a:	9914      	ldr	r1, [sp, #80]	; 0x50
 800830c:	4589      	cmp	r9, r1
 800830e:	d010      	beq.n	8008332 <st_sssa8_ch_convolve+0x6c2>
 8008310:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8008312:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8008314:	9204      	str	r2, [sp, #16]
 8008316:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008318:	9401      	str	r4, [sp, #4]
 800831a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800831c:	9305      	str	r3, [sp, #20]
 800831e:	9400      	str	r4, [sp, #0]
 8008320:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008322:	e9dd 0227 	ldrd	r0, r2, [sp, #156]	; 0x9c
 8008326:	9003      	str	r0, [sp, #12]
 8008328:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800832a:	9002      	str	r0, [sp, #8]
 800832c:	981c      	ldr	r0, [sp, #112]	; 0x70
 800832e:	f002 fd19 	bl	800ad64 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8008332:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008334:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8008336:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8008338:	1a9b      	subs	r3, r3, r2
 800833a:	4608      	mov	r0, r1
 800833c:	b29b      	uxth	r3, r3
 800833e:	4410      	add	r0, r2
 8008340:	429a      	cmp	r2, r3
 8008342:	932a      	str	r3, [sp, #168]	; 0xa8
 8008344:	9023      	str	r0, [sp, #140]	; 0x8c
 8008346:	bf28      	it	cs
 8008348:	461a      	movcs	r2, r3
 800834a:	b294      	uxth	r4, r2
 800834c:	b90c      	cbnz	r4, 8008352 <st_sssa8_ch_convolve+0x6e2>
 800834e:	9418      	str	r4, [sp, #96]	; 0x60
 8008350:	e69e      	b.n	8008090 <st_sssa8_ch_convolve+0x420>
 8008352:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008354:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8008356:	4619      	mov	r1, r3
 8008358:	009d      	lsls	r5, r3, #2
 800835a:	982d      	ldr	r0, [sp, #180]	; 0xb4
 800835c:	eb06 0141 	add.w	r1, r6, r1, lsl #1
 8008360:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8008362:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8008364:	442e      	add	r6, r5
 8008366:	9129      	str	r1, [sp, #164]	; 0xa4
 8008368:	fb02 0003 	mla	r0, r2, r3, r0
 800836c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800836e:	9628      	str	r6, [sp, #160]	; 0xa0
 8008370:	4623      	mov	r3, r4
 8008372:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8008374:	902d      	str	r0, [sp, #180]	; 0xb4
 8008376:	442e      	add	r6, r5
 8008378:	9627      	str	r6, [sp, #156]	; 0x9c
 800837a:	9e26      	ldr	r6, [sp, #152]	; 0x98
 800837c:	442e      	add	r6, r5
 800837e:	9626      	str	r6, [sp, #152]	; 0x98
 8008380:	f001 fb1c 	bl	80099bc <st_int8_to16_dual>
 8008384:	e7e3      	b.n	800834e <st_sssa8_ch_convolve+0x6de>
 8008386:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8008388:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800838a:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 800838c:	440b      	add	r3, r1
 800838e:	3201      	adds	r2, #1
 8008390:	b29b      	uxth	r3, r3
 8008392:	b212      	sxth	r2, r2
 8008394:	932f      	str	r3, [sp, #188]	; 0xbc
 8008396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008398:	4614      	mov	r4, r2
 800839a:	9230      	str	r2, [sp, #192]	; 0xc0
 800839c:	4293      	cmp	r3, r2
 800839e:	f73f ae4c 	bgt.w	800803a <st_sssa8_ch_convolve+0x3ca>
 80083a2:	2000      	movs	r0, #0
 80083a4:	b053      	add	sp, #332	; 0x14c
 80083a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80083ac:	2b00      	cmp	r3, #0
 80083ae:	d0f8      	beq.n	80083a2 <st_sssa8_ch_convolve+0x732>
 80083b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80083b2:	2400      	movs	r4, #0
 80083b4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80083b6:	005b      	lsls	r3, r3, #1
 80083b8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80083ba:	fb00 f109 	mul.w	r1, r0, r9
 80083be:	fb00 f303 	mul.w	r3, r0, r3
 80083c2:	9807      	ldr	r0, [sp, #28]
 80083c4:	4252      	negs	r2, r2
 80083c6:	9116      	str	r1, [sp, #88]	; 0x58
 80083c8:	1a28      	subs	r0, r5, r0
 80083ca:	941c      	str	r4, [sp, #112]	; 0x70
 80083cc:	901d      	str	r0, [sp, #116]	; 0x74
 80083ce:	fa0f f08b 	sxth.w	r0, fp
 80083d2:	901e      	str	r0, [sp, #120]	; 0x78
 80083d4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80083d6:	fb0a 0303 	mla	r3, sl, r3, r0
 80083da:	4683      	mov	fp, r0
 80083dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80083de:	004b      	lsls	r3, r1, #1
 80083e0:	9307      	str	r3, [sp, #28]
 80083e2:	b293      	uxth	r3, r2
 80083e4:	9318      	str	r3, [sp, #96]	; 0x60
 80083e6:	a83e      	add	r0, sp, #248	; 0xf8
 80083e8:	f000 fe80 	bl	80090ec <ai_padding_opt_phase1>
 80083ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80083ee:	2b00      	cmp	r3, #0
 80083f0:	d070      	beq.n	80084d4 <st_sssa8_ch_convolve+0x864>
 80083f2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80083f4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80083f6:	f9bd 0060 	ldrsh.w	r0, [sp, #96]	; 0x60
 80083fa:	1a99      	subs	r1, r3, r2
 80083fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80083fe:	9012      	str	r0, [sp, #72]	; 0x48
 8008400:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8008402:	425a      	negs	r2, r3
 8008404:	2300      	movs	r3, #0
 8008406:	fb00 1104 	mla	r1, r0, r4, r1
 800840a:	b292      	uxth	r2, r2
 800840c:	9310      	str	r3, [sp, #64]	; 0x40
 800840e:	9108      	str	r1, [sp, #32]
 8008410:	4619      	mov	r1, r3
 8008412:	920a      	str	r2, [sp, #40]	; 0x28
 8008414:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 8008416:	2a00      	cmp	r2, #0
 8008418:	f040 80fc 	bne.w	8008614 <st_sssa8_ch_convolve+0x9a4>
 800841c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800841e:	2a00      	cmp	r2, #0
 8008420:	f040 80fe 	bne.w	8008620 <st_sssa8_ch_convolve+0x9b0>
 8008424:	9a40      	ldr	r2, [sp, #256]	; 0x100
 8008426:	2001      	movs	r0, #1
 8008428:	3a01      	subs	r2, #1
 800842a:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 800842e:	9240      	str	r2, [sp, #256]	; 0x100
 8008430:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008432:	9a08      	ldr	r2, [sp, #32]
 8008434:	4293      	cmp	r3, r2
 8008436:	da3b      	bge.n	80084b0 <st_sssa8_ch_convolve+0x840>
 8008438:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800843a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800843c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800843e:	fb01 2103 	mla	r1, r1, r3, r2
 8008442:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8008446:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8008448:	930e      	str	r3, [sp, #56]	; 0x38
 800844a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800844c:	1a8d      	subs	r5, r1, r2
 800844e:	461e      	mov	r6, r3
 8008450:	461a      	mov	r2, r3
 8008452:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008454:	42a9      	cmp	r1, r5
 8008456:	da25      	bge.n	80084a4 <st_sssa8_ch_convolve+0x834>
 8008458:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800845a:	460c      	mov	r4, r1
 800845c:	9609      	str	r6, [sp, #36]	; 0x24
 800845e:	468c      	mov	ip, r1
 8008460:	4293      	cmp	r3, r2
 8008462:	fb02 f208 	mul.w	r2, r2, r8
 8008466:	bfcc      	ite	gt
 8008468:	2300      	movgt	r3, #0
 800846a:	2301      	movle	r3, #1
 800846c:	920c      	str	r2, [sp, #48]	; 0x30
 800846e:	ea43 73d6 	orr.w	r3, r3, r6, lsr #31
 8008472:	461e      	mov	r6, r3
 8008474:	45e0      	cmp	r8, ip
 8008476:	464a      	mov	r2, r9
 8008478:	4659      	mov	r1, fp
 800847a:	4638      	mov	r0, r7
 800847c:	bfcc      	ite	gt
 800847e:	f04f 0e00 	movgt.w	lr, #0
 8008482:	f04f 0e01 	movle.w	lr, #1
 8008486:	ea5e 73d4 	orrs.w	r3, lr, r4, lsr #31
 800848a:	d102      	bne.n	8008492 <st_sssa8_ch_convolve+0x822>
 800848c:	2e00      	cmp	r6, #0
 800848e:	f000 80b8 	beq.w	8008602 <st_sssa8_ch_convolve+0x992>
 8008492:	f003 f80b 	bl	800b4ac <arm_fill_q15>
 8008496:	3401      	adds	r4, #1
 8008498:	44d3      	add	fp, sl
 800849a:	b224      	sxth	r4, r4
 800849c:	42ac      	cmp	r4, r5
 800849e:	46a4      	mov	ip, r4
 80084a0:	dbe8      	blt.n	8008474 <st_sssa8_ch_convolve+0x804>
 80084a2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80084a4:	3601      	adds	r6, #1
 80084a6:	9b08      	ldr	r3, [sp, #32]
 80084a8:	b236      	sxth	r6, r6
 80084aa:	429e      	cmp	r6, r3
 80084ac:	4632      	mov	r2, r6
 80084ae:	dbd0      	blt.n	8008452 <st_sssa8_ch_convolve+0x7e2>
 80084b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80084b2:	455b      	cmp	r3, fp
 80084b4:	f000 80e4 	beq.w	8008680 <st_sssa8_ch_convolve+0xa10>
 80084b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80084ba:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80084bc:	9910      	ldr	r1, [sp, #64]	; 0x40
 80084be:	4403      	add	r3, r0
 80084c0:	3101      	adds	r1, #1
 80084c2:	461a      	mov	r2, r3
 80084c4:	b20b      	sxth	r3, r1
 80084c6:	b292      	uxth	r2, r2
 80084c8:	9310      	str	r3, [sp, #64]	; 0x40
 80084ca:	4619      	mov	r1, r3
 80084cc:	920a      	str	r2, [sp, #40]	; 0x28
 80084ce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80084d0:	429a      	cmp	r2, r3
 80084d2:	dc9f      	bgt.n	8008414 <st_sssa8_ch_convolve+0x7a4>
 80084d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80084d6:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80084d8:	991c      	ldr	r1, [sp, #112]	; 0x70
 80084da:	4403      	add	r3, r0
 80084dc:	3101      	adds	r1, #1
 80084de:	461a      	mov	r2, r3
 80084e0:	b20b      	sxth	r3, r1
 80084e2:	b292      	uxth	r2, r2
 80084e4:	931c      	str	r3, [sp, #112]	; 0x70
 80084e6:	461c      	mov	r4, r3
 80084e8:	9218      	str	r2, [sp, #96]	; 0x60
 80084ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80084ec:	429a      	cmp	r2, r3
 80084ee:	f73f af7a 	bgt.w	80083e6 <st_sssa8_ch_convolve+0x776>
 80084f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80084f4:	455a      	cmp	r2, fp
 80084f6:	f43f af54 	beq.w	80083a2 <st_sssa8_ch_convolve+0x732>
 80084fa:	9919      	ldr	r1, [sp, #100]	; 0x64
 80084fc:	2900      	cmp	r1, #0
 80084fe:	f43f af50 	beq.w	80083a2 <st_sssa8_ch_convolve+0x732>
 8008502:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008504:	981a      	ldr	r0, [sp, #104]	; 0x68
 8008506:	1f1d      	subs	r5, r3, #4
 8008508:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800850a:	ea4f 0a90 	mov.w	sl, r0, lsr #2
 800850e:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8008510:	1e9e      	subs	r6, r3, #2
 8008512:	9b65      	ldr	r3, [sp, #404]	; 0x194
 8008514:	f1a4 0b04 	sub.w	fp, r4, #4
 8008518:	9c69      	ldr	r4, [sp, #420]	; 0x1a4
 800851a:	f1a3 0904 	sub.w	r9, r3, #4
 800851e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8008522:	4421      	add	r1, r4
 8008524:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8008528:	b29b      	uxth	r3, r3
 800852a:	f000 0803 	and.w	r8, r0, #3
 800852e:	9108      	str	r1, [sp, #32]
 8008530:	3301      	adds	r3, #1
 8008532:	f8df c1d4 	ldr.w	ip, [pc, #468]	; 8008708 <st_sssa8_ch_convolve+0xa98>
 8008536:	9f5c      	ldr	r7, [sp, #368]	; 0x170
 8008538:	0099      	lsls	r1, r3, #2
 800853a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800853e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008540:	9109      	str	r1, [sp, #36]	; 0x24
 8008542:	9307      	str	r3, [sp, #28]
 8008544:	f855 3f04 	ldr.w	r3, [r5, #4]!
 8008548:	2a00      	cmp	r2, #0
 800854a:	d058      	beq.n	80085fe <st_sssa8_ch_convolve+0x98e>
 800854c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800854e:	f8dd e050 	ldr.w	lr, [sp, #80]	; 0x50
 8008552:	eb07 0a02 	add.w	sl, r7, r2
 8008556:	f857 2b04 	ldr.w	r2, [r7], #4
 800855a:	fa2f f482 	sxtb16	r4, r2
 800855e:	b2a0      	uxth	r0, r4
 8008560:	f8de 1000 	ldr.w	r1, [lr]
 8008564:	ea4f 2232 	mov.w	r2, r2, ror #8
 8008568:	fa2f f282 	sxtb16	r2, r2
 800856c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8008570:	fb20 3101 	smlad	r1, r0, r1, r3
 8008574:	ea02 030c 	and.w	r3, r2, ip
 8008578:	f10e 0e08 	add.w	lr, lr, #8
 800857c:	f85e 2c04 	ldr.w	r2, [lr, #-4]
 8008580:	ea43 4314 	orr.w	r3, r3, r4, lsr #16
 8008584:	fb23 1302 	smlad	r3, r3, r2, r1
 8008588:	4557      	cmp	r7, sl
 800858a:	d1e4      	bne.n	8008556 <st_sssa8_ch_convolve+0x8e6>
 800858c:	9a07      	ldr	r2, [sp, #28]
 800858e:	f1b8 0f00 	cmp.w	r8, #0
 8008592:	d017      	beq.n	80085c4 <st_sssa8_ch_convolve+0x954>
 8008594:	f997 1000 	ldrsb.w	r1, [r7]
 8008598:	f1b8 0f01 	cmp.w	r8, #1
 800859c:	8810      	ldrh	r0, [r2, #0]
 800859e:	fb10 3301 	smlabb	r3, r0, r1, r3
 80085a2:	f000 80a7 	beq.w	80086f4 <st_sssa8_ch_convolve+0xa84>
 80085a6:	f997 1001 	ldrsb.w	r1, [r7, #1]
 80085aa:	f1b8 0f02 	cmp.w	r8, #2
 80085ae:	8850      	ldrh	r0, [r2, #2]
 80085b0:	fb10 3301 	smlabb	r3, r0, r1, r3
 80085b4:	f000 80a0 	beq.w	80086f8 <st_sssa8_ch_convolve+0xa88>
 80085b8:	8891      	ldrh	r1, [r2, #4]
 80085ba:	3703      	adds	r7, #3
 80085bc:	f917 2c01 	ldrsb.w	r2, [r7, #-1]
 80085c0:	fb11 3302 	smlabb	r3, r1, r2, r3
 80085c4:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 80085c6:	f936 0f02 	ldrsh.w	r0, [r6, #2]!
 80085ca:	3201      	adds	r2, #1
 80085cc:	f859 1f04 	ldr.w	r1, [r9, #4]!
 80085d0:	2800      	cmp	r0, #0
 80085d2:	9269      	str	r2, [sp, #420]	; 0x1a4
 80085d4:	f85b 2f04 	ldr.w	r2, [fp, #4]!
 80085d8:	dd74      	ble.n	80086c4 <st_sssa8_ch_convolve+0xa54>
 80085da:	005b      	lsls	r3, r3, #1
 80085dc:	fb53 2301 	smmla	r3, r3, r1, r2
 80085e0:	4103      	asrs	r3, r0
 80085e2:	f303 0307 	ssat	r3, #8, r3
 80085e6:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 80085e8:	f802 3c01 	strb.w	r3, [r2, #-1]
 80085ec:	9b08      	ldr	r3, [sp, #32]
 80085ee:	4293      	cmp	r3, r2
 80085f0:	f43f aed7 	beq.w	80083a2 <st_sssa8_ch_convolve+0x732>
 80085f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80085f6:	f855 3f04 	ldr.w	r3, [r5, #4]!
 80085fa:	2a00      	cmp	r2, #0
 80085fc:	d1a6      	bne.n	800854c <st_sssa8_ch_convolve+0x8dc>
 80085fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008600:	e7c5      	b.n	800858e <st_sssa8_ch_convolve+0x91e>
 8008602:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008604:	eb03 000c 	add.w	r0, r3, ip
 8008608:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800860a:	fb09 3000 	mla	r0, r9, r0, r3
 800860e:	f001 f933 	bl	8009878 <st_int8_to16_no_shift>
 8008612:	e740      	b.n	8008496 <st_sssa8_ch_convolve+0x826>
 8008614:	3a01      	subs	r2, #1
 8008616:	2001      	movs	r0, #1
 8008618:	923e      	str	r2, [sp, #248]	; 0xf8
 800861a:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 800861e:	e707      	b.n	8008430 <st_sssa8_ch_convolve+0x7c0>
 8008620:	f8bd 011c 	ldrh.w	r0, [sp, #284]	; 0x11c
 8008624:	3a01      	subs	r2, #1
 8008626:	2801      	cmp	r0, #1
 8008628:	923f      	str	r2, [sp, #252]	; 0xfc
 800862a:	f8ad 011e 	strh.w	r0, [sp, #286]	; 0x11e
 800862e:	f43f aeff 	beq.w	8008430 <st_sssa8_ch_convolve+0x7c0>
 8008632:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008634:	9f08      	ldr	r7, [sp, #32]
 8008636:	f9bd 4028 	ldrsh.w	r4, [sp, #40]	; 0x28
 800863a:	42bb      	cmp	r3, r7
 800863c:	f6bf af38 	bge.w	80084b0 <st_sssa8_ch_convolve+0x840>
 8008640:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8008644:	461d      	mov	r5, r3
 8008646:	46ca      	mov	sl, r9
 8008648:	4618      	mov	r0, r3
 800864a:	46c1      	mov	r9, r8
 800864c:	9e16      	ldr	r6, [sp, #88]	; 0x58
 800864e:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8008652:	3501      	adds	r5, #1
 8008654:	fb00 4009 	mla	r0, r0, r9, r4
 8008658:	9b07      	ldr	r3, [sp, #28]
 800865a:	4659      	mov	r1, fp
 800865c:	b22d      	sxth	r5, r5
 800865e:	fb0a 8000 	mla	r0, sl, r0, r8
 8008662:	4632      	mov	r2, r6
 8008664:	449b      	add	fp, r3
 8008666:	f001 f907 	bl	8009878 <st_int8_to16_no_shift>
 800866a:	42bd      	cmp	r5, r7
 800866c:	4628      	mov	r0, r5
 800866e:	dbf0      	blt.n	8008652 <st_sssa8_ch_convolve+0x9e2>
 8008670:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008672:	46c8      	mov	r8, r9
 8008674:	46d1      	mov	r9, sl
 8008676:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 800867a:	455b      	cmp	r3, fp
 800867c:	f47f af1c 	bne.w	80084b8 <st_sssa8_ch_convolve+0x848>
 8008680:	9b69      	ldr	r3, [sp, #420]	; 0x1a4
 8008682:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8008684:	9965      	ldr	r1, [sp, #404]	; 0x194
 8008686:	9821      	ldr	r0, [sp, #132]	; 0x84
 8008688:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800868a:	9304      	str	r3, [sp, #16]
 800868c:	9203      	str	r2, [sp, #12]
 800868e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008690:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008692:	9102      	str	r1, [sp, #8]
 8008694:	9001      	str	r0, [sp, #4]
 8008696:	9914      	ldr	r1, [sp, #80]	; 0x50
 8008698:	985c      	ldr	r0, [sp, #368]	; 0x170
 800869a:	9400      	str	r4, [sp, #0]
 800869c:	f000 fd60 	bl	8009160 <st_sssa8_ch_nn_mat_mult_kernel>
 80086a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80086a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80086a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80086a6:	440b      	add	r3, r1
 80086a8:	9069      	str	r0, [sp, #420]	; 0x1a4
 80086aa:	3201      	adds	r2, #1
 80086ac:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
 80086b0:	b29b      	uxth	r3, r3
 80086b2:	b212      	sxth	r2, r2
 80086b4:	930a      	str	r3, [sp, #40]	; 0x28
 80086b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80086b8:	4611      	mov	r1, r2
 80086ba:	9210      	str	r2, [sp, #64]	; 0x40
 80086bc:	4293      	cmp	r3, r2
 80086be:	f73f aea9 	bgt.w	8008414 <st_sssa8_ch_convolve+0x7a4>
 80086c2:	e707      	b.n	80084d4 <st_sssa8_ch_convolve+0x864>
 80086c4:	f1c0 0001 	rsb	r0, r0, #1
 80086c8:	4083      	lsls	r3, r0
 80086ca:	f303 031f 	ssat	r3, #32, r3
 80086ce:	fb53 f311 	smmulr	r3, r3, r1
 80086d2:	4413      	add	r3, r2
 80086d4:	f303 0307 	ssat	r3, #8, r3
 80086d8:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 80086da:	f802 3c01 	strb.w	r3, [r2, #-1]
 80086de:	e785      	b.n	80085ec <st_sssa8_ch_convolve+0x97c>
 80086e0:	4611      	mov	r1, r2
 80086e2:	985c      	ldr	r0, [sp, #368]	; 0x170
 80086e4:	e9dd 3219 	ldrd	r3, r2, [sp, #100]	; 0x64
 80086e8:	f001 f968 	bl	80099bc <st_int8_to16_dual>
 80086ec:	2301      	movs	r3, #1
 80086ee:	932e      	str	r3, [sp, #184]	; 0xb8
 80086f0:	f7ff bb4a 	b.w	8007d88 <st_sssa8_ch_convolve+0x118>
 80086f4:	3701      	adds	r7, #1
 80086f6:	e765      	b.n	80085c4 <st_sssa8_ch_convolve+0x954>
 80086f8:	3702      	adds	r7, #2
 80086fa:	e763      	b.n	80085c4 <st_sssa8_ch_convolve+0x954>
 80086fc:	4615      	mov	r5, r2
 80086fe:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
 8008702:	463e      	mov	r6, r7
 8008704:	f7ff bb0e 	b.w	8007d24 <st_sssa8_ch_convolve+0xb4>
 8008708:	ffff0000 	.word	0xffff0000

0800870c <st_sssa8_ch_convolve_rgb>:
 800870c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008710:	b0cb      	sub	sp, #300	; 0x12c
 8008712:	468b      	mov	fp, r1
 8008714:	2a03      	cmp	r2, #3
 8008716:	931f      	str	r3, [sp, #124]	; 0x7c
 8008718:	f8bd 3158 	ldrh.w	r3, [sp, #344]	; 0x158
 800871c:	f8bd 1150 	ldrh.w	r1, [sp, #336]	; 0x150
 8008720:	9310      	str	r3, [sp, #64]	; 0x40
 8008722:	f8bd 315c 	ldrh.w	r3, [sp, #348]	; 0x15c
 8008726:	f8bd 4154 	ldrh.w	r4, [sp, #340]	; 0x154
 800872a:	930a      	str	r3, [sp, #40]	; 0x28
 800872c:	f99d 316c 	ldrsb.w	r3, [sp, #364]	; 0x16c
 8008730:	9115      	str	r1, [sp, #84]	; 0x54
 8008732:	931d      	str	r3, [sp, #116]	; 0x74
 8008734:	f8bd 3178 	ldrh.w	r3, [sp, #376]	; 0x178
 8008738:	940f      	str	r4, [sp, #60]	; 0x3c
 800873a:	930e      	str	r3, [sp, #56]	; 0x38
 800873c:	9d5a      	ldr	r5, [sp, #360]	; 0x168
 800873e:	f99d e170 	ldrsb.w	lr, [sp, #368]	; 0x170
 8008742:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
 8008744:	f040 83d8 	bne.w	8008ef8 <st_sssa8_ch_convolve_rgb+0x7ec>
 8008748:	4606      	mov	r6, r0
 800874a:	4608      	mov	r0, r1
 800874c:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8008750:	ebc0 7240 	rsb	r2, r0, r0, lsl #29
 8008754:	eb03 0741 	add.w	r7, r3, r1, lsl #1
 8008758:	fb14 f304 	smulbb	r3, r4, r4
 800875c:	ea4f 0880 	mov.w	r8, r0, lsl #2
 8008760:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 8008764:	9711      	str	r7, [sp, #68]	; 0x44
 8008766:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800876a:	9221      	str	r2, [sp, #132]	; 0x84
 800876c:	4442      	add	r2, r8
 800876e:	b29b      	uxth	r3, r3
 8008770:	9222      	str	r2, [sp, #136]	; 0x88
 8008772:	9316      	str	r3, [sp, #88]	; 0x58
 8008774:	2800      	cmp	r0, #0
 8008776:	f000 83bc 	beq.w	8008ef2 <st_sssa8_ch_convolve_rgb+0x7e6>
 800877a:	0047      	lsls	r7, r0, #1
 800877c:	4629      	mov	r1, r5
 800877e:	1f14      	subs	r4, r2, #4
 8008780:	f04f 0c01 	mov.w	ip, #1
 8008784:	443d      	add	r5, r7
 8008786:	f931 3b02 	ldrsh.w	r3, [r1], #2
 800878a:	fa0c f003 	lsl.w	r0, ip, r3
 800878e:	fa0e f203 	lsl.w	r2, lr, r3
 8008792:	2b00      	cmp	r3, #0
 8008794:	eb02 0250 	add.w	r2, r2, r0, lsr #1
 8008798:	f340 81e4 	ble.w	8008b64 <st_sssa8_ch_convolve_rgb+0x458>
 800879c:	428d      	cmp	r5, r1
 800879e:	f844 2f04 	str.w	r2, [r4, #4]!
 80087a2:	d1f0      	bne.n	8008786 <st_sssa8_ch_convolve_rgb+0x7a>
 80087a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80087a6:	eb03 0408 	add.w	r4, r3, r8
 80087aa:	1bed      	subs	r5, r5, r7
 80087ac:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80087ae:	a932      	add	r1, sp, #200	; 0xc8
 80087b0:	ab2e      	add	r3, sp, #184	; 0xb8
 80087b2:	9523      	str	r5, [sp, #140]	; 0x8c
 80087b4:	aa2a      	add	r2, sp, #168	; 0xa8
 80087b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80087b8:	a836      	add	r0, sp, #216	; 0xd8
 80087ba:	9744      	str	r7, [sp, #272]	; 0x110
 80087bc:	9745      	str	r7, [sp, #276]	; 0x114
 80087be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80087c0:	9100      	str	r1, [sp, #0]
 80087c2:	a940      	add	r1, sp, #256	; 0x100
 80087c4:	9742      	str	r7, [sp, #264]	; 0x108
 80087c6:	9743      	str	r7, [sp, #268]	; 0x10c
 80087c8:	e9cd 552f 	strd	r5, r5, [sp, #188]	; 0xbc
 80087cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80087ce:	e9cd bb2b 	strd	fp, fp, [sp, #172]	; 0xac
 80087d2:	e9cd 5533 	strd	r5, r5, [sp, #204]	; 0xcc
 80087d6:	f000 fc2f 	bl	8009038 <ai_padding_opt_init>
 80087da:	9911      	ldr	r1, [sp, #68]	; 0x44
 80087dc:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 80087e0:	e9dd 2015 	ldrd	r2, r0, [sp, #84]	; 0x54
 80087e4:	005b      	lsls	r3, r3, #1
 80087e6:	fb02 f200 	mul.w	r2, r2, r0
 80087ea:	fb05 f303 	mul.w	r3, r5, r3
 80087ee:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
 80087f2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80087f6:	930d      	str	r3, [sp, #52]	; 0x34
 80087f8:	f340 8371 	ble.w	8008ede <st_sssa8_ch_convolve_rgb+0x7d2>
 80087fc:	2300      	movs	r3, #0
 80087fe:	4602      	mov	r2, r0
 8008800:	9328      	str	r3, [sp, #160]	; 0xa0
 8008802:	f44f 6320 	mov.w	r3, #2560	; 0xa00
 8008806:	fb93 f3f2 	sdiv	r3, r3, r2
 800880a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800880c:	f023 0301 	bic.w	r3, r3, #1
 8008810:	4293      	cmp	r3, r2
 8008812:	bf28      	it	cs
 8008814:	4613      	movcs	r3, r2
 8008816:	2b01      	cmp	r3, #1
 8008818:	9324      	str	r3, [sp, #144]	; 0x90
 800881a:	f240 81ae 	bls.w	8008b7a <st_sssa8_ch_convolve_rgb+0x46e>
 800881e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8008820:	4613      	mov	r3, r2
 8008822:	fbb2 f2f1 	udiv	r2, r2, r1
 8008826:	fb01 3312 	mls	r3, r1, r2, r3
 800882a:	b292      	uxth	r2, r2
 800882c:	b29b      	uxth	r3, r3
 800882e:	9229      	str	r2, [sp, #164]	; 0xa4
 8008830:	2b00      	cmp	r3, #0
 8008832:	f040 819d 	bne.w	8008b70 <st_sssa8_ch_convolve_rgb+0x464>
 8008836:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008838:	2b00      	cmp	r3, #0
 800883a:	f000 818b 	beq.w	8008b54 <st_sssa8_ch_convolve_rgb+0x448>
 800883e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008840:	2500      	movs	r5, #0
 8008842:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008844:	4253      	negs	r3, r2
 8008846:	4f99      	ldr	r7, [pc, #612]	; (8008aac <st_sssa8_ch_convolve_rgb+0x3a0>)
 8008848:	1a8a      	subs	r2, r1, r2
 800884a:	9527      	str	r5, [sp, #156]	; 0x9c
 800884c:	b29b      	uxth	r3, r3
 800884e:	9226      	str	r2, [sp, #152]	; 0x98
 8008850:	931e      	str	r3, [sp, #120]	; 0x78
 8008852:	9325      	str	r3, [sp, #148]	; 0x94
 8008854:	a836      	add	r0, sp, #216	; 0xd8
 8008856:	f000 fc49 	bl	80090ec <ai_padding_opt_phase1>
 800885a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800885c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800885e:	fb05 f303 	mul.w	r3, r5, r3
 8008862:	995d      	ldr	r1, [sp, #372]	; 0x174
 8008864:	fb02 1303 	mla	r3, r2, r3, r1
 8008868:	9314      	str	r3, [sp, #80]	; 0x50
 800886a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800886c:	b92b      	cbnz	r3, 800887a <st_sssa8_ch_convolve_rgb+0x16e>
 800886e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8008870:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008872:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008874:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008876:	f001 f8a1 	bl	80099bc <st_int8_to16_dual>
 800887a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800887c:	46d9      	mov	r9, fp
 800887e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8008880:	46b2      	mov	sl, r6
 8008882:	fb03 2505 	mla	r5, r3, r5, r2
 8008886:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 800888a:	930b      	str	r3, [sp, #44]	; 0x2c
 800888c:	46ab      	mov	fp, r5
 800888e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008890:	9317      	str	r3, [sp, #92]	; 0x5c
 8008892:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008894:	931c      	str	r3, [sp, #112]	; 0x70
 8008896:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8008898:	9312      	str	r3, [sp, #72]	; 0x48
 800889a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800889c:	9320      	str	r3, [sp, #128]	; 0x80
 800889e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80088a0:	931b      	str	r3, [sp, #108]	; 0x6c
 80088a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80088a4:	931a      	str	r3, [sp, #104]	; 0x68
 80088a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80088a8:	9318      	str	r3, [sp, #96]	; 0x60
 80088aa:	9b59      	ldr	r3, [sp, #356]	; 0x164
 80088ac:	9319      	str	r3, [sp, #100]	; 0x64
 80088ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80088b0:	1e5a      	subs	r2, r3, #1
 80088b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80088b6:	b292      	uxth	r2, r2
 80088b8:	429a      	cmp	r2, r3
 80088ba:	9217      	str	r2, [sp, #92]	; 0x5c
 80088bc:	f000 813a 	beq.w	8008b34 <st_sssa8_ch_convolve_rgb+0x428>
 80088c0:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 80088c2:	2600      	movs	r6, #0
 80088c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80088c6:	9238      	str	r2, [sp, #224]	; 0xe0
 80088c8:	464a      	mov	r2, r9
 80088ca:	9306      	str	r3, [sp, #24]
 80088cc:	46d9      	mov	r9, fp
 80088ce:	9609      	str	r6, [sp, #36]	; 0x24
 80088d0:	4693      	mov	fp, r2
 80088d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80088d4:	e9dd 0139 	ldrd	r0, r1, [sp, #228]	; 0xe4
 80088d8:	e9cd 0136 	strd	r0, r1, [sp, #216]	; 0xd8
 80088dc:	9914      	ldr	r1, [sp, #80]	; 0x50
 80088de:	9113      	str	r1, [sp, #76]	; 0x4c
 80088e0:	2800      	cmp	r0, #0
 80088e2:	d17b      	bne.n	80089dc <st_sssa8_ch_convolve_rgb+0x2d0>
 80088e4:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 80088e6:	2a00      	cmp	r2, #0
 80088e8:	d17e      	bne.n	80089e8 <st_sssa8_ch_convolve_rgb+0x2dc>
 80088ea:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 80088ec:	2101      	movs	r1, #1
 80088ee:	3a01      	subs	r2, #1
 80088f0:	f8ad 10fe 	strh.w	r1, [sp, #254]	; 0xfe
 80088f4:	9238      	str	r2, [sp, #224]	; 0xe0
 80088f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80088f8:	4591      	cmp	r9, r2
 80088fa:	dd5c      	ble.n	80089b6 <st_sssa8_ch_convolve_rgb+0x2aa>
 80088fc:	4610      	mov	r0, r2
 80088fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008900:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008902:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8008904:	4686      	mov	lr, r0
 8008906:	fb06 1102 	mla	r1, r6, r2, r1
 800890a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800890e:	f8cd 9020 	str.w	r9, [sp, #32]
 8008912:	1b09      	subs	r1, r1, r4
 8008914:	4691      	mov	r9, r2
 8008916:	f9bd 4074 	ldrsh.w	r4, [sp, #116]	; 0x74
 800891a:	468c      	mov	ip, r1
 800891c:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8008920:	45e1      	cmp	r9, ip
 8008922:	da3d      	bge.n	80089a0 <st_sssa8_ch_convolve_rgb+0x294>
 8008924:	fb00 f20b 	mul.w	r2, r0, fp
 8008928:	ea4f 71de 	mov.w	r1, lr, lsr #31
 800892c:	4698      	mov	r8, r3
 800892e:	9207      	str	r2, [sp, #28]
 8008930:	4583      	cmp	fp, r0
 8008932:	bfd8      	it	le
 8008934:	f041 0101 	orrle.w	r1, r1, #1
 8008938:	464a      	mov	r2, r9
 800893a:	4648      	mov	r0, r9
 800893c:	4583      	cmp	fp, r0
 800893e:	f102 0601 	add.w	r6, r2, #1
 8008942:	f103 0306 	add.w	r3, r3, #6
 8008946:	bfcc      	ite	gt
 8008948:	2500      	movgt	r5, #0
 800894a:	2501      	movle	r5, #1
 800894c:	ea55 75d2 	orrs.w	r5, r5, r2, lsr #31
 8008950:	d100      	bne.n	8008954 <st_sssa8_ch_convolve_rgb+0x248>
 8008952:	b159      	cbz	r1, 800896c <st_sssa8_ch_convolve_rgb+0x260>
 8008954:	b232      	sxth	r2, r6
 8008956:	f823 4c04 	strh.w	r4, [r3, #-4]
 800895a:	f823 4c02 	strh.w	r4, [r3, #-2]
 800895e:	4562      	cmp	r2, ip
 8008960:	f823 4c06 	strh.w	r4, [r3, #-6]
 8008964:	4610      	mov	r0, r2
 8008966:	da1b      	bge.n	80089a0 <st_sssa8_ch_convolve_rgb+0x294>
 8008968:	4698      	mov	r8, r3
 800896a:	e7e7      	b.n	800893c <st_sssa8_ch_convolve_rgb+0x230>
 800896c:	9d07      	ldr	r5, [sp, #28]
 800896e:	3201      	adds	r2, #1
 8008970:	4428      	add	r0, r5
 8008972:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8008974:	b212      	sxth	r2, r2
 8008976:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800897a:	4562      	cmp	r2, ip
 800897c:	5828      	ldr	r0, [r5, r0]
 800897e:	fa2f f680 	sxtb16	r6, r0
 8008982:	ea4f 2530 	mov.w	r5, r0, ror #8
 8008986:	ea06 0a07 	and.w	sl, r6, r7
 800898a:	fa2f f585 	sxtb16	r5, r5
 800898e:	b2ad      	uxth	r5, r5
 8008990:	4610      	mov	r0, r2
 8008992:	ea45 050a 	orr.w	r5, r5, sl
 8008996:	f8c8 5002 	str.w	r5, [r8, #2]
 800899a:	f823 6c06 	strh.w	r6, [r3, #-6]
 800899e:	dbe3      	blt.n	8008968 <st_sssa8_ch_convolve_rgb+0x25c>
 80089a0:	f10e 0e01 	add.w	lr, lr, #1
 80089a4:	9a08      	ldr	r2, [sp, #32]
 80089a6:	fa0f fe8e 	sxth.w	lr, lr
 80089aa:	4596      	cmp	lr, r2
 80089ac:	4670      	mov	r0, lr
 80089ae:	dbb7      	blt.n	8008920 <st_sssa8_ch_convolve_rgb+0x214>
 80089b0:	4691      	mov	r9, r2
 80089b2:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80089b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80089b8:	429a      	cmp	r2, r3
 80089ba:	d055      	beq.n	8008a68 <st_sssa8_ch_convolve_rgb+0x35c>
 80089bc:	9a06      	ldr	r2, [sp, #24]
 80089be:	980a      	ldr	r0, [sp, #40]	; 0x28
 80089c0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80089c2:	4402      	add	r2, r0
 80089c4:	3101      	adds	r1, #1
 80089c6:	b292      	uxth	r2, r2
 80089c8:	b209      	sxth	r1, r1
 80089ca:	9206      	str	r2, [sp, #24]
 80089cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80089ce:	460e      	mov	r6, r1
 80089d0:	9109      	str	r1, [sp, #36]	; 0x24
 80089d2:	428a      	cmp	r2, r1
 80089d4:	dd6c      	ble.n	8008ab0 <st_sssa8_ch_convolve_rgb+0x3a4>
 80089d6:	9836      	ldr	r0, [sp, #216]	; 0xd8
 80089d8:	2800      	cmp	r0, #0
 80089da:	d083      	beq.n	80088e4 <st_sssa8_ch_convolve_rgb+0x1d8>
 80089dc:	3801      	subs	r0, #1
 80089de:	2201      	movs	r2, #1
 80089e0:	9036      	str	r0, [sp, #216]	; 0xd8
 80089e2:	f8ad 20fe 	strh.w	r2, [sp, #254]	; 0xfe
 80089e6:	e786      	b.n	80088f6 <st_sssa8_ch_convolve_rgb+0x1ea>
 80089e8:	f8bd 10fc 	ldrh.w	r1, [sp, #252]	; 0xfc
 80089ec:	3a01      	subs	r2, #1
 80089ee:	2901      	cmp	r1, #1
 80089f0:	9237      	str	r2, [sp, #220]	; 0xdc
 80089f2:	f8ad 10fe 	strh.w	r1, [sp, #254]	; 0xfe
 80089f6:	f43f af7e 	beq.w	80088f6 <st_sssa8_ch_convolve_rgb+0x1ea>
 80089fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80089fc:	4591      	cmp	r9, r2
 80089fe:	ddda      	ble.n	80089b6 <st_sssa8_ch_convolve_rgb+0x2aa>
 8008a00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008a02:	4694      	mov	ip, r2
 8008a04:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8008a06:	4615      	mov	r5, r2
 8008a08:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008a0a:	fb06 0601 	mla	r6, r6, r1, r0
 8008a0e:	f9bd e018 	ldrsh.w	lr, [sp, #24]
 8008a12:	1ab6      	subs	r6, r6, r2
 8008a14:	45b6      	cmp	lr, r6
 8008a16:	da1d      	bge.n	8008a54 <st_sssa8_ch_convolve_rgb+0x348>
 8008a18:	fb05 f40b 	mul.w	r4, r5, fp
 8008a1c:	4670      	mov	r0, lr
 8008a1e:	4675      	mov	r5, lr
 8008a20:	4425      	add	r5, r4
 8008a22:	3001      	adds	r0, #1
 8008a24:	3306      	adds	r3, #6
 8008a26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008a2a:	b200      	sxth	r0, r0
 8008a2c:	f85a 2005 	ldr.w	r2, [sl, r5]
 8008a30:	fa2f f182 	sxtb16	r1, r2
 8008a34:	ea4f 2232 	mov.w	r2, r2, ror #8
 8008a38:	ea01 0807 	and.w	r8, r1, r7
 8008a3c:	fa2f f282 	sxtb16	r2, r2
 8008a40:	b292      	uxth	r2, r2
 8008a42:	42b0      	cmp	r0, r6
 8008a44:	f823 1c06 	strh.w	r1, [r3, #-6]
 8008a48:	4605      	mov	r5, r0
 8008a4a:	ea42 0208 	orr.w	r2, r2, r8
 8008a4e:	f843 2c04 	str.w	r2, [r3, #-4]
 8008a52:	dbe5      	blt.n	8008a20 <st_sssa8_ch_convolve_rgb+0x314>
 8008a54:	f10c 0c01 	add.w	ip, ip, #1
 8008a58:	fa0f fc8c 	sxth.w	ip, ip
 8008a5c:	45cc      	cmp	ip, r9
 8008a5e:	4665      	mov	r5, ip
 8008a60:	dbd8      	blt.n	8008a14 <st_sssa8_ch_convolve_rgb+0x308>
 8008a62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008a64:	429a      	cmp	r2, r3
 8008a66:	d1a9      	bne.n	80089bc <st_sssa8_ch_convolve_rgb+0x2b0>
 8008a68:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8008a6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8008a6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008a6e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8008a70:	9204      	str	r2, [sp, #16]
 8008a72:	9401      	str	r4, [sp, #4]
 8008a74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8008a76:	9305      	str	r3, [sp, #20]
 8008a78:	9002      	str	r0, [sp, #8]
 8008a7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008a7c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8008a7e:	9400      	str	r4, [sp, #0]
 8008a80:	e9dd 1219 	ldrd	r1, r2, [sp, #100]	; 0x64
 8008a84:	9103      	str	r1, [sp, #12]
 8008a86:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008a88:	f001 fea4 	bl	800a7d4 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 8008a8c:	9b06      	ldr	r3, [sp, #24]
 8008a8e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008a90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008a92:	440b      	add	r3, r1
 8008a94:	9013      	str	r0, [sp, #76]	; 0x4c
 8008a96:	3201      	adds	r2, #1
 8008a98:	b29b      	uxth	r3, r3
 8008a9a:	b212      	sxth	r2, r2
 8008a9c:	9306      	str	r3, [sp, #24]
 8008a9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008aa0:	4616      	mov	r6, r2
 8008aa2:	9209      	str	r2, [sp, #36]	; 0x24
 8008aa4:	4293      	cmp	r3, r2
 8008aa6:	dd59      	ble.n	8008b5c <st_sssa8_ch_convolve_rgb+0x450>
 8008aa8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008aaa:	e794      	b.n	80089d6 <st_sssa8_ch_convolve_rgb+0x2ca>
 8008aac:	ffff0000 	.word	0xffff0000
 8008ab0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008ab2:	465a      	mov	r2, fp
 8008ab4:	46cb      	mov	fp, r9
 8008ab6:	4299      	cmp	r1, r3
 8008ab8:	4691      	mov	r9, r2
 8008aba:	d010      	beq.n	8008ade <st_sssa8_ch_convolve_rgb+0x3d2>
 8008abc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8008abe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8008ac0:	9204      	str	r2, [sp, #16]
 8008ac2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008ac4:	9401      	str	r4, [sp, #4]
 8008ac6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8008ac8:	9305      	str	r3, [sp, #20]
 8008aca:	9400      	str	r4, [sp, #0]
 8008acc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008ace:	e9dd 0219 	ldrd	r0, r2, [sp, #100]	; 0x64
 8008ad2:	9003      	str	r0, [sp, #12]
 8008ad4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8008ad6:	9002      	str	r0, [sp, #8]
 8008ad8:	980d      	ldr	r0, [sp, #52]	; 0x34
 8008ada:	f002 f943 	bl	800ad64 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8008ade:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008ae0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008ae2:	9914      	ldr	r1, [sp, #80]	; 0x50
 8008ae4:	1a9b      	subs	r3, r3, r2
 8008ae6:	4608      	mov	r0, r1
 8008ae8:	b29b      	uxth	r3, r3
 8008aea:	4410      	add	r0, r2
 8008aec:	429a      	cmp	r2, r3
 8008aee:	931c      	str	r3, [sp, #112]	; 0x70
 8008af0:	9014      	str	r0, [sp, #80]	; 0x50
 8008af2:	bf28      	it	cs
 8008af4:	461a      	movcs	r2, r3
 8008af6:	4614      	mov	r4, r2
 8008af8:	b90a      	cbnz	r2, 8008afe <st_sssa8_ch_convolve_rgb+0x3f2>
 8008afa:	9412      	str	r4, [sp, #72]	; 0x48
 8008afc:	e6d7      	b.n	80088ae <st_sssa8_ch_convolve_rgb+0x1a2>
 8008afe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008b00:	9e18      	ldr	r6, [sp, #96]	; 0x60
 8008b02:	4619      	mov	r1, r3
 8008b04:	009d      	lsls	r5, r3, #2
 8008b06:	9820      	ldr	r0, [sp, #128]	; 0x80
 8008b08:	eb06 0141 	add.w	r1, r6, r1, lsl #1
 8008b0c:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 8008b0e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008b10:	442e      	add	r6, r5
 8008b12:	9118      	str	r1, [sp, #96]	; 0x60
 8008b14:	fb02 0003 	mla	r0, r2, r3, r0
 8008b18:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008b1a:	961a      	str	r6, [sp, #104]	; 0x68
 8008b1c:	4623      	mov	r3, r4
 8008b1e:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8008b20:	9020      	str	r0, [sp, #128]	; 0x80
 8008b22:	442e      	add	r6, r5
 8008b24:	9619      	str	r6, [sp, #100]	; 0x64
 8008b26:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8008b28:	442e      	add	r6, r5
 8008b2a:	4635      	mov	r5, r6
 8008b2c:	961b      	str	r6, [sp, #108]	; 0x6c
 8008b2e:	f000 ff45 	bl	80099bc <st_int8_to16_dual>
 8008b32:	e7e2      	b.n	8008afa <st_sssa8_ch_convolve_rgb+0x3ee>
 8008b34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8008b36:	4656      	mov	r6, sl
 8008b38:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008b3a:	46cb      	mov	fp, r9
 8008b3c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8008b3e:	440b      	add	r3, r1
 8008b40:	3201      	adds	r2, #1
 8008b42:	b29b      	uxth	r3, r3
 8008b44:	b212      	sxth	r2, r2
 8008b46:	9325      	str	r3, [sp, #148]	; 0x94
 8008b48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008b4a:	4615      	mov	r5, r2
 8008b4c:	9227      	str	r2, [sp, #156]	; 0x9c
 8008b4e:	4293      	cmp	r3, r2
 8008b50:	f73f ae80 	bgt.w	8008854 <st_sssa8_ch_convolve_rgb+0x148>
 8008b54:	2000      	movs	r0, #0
 8008b56:	b04b      	add	sp, #300	; 0x12c
 8008b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b5c:	465b      	mov	r3, fp
 8008b5e:	46cb      	mov	fp, r9
 8008b60:	4699      	mov	r9, r3
 8008b62:	e7bc      	b.n	8008ade <st_sssa8_ch_convolve_rgb+0x3d2>
 8008b64:	428d      	cmp	r5, r1
 8008b66:	f844 ef04 	str.w	lr, [r4, #4]!
 8008b6a:	f47f ae0c 	bne.w	8008786 <st_sssa8_ch_convolve_rgb+0x7a>
 8008b6e:	e619      	b.n	80087a4 <st_sssa8_ch_convolve_rgb+0x98>
 8008b70:	4613      	mov	r3, r2
 8008b72:	3301      	adds	r3, #1
 8008b74:	b29b      	uxth	r3, r3
 8008b76:	9329      	str	r3, [sp, #164]	; 0xa4
 8008b78:	e65d      	b.n	8008836 <st_sssa8_ch_convolve_rgb+0x12a>
 8008b7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	d0e9      	beq.n	8008b54 <st_sssa8_ch_convolve_rgb+0x448>
 8008b80:	2100      	movs	r1, #0
 8008b82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008b84:	eba4 0008 	sub.w	r0, r4, r8
 8008b88:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8008b8a:	4253      	negs	r3, r2
 8008b8c:	9113      	str	r1, [sp, #76]	; 0x4c
 8008b8e:	460c      	mov	r4, r1
 8008b90:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008b92:	b29b      	uxth	r3, r3
 8008b94:	9012      	str	r0, [sp, #72]	; 0x48
 8008b96:	1a8a      	subs	r2, r1, r2
 8008b98:	9314      	str	r3, [sp, #80]	; 0x50
 8008b9a:	9226      	str	r2, [sp, #152]	; 0x98
 8008b9c:	930c      	str	r3, [sp, #48]	; 0x30
 8008b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ba0:	2500      	movs	r5, #0
 8008ba2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8008ba4:	a836      	add	r0, sp, #216	; 0xd8
 8008ba6:	9507      	str	r5, [sp, #28]
 8008ba8:	fb03 2a04 	mla	sl, r3, r4, r2
 8008bac:	f000 fa9e 	bl	80090ec <ai_padding_opt_phase1>
 8008bb0:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8008bb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8008bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8008bb8:	462b      	mov	r3, r5
 8008bba:	9206      	str	r2, [sp, #24]
 8008bbc:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8008bbe:	2a00      	cmp	r2, #0
 8008bc0:	f040 8112 	bne.w	8008de8 <st_sssa8_ch_convolve_rgb+0x6dc>
 8008bc4:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 8008bc6:	2a00      	cmp	r2, #0
 8008bc8:	f040 8114 	bne.w	8008df4 <st_sssa8_ch_convolve_rgb+0x6e8>
 8008bcc:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8008bce:	2101      	movs	r1, #1
 8008bd0:	3a01      	subs	r2, #1
 8008bd2:	f8ad 10fe 	strh.w	r1, [sp, #254]	; 0xfe
 8008bd6:	9238      	str	r2, [sp, #224]	; 0xe0
 8008bd8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008bda:	4552      	cmp	r2, sl
 8008bdc:	da5d      	bge.n	8008c9a <st_sssa8_ch_convolve_rgb+0x58e>
 8008bde:	4691      	mov	r9, r2
 8008be0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008be2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008be4:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8008be8:	46cc      	mov	ip, r9
 8008bea:	fb03 1302 	mla	r3, r3, r2, r1
 8008bee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008bf0:	f9bd 1074 	ldrsh.w	r1, [sp, #116]	; 0x74
 8008bf4:	4680      	mov	r8, r0
 8008bf6:	1a9a      	subs	r2, r3, r2
 8008bf8:	f8cd a020 	str.w	sl, [sp, #32]
 8008bfc:	960b      	str	r6, [sp, #44]	; 0x2c
 8008bfe:	4590      	cmp	r8, r2
 8008c00:	da41      	bge.n	8008c86 <st_sssa8_ch_convolve_rgb+0x57a>
 8008c02:	45cb      	cmp	fp, r9
 8008c04:	fb09 fa0b 	mul.w	sl, r9, fp
 8008c08:	463e      	mov	r6, r7
 8008c0a:	4643      	mov	r3, r8
 8008c0c:	bfcc      	ite	gt
 8008c0e:	f04f 0e00 	movgt.w	lr, #0
 8008c12:	f04f 0e01 	movle.w	lr, #1
 8008c16:	4640      	mov	r0, r8
 8008c18:	ea4e 7edc 	orr.w	lr, lr, ip, lsr #31
 8008c1c:	4583      	cmp	fp, r0
 8008c1e:	f103 0501 	add.w	r5, r3, #1
 8008c22:	f107 0706 	add.w	r7, r7, #6
 8008c26:	bfcc      	ite	gt
 8008c28:	2400      	movgt	r4, #0
 8008c2a:	2401      	movle	r4, #1
 8008c2c:	ea54 74d3 	orrs.w	r4, r4, r3, lsr #31
 8008c30:	d102      	bne.n	8008c38 <st_sssa8_ch_convolve_rgb+0x52c>
 8008c32:	f1be 0f00 	cmp.w	lr, #0
 8008c36:	d00b      	beq.n	8008c50 <st_sssa8_ch_convolve_rgb+0x544>
 8008c38:	b22b      	sxth	r3, r5
 8008c3a:	f827 1c04 	strh.w	r1, [r7, #-4]
 8008c3e:	f827 1c02 	strh.w	r1, [r7, #-2]
 8008c42:	429a      	cmp	r2, r3
 8008c44:	f827 1c06 	strh.w	r1, [r7, #-6]
 8008c48:	4618      	mov	r0, r3
 8008c4a:	dd1c      	ble.n	8008c86 <st_sssa8_ch_convolve_rgb+0x57a>
 8008c4c:	463e      	mov	r6, r7
 8008c4e:	e7e5      	b.n	8008c1c <st_sssa8_ch_convolve_rgb+0x510>
 8008c50:	4450      	add	r0, sl
 8008c52:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008c54:	3301      	adds	r3, #1
 8008c56:	f8df 92a8 	ldr.w	r9, [pc, #680]	; 8008f00 <st_sssa8_ch_convolve_rgb+0x7f4>
 8008c5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8008c5e:	b21b      	sxth	r3, r3
 8008c60:	5820      	ldr	r0, [r4, r0]
 8008c62:	fa2f f580 	sxtb16	r5, r0
 8008c66:	ea4f 2430 	mov.w	r4, r0, ror #8
 8008c6a:	ea05 0909 	and.w	r9, r5, r9
 8008c6e:	fa2f f484 	sxtb16	r4, r4
 8008c72:	b2a4      	uxth	r4, r4
 8008c74:	4293      	cmp	r3, r2
 8008c76:	4618      	mov	r0, r3
 8008c78:	ea44 0409 	orr.w	r4, r4, r9
 8008c7c:	f8c6 4002 	str.w	r4, [r6, #2]
 8008c80:	f827 5c06 	strh.w	r5, [r7, #-6]
 8008c84:	dbe2      	blt.n	8008c4c <st_sssa8_ch_convolve_rgb+0x540>
 8008c86:	f10c 0c01 	add.w	ip, ip, #1
 8008c8a:	9b08      	ldr	r3, [sp, #32]
 8008c8c:	fa0f fc8c 	sxth.w	ip, ip
 8008c90:	459c      	cmp	ip, r3
 8008c92:	46e1      	mov	r9, ip
 8008c94:	dbb3      	blt.n	8008bfe <st_sssa8_ch_convolve_rgb+0x4f2>
 8008c96:	469a      	mov	sl, r3
 8008c98:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8008c9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c9c:	42bb      	cmp	r3, r7
 8008c9e:	f000 80ec 	beq.w	8008e7a <st_sssa8_ch_convolve_rgb+0x76e>
 8008ca2:	9a07      	ldr	r2, [sp, #28]
 8008ca4:	9b06      	ldr	r3, [sp, #24]
 8008ca6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008ca8:	3201      	adds	r2, #1
 8008caa:	440b      	add	r3, r1
 8008cac:	b212      	sxth	r2, r2
 8008cae:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008cb0:	b29b      	uxth	r3, r3
 8008cb2:	9207      	str	r2, [sp, #28]
 8008cb4:	4291      	cmp	r1, r2
 8008cb6:	9306      	str	r3, [sp, #24]
 8008cb8:	4613      	mov	r3, r2
 8008cba:	f73f af7f 	bgt.w	8008bbc <st_sssa8_ch_convolve_rgb+0x4b0>
 8008cbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008cc0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008cc2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8008cc4:	440b      	add	r3, r1
 8008cc6:	3201      	adds	r2, #1
 8008cc8:	b29b      	uxth	r3, r3
 8008cca:	b212      	sxth	r2, r2
 8008ccc:	930c      	str	r3, [sp, #48]	; 0x30
 8008cce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008cd0:	4614      	mov	r4, r2
 8008cd2:	9213      	str	r2, [sp, #76]	; 0x4c
 8008cd4:	4293      	cmp	r3, r2
 8008cd6:	f73f af62 	bgt.w	8008b9e <st_sssa8_ch_convolve_rgb+0x492>
 8008cda:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008cdc:	42ba      	cmp	r2, r7
 8008cde:	f43f af39 	beq.w	8008b54 <st_sssa8_ch_convolve_rgb+0x448>
 8008ce2:	9915      	ldr	r1, [sp, #84]	; 0x54
 8008ce4:	2900      	cmp	r1, #0
 8008ce6:	f43f af35 	beq.w	8008b54 <st_sssa8_ch_convolve_rgb+0x448>
 8008cea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008cec:	9816      	ldr	r0, [sp, #88]	; 0x58
 8008cee:	1f1f      	subs	r7, r3, #4
 8008cf0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008cf2:	ea4f 0990 	mov.w	r9, r0, lsr #2
 8008cf6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8008cf8:	f1a3 0c02 	sub.w	ip, r3, #2
 8008cfc:	9b59      	ldr	r3, [sp, #356]	; 0x164
 8008cfe:	f1a4 0a04 	sub.w	sl, r4, #4
 8008d02:	9c5d      	ldr	r4, [sp, #372]	; 0x174
 8008d04:	1f1e      	subs	r6, r3, #4
 8008d06:	f109 33ff 	add.w	r3, r9, #4294967295
 8008d0a:	4421      	add	r1, r4
 8008d0c:	f000 0e03 	and.w	lr, r0, #3
 8008d10:	b29b      	uxth	r3, r3
 8008d12:	f8df b1ec 	ldr.w	fp, [pc, #492]	; 8008f00 <st_sssa8_ch_convolve_rgb+0x7f4>
 8008d16:	9107      	str	r1, [sp, #28]
 8008d18:	3301      	adds	r3, #1
 8008d1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008d1c:	0099      	lsls	r1, r3, #2
 8008d1e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008d22:	9108      	str	r1, [sp, #32]
 8008d24:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 8008d28:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008d2a:	46a1      	mov	r9, r4
 8008d2c:	f857 3f04 	ldr.w	r3, [r7, #4]!
 8008d30:	2a00      	cmp	r2, #0
 8008d32:	d057      	beq.n	8008de4 <st_sssa8_ch_convolve_rgb+0x6d8>
 8008d34:	9a08      	ldr	r2, [sp, #32]
 8008d36:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8008d3a:	1882      	adds	r2, r0, r2
 8008d3c:	9206      	str	r2, [sp, #24]
 8008d3e:	f850 2b04 	ldr.w	r2, [r0], #4
 8008d42:	fa2f f482 	sxtb16	r4, r2
 8008d46:	b2a1      	uxth	r1, r4
 8008d48:	f8d8 5000 	ldr.w	r5, [r8]
 8008d4c:	ea4f 2232 	mov.w	r2, r2, ror #8
 8008d50:	fa2f f282 	sxtb16	r2, r2
 8008d54:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008d58:	fb21 3105 	smlad	r1, r1, r5, r3
 8008d5c:	ea02 020b 	and.w	r2, r2, fp
 8008d60:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8008d64:	f108 0808 	add.w	r8, r8, #8
 8008d68:	ea42 4414 	orr.w	r4, r2, r4, lsr #16
 8008d6c:	fb24 1303 	smlad	r3, r4, r3, r1
 8008d70:	9a06      	ldr	r2, [sp, #24]
 8008d72:	4290      	cmp	r0, r2
 8008d74:	d1e3      	bne.n	8008d3e <st_sssa8_ch_convolve_rgb+0x632>
 8008d76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008d78:	f1be 0f00 	cmp.w	lr, #0
 8008d7c:	d017      	beq.n	8008dae <st_sssa8_ch_convolve_rgb+0x6a2>
 8008d7e:	f990 1000 	ldrsb.w	r1, [r0]
 8008d82:	f1be 0f01 	cmp.w	lr, #1
 8008d86:	8814      	ldrh	r4, [r2, #0]
 8008d88:	fb14 3301 	smlabb	r3, r4, r1, r3
 8008d8c:	f000 80a5 	beq.w	8008eda <st_sssa8_ch_convolve_rgb+0x7ce>
 8008d90:	f990 1001 	ldrsb.w	r1, [r0, #1]
 8008d94:	f1be 0f02 	cmp.w	lr, #2
 8008d98:	8854      	ldrh	r4, [r2, #2]
 8008d9a:	fb14 3301 	smlabb	r3, r4, r1, r3
 8008d9e:	f000 809a 	beq.w	8008ed6 <st_sssa8_ch_convolve_rgb+0x7ca>
 8008da2:	8891      	ldrh	r1, [r2, #4]
 8008da4:	3003      	adds	r0, #3
 8008da6:	f910 2c01 	ldrsb.w	r2, [r0, #-1]
 8008daa:	fb11 3302 	smlabb	r3, r1, r2, r3
 8008dae:	f93c 4f02 	ldrsh.w	r4, [ip, #2]!
 8008db2:	f109 0901 	add.w	r9, r9, #1
 8008db6:	f856 1f04 	ldr.w	r1, [r6, #4]!
 8008dba:	2c00      	cmp	r4, #0
 8008dbc:	f85a 2f04 	ldr.w	r2, [sl, #4]!
 8008dc0:	dd7c      	ble.n	8008ebc <st_sssa8_ch_convolve_rgb+0x7b0>
 8008dc2:	005b      	lsls	r3, r3, #1
 8008dc4:	fb53 2301 	smmla	r3, r3, r1, r2
 8008dc8:	4123      	asrs	r3, r4
 8008dca:	f303 0307 	ssat	r3, #8, r3
 8008dce:	f809 3c01 	strb.w	r3, [r9, #-1]
 8008dd2:	9b07      	ldr	r3, [sp, #28]
 8008dd4:	454b      	cmp	r3, r9
 8008dd6:	f43f aebd 	beq.w	8008b54 <st_sssa8_ch_convolve_rgb+0x448>
 8008dda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008ddc:	f857 3f04 	ldr.w	r3, [r7, #4]!
 8008de0:	2a00      	cmp	r2, #0
 8008de2:	d1a7      	bne.n	8008d34 <st_sssa8_ch_convolve_rgb+0x628>
 8008de4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008de6:	e7c7      	b.n	8008d78 <st_sssa8_ch_convolve_rgb+0x66c>
 8008de8:	3a01      	subs	r2, #1
 8008dea:	2101      	movs	r1, #1
 8008dec:	9236      	str	r2, [sp, #216]	; 0xd8
 8008dee:	f8ad 10fe 	strh.w	r1, [sp, #254]	; 0xfe
 8008df2:	e6f1      	b.n	8008bd8 <st_sssa8_ch_convolve_rgb+0x4cc>
 8008df4:	f8bd 10fc 	ldrh.w	r1, [sp, #252]	; 0xfc
 8008df8:	3a01      	subs	r2, #1
 8008dfa:	2901      	cmp	r1, #1
 8008dfc:	9237      	str	r2, [sp, #220]	; 0xdc
 8008dfe:	f8ad 10fe 	strh.w	r1, [sp, #254]	; 0xfe
 8008e02:	f43f aee9 	beq.w	8008bd8 <st_sssa8_ch_convolve_rgb+0x4cc>
 8008e06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008e08:	4552      	cmp	r2, sl
 8008e0a:	f6bf af46 	bge.w	8008c9a <st_sssa8_ch_convolve_rgb+0x58e>
 8008e0e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008e10:	4694      	mov	ip, r2
 8008e12:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8008e14:	4614      	mov	r4, r2
 8008e16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8008e18:	fb03 0301 	mla	r3, r3, r1, r0
 8008e1c:	f9bd e018 	ldrsh.w	lr, [sp, #24]
 8008e20:	1a9d      	subs	r5, r3, r2
 8008e22:	45ae      	cmp	lr, r5
 8008e24:	da1e      	bge.n	8008e64 <st_sssa8_ch_convolve_rgb+0x758>
 8008e26:	fb04 f00b 	mul.w	r0, r4, fp
 8008e2a:	4671      	mov	r1, lr
 8008e2c:	4674      	mov	r4, lr
 8008e2e:	1903      	adds	r3, r0, r4
 8008e30:	3101      	adds	r1, #1
 8008e32:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8008f00 <st_sssa8_ch_convolve_rgb+0x7f4>
 8008e36:	3706      	adds	r7, #6
 8008e38:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8008e3c:	b209      	sxth	r1, r1
 8008e3e:	58f3      	ldr	r3, [r6, r3]
 8008e40:	fa2f f283 	sxtb16	r2, r3
 8008e44:	ea4f 2333 	mov.w	r3, r3, ror #8
 8008e48:	ea02 0808 	and.w	r8, r2, r8
 8008e4c:	fa2f f383 	sxtb16	r3, r3
 8008e50:	b29b      	uxth	r3, r3
 8008e52:	42a9      	cmp	r1, r5
 8008e54:	f827 2c06 	strh.w	r2, [r7, #-6]
 8008e58:	460c      	mov	r4, r1
 8008e5a:	ea43 0308 	orr.w	r3, r3, r8
 8008e5e:	f847 3c04 	str.w	r3, [r7, #-4]
 8008e62:	dbe4      	blt.n	8008e2e <st_sssa8_ch_convolve_rgb+0x722>
 8008e64:	f10c 0c01 	add.w	ip, ip, #1
 8008e68:	fa0f fc8c 	sxth.w	ip, ip
 8008e6c:	45d4      	cmp	ip, sl
 8008e6e:	4664      	mov	r4, ip
 8008e70:	dbd7      	blt.n	8008e22 <st_sssa8_ch_convolve_rgb+0x716>
 8008e72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e74:	42bb      	cmp	r3, r7
 8008e76:	f47f af14 	bne.w	8008ca2 <st_sssa8_ch_convolve_rgb+0x596>
 8008e7a:	9b5d      	ldr	r3, [sp, #372]	; 0x174
 8008e7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008e7e:	9959      	ldr	r1, [sp, #356]	; 0x164
 8008e80:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8008e82:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8008e84:	9304      	str	r3, [sp, #16]
 8008e86:	9203      	str	r2, [sp, #12]
 8008e88:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008e8a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8008e8c:	9102      	str	r1, [sp, #8]
 8008e8e:	9001      	str	r0, [sp, #4]
 8008e90:	9911      	ldr	r1, [sp, #68]	; 0x44
 8008e92:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008e94:	9400      	str	r4, [sp, #0]
 8008e96:	f000 f963 	bl	8009160 <st_sssa8_ch_nn_mat_mult_kernel>
 8008e9a:	9a07      	ldr	r2, [sp, #28]
 8008e9c:	9b06      	ldr	r3, [sp, #24]
 8008e9e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8008ea0:	3201      	adds	r2, #1
 8008ea2:	905d      	str	r0, [sp, #372]	; 0x174
 8008ea4:	b212      	sxth	r2, r2
 8008ea6:	440b      	add	r3, r1
 8008ea8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008eaa:	b29b      	uxth	r3, r3
 8008eac:	9207      	str	r2, [sp, #28]
 8008eae:	4291      	cmp	r1, r2
 8008eb0:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8008eb2:	9306      	str	r3, [sp, #24]
 8008eb4:	4613      	mov	r3, r2
 8008eb6:	f73f ae81 	bgt.w	8008bbc <st_sssa8_ch_convolve_rgb+0x4b0>
 8008eba:	e700      	b.n	8008cbe <st_sssa8_ch_convolve_rgb+0x5b2>
 8008ebc:	f1c4 0401 	rsb	r4, r4, #1
 8008ec0:	40a3      	lsls	r3, r4
 8008ec2:	f303 031f 	ssat	r3, #32, r3
 8008ec6:	fb53 f311 	smmulr	r3, r3, r1
 8008eca:	4413      	add	r3, r2
 8008ecc:	f303 0307 	ssat	r3, #8, r3
 8008ed0:	f809 3c01 	strb.w	r3, [r9, #-1]
 8008ed4:	e77d      	b.n	8008dd2 <st_sssa8_ch_convolve_rgb+0x6c6>
 8008ed6:	3002      	adds	r0, #2
 8008ed8:	e769      	b.n	8008dae <st_sssa8_ch_convolve_rgb+0x6a2>
 8008eda:	3001      	adds	r0, #1
 8008edc:	e767      	b.n	8008dae <st_sssa8_ch_convolve_rgb+0x6a2>
 8008ede:	4602      	mov	r2, r0
 8008ee0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008ee2:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008ee4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008ee6:	f000 fd69 	bl	80099bc <st_int8_to16_dual>
 8008eea:	2301      	movs	r3, #1
 8008eec:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008eee:	9328      	str	r3, [sp, #160]	; 0xa0
 8008ef0:	e487      	b.n	8008802 <st_sssa8_ch_convolve_rgb+0xf6>
 8008ef2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8008ef4:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8008ef6:	e458      	b.n	80087aa <st_sssa8_ch_convolve_rgb+0x9e>
 8008ef8:	f06f 0002 	mvn.w	r0, #2
 8008efc:	e62b      	b.n	8008b56 <st_sssa8_ch_convolve_rgb+0x44a>
 8008efe:	bf00      	nop
 8008f00:	ffff0000 	.word	0xffff0000

08008f04 <st_sssa8_ch_convolve_1x1_WeightsPrefetch>:
 8008f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f06:	f06f 0509 	mvn.w	r5, #9
 8008f0a:	685f      	ldr	r7, [r3, #4]
 8008f0c:	fb02 f601 	mul.w	r6, r2, r1
 8008f10:	fb05 7501 	mla	r5, r5, r1, r7
 8008f14:	ebb5 0f46 	cmp.w	r5, r6, lsl #1
 8008f18:	db06      	blt.n	8008f28 <st_sssa8_ch_convolve_1x1_WeightsPrefetch+0x24>
 8008f1a:	eb01 0481 	add.w	r4, r1, r1, lsl #2
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8008f24:	f000 feb8 	bl	8009c98 <st_sssa8_ch_fullW_prefetch>
 8008f28:	2000      	movs	r0, #0
 8008f2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008f2c <st_sssa8_ch_convolve_1x1>:
 8008f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f30:	b091      	sub	sp, #68	; 0x44
 8008f32:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8008f36:	920d      	str	r2, [sp, #52]	; 0x34
 8008f38:	2d01      	cmp	r5, #1
 8008f3a:	f99d 2094 	ldrsb.w	r2, [sp, #148]	; 0x94
 8008f3e:	f8bd 706c 	ldrh.w	r7, [sp, #108]	; 0x6c
 8008f42:	920e      	str	r2, [sp, #56]	; 0x38
 8008f44:	f8bd 6078 	ldrh.w	r6, [sp, #120]	; 0x78
 8008f48:	f8bd e080 	ldrh.w	lr, [sp, #128]	; 0x80
 8008f4c:	f8bd 8084 	ldrh.w	r8, [sp, #132]	; 0x84
 8008f50:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8008f52:	f99d c098 	ldrsb.w	ip, [sp, #152]	; 0x98
 8008f56:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8008f58:	e9cd 010b 	strd	r0, r1, [sp, #44]	; 0x2c
 8008f5c:	f8bd 1074 	ldrh.w	r1, [sp, #116]	; 0x74
 8008f60:	f8bd 007c 	ldrh.w	r0, [sp, #124]	; 0x7c
 8008f64:	d164      	bne.n	8009030 <st_sssa8_ch_convolve_1x1+0x104>
 8008f66:	2901      	cmp	r1, #1
 8008f68:	d162      	bne.n	8009030 <st_sssa8_ch_convolve_1x1+0x104>
 8008f6a:	ea56 0100 	orrs.w	r1, r6, r0
 8008f6e:	d15f      	bne.n	8009030 <st_sssa8_ch_convolve_1x1+0x104>
 8008f70:	f1be 0f01 	cmp.w	lr, #1
 8008f74:	d15c      	bne.n	8009030 <st_sssa8_ch_convolve_1x1+0x104>
 8008f76:	f1b8 0f01 	cmp.w	r8, #1
 8008f7a:	d159      	bne.n	8009030 <st_sssa8_ch_convolve_1x1+0x104>
 8008f7c:	ea4f 0a87 	mov.w	sl, r7, lsl #2
 8008f80:	ebc7 7e87 	rsb	lr, r7, r7, lsl #30
 8008f84:	eb0a 0907 	add.w	r9, sl, r7
 8008f88:	e9d2 1200 	ldrd	r1, r2, [r2]
 8008f8c:	eb01 0949 	add.w	r9, r1, r9, lsl #1
 8008f90:	920f      	str	r2, [sp, #60]	; 0x3c
 8008f92:	eb09 0e8e 	add.w	lr, r9, lr, lsl #2
 8008f96:	2f00      	cmp	r7, #0
 8008f98:	d048      	beq.n	800902c <st_sssa8_ch_convolve_1x1+0x100>
 8008f9a:	ea4f 0b47 	mov.w	fp, r7, lsl #1
 8008f9e:	f1ae 0604 	sub.w	r6, lr, #4
 8008fa2:	f04f 0801 	mov.w	r8, #1
 8008fa6:	eb04 050b 	add.w	r5, r4, fp
 8008faa:	f934 2b02 	ldrsh.w	r2, [r4], #2
 8008fae:	fa08 f002 	lsl.w	r0, r8, r2
 8008fb2:	fa0c f102 	lsl.w	r1, ip, r2
 8008fb6:	2a00      	cmp	r2, #0
 8008fb8:	eb01 0150 	add.w	r1, r1, r0, lsr #1
 8008fbc:	dd31      	ble.n	8009022 <st_sssa8_ch_convolve_1x1+0xf6>
 8008fbe:	42a5      	cmp	r5, r4
 8008fc0:	f846 1f04 	str.w	r1, [r6, #4]!
 8008fc4:	d1f1      	bne.n	8008faa <st_sssa8_ch_convolve_1x1+0x7e>
 8008fc6:	462c      	mov	r4, r5
 8008fc8:	44d6      	add	lr, sl
 8008fca:	fb07 f503 	mul.w	r5, r7, r3
 8008fce:	461e      	mov	r6, r3
 8008fd0:	f06f 0c09 	mvn.w	ip, #9
 8008fd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008fd6:	eba4 040b 	sub.w	r4, r4, fp
 8008fda:	ebae 0e0a 	sub.w	lr, lr, sl
 8008fde:	fb0c 3c07 	mla	ip, ip, r7, r3
 8008fe2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008fe4:	9401      	str	r4, [sp, #4]
 8008fe6:	ebbc 0f45 	cmp.w	ip, r5, lsl #1
 8008fea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8008fec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8008fee:	bfac      	ite	ge
 8008ff0:	464c      	movge	r4, r9
 8008ff2:	2400      	movlt	r4, #0
 8008ff4:	f8cd e018 	str.w	lr, [sp, #24]
 8008ff8:	f8cd 901c 	str.w	r9, [sp, #28]
 8008ffc:	9703      	str	r7, [sp, #12]
 8008ffe:	9408      	str	r4, [sp, #32]
 8009000:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8009004:	e9cd 6504 	strd	r6, r5, [sp, #16]
 8009008:	fb02 f101 	mul.w	r1, r2, r1
 800900c:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 800900e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8009010:	9102      	str	r1, [sp, #8]
 8009012:	9500      	str	r5, [sp, #0]
 8009014:	991a      	ldr	r1, [sp, #104]	; 0x68
 8009016:	f000 ff3f 	bl	8009e98 <st_sssa8_ch_nn_mat_mult_nt_t>
 800901a:	2000      	movs	r0, #0
 800901c:	b011      	add	sp, #68	; 0x44
 800901e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009022:	42a5      	cmp	r5, r4
 8009024:	f846 cf04 	str.w	ip, [r6, #4]!
 8009028:	d1bf      	bne.n	8008faa <st_sssa8_ch_convolve_1x1+0x7e>
 800902a:	e7cc      	b.n	8008fc6 <st_sssa8_ch_convolve_1x1+0x9a>
 800902c:	46bb      	mov	fp, r7
 800902e:	e7cc      	b.n	8008fca <st_sssa8_ch_convolve_1x1+0x9e>
 8009030:	f06f 0002 	mvn.w	r0, #2
 8009034:	e7f2      	b.n	800901c <st_sssa8_ch_convolve_1x1+0xf0>
 8009036:	bf00      	nop

08009038 <ai_padding_opt_init>:
 8009038:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800903c:	2600      	movs	r6, #0
 800903e:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8009042:	e9c0 6600 	strd	r6, r6, [r0]
 8009046:	6086      	str	r6, [r0, #8]
 8009048:	689d      	ldr	r5, [r3, #8]
 800904a:	690c      	ldr	r4, [r1, #16]
 800904c:	42b5      	cmp	r5, r6
 800904e:	dd21      	ble.n	8009094 <ai_padding_opt_init+0x5c>
 8009050:	4264      	negs	r4, r4
 8009052:	46b0      	mov	r8, r6
 8009054:	46b6      	mov	lr, r6
 8009056:	46b1      	mov	r9, r6
 8009058:	4637      	mov	r7, r6
 800905a:	e00f      	b.n	800907c <ai_padding_opt_init+0x44>
 800905c:	6895      	ldr	r5, [r2, #8]
 800905e:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8009062:	1b2d      	subs	r5, r5, r4
 8009064:	42b5      	cmp	r5, r6
 8009066:	da10      	bge.n	800908a <ai_padding_opt_init+0x52>
 8009068:	f10e 0e01 	add.w	lr, lr, #1
 800906c:	f8c0 e008 	str.w	lr, [r0, #8]
 8009070:	3701      	adds	r7, #1
 8009072:	689d      	ldr	r5, [r3, #8]
 8009074:	688e      	ldr	r6, [r1, #8]
 8009076:	42bd      	cmp	r5, r7
 8009078:	4434      	add	r4, r6
 800907a:	dd0e      	ble.n	800909a <ai_padding_opt_init+0x62>
 800907c:	2c00      	cmp	r4, #0
 800907e:	daed      	bge.n	800905c <ai_padding_opt_init+0x24>
 8009080:	f109 0901 	add.w	r9, r9, #1
 8009084:	f8c0 9000 	str.w	r9, [r0]
 8009088:	e7f2      	b.n	8009070 <ai_padding_opt_init+0x38>
 800908a:	f108 0801 	add.w	r8, r8, #1
 800908e:	f8c0 8004 	str.w	r8, [r0, #4]
 8009092:	e7ed      	b.n	8009070 <ai_padding_opt_init+0x38>
 8009094:	46b6      	mov	lr, r6
 8009096:	46b0      	mov	r8, r6
 8009098:	46b1      	mov	r9, r6
 800909a:	2500      	movs	r5, #0
 800909c:	e9c0 9803 	strd	r9, r8, [r0, #12]
 80090a0:	e9c0 e505 	strd	lr, r5, [r0, #20]
 80090a4:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80090a8:	685e      	ldr	r6, [r3, #4]
 80090aa:	694c      	ldr	r4, [r1, #20]
 80090ac:	42ae      	cmp	r6, r5
 80090ae:	f1c4 0400 	rsb	r4, r4, #0
 80090b2:	dc0f      	bgt.n	80090d4 <ai_padding_opt_init+0x9c>
 80090b4:	e018      	b.n	80090e8 <ai_padding_opt_init+0xb0>
 80090b6:	6856      	ldr	r6, [r2, #4]
 80090b8:	f8dc 7004 	ldr.w	r7, [ip, #4]
 80090bc:	1b36      	subs	r6, r6, r4
 80090be:	42be      	cmp	r6, r7
 80090c0:	da0e      	bge.n	80090e0 <ai_padding_opt_init+0xa8>
 80090c2:	6a06      	ldr	r6, [r0, #32]
 80090c4:	3601      	adds	r6, #1
 80090c6:	6206      	str	r6, [r0, #32]
 80090c8:	3501      	adds	r5, #1
 80090ca:	685e      	ldr	r6, [r3, #4]
 80090cc:	68cf      	ldr	r7, [r1, #12]
 80090ce:	42ae      	cmp	r6, r5
 80090d0:	443c      	add	r4, r7
 80090d2:	dd09      	ble.n	80090e8 <ai_padding_opt_init+0xb0>
 80090d4:	2c00      	cmp	r4, #0
 80090d6:	daee      	bge.n	80090b6 <ai_padding_opt_init+0x7e>
 80090d8:	6986      	ldr	r6, [r0, #24]
 80090da:	3601      	adds	r6, #1
 80090dc:	6186      	str	r6, [r0, #24]
 80090de:	e7f3      	b.n	80090c8 <ai_padding_opt_init+0x90>
 80090e0:	69c6      	ldr	r6, [r0, #28]
 80090e2:	3601      	adds	r6, #1
 80090e4:	61c6      	str	r6, [r0, #28]
 80090e6:	e7ef      	b.n	80090c8 <ai_padding_opt_init+0x90>
 80090e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080090ec <ai_padding_opt_phase1>:
 80090ec:	e9d0 2306 	ldrd	r2, r3, [r0, #24]
 80090f0:	b932      	cbnz	r2, 8009100 <ai_padding_opt_phase1+0x14>
 80090f2:	b993      	cbnz	r3, 800911a <ai_padding_opt_phase1+0x2e>
 80090f4:	6a03      	ldr	r3, [r0, #32]
 80090f6:	2201      	movs	r2, #1
 80090f8:	3b01      	subs	r3, #1
 80090fa:	8482      	strh	r2, [r0, #36]	; 0x24
 80090fc:	6203      	str	r3, [r0, #32]
 80090fe:	e005      	b.n	800910c <ai_padding_opt_phase1+0x20>
 8009100:	2b00      	cmp	r3, #0
 8009102:	d0f7      	beq.n	80090f4 <ai_padding_opt_phase1+0x8>
 8009104:	3b01      	subs	r3, #1
 8009106:	2201      	movs	r2, #1
 8009108:	61c3      	str	r3, [r0, #28]
 800910a:	8482      	strh	r2, [r0, #36]	; 0x24
 800910c:	6943      	ldr	r3, [r0, #20]
 800910e:	e9d0 1203 	ldrd	r1, r2, [r0, #12]
 8009112:	6083      	str	r3, [r0, #8]
 8009114:	e9c0 1200 	strd	r1, r2, [r0]
 8009118:	4770      	bx	lr
 800911a:	3b01      	subs	r3, #1
 800911c:	8482      	strh	r2, [r0, #36]	; 0x24
 800911e:	61c3      	str	r3, [r0, #28]
 8009120:	e7f4      	b.n	800910c <ai_padding_opt_phase1+0x20>
 8009122:	bf00      	nop

08009124 <st_uint8_fill>:
 8009124:	0403      	lsls	r3, r0, #16
 8009126:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800912a:	b410      	push	{r4}
 800912c:	4303      	orrs	r3, r0
 800912e:	0894      	lsrs	r4, r2, #2
 8009130:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8009134:	d011      	beq.n	800915a <st_uint8_fill+0x36>
 8009136:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 800913a:	f841 3b04 	str.w	r3, [r1], #4
 800913e:	42a1      	cmp	r1, r4
 8009140:	d1fb      	bne.n	800913a <st_uint8_fill+0x16>
 8009142:	f012 0203 	ands.w	r2, r2, #3
 8009146:	d005      	beq.n	8009154 <st_uint8_fill+0x30>
 8009148:	4601      	mov	r1, r0
 800914a:	4620      	mov	r0, r4
 800914c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009150:	f002 bee0 	b.w	800bf14 <memset>
 8009154:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009158:	4770      	bx	lr
 800915a:	460c      	mov	r4, r1
 800915c:	e7f1      	b.n	8009142 <st_uint8_fill+0x1e>
 800915e:	bf00      	nop

08009160 <st_sssa8_ch_nn_mat_mult_kernel>:
 8009160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009164:	b09f      	sub	sp, #124	; 0x7c
 8009166:	460f      	mov	r7, r1
 8009168:	9004      	str	r0, [sp, #16]
 800916a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800916c:	9113      	str	r1, [sp, #76]	; 0x4c
 800916e:	0859      	lsrs	r1, r3, #1
 8009170:	eb00 0503 	add.w	r5, r0, r3
 8009174:	f8bd 00a0 	ldrh.w	r0, [sp, #160]	; 0xa0
 8009178:	931c      	str	r3, [sp, #112]	; 0x70
 800917a:	921a      	str	r2, [sp, #104]	; 0x68
 800917c:	951b      	str	r5, [sp, #108]	; 0x6c
 800917e:	900d      	str	r0, [sp, #52]	; 0x34
 8009180:	f000 8272 	beq.w	8009668 <st_sssa8_ch_nn_mat_mult_kernel+0x508>
 8009184:	4614      	mov	r4, r2
 8009186:	3901      	subs	r1, #1
 8009188:	f1a0 0210 	sub.w	r2, r0, #16
 800918c:	eb07 0640 	add.w	r6, r7, r0, lsl #1
 8009190:	4623      	mov	r3, r4
 8009192:	1ec4      	subs	r4, r0, #3
 8009194:	0912      	lsrs	r2, r2, #4
 8009196:	f8df b6dc 	ldr.w	fp, [pc, #1756]	; 8009874 <st_sssa8_ch_nn_mat_mult_kernel+0x714>
 800919a:	3310      	adds	r3, #16
 800919c:	9415      	str	r4, [sp, #84]	; 0x54
 800919e:	b28c      	uxth	r4, r1
 80091a0:	3201      	adds	r2, #1
 80091a2:	991a      	ldr	r1, [sp, #104]	; 0x68
 80091a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80091a8:	9616      	str	r6, [sp, #88]	; 0x58
 80091aa:	3108      	adds	r1, #8
 80091ac:	941d      	str	r4, [sp, #116]	; 0x74
 80091ae:	9314      	str	r3, [sp, #80]	; 0x50
 80091b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80091b2:	910e      	str	r1, [sp, #56]	; 0x38
 80091b4:	3308      	adds	r3, #8
 80091b6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80091b8:	930a      	str	r3, [sp, #40]	; 0x28
 80091ba:	0153      	lsls	r3, r2, #5
 80091bc:	0112      	lsls	r2, r2, #4
 80091be:	3104      	adds	r1, #4
 80091c0:	920f      	str	r2, [sp, #60]	; 0x3c
 80091c2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80091c4:	910b      	str	r1, [sp, #44]	; 0x2c
 80091c6:	3208      	adds	r2, #8
 80091c8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80091ca:	9208      	str	r2, [sp, #32]
 80091cc:	18f2      	adds	r2, r6, r3
 80091ce:	18fb      	adds	r3, r7, r3
 80091d0:	3102      	adds	r1, #2
 80091d2:	9218      	str	r2, [sp, #96]	; 0x60
 80091d4:	9317      	str	r3, [sp, #92]	; 0x5c
 80091d6:	1cab      	adds	r3, r5, #2
 80091d8:	9109      	str	r1, [sp, #36]	; 0x24
 80091da:	930c      	str	r3, [sp, #48]	; 0x30
 80091dc:	1f03      	subs	r3, r0, #4
 80091de:	9319      	str	r3, [sp, #100]	; 0x64
 80091e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80091e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80091e4:	9c04      	ldr	r4, [sp, #16]
 80091e6:	2b0f      	cmp	r3, #15
 80091e8:	f852 1c08 	ldr.w	r1, [r2, #-8]
 80091ec:	eb04 0003 	add.w	r0, r4, r3
 80091f0:	f852 7c04 	ldr.w	r7, [r2, #-4]
 80091f4:	9103      	str	r1, [sp, #12]
 80091f6:	9000      	str	r0, [sp, #0]
 80091f8:	f340 830b 	ble.w	8009812 <st_sssa8_ch_nn_mat_mult_kernel+0x6b2>
 80091fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80091fe:	463e      	mov	r6, r7
 8009200:	f8dd c058 	ldr.w	ip, [sp, #88]	; 0x58
 8009204:	468a      	mov	sl, r1
 8009206:	18c3      	adds	r3, r0, r3
 8009208:	9402      	str	r4, [sp, #8]
 800920a:	9305      	str	r3, [sp, #20]
 800920c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800920e:	9301      	str	r3, [sp, #4]
 8009210:	9b02      	ldr	r3, [sp, #8]
 8009212:	9800      	ldr	r0, [sp, #0]
 8009214:	6819      	ldr	r1, [r3, #0]
 8009216:	f8d0 9000 	ldr.w	r9, [r0]
 800921a:	9b01      	ldr	r3, [sp, #4]
 800921c:	ea4f 2831 	mov.w	r8, r1, ror #8
 8009220:	ea4f 2039 	mov.w	r0, r9, ror #8
 8009224:	fa2f f288 	sxtb16	r2, r8
 8009228:	f8d3 e000 	ldr.w	lr, [r3]
 800922c:	ea02 050b 	and.w	r5, r2, fp
 8009230:	fa2f f181 	sxtb16	r1, r1
 8009234:	fa2f f989 	sxtb16	r9, r9
 8009238:	fa1f f881 	uxth.w	r8, r1
 800923c:	fa1f f389 	uxth.w	r3, r9
 8009240:	fa2f f080 	sxtb16	r0, r0
 8009244:	ea00 040b 	and.w	r4, r0, fp
 8009248:	ea48 4802 	orr.w	r8, r8, r2, lsl #16
 800924c:	ea45 4111 	orr.w	r1, r5, r1, lsr #16
 8009250:	f8dc 2000 	ldr.w	r2, [ip]
 8009254:	ea44 4919 	orr.w	r9, r4, r9, lsr #16
 8009258:	9c03      	ldr	r4, [sp, #12]
 800925a:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 800925e:	fb28 430e 	smlad	r3, r8, lr, r4
 8009262:	fb28 a502 	smlad	r5, r8, r2, sl
 8009266:	fb20 770e 	smlad	r7, r0, lr, r7
 800926a:	fb20 6402 	smlad	r4, r0, r2, r6
 800926e:	9a01      	ldr	r2, [sp, #4]
 8009270:	f8dc 8004 	ldr.w	r8, [ip, #4]
 8009274:	f8d2 e004 	ldr.w	lr, [r2, #4]
 8009278:	fb21 330e 	smlad	r3, r1, lr, r3
 800927c:	fb21 5508 	smlad	r5, r1, r8, r5
 8009280:	fb29 770e 	smlad	r7, r9, lr, r7
 8009284:	fb29 4408 	smlad	r4, r9, r8, r4
 8009288:	9902      	ldr	r1, [sp, #8]
 800928a:	9e00      	ldr	r6, [sp, #0]
 800928c:	6848      	ldr	r0, [r1, #4]
 800928e:	6876      	ldr	r6, [r6, #4]
 8009290:	ea4f 2130 	mov.w	r1, r0, ror #8
 8009294:	f8d2 e008 	ldr.w	lr, [r2, #8]
 8009298:	fa2f f981 	sxtb16	r9, r1
 800929c:	ea09 0a0b 	and.w	sl, r9, fp
 80092a0:	ea4f 2836 	mov.w	r8, r6, ror #8
 80092a4:	fa2f f080 	sxtb16	r0, r0
 80092a8:	fa2f f888 	sxtb16	r8, r8
 80092ac:	b281      	uxth	r1, r0
 80092ae:	fa2f f686 	sxtb16	r6, r6
 80092b2:	ea4a 4010 	orr.w	r0, sl, r0, lsr #16
 80092b6:	ea08 0a0b 	and.w	sl, r8, fp
 80092ba:	b2b2      	uxth	r2, r6
 80092bc:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80092c0:	f8dc 9008 	ldr.w	r9, [ip, #8]
 80092c4:	ea4a 4616 	orr.w	r6, sl, r6, lsr #16
 80092c8:	ea42 4208 	orr.w	r2, r2, r8, lsl #16
 80092cc:	fb21 330e 	smlad	r3, r1, lr, r3
 80092d0:	fb21 5509 	smlad	r5, r1, r9, r5
 80092d4:	fb22 7e0e 	smlad	lr, r2, lr, r7
 80092d8:	fb22 4209 	smlad	r2, r2, r9, r4
 80092dc:	9901      	ldr	r1, [sp, #4]
 80092de:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80092e2:	68cf      	ldr	r7, [r1, #12]
 80092e4:	fb20 3307 	smlad	r3, r0, r7, r3
 80092e8:	fb20 5504 	smlad	r5, r0, r4, r5
 80092ec:	fb26 ee07 	smlad	lr, r6, r7, lr
 80092f0:	fb26 2404 	smlad	r4, r6, r4, r2
 80092f4:	9802      	ldr	r0, [sp, #8]
 80092f6:	9f00      	ldr	r7, [sp, #0]
 80092f8:	6882      	ldr	r2, [r0, #8]
 80092fa:	68be      	ldr	r6, [r7, #8]
 80092fc:	ea4f 2032 	mov.w	r0, r2, ror #8
 8009300:	690f      	ldr	r7, [r1, #16]
 8009302:	fa2f fa80 	sxtb16	sl, r0
 8009306:	ea0a 090b 	and.w	r9, sl, fp
 800930a:	ea4f 2836 	mov.w	r8, r6, ror #8
 800930e:	fa2f f282 	sxtb16	r2, r2
 8009312:	fa2f f888 	sxtb16	r8, r8
 8009316:	b290      	uxth	r0, r2
 8009318:	fa2f f686 	sxtb16	r6, r6
 800931c:	ea49 4212 	orr.w	r2, r9, r2, lsr #16
 8009320:	ea08 090b 	and.w	r9, r8, fp
 8009324:	b2b1      	uxth	r1, r6
 8009326:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
 800932a:	f8dc a010 	ldr.w	sl, [ip, #16]
 800932e:	ea49 4616 	orr.w	r6, r9, r6, lsr #16
 8009332:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
 8009336:	fb20 3307 	smlad	r3, r0, r7, r3
 800933a:	fb20 500a 	smlad	r0, r0, sl, r5
 800933e:	fb21 e707 	smlad	r7, r1, r7, lr
 8009342:	fb21 410a 	smlad	r1, r1, sl, r4
 8009346:	9c01      	ldr	r4, [sp, #4]
 8009348:	f8dc 5014 	ldr.w	r5, [ip, #20]
 800934c:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8009350:	fb22 3309 	smlad	r3, r2, r9, r3
 8009354:	fb22 0005 	smlad	r0, r2, r5, r0
 8009358:	fb26 7909 	smlad	r9, r6, r9, r7
 800935c:	fb26 1605 	smlad	r6, r6, r5, r1
 8009360:	9a02      	ldr	r2, [sp, #8]
 8009362:	9f01      	ldr	r7, [sp, #4]
 8009364:	68d5      	ldr	r5, [r2, #12]
 8009366:	3210      	adds	r2, #16
 8009368:	69bf      	ldr	r7, [r7, #24]
 800936a:	9202      	str	r2, [sp, #8]
 800936c:	9a00      	ldr	r2, [sp, #0]
 800936e:	68d4      	ldr	r4, [r2, #12]
 8009370:	3210      	adds	r2, #16
 8009372:	9200      	str	r2, [sp, #0]
 8009374:	ea4f 2235 	mov.w	r2, r5, ror #8
 8009378:	fa2f fa82 	sxtb16	sl, r2
 800937c:	ea0a 0e0b 	and.w	lr, sl, fp
 8009380:	ea4f 2834 	mov.w	r8, r4, ror #8
 8009384:	fa2f f585 	sxtb16	r5, r5
 8009388:	fa2f f888 	sxtb16	r8, r8
 800938c:	b2aa      	uxth	r2, r5
 800938e:	fa2f f484 	sxtb16	r4, r4
 8009392:	ea4e 4515 	orr.w	r5, lr, r5, lsr #16
 8009396:	ea08 0e0b 	and.w	lr, r8, fp
 800939a:	b2a1      	uxth	r1, r4
 800939c:	ea42 420a 	orr.w	r2, r2, sl, lsl #16
 80093a0:	f8dc a018 	ldr.w	sl, [ip, #24]
 80093a4:	ea4e 4414 	orr.w	r4, lr, r4, lsr #16
 80093a8:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
 80093ac:	fb22 3307 	smlad	r3, r2, r7, r3
 80093b0:	fb22 020a 	smlad	r2, r2, sl, r0
 80093b4:	fb21 9707 	smlad	r7, r1, r7, r9
 80093b8:	fb21 660a 	smlad	r6, r1, sl, r6
 80093bc:	9901      	ldr	r1, [sp, #4]
 80093be:	f10c 0c20 	add.w	ip, ip, #32
 80093c2:	f85c ec04 	ldr.w	lr, [ip, #-4]
 80093c6:	f8d1 901c 	ldr.w	r9, [r1, #28]
 80093ca:	3120      	adds	r1, #32
 80093cc:	9101      	str	r1, [sp, #4]
 80093ce:	fb25 3309 	smlad	r3, r5, r9, r3
 80093d2:	9303      	str	r3, [sp, #12]
 80093d4:	fb25 2a0e 	smlad	sl, r5, lr, r2
 80093d8:	fb24 7709 	smlad	r7, r4, r9, r7
 80093dc:	fb24 660e 	smlad	r6, r4, lr, r6
 80093e0:	9a00      	ldr	r2, [sp, #0]
 80093e2:	9b05      	ldr	r3, [sp, #20]
 80093e4:	429a      	cmp	r2, r3
 80093e6:	f47f af13 	bne.w	8009210 <st_sssa8_ch_nn_mat_mult_kernel+0xb0>
 80093ea:	9a04      	ldr	r2, [sp, #16]
 80093ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80093ee:	4611      	mov	r1, r2
 80093f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80093f2:	9307      	str	r3, [sp, #28]
 80093f4:	4419      	add	r1, r3
 80093f6:	9206      	str	r2, [sp, #24]
 80093f8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80093fa:	9104      	str	r1, [sp, #16]
 80093fc:	9205      	str	r2, [sp, #20]
 80093fe:	9915      	ldr	r1, [sp, #84]	; 0x54
 8009400:	428b      	cmp	r3, r1
 8009402:	da64      	bge.n	80094ce <st_sssa8_ch_nn_mat_mult_kernel+0x36e>
 8009404:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8009406:	1ad3      	subs	r3, r2, r3
 8009408:	9a04      	ldr	r2, [sp, #16]
 800940a:	089b      	lsrs	r3, r3, #2
 800940c:	9201      	str	r2, [sp, #4]
 800940e:	9a00      	ldr	r2, [sp, #0]
 8009410:	9312      	str	r3, [sp, #72]	; 0x48
 8009412:	3301      	adds	r3, #1
 8009414:	9311      	str	r3, [sp, #68]	; 0x44
 8009416:	009b      	lsls	r3, r3, #2
 8009418:	e9dd 9005 	ldrd	r9, r0, [sp, #20]
 800941c:	9310      	str	r3, [sp, #64]	; 0x40
 800941e:	18d3      	adds	r3, r2, r3
 8009420:	9302      	str	r3, [sp, #8]
 8009422:	9b01      	ldr	r3, [sp, #4]
 8009424:	f8d9 8000 	ldr.w	r8, [r9]
 8009428:	f853 4b04 	ldr.w	r4, [r3], #4
 800942c:	fa2f f184 	sxtb16	r1, r4
 8009430:	9301      	str	r3, [sp, #4]
 8009432:	ea4f 2534 	mov.w	r5, r4, ror #8
 8009436:	9b00      	ldr	r3, [sp, #0]
 8009438:	fa1f fe81 	uxth.w	lr, r1
 800943c:	fa2f f585 	sxtb16	r5, r5
 8009440:	f853 2b04 	ldr.w	r2, [r3], #4
 8009444:	ea05 040b 	and.w	r4, r5, fp
 8009448:	ea4e 4505 	orr.w	r5, lr, r5, lsl #16
 800944c:	f8d0 e000 	ldr.w	lr, [r0]
 8009450:	9300      	str	r3, [sp, #0]
 8009452:	ea4f 2c32 	mov.w	ip, r2, ror #8
 8009456:	ea44 4411 	orr.w	r4, r4, r1, lsr #16
 800945a:	fa2f fc8c 	sxtb16	ip, ip
 800945e:	fa2f f282 	sxtb16	r2, r2
 8009462:	ea0c 010b 	and.w	r1, ip, fp
 8009466:	b293      	uxth	r3, r2
 8009468:	ea41 4212 	orr.w	r2, r1, r2, lsr #16
 800946c:	9903      	ldr	r1, [sp, #12]
 800946e:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 8009472:	fb25 1108 	smlad	r1, r5, r8, r1
 8009476:	fb25 aa0e 	smlad	sl, r5, lr, sl
 800947a:	fb23 7708 	smlad	r7, r3, r8, r7
 800947e:	fb23 630e 	smlad	r3, r3, lr, r6
 8009482:	f8d9 5004 	ldr.w	r5, [r9, #4]
 8009486:	3008      	adds	r0, #8
 8009488:	f850 6c04 	ldr.w	r6, [r0, #-4]
 800948c:	f109 0908 	add.w	r9, r9, #8
 8009490:	fb24 1105 	smlad	r1, r4, r5, r1
 8009494:	9103      	str	r1, [sp, #12]
 8009496:	fb24 aa06 	smlad	sl, r4, r6, sl
 800949a:	fb22 7705 	smlad	r7, r2, r5, r7
 800949e:	fb22 3606 	smlad	r6, r2, r6, r3
 80094a2:	9a02      	ldr	r2, [sp, #8]
 80094a4:	9b00      	ldr	r3, [sp, #0]
 80094a6:	429a      	cmp	r2, r3
 80094a8:	d1bb      	bne.n	8009422 <st_sssa8_ch_nn_mat_mult_kernel+0x2c2>
 80094aa:	9904      	ldr	r1, [sp, #16]
 80094ac:	9810      	ldr	r0, [sp, #64]	; 0x40
 80094ae:	9a07      	ldr	r2, [sp, #28]
 80094b0:	4401      	add	r1, r0
 80094b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80094b4:	3204      	adds	r2, #4
 80094b6:	9104      	str	r1, [sp, #16]
 80094b8:	00db      	lsls	r3, r3, #3
 80094ba:	9912      	ldr	r1, [sp, #72]	; 0x48
 80094bc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80094c0:	9207      	str	r2, [sp, #28]
 80094c2:	9a06      	ldr	r2, [sp, #24]
 80094c4:	441a      	add	r2, r3
 80094c6:	9206      	str	r2, [sp, #24]
 80094c8:	9a05      	ldr	r2, [sp, #20]
 80094ca:	441a      	add	r2, r3
 80094cc:	9205      	str	r2, [sp, #20]
 80094ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80094d0:	9a07      	ldr	r2, [sp, #28]
 80094d2:	4295      	cmp	r5, r2
 80094d4:	dd4e      	ble.n	8009574 <st_sssa8_ch_nn_mat_mult_kernel+0x414>
 80094d6:	f102 0c01 	add.w	ip, r2, #1
 80094da:	9a05      	ldr	r2, [sp, #20]
 80094dc:	9b04      	ldr	r3, [sp, #16]
 80094de:	f9b2 0000 	ldrsh.w	r0, [r2]
 80094e2:	4565      	cmp	r5, ip
 80094e4:	9a06      	ldr	r2, [sp, #24]
 80094e6:	f993 4000 	ldrsb.w	r4, [r3]
 80094ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80094ee:	9b03      	ldr	r3, [sp, #12]
 80094f0:	9a00      	ldr	r2, [sp, #0]
 80094f2:	fb11 aa04 	smlabb	sl, r1, r4, sl
 80094f6:	fb10 3304 	smlabb	r3, r0, r4, r3
 80094fa:	f992 2000 	ldrsb.w	r2, [r2]
 80094fe:	9303      	str	r3, [sp, #12]
 8009500:	fb10 7702 	smlabb	r7, r0, r2, r7
 8009504:	fb11 6602 	smlabb	r6, r1, r2, r6
 8009508:	f340 817f 	ble.w	800980a <st_sssa8_ch_nn_mat_mult_kernel+0x6aa>
 800950c:	9a04      	ldr	r2, [sp, #16]
 800950e:	9b07      	ldr	r3, [sp, #28]
 8009510:	f992 4001 	ldrsb.w	r4, [r2, #1]
 8009514:	9a05      	ldr	r2, [sp, #20]
 8009516:	3302      	adds	r3, #2
 8009518:	9d03      	ldr	r5, [sp, #12]
 800951a:	f9b2 0002 	ldrsh.w	r0, [r2, #2]
 800951e:	9a06      	ldr	r2, [sp, #24]
 8009520:	fb10 5504 	smlabb	r5, r0, r4, r5
 8009524:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8009528:	9a00      	ldr	r2, [sp, #0]
 800952a:	9503      	str	r5, [sp, #12]
 800952c:	fb11 aa04 	smlabb	sl, r1, r4, sl
 8009530:	f992 2001 	ldrsb.w	r2, [r2, #1]
 8009534:	fb10 7702 	smlabb	r7, r0, r2, r7
 8009538:	fb11 6602 	smlabb	r6, r1, r2, r6
 800953c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800953e:	429a      	cmp	r2, r3
 8009540:	f340 8170 	ble.w	8009824 <st_sssa8_ch_nn_mat_mult_kernel+0x6c4>
 8009544:	9b05      	ldr	r3, [sp, #20]
 8009546:	9c04      	ldr	r4, [sp, #16]
 8009548:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800954c:	9b00      	ldr	r3, [sp, #0]
 800954e:	f993 1002 	ldrsb.w	r1, [r3, #2]
 8009552:	9b06      	ldr	r3, [sp, #24]
 8009554:	fb12 7701 	smlabb	r7, r2, r1, r7
 8009558:	f9b3 0004 	ldrsh.w	r0, [r3, #4]
 800955c:	f994 3002 	ldrsb.w	r3, [r4, #2]
 8009560:	fb10 6601 	smlabb	r6, r0, r1, r6
 8009564:	1ce1      	adds	r1, r4, #3
 8009566:	fb10 aa03 	smlabb	sl, r0, r3, sl
 800956a:	9104      	str	r1, [sp, #16]
 800956c:	9903      	ldr	r1, [sp, #12]
 800956e:	fb12 1203 	smlabb	r2, r2, r3, r1
 8009572:	9203      	str	r2, [sp, #12]
 8009574:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009576:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009578:	f933 4c04 	ldrsh.w	r4, [r3, #-4]
 800957c:	f852 1c08 	ldr.w	r1, [r2, #-8]
 8009580:	2c00      	cmp	r4, #0
 8009582:	9a08      	ldr	r2, [sp, #32]
 8009584:	f852 0c08 	ldr.w	r0, [r2, #-8]
 8009588:	f340 8120 	ble.w	80097cc <st_sssa8_ch_nn_mat_mult_kernel+0x66c>
 800958c:	9a03      	ldr	r2, [sp, #12]
 800958e:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8009592:	fb5a 0a01 	smmla	sl, sl, r1, r0
 8009596:	ea4f 0842 	mov.w	r8, r2, lsl #1
 800959a:	fb58 0801 	smmla	r8, r8, r1, r0
 800959e:	fa48 f804 	asr.w	r8, r8, r4
 80095a2:	f308 0807 	ssat	r8, #8, r8
 80095a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80095a8:	f802 8c02 	strb.w	r8, [r2, #-2]
 80095ac:	f933 1c04 	ldrsh.w	r1, [r3, #-4]
 80095b0:	fa4a fa01 	asr.w	sl, sl, r1
 80095b4:	f30a 0a07 	ssat	sl, #8, sl
 80095b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80095ba:	f803 ac02 	strb.w	sl, [r3, #-2]
 80095be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80095c0:	f934 3c02 	ldrsh.w	r3, [r4, #-2]
 80095c4:	2b00      	cmp	r3, #0
 80095c6:	f340 80de 	ble.w	8009786 <st_sssa8_ch_nn_mat_mult_kernel+0x626>
 80095ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80095cc:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80095d0:	9808      	ldr	r0, [sp, #32]
 80095d2:	0071      	lsls	r1, r6, #1
 80095d4:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80095d8:	f850 0c04 	ldr.w	r0, [r0, #-4]
 80095dc:	fb5e 0e02 	smmla	lr, lr, r2, r0
 80095e0:	fb51 0102 	smmla	r1, r1, r2, r0
 80095e4:	fa4e fe03 	asr.w	lr, lr, r3
 80095e8:	f30e 0307 	ssat	r3, #8, lr
 80095ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80095ee:	f802 3c01 	strb.w	r3, [r2, #-1]
 80095f2:	f934 0c02 	ldrsh.w	r0, [r4, #-2]
 80095f6:	fa41 f000 	asr.w	r0, r1, r0
 80095fa:	f300 0007 	ssat	r0, #8, r0
 80095fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009600:	f803 0c01 	strb.w	r0, [r3, #-1]
 8009604:	9a04      	ldr	r2, [sp, #16]
 8009606:	990d      	ldr	r1, [sp, #52]	; 0x34
 8009608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800960a:	440a      	add	r2, r1
 800960c:	3308      	adds	r3, #8
 800960e:	9204      	str	r2, [sp, #16]
 8009610:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009612:	930e      	str	r3, [sp, #56]	; 0x38
 8009614:	3204      	adds	r2, #4
 8009616:	920b      	str	r2, [sp, #44]	; 0x2c
 8009618:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800961a:	3208      	adds	r2, #8
 800961c:	920a      	str	r2, [sp, #40]	; 0x28
 800961e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8009620:	3202      	adds	r2, #2
 8009622:	9209      	str	r2, [sp, #36]	; 0x24
 8009624:	9a08      	ldr	r2, [sp, #32]
 8009626:	3208      	adds	r2, #8
 8009628:	9208      	str	r2, [sp, #32]
 800962a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800962c:	3202      	adds	r2, #2
 800962e:	920c      	str	r2, [sp, #48]	; 0x30
 8009630:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8009632:	4293      	cmp	r3, r2
 8009634:	f47f add4 	bne.w	80091e0 <st_sssa8_ch_nn_mat_mult_kernel+0x80>
 8009638:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800963a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800963c:	3301      	adds	r3, #1
 800963e:	00da      	lsls	r2, r3, #3
 8009640:	0059      	lsls	r1, r3, #1
 8009642:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 8009646:	9329      	str	r3, [sp, #164]	; 0xa4
 8009648:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800964a:	4413      	add	r3, r2
 800964c:	931a      	str	r3, [sp, #104]	; 0x68
 800964e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009650:	4413      	add	r3, r2
 8009652:	932a      	str	r3, [sp, #168]	; 0xa8
 8009654:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8009656:	4413      	add	r3, r2
 8009658:	932b      	str	r3, [sp, #172]	; 0xac
 800965a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800965c:	440b      	add	r3, r1
 800965e:	932c      	str	r3, [sp, #176]	; 0xb0
 8009660:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8009662:	440b      	add	r3, r1
 8009664:	931b      	str	r3, [sp, #108]	; 0x6c
 8009666:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009668:	07da      	lsls	r2, r3, #31
 800966a:	f140 8086 	bpl.w	800977a <st_sssa8_ch_nn_mat_mult_kernel+0x61a>
 800966e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8009670:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8009672:	6818      	ldr	r0, [r3, #0]
 8009674:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009676:	ea5f 0a93 	movs.w	sl, r3, lsr #2
 800967a:	eb07 0943 	add.w	r9, r7, r3, lsl #1
 800967e:	f000 80f6 	beq.w	800986e <st_sssa8_ch_nn_mat_mult_kernel+0x70e>
 8009682:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009686:	9d04      	ldr	r5, [sp, #16]
 8009688:	46cc      	mov	ip, r9
 800968a:	4602      	mov	r2, r0
 800968c:	fa1f fa8a 	uxth.w	sl, sl
 8009690:	f8df 81e0 	ldr.w	r8, [pc, #480]	; 8009874 <st_sssa8_ch_nn_mat_mult_kernel+0x714>
 8009694:	f10a 0a01 	add.w	sl, sl, #1
 8009698:	eb05 0e8a 	add.w	lr, r5, sl, lsl #2
 800969c:	f855 1b04 	ldr.w	r1, [r5], #4
 80096a0:	fa2f f481 	sxtb16	r4, r1
 80096a4:	ea4f 2331 	mov.w	r3, r1, ror #8
 80096a8:	683e      	ldr	r6, [r7, #0]
 80096aa:	b2a1      	uxth	r1, r4
 80096ac:	fa2f f383 	sxtb16	r3, r3
 80096b0:	ea03 0b08 	and.w	fp, r3, r8
 80096b4:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80096b8:	ea4b 4414 	orr.w	r4, fp, r4, lsr #16
 80096bc:	fb23 0606 	smlad	r6, r3, r6, r0
 80096c0:	f8dc 1000 	ldr.w	r1, [ip]
 80096c4:	fb23 2301 	smlad	r3, r3, r1, r2
 80096c8:	6878      	ldr	r0, [r7, #4]
 80096ca:	f10c 0c08 	add.w	ip, ip, #8
 80096ce:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 80096d2:	3708      	adds	r7, #8
 80096d4:	fb24 6000 	smlad	r0, r4, r0, r6
 80096d8:	fb24 3202 	smlad	r2, r4, r2, r3
 80096dc:	45ae      	cmp	lr, r5
 80096de:	d1dd      	bne.n	800969c <st_sssa8_ch_nn_mat_mult_kernel+0x53c>
 80096e0:	ea4f 0aca 	mov.w	sl, sl, lsl #3
 80096e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80096e6:	9504      	str	r5, [sp, #16]
 80096e8:	4453      	add	r3, sl
 80096ea:	44d1      	add	r9, sl
 80096ec:	9313      	str	r3, [sp, #76]	; 0x4c
 80096ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80096f0:	f013 0303 	ands.w	r3, r3, #3
 80096f4:	d020      	beq.n	8009738 <st_sssa8_ch_nn_mat_mult_kernel+0x5d8>
 80096f6:	9e04      	ldr	r6, [sp, #16]
 80096f8:	2b01      	cmp	r3, #1
 80096fa:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80096fc:	f996 1000 	ldrsb.w	r1, [r6]
 8009700:	883d      	ldrh	r5, [r7, #0]
 8009702:	f8b9 4000 	ldrh.w	r4, [r9]
 8009706:	fb15 0001 	smlabb	r0, r5, r1, r0
 800970a:	fb14 2201 	smlabb	r2, r4, r1, r2
 800970e:	d013      	beq.n	8009738 <st_sssa8_ch_nn_mat_mult_kernel+0x5d8>
 8009710:	f996 1001 	ldrsb.w	r1, [r6, #1]
 8009714:	2b02      	cmp	r3, #2
 8009716:	887d      	ldrh	r5, [r7, #2]
 8009718:	f8b9 4002 	ldrh.w	r4, [r9, #2]
 800971c:	fb15 0001 	smlabb	r0, r5, r1, r0
 8009720:	fb14 2201 	smlabb	r2, r4, r1, r2
 8009724:	d008      	beq.n	8009738 <st_sssa8_ch_nn_mat_mult_kernel+0x5d8>
 8009726:	f996 3002 	ldrsb.w	r3, [r6, #2]
 800972a:	88bc      	ldrh	r4, [r7, #4]
 800972c:	f8b9 1004 	ldrh.w	r1, [r9, #4]
 8009730:	fb14 0003 	smlabb	r0, r4, r3, r0
 8009734:	fb11 2203 	smlabb	r2, r1, r3, r2
 8009738:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800973a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800973e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8009740:	2e00      	cmp	r6, #0
 8009742:	f103 0101 	add.w	r1, r3, #1
 8009746:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8009748:	681d      	ldr	r5, [r3, #0]
 800974a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800974c:	681c      	ldr	r4, [r3, #0]
 800974e:	dd6d      	ble.n	800982c <st_sssa8_ch_nn_mat_mult_kernel+0x6cc>
 8009750:	0040      	lsls	r0, r0, #1
 8009752:	0053      	lsls	r3, r2, #1
 8009754:	fb50 4205 	smmla	r2, r0, r5, r4
 8009758:	fb53 4305 	smmla	r3, r3, r5, r4
 800975c:	4132      	asrs	r2, r6
 800975e:	f302 0207 	ssat	r2, #8, r2
 8009762:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8009764:	7002      	strb	r2, [r0, #0]
 8009766:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8009768:	f9b2 2000 	ldrsh.w	r2, [r2]
 800976c:	4113      	asrs	r3, r2
 800976e:	f303 0307 	ssat	r3, #8, r3
 8009772:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8009774:	912c      	str	r1, [sp, #176]	; 0xb0
 8009776:	7013      	strb	r3, [r2, #0]
 8009778:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800977a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800977c:	4413      	add	r3, r2
 800977e:	4618      	mov	r0, r3
 8009780:	b01f      	add	sp, #124	; 0x7c
 8009782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009786:	f1c3 0301 	rsb	r3, r3, #1
 800978a:	fa07 fe03 	lsl.w	lr, r7, r3
 800978e:	f30e 051f 	ssat	r5, #32, lr
 8009792:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009794:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8009798:	fb55 f512 	smmulr	r5, r5, r2
 800979c:	fa06 f103 	lsl.w	r1, r6, r3
 80097a0:	f301 011f 	ssat	r1, #32, r1
 80097a4:	fb51 f112 	smmulr	r1, r1, r2
 80097a8:	9b08      	ldr	r3, [sp, #32]
 80097aa:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80097ae:	442a      	add	r2, r5
 80097b0:	f302 0207 	ssat	r2, #8, r2
 80097b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80097b6:	f800 2c01 	strb.w	r2, [r0, #-1]
 80097ba:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80097be:	440b      	add	r3, r1
 80097c0:	f303 0307 	ssat	r3, #8, r3
 80097c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80097c6:	f802 3c01 	strb.w	r3, [r2, #-1]
 80097ca:	e71b      	b.n	8009604 <st_sssa8_ch_nn_mat_mult_kernel+0x4a4>
 80097cc:	f1c4 0301 	rsb	r3, r4, #1
 80097d0:	9a03      	ldr	r2, [sp, #12]
 80097d2:	fa02 f803 	lsl.w	r8, r2, r3
 80097d6:	f308 041f 	ssat	r4, #32, r8
 80097da:	fb54 f411 	smmulr	r4, r4, r1
 80097de:	fa0a f303 	lsl.w	r3, sl, r3
 80097e2:	f303 031f 	ssat	r3, #32, r3
 80097e6:	fb53 f111 	smmulr	r1, r3, r1
 80097ea:	4420      	add	r0, r4
 80097ec:	f300 0007 	ssat	r0, #8, r0
 80097f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80097f2:	f803 0c02 	strb.w	r0, [r3, #-2]
 80097f6:	9b08      	ldr	r3, [sp, #32]
 80097f8:	f853 3c08 	ldr.w	r3, [r3, #-8]
 80097fc:	4419      	add	r1, r3
 80097fe:	f301 0107 	ssat	r1, #8, r1
 8009802:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009804:	f803 1c02 	strb.w	r1, [r3, #-2]
 8009808:	e6d9      	b.n	80095be <st_sssa8_ch_nn_mat_mult_kernel+0x45e>
 800980a:	9b04      	ldr	r3, [sp, #16]
 800980c:	3301      	adds	r3, #1
 800980e:	9304      	str	r3, [sp, #16]
 8009810:	e6b0      	b.n	8009574 <st_sssa8_ch_nn_mat_mult_kernel+0x414>
 8009812:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009814:	468a      	mov	sl, r1
 8009816:	463e      	mov	r6, r7
 8009818:	9306      	str	r3, [sp, #24]
 800981a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800981c:	9305      	str	r3, [sp, #20]
 800981e:	2300      	movs	r3, #0
 8009820:	9307      	str	r3, [sp, #28]
 8009822:	e5ec      	b.n	80093fe <st_sssa8_ch_nn_mat_mult_kernel+0x29e>
 8009824:	9b04      	ldr	r3, [sp, #16]
 8009826:	3302      	adds	r3, #2
 8009828:	9304      	str	r3, [sp, #16]
 800982a:	e6a3      	b.n	8009574 <st_sssa8_ch_nn_mat_mult_kernel+0x414>
 800982c:	f1c6 0601 	rsb	r6, r6, #1
 8009830:	fa00 f306 	lsl.w	r3, r0, r6
 8009834:	f303 031f 	ssat	r3, #32, r3
 8009838:	fb53 f315 	smmulr	r3, r3, r5
 800983c:	40b2      	lsls	r2, r6
 800983e:	f302 021f 	ssat	r2, #32, r2
 8009842:	fb52 f215 	smmulr	r2, r2, r5
 8009846:	4423      	add	r3, r4
 8009848:	f303 0307 	ssat	r3, #8, r3
 800984c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800984e:	7003      	strb	r3, [r0, #0]
 8009850:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8009852:	681b      	ldr	r3, [r3, #0]
 8009854:	4413      	add	r3, r2
 8009856:	f303 0307 	ssat	r3, #8, r3
 800985a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800985c:	912c      	str	r1, [sp, #176]	; 0xb0
 800985e:	7013      	strb	r3, [r2, #0]
 8009860:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009862:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8009864:	4413      	add	r3, r2
 8009866:	4618      	mov	r0, r3
 8009868:	b01f      	add	sp, #124	; 0x7c
 800986a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800986e:	4602      	mov	r2, r0
 8009870:	e73e      	b.n	80096f0 <st_sssa8_ch_nn_mat_mult_kernel+0x590>
 8009872:	bf00      	nop
 8009874:	ffff0000 	.word	0xffff0000

08009878 <st_int8_to16_no_shift>:
 8009878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800987c:	f1b2 0610 	subs.w	r6, r2, #16
 8009880:	f100 8092 	bmi.w	80099a8 <st_int8_to16_no_shift+0x130>
 8009884:	0936      	lsrs	r6, r6, #4
 8009886:	4603      	mov	r3, r0
 8009888:	4f4b      	ldr	r7, [pc, #300]	; (80099b8 <st_int8_to16_no_shift+0x140>)
 800988a:	f106 0801 	add.w	r8, r6, #1
 800988e:	eb01 1448 	add.w	r4, r1, r8, lsl #5
 8009892:	681d      	ldr	r5, [r3, #0]
 8009894:	3120      	adds	r1, #32
 8009896:	685e      	ldr	r6, [r3, #4]
 8009898:	3310      	adds	r3, #16
 800989a:	ea4f 2c35 	mov.w	ip, r5, ror #8
 800989e:	fa2f fc8c 	sxtb16	ip, ip
 80098a2:	ea0c 0a07 	and.w	sl, ip, r7
 80098a6:	ea4f 2e36 	mov.w	lr, r6, ror #8
 80098aa:	fa2f f585 	sxtb16	r5, r5
 80098ae:	fa2f fe8e 	sxtb16	lr, lr
 80098b2:	fa1f fb85 	uxth.w	fp, r5
 80098b6:	ea0e 0907 	and.w	r9, lr, r7
 80098ba:	ea4a 4a15 	orr.w	sl, sl, r5, lsr #16
 80098be:	fa2f f686 	sxtb16	r6, r6
 80098c2:	b2b5      	uxth	r5, r6
 80098c4:	f841 ac1c 	str.w	sl, [r1, #-28]
 80098c8:	ea4b 4c0c 	orr.w	ip, fp, ip, lsl #16
 80098cc:	ea49 4616 	orr.w	r6, r9, r6, lsr #16
 80098d0:	ea45 450e 	orr.w	r5, r5, lr, lsl #16
 80098d4:	f841 cc20 	str.w	ip, [r1, #-32]
 80098d8:	f841 6c14 	str.w	r6, [r1, #-20]
 80098dc:	f841 5c18 	str.w	r5, [r1, #-24]
 80098e0:	f853 6c08 	ldr.w	r6, [r3, #-8]
 80098e4:	f853 5c04 	ldr.w	r5, [r3, #-4]
 80098e8:	ea4f 2e36 	mov.w	lr, r6, ror #8
 80098ec:	fa2f fe8e 	sxtb16	lr, lr
 80098f0:	ea0e 0a07 	and.w	sl, lr, r7
 80098f4:	ea4f 2c35 	mov.w	ip, r5, ror #8
 80098f8:	fa2f f686 	sxtb16	r6, r6
 80098fc:	fa2f f98c 	sxtb16	r9, ip
 8009900:	fa1f fb86 	uxth.w	fp, r6
 8009904:	fa2f f585 	sxtb16	r5, r5
 8009908:	ea4a 4616 	orr.w	r6, sl, r6, lsr #16
 800990c:	ea09 0a07 	and.w	sl, r9, r7
 8009910:	fa1f fc85 	uxth.w	ip, r5
 8009914:	ea4b 4e0e 	orr.w	lr, fp, lr, lsl #16
 8009918:	f841 6c0c 	str.w	r6, [r1, #-12]
 800991c:	ea4a 4515 	orr.w	r5, sl, r5, lsr #16
 8009920:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
 8009924:	f841 ec10 	str.w	lr, [r1, #-16]
 8009928:	f841 5c04 	str.w	r5, [r1, #-4]
 800992c:	f841 cc08 	str.w	ip, [r1, #-8]
 8009930:	428c      	cmp	r4, r1
 8009932:	d1ae      	bne.n	8009892 <st_int8_to16_no_shift+0x1a>
 8009934:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8009938:	f1a2 0c04 	sub.w	ip, r2, #4
 800993c:	45b4      	cmp	ip, r6
 800993e:	4430      	add	r0, r6
 8009940:	db38      	blt.n	80099b4 <st_int8_to16_no_shift+0x13c>
 8009942:	ebac 0c06 	sub.w	ip, ip, r6
 8009946:	4607      	mov	r7, r0
 8009948:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80099b8 <st_int8_to16_no_shift+0x140>
 800994c:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
 8009950:	f10c 0801 	add.w	r8, ip, #1
 8009954:	eb04 05c8 	add.w	r5, r4, r8, lsl #3
 8009958:	f857 3b04 	ldr.w	r3, [r7], #4
 800995c:	3408      	adds	r4, #8
 800995e:	fa2f f983 	sxtb16	r9, r3
 8009962:	ea4f 2333 	mov.w	r3, r3, ror #8
 8009966:	fa1f f189 	uxth.w	r1, r9
 800996a:	fa2f f383 	sxtb16	r3, r3
 800996e:	ea03 0a0e 	and.w	sl, r3, lr
 8009972:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8009976:	ea4a 4919 	orr.w	r9, sl, r9, lsr #16
 800997a:	f844 3c08 	str.w	r3, [r4, #-8]
 800997e:	f844 9c04 	str.w	r9, [r4, #-4]
 8009982:	42a5      	cmp	r5, r4
 8009984:	d1e8      	bne.n	8009958 <st_int8_to16_no_shift+0xe0>
 8009986:	3604      	adds	r6, #4
 8009988:	eb00 0088 	add.w	r0, r0, r8, lsl #2
 800998c:	eb06 068c 	add.w	r6, r6, ip, lsl #2
 8009990:	42b2      	cmp	r2, r6
 8009992:	dd07      	ble.n	80099a4 <st_int8_to16_no_shift+0x12c>
 8009994:	1b92      	subs	r2, r2, r6
 8009996:	4402      	add	r2, r0
 8009998:	f910 3b01 	ldrsb.w	r3, [r0], #1
 800999c:	4290      	cmp	r0, r2
 800999e:	f825 3b02 	strh.w	r3, [r5], #2
 80099a2:	d1f9      	bne.n	8009998 <st_int8_to16_no_shift+0x120>
 80099a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099a8:	2600      	movs	r6, #0
 80099aa:	f1a2 0c04 	sub.w	ip, r2, #4
 80099ae:	460c      	mov	r4, r1
 80099b0:	45b4      	cmp	ip, r6
 80099b2:	dac6      	bge.n	8009942 <st_int8_to16_no_shift+0xca>
 80099b4:	4625      	mov	r5, r4
 80099b6:	e7eb      	b.n	8009990 <st_int8_to16_no_shift+0x118>
 80099b8:	ffff0000 	.word	0xffff0000

080099bc <st_int8_to16_dual>:
 80099bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099c0:	b08b      	sub	sp, #44	; 0x2c
 80099c2:	468a      	mov	sl, r1
 80099c4:	eb00 0802 	add.w	r8, r0, r2
 80099c8:	9309      	str	r3, [sp, #36]	; 0x24
 80099ca:	085b      	lsrs	r3, r3, #1
 80099cc:	9200      	str	r2, [sp, #0]
 80099ce:	9301      	str	r3, [sp, #4]
 80099d0:	f000 8123 	beq.w	8009c1a <st_int8_to16_dual+0x25e>
 80099d4:	f1a2 0310 	sub.w	r3, r2, #16
 80099d8:	3a04      	subs	r2, #4
 80099da:	46c2      	mov	sl, r8
 80099dc:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 8009c94 <st_int8_to16_dual+0x2d8>
 80099e0:	9307      	str	r3, [sp, #28]
 80099e2:	091b      	lsrs	r3, r3, #4
 80099e4:	9206      	str	r2, [sp, #24]
 80099e6:	4688      	mov	r8, r1
 80099e8:	3301      	adds	r3, #1
 80099ea:	011a      	lsls	r2, r3, #4
 80099ec:	019b      	lsls	r3, r3, #6
 80099ee:	9202      	str	r2, [sp, #8]
 80099f0:	9308      	str	r3, [sp, #32]
 80099f2:	9b07      	ldr	r3, [sp, #28]
 80099f4:	2b00      	cmp	r3, #0
 80099f6:	f2c0 8145 	blt.w	8009c84 <st_int8_to16_dual+0x2c8>
 80099fa:	9b02      	ldr	r3, [sp, #8]
 80099fc:	4655      	mov	r5, sl
 80099fe:	18c4      	adds	r4, r0, r3
 8009a00:	4643      	mov	r3, r8
 8009a02:	682e      	ldr	r6, [r5, #0]
 8009a04:	3010      	adds	r0, #16
 8009a06:	f850 1c10 	ldr.w	r1, [r0, #-16]
 8009a0a:	3510      	adds	r5, #16
 8009a0c:	fa2f f286 	sxtb16	r2, r6
 8009a10:	ea4f 2c36 	mov.w	ip, r6, ror #8
 8009a14:	3340      	adds	r3, #64	; 0x40
 8009a16:	fa2f fc8c 	sxtb16	ip, ip
 8009a1a:	ea0c 0609 	and.w	r6, ip, r9
 8009a1e:	ea4f 2731 	mov.w	r7, r1, ror #8
 8009a22:	fa2f f181 	sxtb16	r1, r1
 8009a26:	ea46 4612 	orr.w	r6, r6, r2, lsr #16
 8009a2a:	fa1f fe81 	uxth.w	lr, r1
 8009a2e:	fa2f f787 	sxtb16	r7, r7
 8009a32:	b292      	uxth	r2, r2
 8009a34:	ea07 0b09 	and.w	fp, r7, r9
 8009a38:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
 8009a3c:	f843 6c34 	str.w	r6, [r3, #-52]
 8009a40:	ea4b 4111 	orr.w	r1, fp, r1, lsr #16
 8009a44:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8009a48:	f843 7c40 	str.w	r7, [r3, #-64]
 8009a4c:	f843 1c38 	str.w	r1, [r3, #-56]
 8009a50:	f843 2c3c 	str.w	r2, [r3, #-60]
 8009a54:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 8009a58:	f850 1c0c 	ldr.w	r1, [r0, #-12]
 8009a5c:	fa2f f286 	sxtb16	r2, r6
 8009a60:	ea4f 2c36 	mov.w	ip, r6, ror #8
 8009a64:	fa2f fc8c 	sxtb16	ip, ip
 8009a68:	ea0c 0609 	and.w	r6, ip, r9
 8009a6c:	ea4f 2731 	mov.w	r7, r1, ror #8
 8009a70:	fa2f f181 	sxtb16	r1, r1
 8009a74:	ea46 4612 	orr.w	r6, r6, r2, lsr #16
 8009a78:	fa1f fe81 	uxth.w	lr, r1
 8009a7c:	fa2f f787 	sxtb16	r7, r7
 8009a80:	b292      	uxth	r2, r2
 8009a82:	ea07 0b09 	and.w	fp, r7, r9
 8009a86:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
 8009a8a:	f843 6c24 	str.w	r6, [r3, #-36]
 8009a8e:	ea4b 4111 	orr.w	r1, fp, r1, lsr #16
 8009a92:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8009a96:	f843 7c30 	str.w	r7, [r3, #-48]
 8009a9a:	f843 1c28 	str.w	r1, [r3, #-40]
 8009a9e:	f843 2c2c 	str.w	r2, [r3, #-44]
 8009aa2:	f855 6c08 	ldr.w	r6, [r5, #-8]
 8009aa6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009aaa:	fa2f f286 	sxtb16	r2, r6
 8009aae:	ea4f 2c36 	mov.w	ip, r6, ror #8
 8009ab2:	fa2f fc8c 	sxtb16	ip, ip
 8009ab6:	ea0c 0609 	and.w	r6, ip, r9
 8009aba:	ea4f 2731 	mov.w	r7, r1, ror #8
 8009abe:	fa2f f181 	sxtb16	r1, r1
 8009ac2:	ea46 4612 	orr.w	r6, r6, r2, lsr #16
 8009ac6:	fa1f fe81 	uxth.w	lr, r1
 8009aca:	fa2f f787 	sxtb16	r7, r7
 8009ace:	b292      	uxth	r2, r2
 8009ad0:	ea07 0b09 	and.w	fp, r7, r9
 8009ad4:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
 8009ad8:	f843 6c14 	str.w	r6, [r3, #-20]
 8009adc:	ea4b 4111 	orr.w	r1, fp, r1, lsr #16
 8009ae0:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8009ae4:	f843 7c20 	str.w	r7, [r3, #-32]
 8009ae8:	f843 1c18 	str.w	r1, [r3, #-24]
 8009aec:	f843 2c1c 	str.w	r2, [r3, #-28]
 8009af0:	f855 6c04 	ldr.w	r6, [r5, #-4]
 8009af4:	f850 1c04 	ldr.w	r1, [r0, #-4]
 8009af8:	4284      	cmp	r4, r0
 8009afa:	fa2f f286 	sxtb16	r2, r6
 8009afe:	ea4f 2c36 	mov.w	ip, r6, ror #8
 8009b02:	fa2f fc8c 	sxtb16	ip, ip
 8009b06:	ea0c 0609 	and.w	r6, ip, r9
 8009b0a:	ea4f 2731 	mov.w	r7, r1, ror #8
 8009b0e:	fa2f f181 	sxtb16	r1, r1
 8009b12:	fa2f f787 	sxtb16	r7, r7
 8009b16:	fa1f fe81 	uxth.w	lr, r1
 8009b1a:	ea07 0b09 	and.w	fp, r7, r9
 8009b1e:	ea46 4612 	orr.w	r6, r6, r2, lsr #16
 8009b22:	b292      	uxth	r2, r2
 8009b24:	ea4b 4111 	orr.w	r1, fp, r1, lsr #16
 8009b28:	f843 6c04 	str.w	r6, [r3, #-4]
 8009b2c:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
 8009b30:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8009b34:	f843 1c08 	str.w	r1, [r3, #-8]
 8009b38:	f843 7c10 	str.w	r7, [r3, #-16]
 8009b3c:	f843 2c0c 	str.w	r2, [r3, #-12]
 8009b40:	f47f af5f 	bne.w	8009a02 <st_int8_to16_dual+0x46>
 8009b44:	9b08      	ldr	r3, [sp, #32]
 8009b46:	4498      	add	r8, r3
 8009b48:	9b02      	ldr	r3, [sp, #8]
 8009b4a:	449a      	add	sl, r3
 8009b4c:	469c      	mov	ip, r3
 8009b4e:	9b06      	ldr	r3, [sp, #24]
 8009b50:	4563      	cmp	r3, ip
 8009b52:	db3f      	blt.n	8009bd4 <st_int8_to16_dual+0x218>
 8009b54:	eba3 030c 	sub.w	r3, r3, ip
 8009b58:	4657      	mov	r7, sl
 8009b5a:	4645      	mov	r5, r8
 8009b5c:	089b      	lsrs	r3, r3, #2
 8009b5e:	9303      	str	r3, [sp, #12]
 8009b60:	3301      	adds	r3, #1
 8009b62:	9304      	str	r3, [sp, #16]
 8009b64:	009b      	lsls	r3, r3, #2
 8009b66:	eb04 0e03 	add.w	lr, r4, r3
 8009b6a:	9305      	str	r3, [sp, #20]
 8009b6c:	f854 2b04 	ldr.w	r2, [r4], #4
 8009b70:	3510      	adds	r5, #16
 8009b72:	f857 3b04 	ldr.w	r3, [r7], #4
 8009b76:	ea4f 2032 	mov.w	r0, r2, ror #8
 8009b7a:	4574      	cmp	r4, lr
 8009b7c:	fa2f f080 	sxtb16	r0, r0
 8009b80:	ea00 0609 	and.w	r6, r0, r9
 8009b84:	ea4f 2133 	mov.w	r1, r3, ror #8
 8009b88:	fa2f f282 	sxtb16	r2, r2
 8009b8c:	fa2f f181 	sxtb16	r1, r1
 8009b90:	fa1f fb82 	uxth.w	fp, r2
 8009b94:	ea46 4212 	orr.w	r2, r6, r2, lsr #16
 8009b98:	ea01 0609 	and.w	r6, r1, r9
 8009b9c:	fa2f f383 	sxtb16	r3, r3
 8009ba0:	ea46 4613 	orr.w	r6, r6, r3, lsr #16
 8009ba4:	f845 2c08 	str.w	r2, [r5, #-8]
 8009ba8:	b29b      	uxth	r3, r3
 8009baa:	ea4b 4000 	orr.w	r0, fp, r0, lsl #16
 8009bae:	f845 6c04 	str.w	r6, [r5, #-4]
 8009bb2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8009bb6:	f845 0c10 	str.w	r0, [r5, #-16]
 8009bba:	f845 3c0c 	str.w	r3, [r5, #-12]
 8009bbe:	d1d5      	bne.n	8009b6c <st_int8_to16_dual+0x1b0>
 8009bc0:	9b04      	ldr	r3, [sp, #16]
 8009bc2:	f10c 0c04 	add.w	ip, ip, #4
 8009bc6:	eb08 1803 	add.w	r8, r8, r3, lsl #4
 8009bca:	9b05      	ldr	r3, [sp, #20]
 8009bcc:	449a      	add	sl, r3
 8009bce:	9b03      	ldr	r3, [sp, #12]
 8009bd0:	eb0c 0c83 	add.w	ip, ip, r3, lsl #2
 8009bd4:	9b00      	ldr	r3, [sp, #0]
 8009bd6:	4563      	cmp	r3, ip
 8009bd8:	dd14      	ble.n	8009c04 <st_int8_to16_dual+0x248>
 8009bda:	eba3 0c0c 	sub.w	ip, r3, ip
 8009bde:	4652      	mov	r2, sl
 8009be0:	f108 0304 	add.w	r3, r8, #4
 8009be4:	eb04 000c 	add.w	r0, r4, ip
 8009be8:	f914 1b01 	ldrsb.w	r1, [r4], #1
 8009bec:	3304      	adds	r3, #4
 8009bee:	f823 1c08 	strh.w	r1, [r3, #-8]
 8009bf2:	4284      	cmp	r4, r0
 8009bf4:	f912 1b01 	ldrsb.w	r1, [r2], #1
 8009bf8:	f823 1c06 	strh.w	r1, [r3, #-6]
 8009bfc:	d1f4      	bne.n	8009be8 <st_int8_to16_dual+0x22c>
 8009bfe:	44e2      	add	sl, ip
 8009c00:	eb08 088c 	add.w	r8, r8, ip, lsl #2
 8009c04:	9b01      	ldr	r3, [sp, #4]
 8009c06:	9a00      	ldr	r2, [sp, #0]
 8009c08:	3b01      	subs	r3, #1
 8009c0a:	18a0      	adds	r0, r4, r2
 8009c0c:	4492      	add	sl, r2
 8009c0e:	b29b      	uxth	r3, r3
 8009c10:	9301      	str	r3, [sp, #4]
 8009c12:	2b00      	cmp	r3, #0
 8009c14:	f47f aeed 	bne.w	80099f2 <st_int8_to16_dual+0x36>
 8009c18:	46c2      	mov	sl, r8
 8009c1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c1c:	07db      	lsls	r3, r3, #31
 8009c1e:	d52e      	bpl.n	8009c7e <st_int8_to16_dual+0x2c2>
 8009c20:	9b00      	ldr	r3, [sp, #0]
 8009c22:	3b04      	subs	r3, #4
 8009c24:	d432      	bmi.n	8009c8c <st_int8_to16_dual+0x2d0>
 8009c26:	089b      	lsrs	r3, r3, #2
 8009c28:	4605      	mov	r5, r0
 8009c2a:	4f1a      	ldr	r7, [pc, #104]	; (8009c94 <st_int8_to16_dual+0x2d8>)
 8009c2c:	1c5e      	adds	r6, r3, #1
 8009c2e:	eb0a 04c6 	add.w	r4, sl, r6, lsl #3
 8009c32:	f855 3b04 	ldr.w	r3, [r5], #4
 8009c36:	f10a 0a08 	add.w	sl, sl, #8
 8009c3a:	fa2f fc83 	sxtb16	ip, r3
 8009c3e:	ea4f 2333 	mov.w	r3, r3, ror #8
 8009c42:	fa1f f18c 	uxth.w	r1, ip
 8009c46:	fa2f f383 	sxtb16	r3, r3
 8009c4a:	ea03 0207 	and.w	r2, r3, r7
 8009c4e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8009c52:	ea42 421c 	orr.w	r2, r2, ip, lsr #16
 8009c56:	f84a 3c08 	str.w	r3, [sl, #-8]
 8009c5a:	f84a 2c04 	str.w	r2, [sl, #-4]
 8009c5e:	4554      	cmp	r4, sl
 8009c60:	d1e7      	bne.n	8009c32 <st_int8_to16_dual+0x276>
 8009c62:	00b3      	lsls	r3, r6, #2
 8009c64:	4418      	add	r0, r3
 8009c66:	9a00      	ldr	r2, [sp, #0]
 8009c68:	429a      	cmp	r2, r3
 8009c6a:	dd08      	ble.n	8009c7e <st_int8_to16_dual+0x2c2>
 8009c6c:	1ad3      	subs	r3, r2, r3
 8009c6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8009c72:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8009c76:	f824 2b02 	strh.w	r2, [r4], #2
 8009c7a:	429c      	cmp	r4, r3
 8009c7c:	d1f9      	bne.n	8009c72 <st_int8_to16_dual+0x2b6>
 8009c7e:	b00b      	add	sp, #44	; 0x2c
 8009c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c84:	4604      	mov	r4, r0
 8009c86:	f04f 0c00 	mov.w	ip, #0
 8009c8a:	e760      	b.n	8009b4e <st_int8_to16_dual+0x192>
 8009c8c:	4654      	mov	r4, sl
 8009c8e:	2300      	movs	r3, #0
 8009c90:	e7e9      	b.n	8009c66 <st_int8_to16_dual+0x2aa>
 8009c92:	bf00      	nop
 8009c94:	ffff0000 	.word	0xffff0000

08009c98 <st_sssa8_ch_fullW_prefetch>:
 8009c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c9c:	b087      	sub	sp, #28
 8009c9e:	eb00 0c02 	add.w	ip, r0, r2
 8009ca2:	9105      	str	r1, [sp, #20]
 8009ca4:	1049      	asrs	r1, r1, #1
 8009ca6:	9100      	str	r1, [sp, #0]
 8009ca8:	f000 80d7 	beq.w	8009e5a <st_sssa8_ch_fullW_prefetch+0x1c2>
 8009cac:	f1a2 0110 	sub.w	r1, r2, #16
 8009cb0:	1ed4      	subs	r4, r2, #3
 8009cb2:	0909      	lsrs	r1, r1, #4
 8009cb4:	9402      	str	r4, [sp, #8]
 8009cb6:	1f14      	subs	r4, r2, #4
 8009cb8:	3101      	adds	r1, #1
 8009cba:	9404      	str	r4, [sp, #16]
 8009cbc:	ea4f 1a01 	mov.w	sl, r1, lsl #4
 8009cc0:	0189      	lsls	r1, r1, #6
 8009cc2:	9103      	str	r1, [sp, #12]
 8009cc4:	2a0f      	cmp	r2, #15
 8009cc6:	f340 80dd 	ble.w	8009e84 <st_sssa8_ch_fullW_prefetch+0x1ec>
 8009cca:	eb00 040a 	add.w	r4, r0, sl
 8009cce:	4665      	mov	r5, ip
 8009cd0:	4619      	mov	r1, r3
 8009cd2:	6807      	ldr	r7, [r0, #0]
 8009cd4:	3010      	adds	r0, #16
 8009cd6:	682e      	ldr	r6, [r5, #0]
 8009cd8:	3140      	adds	r1, #64	; 0x40
 8009cda:	ea4f 2e37 	mov.w	lr, r7, ror #8
 8009cde:	3510      	adds	r5, #16
 8009ce0:	fa2f f787 	sxtb16	r7, r7
 8009ce4:	fa2f fe8e 	sxtb16	lr, lr
 8009ce8:	f841 7c40 	str.w	r7, [r1, #-64]
 8009cec:	ea4f 2736 	mov.w	r7, r6, ror #8
 8009cf0:	f841 ec3c 	str.w	lr, [r1, #-60]
 8009cf4:	fa2f f787 	sxtb16	r7, r7
 8009cf8:	fa2f f686 	sxtb16	r6, r6
 8009cfc:	f841 7c34 	str.w	r7, [r1, #-52]
 8009d00:	f841 6c38 	str.w	r6, [r1, #-56]
 8009d04:	f850 7c0c 	ldr.w	r7, [r0, #-12]
 8009d08:	f855 6c0c 	ldr.w	r6, [r5, #-12]
 8009d0c:	ea4f 2e37 	mov.w	lr, r7, ror #8
 8009d10:	fa2f f787 	sxtb16	r7, r7
 8009d14:	fa2f fe8e 	sxtb16	lr, lr
 8009d18:	f841 7c30 	str.w	r7, [r1, #-48]
 8009d1c:	ea4f 2736 	mov.w	r7, r6, ror #8
 8009d20:	f841 ec2c 	str.w	lr, [r1, #-44]
 8009d24:	fa2f f787 	sxtb16	r7, r7
 8009d28:	fa2f f686 	sxtb16	r6, r6
 8009d2c:	f841 7c24 	str.w	r7, [r1, #-36]
 8009d30:	f841 6c28 	str.w	r6, [r1, #-40]
 8009d34:	f850 7c08 	ldr.w	r7, [r0, #-8]
 8009d38:	f855 6c08 	ldr.w	r6, [r5, #-8]
 8009d3c:	ea4f 2e37 	mov.w	lr, r7, ror #8
 8009d40:	fa2f f787 	sxtb16	r7, r7
 8009d44:	fa2f fe8e 	sxtb16	lr, lr
 8009d48:	f841 7c20 	str.w	r7, [r1, #-32]
 8009d4c:	ea4f 2736 	mov.w	r7, r6, ror #8
 8009d50:	f841 ec1c 	str.w	lr, [r1, #-28]
 8009d54:	fa2f f787 	sxtb16	r7, r7
 8009d58:	fa2f f686 	sxtb16	r6, r6
 8009d5c:	f841 7c14 	str.w	r7, [r1, #-20]
 8009d60:	f841 6c18 	str.w	r6, [r1, #-24]
 8009d64:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8009d68:	4284      	cmp	r4, r0
 8009d6a:	f855 6c04 	ldr.w	r6, [r5, #-4]
 8009d6e:	ea4f 2e37 	mov.w	lr, r7, ror #8
 8009d72:	fa2f f787 	sxtb16	r7, r7
 8009d76:	fa2f fe8e 	sxtb16	lr, lr
 8009d7a:	f841 7c10 	str.w	r7, [r1, #-16]
 8009d7e:	ea4f 2736 	mov.w	r7, r6, ror #8
 8009d82:	f841 ec0c 	str.w	lr, [r1, #-12]
 8009d86:	fa2f f787 	sxtb16	r7, r7
 8009d8a:	fa2f f686 	sxtb16	r6, r6
 8009d8e:	f841 7c04 	str.w	r7, [r1, #-4]
 8009d92:	f841 6c08 	str.w	r6, [r1, #-8]
 8009d96:	d19c      	bne.n	8009cd2 <st_sssa8_ch_fullW_prefetch+0x3a>
 8009d98:	9903      	ldr	r1, [sp, #12]
 8009d9a:	44d4      	add	ip, sl
 8009d9c:	46d6      	mov	lr, sl
 8009d9e:	440b      	add	r3, r1
 8009da0:	9902      	ldr	r1, [sp, #8]
 8009da2:	458e      	cmp	lr, r1
 8009da4:	da30      	bge.n	8009e08 <st_sssa8_ch_fullW_prefetch+0x170>
 8009da6:	9904      	ldr	r1, [sp, #16]
 8009da8:	4667      	mov	r7, ip
 8009daa:	eba1 090e 	sub.w	r9, r1, lr
 8009dae:	4619      	mov	r1, r3
 8009db0:	ea4f 0999 	mov.w	r9, r9, lsr #2
 8009db4:	f109 0b01 	add.w	fp, r9, #1
 8009db8:	ea4f 008b 	mov.w	r0, fp, lsl #2
 8009dbc:	eb04 0800 	add.w	r8, r4, r0
 8009dc0:	9001      	str	r0, [sp, #4]
 8009dc2:	f854 5b04 	ldr.w	r5, [r4], #4
 8009dc6:	3110      	adds	r1, #16
 8009dc8:	f857 0b04 	ldr.w	r0, [r7], #4
 8009dcc:	4544      	cmp	r4, r8
 8009dce:	ea4f 2635 	mov.w	r6, r5, ror #8
 8009dd2:	fa2f f585 	sxtb16	r5, r5
 8009dd6:	fa2f f686 	sxtb16	r6, r6
 8009dda:	f841 5c10 	str.w	r5, [r1, #-16]
 8009dde:	ea4f 2530 	mov.w	r5, r0, ror #8
 8009de2:	f841 6c0c 	str.w	r6, [r1, #-12]
 8009de6:	fa2f f585 	sxtb16	r5, r5
 8009dea:	fa2f f080 	sxtb16	r0, r0
 8009dee:	f841 5c04 	str.w	r5, [r1, #-4]
 8009df2:	f841 0c08 	str.w	r0, [r1, #-8]
 8009df6:	d1e4      	bne.n	8009dc2 <st_sssa8_ch_fullW_prefetch+0x12a>
 8009df8:	f10e 0e04 	add.w	lr, lr, #4
 8009dfc:	9901      	ldr	r1, [sp, #4]
 8009dfe:	eb03 130b 	add.w	r3, r3, fp, lsl #4
 8009e02:	448c      	add	ip, r1
 8009e04:	eb0e 0e89 	add.w	lr, lr, r9, lsl #2
 8009e08:	4572      	cmp	r2, lr
 8009e0a:	dd1f      	ble.n	8009e4c <st_sssa8_ch_fullW_prefetch+0x1b4>
 8009e0c:	f994 0000 	ldrsb.w	r0, [r4]
 8009e10:	f10e 0101 	add.w	r1, lr, #1
 8009e14:	8018      	strh	r0, [r3, #0]
 8009e16:	428a      	cmp	r2, r1
 8009e18:	f99c 0000 	ldrsb.w	r0, [ip]
 8009e1c:	8058      	strh	r0, [r3, #2]
 8009e1e:	dd2c      	ble.n	8009e7a <st_sssa8_ch_fullW_prefetch+0x1e2>
 8009e20:	f994 1001 	ldrsb.w	r1, [r4, #1]
 8009e24:	f10e 0e02 	add.w	lr, lr, #2
 8009e28:	8099      	strh	r1, [r3, #4]
 8009e2a:	4572      	cmp	r2, lr
 8009e2c:	f99c 1001 	ldrsb.w	r1, [ip, #1]
 8009e30:	80d9      	strh	r1, [r3, #6]
 8009e32:	dd2b      	ble.n	8009e8c <st_sssa8_ch_fullW_prefetch+0x1f4>
 8009e34:	f994 1002 	ldrsb.w	r1, [r4, #2]
 8009e38:	f10c 0c03 	add.w	ip, ip, #3
 8009e3c:	3403      	adds	r4, #3
 8009e3e:	330c      	adds	r3, #12
 8009e40:	f823 1c04 	strh.w	r1, [r3, #-4]
 8009e44:	f91c 1c01 	ldrsb.w	r1, [ip, #-1]
 8009e48:	f823 1c02 	strh.w	r1, [r3, #-2]
 8009e4c:	9900      	ldr	r1, [sp, #0]
 8009e4e:	18a0      	adds	r0, r4, r2
 8009e50:	4494      	add	ip, r2
 8009e52:	3901      	subs	r1, #1
 8009e54:	9100      	str	r1, [sp, #0]
 8009e56:	f47f af35 	bne.w	8009cc4 <st_sssa8_ch_fullW_prefetch+0x2c>
 8009e5a:	9905      	ldr	r1, [sp, #20]
 8009e5c:	07c9      	lsls	r1, r1, #31
 8009e5e:	d509      	bpl.n	8009e74 <st_sssa8_ch_fullW_prefetch+0x1dc>
 8009e60:	2a00      	cmp	r2, #0
 8009e62:	dd07      	ble.n	8009e74 <st_sssa8_ch_fullW_prefetch+0x1dc>
 8009e64:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 8009e68:	f910 1b01 	ldrsb.w	r1, [r0], #1
 8009e6c:	f823 1b02 	strh.w	r1, [r3], #2
 8009e70:	4293      	cmp	r3, r2
 8009e72:	d1f9      	bne.n	8009e68 <st_sssa8_ch_fullW_prefetch+0x1d0>
 8009e74:	b007      	add	sp, #28
 8009e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e7a:	3401      	adds	r4, #1
 8009e7c:	f10c 0c01 	add.w	ip, ip, #1
 8009e80:	3304      	adds	r3, #4
 8009e82:	e7e3      	b.n	8009e4c <st_sssa8_ch_fullW_prefetch+0x1b4>
 8009e84:	4604      	mov	r4, r0
 8009e86:	f04f 0e00 	mov.w	lr, #0
 8009e8a:	e789      	b.n	8009da0 <st_sssa8_ch_fullW_prefetch+0x108>
 8009e8c:	3402      	adds	r4, #2
 8009e8e:	f10c 0c02 	add.w	ip, ip, #2
 8009e92:	3308      	adds	r3, #8
 8009e94:	e7da      	b.n	8009e4c <st_sssa8_ch_fullW_prefetch+0x1b4>
 8009e96:	bf00      	nop

08009e98 <st_sssa8_ch_nn_mat_mult_nt_t>:
 8009e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e9c:	b0af      	sub	sp, #188	; 0xbc
 8009e9e:	901f      	str	r0, [sp, #124]	; 0x7c
 8009ea0:	9220      	str	r2, [sp, #128]	; 0x80
 8009ea2:	9840      	ldr	r0, [sp, #256]	; 0x100
 8009ea4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8009ea6:	9125      	str	r1, [sp, #148]	; 0x94
 8009ea8:	2800      	cmp	r0, #0
 8009eaa:	bf18      	it	ne
 8009eac:	4602      	movne	r2, r0
 8009eae:	932a      	str	r3, [sp, #168]	; 0xa8
 8009eb0:	923f      	str	r2, [sp, #252]	; 0xfc
 8009eb2:	e9dd 2b3b 	ldrd	r2, fp, [sp, #236]	; 0xec
 8009eb6:	2a01      	cmp	r2, #1
 8009eb8:	f340 822c 	ble.w	800a314 <st_sssa8_ch_nn_mat_mult_nt_t+0x47c>
 8009ebc:	f00b 0403 	and.w	r4, fp, #3
 8009ec0:	3a02      	subs	r2, #2
 8009ec2:	ea4f 00ab 	mov.w	r0, fp, asr #2
 8009ec6:	461e      	mov	r6, r3
 8009ec8:	9428      	str	r4, [sp, #160]	; 0xa0
 8009eca:	f1ab 040f 	sub.w	r4, fp, #15
 8009ece:	0852      	lsrs	r2, r2, #1
 8009ed0:	f1ab 0310 	sub.w	r3, fp, #16
 8009ed4:	9410      	str	r4, [sp, #64]	; 0x40
 8009ed6:	9c3a      	ldr	r4, [sp, #232]	; 0xe8
 8009ed8:	091b      	lsrs	r3, r3, #4
 8009eda:	922c      	str	r2, [sp, #176]	; 0xb0
 8009edc:	00d2      	lsls	r2, r2, #3
 8009ede:	f004 0401 	and.w	r4, r4, #1
 8009ee2:	3301      	adds	r3, #1
 8009ee4:	320c      	adds	r2, #12
 8009ee6:	9d3a      	ldr	r5, [sp, #232]	; 0xe8
 8009ee8:	9421      	str	r4, [sp, #132]	; 0x84
 8009eea:	9c39      	ldr	r4, [sp, #228]	; 0xe4
 8009eec:	106d      	asrs	r5, r5, #1
 8009eee:	9223      	str	r2, [sp, #140]	; 0x8c
 8009ef0:	3402      	adds	r4, #2
 8009ef2:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 8009ef4:	9027      	str	r0, [sp, #156]	; 0x9c
 8009ef6:	9417      	str	r4, [sp, #92]	; 0x5c
 8009ef8:	0084      	lsls	r4, r0, #2
 8009efa:	0052      	lsls	r2, r2, #1
 8009efc:	9522      	str	r5, [sp, #136]	; 0x88
 8009efe:	942d      	str	r4, [sp, #180]	; 0xb4
 8009f00:	445c      	add	r4, fp
 8009f02:	9212      	str	r2, [sp, #72]	; 0x48
 8009f04:	942b      	str	r4, [sp, #172]	; 0xac
 8009f06:	011c      	lsls	r4, r3, #4
 8009f08:	019b      	lsls	r3, r3, #6
 8009f0a:	9616      	str	r6, [sp, #88]	; 0x58
 8009f0c:	9403      	str	r4, [sp, #12]
 8009f0e:	931e      	str	r3, [sp, #120]	; 0x78
 8009f10:	fb02 f305 	mul.w	r3, r2, r5
 8009f14:	911a      	str	r1, [sp, #104]	; 0x68
 8009f16:	9324      	str	r3, [sp, #144]	; 0x90
 8009f18:	0103      	lsls	r3, r0, #4
 8009f1a:	9329      	str	r3, [sp, #164]	; 0xa4
 8009f1c:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8009f20:	931d      	str	r3, [sp, #116]	; 0x74
 8009f22:	2304      	movs	r3, #4
 8009f24:	9315      	str	r3, [sp, #84]	; 0x54
 8009f26:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8009f2a:	9326      	str	r3, [sp, #152]	; 0x98
 8009f2c:	f1ab 0303 	sub.w	r3, fp, #3
 8009f30:	9311      	str	r3, [sp, #68]	; 0x44
 8009f32:	f1ab 0304 	sub.w	r3, fp, #4
 8009f36:	9314      	str	r3, [sp, #80]	; 0x50
 8009f38:	f10b 0301 	add.w	r3, fp, #1
 8009f3c:	9309      	str	r3, [sp, #36]	; 0x24
 8009f3e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009f40:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8009f42:	993e      	ldr	r1, [sp, #248]	; 0xf8
 8009f44:	441a      	add	r2, r3
 8009f46:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8009f48:	4419      	add	r1, r3
 8009f4a:	921c      	str	r2, [sp, #112]	; 0x70
 8009f4c:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8009f50:	911b      	str	r1, [sp, #108]	; 0x6c
 8009f52:	920c      	str	r2, [sp, #48]	; 0x30
 8009f54:	f851 2c04 	ldr.w	r2, [r1, #-4]
 8009f58:	f930 4c02 	ldrsh.w	r4, [r0, #-2]
 8009f5c:	920e      	str	r2, [sp, #56]	; 0x38
 8009f5e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8009f62:	940a      	str	r4, [sp, #40]	; 0x28
 8009f64:	920b      	str	r2, [sp, #44]	; 0x2c
 8009f66:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8009f68:	4611      	mov	r1, r2
 8009f6a:	58ca      	ldr	r2, [r1, r3]
 8009f6c:	920d      	str	r2, [sp, #52]	; 0x34
 8009f6e:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 8009f70:	58d3      	ldr	r3, [r2, r3]
 8009f72:	930f      	str	r3, [sp, #60]	; 0x3c
 8009f74:	9b40      	ldr	r3, [sp, #256]	; 0x100
 8009f76:	2b00      	cmp	r3, #0
 8009f78:	f000 83a4 	beq.w	800a6c4 <st_sssa8_ch_nn_mat_mult_nt_t+0x82c>
 8009f7c:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 8009f7e:	2b00      	cmp	r3, #0
 8009f80:	f040 834e 	bne.w	800a620 <st_sssa8_ch_nn_mat_mult_nt_t+0x788>
 8009f84:	4619      	mov	r1, r3
 8009f86:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009f88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8009f8a:	1910      	adds	r0, r2, r4
 8009f8c:	5912      	ldr	r2, [r2, r4]
 8009f8e:	f850 0c04 	ldr.w	r0, [r0, #-4]
 8009f92:	4413      	add	r3, r2
 8009f94:	9308      	str	r3, [sp, #32]
 8009f96:	180b      	adds	r3, r1, r0
 8009f98:	9307      	str	r3, [sp, #28]
 8009f9a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009f9c:	2b00      	cmp	r3, #0
 8009f9e:	f000 83d9 	beq.w	800a754 <st_sssa8_ch_nn_mat_mult_nt_t+0x8bc>
 8009fa2:	9302      	str	r3, [sp, #8]
 8009fa4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009fa6:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8009fa8:	9301      	str	r3, [sp, #4]
 8009faa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009fac:	991e      	ldr	r1, [sp, #120]	; 0x78
 8009fae:	f1c3 0301 	rsb	r3, r3, #1
 8009fb2:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 8009fb6:	440a      	add	r2, r1
 8009fb8:	f8dd b0f0 	ldr.w	fp, [sp, #240]	; 0xf0
 8009fbc:	9318      	str	r3, [sp, #96]	; 0x60
 8009fbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009fc0:	9213      	str	r2, [sp, #76]	; 0x4c
 8009fc2:	f1c3 0301 	rsb	r3, r3, #1
 8009fc6:	9319      	str	r3, [sp, #100]	; 0x64
 8009fc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009fca:	2b00      	cmp	r3, #0
 8009fcc:	f340 8229 	ble.w	800a422 <st_sssa8_ch_nn_mat_mult_nt_t+0x58a>
 8009fd0:	9b03      	ldr	r3, [sp, #12]
 8009fd2:	eb0a 090b 	add.w	r9, sl, fp
 8009fd6:	9808      	ldr	r0, [sp, #32]
 8009fd8:	4453      	add	r3, sl
 8009fda:	9e07      	ldr	r6, [sp, #28]
 8009fdc:	f8dd 80fc 	ldr.w	r8, [sp, #252]	; 0xfc
 8009fe0:	9300      	str	r3, [sp, #0]
 8009fe2:	4634      	mov	r4, r6
 8009fe4:	4603      	mov	r3, r0
 8009fe6:	f8da 5000 	ldr.w	r5, [sl]
 8009fea:	f8d8 2000 	ldr.w	r2, [r8]
 8009fee:	fa2f f185 	sxtb16	r1, r5
 8009ff2:	f8d8 c004 	ldr.w	ip, [r8, #4]
 8009ff6:	fa2f f595 	sxtb16	r5, r5, ror #8
 8009ffa:	f8d8 e008 	ldr.w	lr, [r8, #8]
 8009ffe:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800a002:	fb21 6602 	smlad	r6, r1, r2, r6
 800a006:	fb25 660c 	smlad	r6, r5, ip, r6
 800a00a:	fb21 000e 	smlad	r0, r1, lr, r0
 800a00e:	fb25 0007 	smlad	r0, r5, r7, r0
 800a012:	f85a 100b 	ldr.w	r1, [sl, fp]
 800a016:	fa2f f581 	sxtb16	r5, r1
 800a01a:	fa2f f191 	sxtb16	r1, r1, ror #8
 800a01e:	fb25 4202 	smlad	r2, r5, r2, r4
 800a022:	fb25 330e 	smlad	r3, r5, lr, r3
 800a026:	fb21 220c 	smlad	r2, r1, ip, r2
 800a02a:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800a02e:	f8d8 4014 	ldr.w	r4, [r8, #20]
 800a032:	fb21 3707 	smlad	r7, r1, r7, r3
 800a036:	f8da 3004 	ldr.w	r3, [sl, #4]
 800a03a:	f8d8 e018 	ldr.w	lr, [r8, #24]
 800a03e:	fa2f f583 	sxtb16	r5, r3
 800a042:	f8d8 101c 	ldr.w	r1, [r8, #28]
 800a046:	fa2f f393 	sxtb16	r3, r3, ror #8
 800a04a:	fb25 660c 	smlad	r6, r5, ip, r6
 800a04e:	fb23 6604 	smlad	r6, r3, r4, r6
 800a052:	fb25 050e 	smlad	r5, r5, lr, r0
 800a056:	fb23 5501 	smlad	r5, r3, r1, r5
 800a05a:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800a05e:	fa2f f380 	sxtb16	r3, r0
 800a062:	fa2f f090 	sxtb16	r0, r0, ror #8
 800a066:	fb23 2c0c 	smlad	ip, r3, ip, r2
 800a06a:	fb23 770e 	smlad	r7, r3, lr, r7
 800a06e:	fb20 cc04 	smlad	ip, r0, r4, ip
 800a072:	f8d8 4020 	ldr.w	r4, [r8, #32]
 800a076:	f8d8 e024 	ldr.w	lr, [r8, #36]	; 0x24
 800a07a:	fb20 7101 	smlad	r1, r0, r1, r7
 800a07e:	f8da 2008 	ldr.w	r2, [sl, #8]
 800a082:	f8d8 0028 	ldr.w	r0, [r8, #40]	; 0x28
 800a086:	fa2f f382 	sxtb16	r3, r2
 800a08a:	f8d8 702c 	ldr.w	r7, [r8, #44]	; 0x2c
 800a08e:	fa2f f292 	sxtb16	r2, r2, ror #8
 800a092:	fb23 6604 	smlad	r6, r3, r4, r6
 800a096:	fb22 660e 	smlad	r6, r2, lr, r6
 800a09a:	fb23 5300 	smlad	r3, r3, r0, r5
 800a09e:	fb22 3207 	smlad	r2, r2, r7, r3
 800a0a2:	f8d9 5008 	ldr.w	r5, [r9, #8]
 800a0a6:	fa2f f985 	sxtb16	r9, r5
 800a0aa:	fa2f f595 	sxtb16	r5, r5, ror #8
 800a0ae:	fb29 c404 	smlad	r4, r9, r4, ip
 800a0b2:	fb29 1100 	smlad	r1, r9, r0, r1
 800a0b6:	fb25 4e0e 	smlad	lr, r5, lr, r4
 800a0ba:	f8d8 c030 	ldr.w	ip, [r8, #48]	; 0x30
 800a0be:	f8d8 4034 	ldr.w	r4, [r8, #52]	; 0x34
 800a0c2:	fb25 1707 	smlad	r7, r5, r7, r1
 800a0c6:	f8da 000c 	ldr.w	r0, [sl, #12]
 800a0ca:	f108 0840 	add.w	r8, r8, #64	; 0x40
 800a0ce:	f858 1c08 	ldr.w	r1, [r8, #-8]
 800a0d2:	f10a 0a10 	add.w	sl, sl, #16
 800a0d6:	f858 5c04 	ldr.w	r5, [r8, #-4]
 800a0da:	fa2f f380 	sxtb16	r3, r0
 800a0de:	fa2f f090 	sxtb16	r0, r0, ror #8
 800a0e2:	fb23 660c 	smlad	r6, r3, ip, r6
 800a0e6:	fb20 6604 	smlad	r6, r0, r4, r6
 800a0ea:	fb23 2201 	smlad	r2, r3, r1, r2
 800a0ee:	fb20 2005 	smlad	r0, r0, r5, r2
 800a0f2:	eb0a 090b 	add.w	r9, sl, fp
 800a0f6:	f859 3c04 	ldr.w	r3, [r9, #-4]
 800a0fa:	fa2f f283 	sxtb16	r2, r3
 800a0fe:	fa2f f393 	sxtb16	r3, r3, ror #8
 800a102:	fb22 ee0c 	smlad	lr, r2, ip, lr
 800a106:	fb22 7701 	smlad	r7, r2, r1, r7
 800a10a:	fb23 e404 	smlad	r4, r3, r4, lr
 800a10e:	fb23 7305 	smlad	r3, r3, r5, r7
 800a112:	9a00      	ldr	r2, [sp, #0]
 800a114:	4592      	cmp	sl, r2
 800a116:	f47f af66 	bne.w	8009fe6 <st_sssa8_ch_nn_mat_mult_nt_t+0x14e>
 800a11a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800a11c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 800a120:	9200      	str	r2, [sp, #0]
 800a122:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800a124:	4591      	cmp	r9, r2
 800a126:	da44      	bge.n	800a1b2 <st_sssa8_ch_nn_mat_mult_nt_t+0x31a>
 800a128:	9914      	ldr	r1, [sp, #80]	; 0x50
 800a12a:	f8cd 9018 	str.w	r9, [sp, #24]
 800a12e:	eba1 0209 	sub.w	r2, r1, r9
 800a132:	f8cd b0f0 	str.w	fp, [sp, #240]	; 0xf0
 800a136:	9f00      	ldr	r7, [sp, #0]
 800a138:	468b      	mov	fp, r1
 800a13a:	0892      	lsrs	r2, r2, #2
 800a13c:	9205      	str	r2, [sp, #20]
 800a13e:	3201      	adds	r2, #1
 800a140:	9204      	str	r2, [sp, #16]
 800a142:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
 800a146:	4691      	mov	r9, r2
 800a148:	f85a 2b04 	ldr.w	r2, [sl], #4
 800a14c:	3710      	adds	r7, #16
 800a14e:	f857 5c10 	ldr.w	r5, [r7, #-16]
 800a152:	f857 ec0c 	ldr.w	lr, [r7, #-12]
 800a156:	f857 8c08 	ldr.w	r8, [r7, #-8]
 800a15a:	fa2f f182 	sxtb16	r1, r2
 800a15e:	f857 cc04 	ldr.w	ip, [r7, #-4]
 800a162:	fa2f f292 	sxtb16	r2, r2, ror #8
 800a166:	fb21 6605 	smlad	r6, r1, r5, r6
 800a16a:	fb22 660e 	smlad	r6, r2, lr, r6
 800a16e:	fb21 0008 	smlad	r0, r1, r8, r0
 800a172:	fb22 000c 	smlad	r0, r2, ip, r0
 800a176:	f85a 200b 	ldr.w	r2, [sl, fp]
 800a17a:	fa2f f182 	sxtb16	r1, r2
 800a17e:	fa2f f292 	sxtb16	r2, r2, ror #8
 800a182:	fb21 4405 	smlad	r4, r1, r5, r4
 800a186:	fb21 3308 	smlad	r3, r1, r8, r3
 800a18a:	fb22 440e 	smlad	r4, r2, lr, r4
 800a18e:	fb22 330c 	smlad	r3, r2, ip, r3
 800a192:	45ca      	cmp	sl, r9
 800a194:	d1d8      	bne.n	800a148 <st_sssa8_ch_nn_mat_mult_nt_t+0x2b0>
 800a196:	9a00      	ldr	r2, [sp, #0]
 800a198:	9904      	ldr	r1, [sp, #16]
 800a19a:	f8dd 9018 	ldr.w	r9, [sp, #24]
 800a19e:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800a1a2:	f8dd b0f0 	ldr.w	fp, [sp, #240]	; 0xf0
 800a1a6:	f109 0904 	add.w	r9, r9, #4
 800a1aa:	9200      	str	r2, [sp, #0]
 800a1ac:	9a05      	ldr	r2, [sp, #20]
 800a1ae:	eb09 0982 	add.w	r9, r9, r2, lsl #2
 800a1b2:	45cb      	cmp	fp, r9
 800a1b4:	eb0a 020b 	add.w	r2, sl, fp
 800a1b8:	f340 812f 	ble.w	800a41a <st_sssa8_ch_nn_mat_mult_nt_t+0x582>
 800a1bc:	9900      	ldr	r1, [sp, #0]
 800a1be:	f109 0201 	add.w	r2, r9, #1
 800a1c2:	f99a c000 	ldrsb.w	ip, [sl]
 800a1c6:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a1ca:	4593      	cmp	fp, r2
 800a1cc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a1d0:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a1d2:	fb17 660c 	smlabb	r6, r7, ip, r6
 800a1d6:	fb15 000c 	smlabb	r0, r5, ip, r0
 800a1da:	eb0a 0e01 	add.w	lr, sl, r1
 800a1de:	f91a 100b 	ldrsb.w	r1, [sl, fp]
 800a1e2:	fb17 4401 	smlabb	r4, r7, r1, r4
 800a1e6:	fb15 3301 	smlabb	r3, r5, r1, r3
 800a1ea:	f340 8118 	ble.w	800a41e <st_sssa8_ch_nn_mat_mult_nt_t+0x586>
 800a1ee:	9a00      	ldr	r2, [sp, #0]
 800a1f0:	f109 0902 	add.w	r9, r9, #2
 800a1f4:	f99a 7001 	ldrsb.w	r7, [sl, #1]
 800a1f8:	f10a 0c02 	add.w	ip, sl, #2
 800a1fc:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800a200:	45cb      	cmp	fp, r9
 800a202:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800a206:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a208:	fb15 6607 	smlabb	r6, r5, r7, r6
 800a20c:	fb11 0007 	smlabb	r0, r1, r7, r0
 800a210:	4696      	mov	lr, r2
 800a212:	f91a 2002 	ldrsb.w	r2, [sl, r2]
 800a216:	fb15 4402 	smlabb	r4, r5, r2, r4
 800a21a:	eb0c 050b 	add.w	r5, ip, fp
 800a21e:	fb11 3302 	smlabb	r3, r1, r2, r3
 800a222:	f340 8107 	ble.w	800a434 <st_sssa8_ch_nn_mat_mult_nt_t+0x59c>
 800a226:	9a00      	ldr	r2, [sp, #0]
 800a228:	f10a 0703 	add.w	r7, sl, #3
 800a22c:	f91c 500b 	ldrsb.w	r5, [ip, fp]
 800a230:	f9b2 1008 	ldrsh.w	r1, [r2, #8]
 800a234:	f9b2 c00a 	ldrsh.w	ip, [r2, #10]
 800a238:	f99a 2002 	ldrsb.w	r2, [sl, #2]
 800a23c:	fb11 4405 	smlabb	r4, r1, r5, r4
 800a240:	fb1c 3305 	smlabb	r3, ip, r5, r3
 800a244:	eb07 0a0b 	add.w	sl, r7, fp
 800a248:	fb11 6602 	smlabb	r6, r1, r2, r6
 800a24c:	fb1c 0002 	smlabb	r0, ip, r2, r0
 800a250:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a252:	2a00      	cmp	r2, #0
 800a254:	f340 80c7 	ble.w	800a3e6 <st_sssa8_ch_nn_mat_mult_nt_t+0x54e>
 800a258:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a25a:	0076      	lsls	r6, r6, #1
 800a25c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800a25e:	0064      	lsls	r4, r4, #1
 800a260:	fb56 7601 	smmla	r6, r6, r1, r7
 800a264:	fb54 7401 	smmla	r4, r4, r1, r7
 800a268:	4116      	asrs	r6, r2
 800a26a:	f306 0607 	ssat	r6, #8, r6
 800a26e:	9901      	ldr	r1, [sp, #4]
 800a270:	4114      	asrs	r4, r2
 800a272:	700e      	strb	r6, [r1, #0]
 800a274:	f304 0407 	ssat	r4, #8, r4
 800a278:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 800a27a:	548c      	strb	r4, [r1, r2]
 800a27c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a27e:	2a00      	cmp	r2, #0
 800a280:	f340 8096 	ble.w	800a3b0 <st_sssa8_ch_nn_mat_mult_nt_t+0x518>
 800a284:	990d      	ldr	r1, [sp, #52]	; 0x34
 800a286:	0040      	lsls	r0, r0, #1
 800a288:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800a28a:	005b      	lsls	r3, r3, #1
 800a28c:	fb50 5001 	smmla	r0, r0, r1, r5
 800a290:	fb53 5301 	smmla	r3, r3, r1, r5
 800a294:	4110      	asrs	r0, r2
 800a296:	f300 0007 	ssat	r0, #8, r0
 800a29a:	9901      	ldr	r1, [sp, #4]
 800a29c:	4113      	asrs	r3, r2
 800a29e:	7048      	strb	r0, [r1, #1]
 800a2a0:	f303 0307 	ssat	r3, #8, r3
 800a2a4:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 800a2a6:	188a      	adds	r2, r1, r2
 800a2a8:	7053      	strb	r3, [r2, #1]
 800a2aa:	460b      	mov	r3, r1
 800a2ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a2ae:	4413      	add	r3, r2
 800a2b0:	9301      	str	r3, [sp, #4]
 800a2b2:	9b02      	ldr	r3, [sp, #8]
 800a2b4:	3b01      	subs	r3, #1
 800a2b6:	9302      	str	r3, [sp, #8]
 800a2b8:	f47f ae86 	bne.w	8009fc8 <st_sssa8_ch_nn_mat_mult_nt_t+0x130>
 800a2bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a2be:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800a2c0:	eb03 0b02 	add.w	fp, r3, r2
 800a2c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a2c6:	2b00      	cmp	r3, #0
 800a2c8:	f040 80b6 	bne.w	800a438 <st_sssa8_ch_nn_mat_mult_nt_t+0x5a0>
 800a2cc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800a2ce:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800a2d0:	4413      	add	r3, r2
 800a2d2:	931a      	str	r3, [sp, #104]	; 0x68
 800a2d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a2d6:	3302      	adds	r3, #2
 800a2d8:	9316      	str	r3, [sp, #88]	; 0x58
 800a2da:	9b40      	ldr	r3, [sp, #256]	; 0x100
 800a2dc:	b11b      	cbz	r3, 800a2e6 <st_sssa8_ch_nn_mat_mult_nt_t+0x44e>
 800a2de:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a2e0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800a2e2:	4413      	add	r3, r2
 800a2e4:	933f      	str	r3, [sp, #252]	; 0xfc
 800a2e6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800a2e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a2ea:	3204      	adds	r2, #4
 800a2ec:	3308      	adds	r3, #8
 800a2ee:	9217      	str	r2, [sp, #92]	; 0x5c
 800a2f0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800a2f2:	9315      	str	r3, [sp, #84]	; 0x54
 800a2f4:	429a      	cmp	r2, r3
 800a2f6:	f47f ae23 	bne.w	8009f40 <st_sssa8_ch_nn_mat_mult_nt_t+0xa8>
 800a2fa:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 800a2fc:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a2fe:	3201      	adds	r2, #1
 800a300:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a302:	f8dd b0f0 	ldr.w	fp, [sp, #240]	; 0xf0
 800a306:	fb02 1303 	mla	r3, r2, r3, r1
 800a30a:	9325      	str	r3, [sp, #148]	; 0x94
 800a30c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800a30e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800a312:	932a      	str	r3, [sp, #168]	; 0xa8
 800a314:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 800a316:	07db      	lsls	r3, r3, #31
 800a318:	d546      	bpl.n	800a3a8 <st_sssa8_ch_nn_mat_mult_nt_t+0x510>
 800a31a:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
 800a31c:	2b00      	cmp	r3, #0
 800a31e:	dd43      	ble.n	800a3a8 <st_sssa8_ch_nn_mat_mult_nt_t+0x510>
 800a320:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 800a322:	f06f 4e40 	mvn.w	lr, #3221225472	; 0xc0000000
 800a326:	f06f 4600 	mvn.w	r6, #2147483648	; 0x80000000
 800a32a:	2500      	movs	r5, #0
 800a32c:	449e      	add	lr, r3
 800a32e:	991f      	ldr	r1, [sp, #124]	; 0x7c
 800a330:	441e      	add	r6, r3
 800a332:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 800a334:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800a338:	f8dd a0a8 	ldr.w	sl, [sp, #168]	; 0xa8
 800a33c:	eb03 0646 	add.w	r6, r3, r6, lsl #1
 800a340:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800a342:	f8dd 90f4 	ldr.w	r9, [sp, #244]	; 0xf4
 800a346:	4473      	add	r3, lr
 800a348:	461f      	mov	r7, r3
 800a34a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 800a34c:	eb03 0c0e 	add.w	ip, r3, lr
 800a350:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 800a352:	449e      	add	lr, r3
 800a354:	f1bb 0f00 	cmp.w	fp, #0
 800a358:	683a      	ldr	r2, [r7, #0]
 800a35a:	dd0d      	ble.n	800a378 <st_sssa8_ch_nn_mat_mult_nt_t+0x4e0>
 800a35c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800a35e:	eb01 080b 	add.w	r8, r1, fp
 800a362:	1e58      	subs	r0, r3, #1
 800a364:	f911 3b01 	ldrsb.w	r3, [r1], #1
 800a368:	f910 4f01 	ldrsb.w	r4, [r0, #1]!
 800a36c:	eba3 0309 	sub.w	r3, r3, r9
 800a370:	4541      	cmp	r1, r8
 800a372:	fb04 2203 	mla	r2, r4, r3, r2
 800a376:	d1f5      	bne.n	800a364 <st_sssa8_ch_nn_mat_mult_nt_t+0x4cc>
 800a378:	f9b6 3000 	ldrsh.w	r3, [r6]
 800a37c:	f8dc 4000 	ldr.w	r4, [ip]
 800a380:	2b00      	cmp	r3, #0
 800a382:	f8de 0000 	ldr.w	r0, [lr]
 800a386:	f340 820c 	ble.w	800a7a2 <st_sssa8_ch_nn_mat_mult_nt_t+0x90a>
 800a38a:	0052      	lsls	r2, r2, #1
 800a38c:	fb52 0204 	smmla	r2, r2, r4, r0
 800a390:	fa42 f303 	asr.w	r3, r2, r3
 800a394:	f303 0307 	ssat	r3, #8, r3
 800a398:	f88a 3000 	strb.w	r3, [sl]
 800a39c:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 800a39e:	3501      	adds	r5, #1
 800a3a0:	449a      	add	sl, r3
 800a3a2:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
 800a3a4:	42ab      	cmp	r3, r5
 800a3a6:	d1d5      	bne.n	800a354 <st_sssa8_ch_nn_mat_mult_nt_t+0x4bc>
 800a3a8:	2000      	movs	r0, #0
 800a3aa:	b02f      	add	sp, #188	; 0xbc
 800a3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a3b0:	9919      	ldr	r1, [sp, #100]	; 0x64
 800a3b2:	fa00 f201 	lsl.w	r2, r0, r1
 800a3b6:	f302 021f 	ssat	r2, #32, r2
 800a3ba:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a3bc:	fb52 f210 	smmulr	r2, r2, r0
 800a3c0:	408b      	lsls	r3, r1
 800a3c2:	f303 031f 	ssat	r3, #32, r3
 800a3c6:	fb53 f310 	smmulr	r3, r3, r0
 800a3ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800a3cc:	440a      	add	r2, r1
 800a3ce:	f302 0207 	ssat	r2, #8, r2
 800a3d2:	9801      	ldr	r0, [sp, #4]
 800a3d4:	440b      	add	r3, r1
 800a3d6:	7042      	strb	r2, [r0, #1]
 800a3d8:	f303 0307 	ssat	r3, #8, r3
 800a3dc:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 800a3de:	1882      	adds	r2, r0, r2
 800a3e0:	7053      	strb	r3, [r2, #1]
 800a3e2:	4603      	mov	r3, r0
 800a3e4:	e762      	b.n	800a2ac <st_sssa8_ch_nn_mat_mult_nt_t+0x414>
 800a3e6:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a3e8:	fa06 f201 	lsl.w	r2, r6, r1
 800a3ec:	f302 021f 	ssat	r2, #32, r2
 800a3f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a3f2:	fb52 f215 	smmulr	r2, r2, r5
 800a3f6:	fa04 f101 	lsl.w	r1, r4, r1
 800a3fa:	f301 011f 	ssat	r1, #32, r1
 800a3fe:	fb51 f115 	smmulr	r1, r1, r5
 800a402:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800a404:	4422      	add	r2, r4
 800a406:	f302 0207 	ssat	r2, #8, r2
 800a40a:	9d01      	ldr	r5, [sp, #4]
 800a40c:	4421      	add	r1, r4
 800a40e:	702a      	strb	r2, [r5, #0]
 800a410:	f301 0107 	ssat	r1, #8, r1
 800a414:	9a3b      	ldr	r2, [sp, #236]	; 0xec
 800a416:	54a9      	strb	r1, [r5, r2]
 800a418:	e730      	b.n	800a27c <st_sssa8_ch_nn_mat_mult_nt_t+0x3e4>
 800a41a:	4692      	mov	sl, r2
 800a41c:	e718      	b.n	800a250 <st_sssa8_ch_nn_mat_mult_nt_t+0x3b8>
 800a41e:	46f2      	mov	sl, lr
 800a420:	e716      	b.n	800a250 <st_sssa8_ch_nn_mat_mult_nt_t+0x3b8>
 800a422:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a424:	f04f 0900 	mov.w	r9, #0
 800a428:	9808      	ldr	r0, [sp, #32]
 800a42a:	9e07      	ldr	r6, [sp, #28]
 800a42c:	9300      	str	r3, [sp, #0]
 800a42e:	4603      	mov	r3, r0
 800a430:	4634      	mov	r4, r6
 800a432:	e676      	b.n	800a122 <st_sssa8_ch_nn_mat_mult_nt_t+0x28a>
 800a434:	46aa      	mov	sl, r5
 800a436:	e70b      	b.n	800a250 <st_sssa8_ch_nn_mat_mult_nt_t+0x3b8>
 800a438:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a43a:	2b00      	cmp	r3, #0
 800a43c:	f340 81c3 	ble.w	800a7c6 <st_sssa8_ch_nn_mat_mult_nt_t+0x92e>
 800a440:	9b03      	ldr	r3, [sp, #12]
 800a442:	9d3f      	ldr	r5, [sp, #252]	; 0xfc
 800a444:	eb0a 0703 	add.w	r7, sl, r3
 800a448:	e9dd 4307 	ldrd	r4, r3, [sp, #28]
 800a44c:	f8da 2000 	ldr.w	r2, [sl]
 800a450:	6828      	ldr	r0, [r5, #0]
 800a452:	fa2f f182 	sxtb16	r1, r2
 800a456:	fa2f f292 	sxtb16	r2, r2, ror #8
 800a45a:	fb21 4000 	smlad	r0, r1, r0, r4
 800a45e:	686c      	ldr	r4, [r5, #4]
 800a460:	fb22 0404 	smlad	r4, r2, r4, r0
 800a464:	68a8      	ldr	r0, [r5, #8]
 800a466:	fb21 3300 	smlad	r3, r1, r0, r3
 800a46a:	68e9      	ldr	r1, [r5, #12]
 800a46c:	fb22 3201 	smlad	r2, r2, r1, r3
 800a470:	f8da 3004 	ldr.w	r3, [sl, #4]
 800a474:	6928      	ldr	r0, [r5, #16]
 800a476:	fa2f f183 	sxtb16	r1, r3
 800a47a:	fa2f f393 	sxtb16	r3, r3, ror #8
 800a47e:	fb21 4000 	smlad	r0, r1, r0, r4
 800a482:	696c      	ldr	r4, [r5, #20]
 800a484:	fb23 0404 	smlad	r4, r3, r4, r0
 800a488:	69a8      	ldr	r0, [r5, #24]
 800a48a:	fb21 2100 	smlad	r1, r1, r0, r2
 800a48e:	69ea      	ldr	r2, [r5, #28]
 800a490:	fb23 1302 	smlad	r3, r3, r2, r1
 800a494:	f8da 2008 	ldr.w	r2, [sl, #8]
 800a498:	6a28      	ldr	r0, [r5, #32]
 800a49a:	fa2f f182 	sxtb16	r1, r2
 800a49e:	fa2f f292 	sxtb16	r2, r2, ror #8
 800a4a2:	fb21 4000 	smlad	r0, r1, r0, r4
 800a4a6:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800a4a8:	fb22 0606 	smlad	r6, r2, r6, r0
 800a4ac:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800a4ae:	fb21 3100 	smlad	r1, r1, r0, r3
 800a4b2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800a4b4:	fb22 1203 	smlad	r2, r2, r3, r1
 800a4b8:	f8da 400c 	ldr.w	r4, [sl, #12]
 800a4bc:	3540      	adds	r5, #64	; 0x40
 800a4be:	f855 0c10 	ldr.w	r0, [r5, #-16]
 800a4c2:	f10a 0a10 	add.w	sl, sl, #16
 800a4c6:	f855 8c0c 	ldr.w	r8, [r5, #-12]
 800a4ca:	f855 ec08 	ldr.w	lr, [r5, #-8]
 800a4ce:	f855 cc04 	ldr.w	ip, [r5, #-4]
 800a4d2:	fa2f f184 	sxtb16	r1, r4
 800a4d6:	fa2f f394 	sxtb16	r3, r4, ror #8
 800a4da:	fb21 6000 	smlad	r0, r1, r0, r6
 800a4de:	fb23 0408 	smlad	r4, r3, r8, r0
 800a4e2:	fb21 220e 	smlad	r2, r1, lr, r2
 800a4e6:	fb23 230c 	smlad	r3, r3, ip, r2
 800a4ea:	45ba      	cmp	sl, r7
 800a4ec:	d1ae      	bne.n	800a44c <st_sssa8_ch_nn_mat_mult_nt_t+0x5b4>
 800a4ee:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800a4f0:	9f03      	ldr	r7, [sp, #12]
 800a4f2:	e9cd 4307 	strd	r4, r3, [sp, #28]
 800a4f6:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a4f8:	eb03 0e02 	add.w	lr, r3, r2
 800a4fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a4fe:	42bb      	cmp	r3, r7
 800a500:	dd31      	ble.n	800a566 <st_sssa8_ch_nn_mat_mult_nt_t+0x6ce>
 800a502:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800a504:	4671      	mov	r1, lr
 800a506:	f8cd e000 	str.w	lr, [sp]
 800a50a:	eba3 0907 	sub.w	r9, r3, r7
 800a50e:	9701      	str	r7, [sp, #4]
 800a510:	ea4f 0999 	mov.w	r9, r9, lsr #2
 800a514:	f109 0801 	add.w	r8, r9, #1
 800a518:	e9dd 4507 	ldrd	r4, r5, [sp, #28]
 800a51c:	eb0a 0c88 	add.w	ip, sl, r8, lsl #2
 800a520:	f85a 3b04 	ldr.w	r3, [sl], #4
 800a524:	3110      	adds	r1, #16
 800a526:	f851 0c10 	ldr.w	r0, [r1, #-16]
 800a52a:	f851 ec0c 	ldr.w	lr, [r1, #-12]
 800a52e:	f851 7c08 	ldr.w	r7, [r1, #-8]
 800a532:	f851 6c04 	ldr.w	r6, [r1, #-4]
 800a536:	fa2f f283 	sxtb16	r2, r3
 800a53a:	fa2f f393 	sxtb16	r3, r3, ror #8
 800a53e:	fb22 4400 	smlad	r4, r2, r0, r4
 800a542:	fb23 440e 	smlad	r4, r3, lr, r4
 800a546:	fb22 5507 	smlad	r5, r2, r7, r5
 800a54a:	fb23 5506 	smlad	r5, r3, r6, r5
 800a54e:	45e2      	cmp	sl, ip
 800a550:	d1e6      	bne.n	800a520 <st_sssa8_ch_nn_mat_mult_nt_t+0x688>
 800a552:	9f01      	ldr	r7, [sp, #4]
 800a554:	f8dd e000 	ldr.w	lr, [sp]
 800a558:	3704      	adds	r7, #4
 800a55a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 800a55e:	eb07 0789 	add.w	r7, r7, r9, lsl #2
 800a562:	e9cd 4507 	strd	r4, r5, [sp, #28]
 800a566:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
 800a568:	42bb      	cmp	r3, r7
 800a56a:	dd2d      	ble.n	800a5c8 <st_sssa8_ch_nn_mat_mult_nt_t+0x730>
 800a56c:	f99a 2000 	ldrsb.w	r2, [sl]
 800a570:	1c7b      	adds	r3, r7, #1
 800a572:	9c07      	ldr	r4, [sp, #28]
 800a574:	f8be 0000 	ldrh.w	r0, [lr]
 800a578:	f8be 1002 	ldrh.w	r1, [lr, #2]
 800a57c:	fb10 4002 	smlabb	r0, r0, r2, r4
 800a580:	9c08      	ldr	r4, [sp, #32]
 800a582:	fb11 4402 	smlabb	r4, r1, r2, r4
 800a586:	9a3c      	ldr	r2, [sp, #240]	; 0xf0
 800a588:	9007      	str	r0, [sp, #28]
 800a58a:	429a      	cmp	r2, r3
 800a58c:	9408      	str	r4, [sp, #32]
 800a58e:	dd1b      	ble.n	800a5c8 <st_sssa8_ch_nn_mat_mult_nt_t+0x730>
 800a590:	f99a 3001 	ldrsb.w	r3, [sl, #1]
 800a594:	3702      	adds	r7, #2
 800a596:	f8be 1004 	ldrh.w	r1, [lr, #4]
 800a59a:	f8be 2006 	ldrh.w	r2, [lr, #6]
 800a59e:	fb11 0003 	smlabb	r0, r1, r3, r0
 800a5a2:	fb12 4403 	smlabb	r4, r2, r3, r4
 800a5a6:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
 800a5a8:	9007      	str	r0, [sp, #28]
 800a5aa:	42bb      	cmp	r3, r7
 800a5ac:	9408      	str	r4, [sp, #32]
 800a5ae:	dd0b      	ble.n	800a5c8 <st_sssa8_ch_nn_mat_mult_nt_t+0x730>
 800a5b0:	f99a 3002 	ldrsb.w	r3, [sl, #2]
 800a5b4:	f8be 2008 	ldrh.w	r2, [lr, #8]
 800a5b8:	f8be 100a 	ldrh.w	r1, [lr, #10]
 800a5bc:	fb12 0203 	smlabb	r2, r2, r3, r0
 800a5c0:	fb11 4303 	smlabb	r3, r1, r3, r4
 800a5c4:	9207      	str	r2, [sp, #28]
 800a5c6:	9308      	str	r3, [sp, #32]
 800a5c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a5ca:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a5cc:	f933 3c02 	ldrsh.w	r3, [r3, #-2]
 800a5d0:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800a5d8:	f852 2c04 	ldr.w	r2, [r2, #-4]
 800a5dc:	f340 80d3 	ble.w	800a786 <st_sssa8_ch_nn_mat_mult_nt_t+0x8ee>
 800a5e0:	9807      	ldr	r0, [sp, #28]
 800a5e2:	0040      	lsls	r0, r0, #1
 800a5e4:	fb50 2201 	smmla	r2, r0, r1, r2
 800a5e8:	fa42 f303 	asr.w	r3, r2, r3
 800a5ec:	f303 0307 	ssat	r3, #8, r3
 800a5f0:	f88b 3000 	strb.w	r3, [fp]
 800a5f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a5f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a5fa:	2900      	cmp	r1, #0
 800a5fc:	f340 80af 	ble.w	800a75e <st_sssa8_ch_nn_mat_mult_nt_t+0x8c6>
 800a600:	9b08      	ldr	r3, [sp, #32]
 800a602:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800a604:	0058      	lsls	r0, r3, #1
 800a606:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 800a608:	461c      	mov	r4, r3
 800a60a:	58a3      	ldr	r3, [r4, r2]
 800a60c:	9c3e      	ldr	r4, [sp, #248]	; 0xf8
 800a60e:	58a2      	ldr	r2, [r4, r2]
 800a610:	fb50 2303 	smmla	r3, r0, r3, r2
 800a614:	410b      	asrs	r3, r1
 800a616:	f303 0307 	ssat	r3, #8, r3
 800a61a:	f88b 3001 	strb.w	r3, [fp, #1]
 800a61e:	e655      	b.n	800a2cc <st_sssa8_ch_nn_mat_mult_nt_t+0x434>
 800a620:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800a622:	2c00      	cmp	r4, #0
 800a624:	f000 80cb 	beq.w	800a7be <st_sssa8_ch_nn_mat_mult_nt_t+0x926>
 800a628:	2300      	movs	r3, #0
 800a62a:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800a62c:	4619      	mov	r1, r3
 800a62e:	f102 0010 	add.w	r0, r2, #16
 800a632:	f930 5c10 	ldrsh.w	r5, [r0, #-16]
 800a636:	3c01      	subs	r4, #1
 800a638:	f930 2c08 	ldrsh.w	r2, [r0, #-8]
 800a63c:	f100 0010 	add.w	r0, r0, #16
 800a640:	eba1 0105 	sub.w	r1, r1, r5
 800a644:	f930 5c1e 	ldrsh.w	r5, [r0, #-30]
 800a648:	eba3 0302 	sub.w	r3, r3, r2
 800a64c:	f930 2c16 	ldrsh.w	r2, [r0, #-22]
 800a650:	eba1 0105 	sub.w	r1, r1, r5
 800a654:	f930 5c1c 	ldrsh.w	r5, [r0, #-28]
 800a658:	eba3 0302 	sub.w	r3, r3, r2
 800a65c:	f930 2c14 	ldrsh.w	r2, [r0, #-20]
 800a660:	eba1 0105 	sub.w	r1, r1, r5
 800a664:	f930 5c1a 	ldrsh.w	r5, [r0, #-26]
 800a668:	eba3 0302 	sub.w	r3, r3, r2
 800a66c:	f930 2c12 	ldrsh.w	r2, [r0, #-18]
 800a670:	eba1 0105 	sub.w	r1, r1, r5
 800a674:	eba3 0302 	sub.w	r3, r3, r2
 800a678:	d1db      	bne.n	800a632 <st_sssa8_ch_nn_mat_mult_nt_t+0x79a>
 800a67a:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800a67c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800a67e:	4402      	add	r2, r0
 800a680:	9d28      	ldr	r5, [sp, #160]	; 0xa0
 800a682:	b1cd      	cbz	r5, 800a6b8 <st_sssa8_ch_nn_mat_mult_nt_t+0x820>
 800a684:	f9b2 4000 	ldrsh.w	r4, [r2]
 800a688:	2d01      	cmp	r5, #1
 800a68a:	f9b2 0002 	ldrsh.w	r0, [r2, #2]
 800a68e:	eba1 0104 	sub.w	r1, r1, r4
 800a692:	eba3 0300 	sub.w	r3, r3, r0
 800a696:	d00f      	beq.n	800a6b8 <st_sssa8_ch_nn_mat_mult_nt_t+0x820>
 800a698:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800a69c:	2d02      	cmp	r5, #2
 800a69e:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
 800a6a2:	eba1 0104 	sub.w	r1, r1, r4
 800a6a6:	eba3 0300 	sub.w	r3, r3, r0
 800a6aa:	d005      	beq.n	800a6b8 <st_sssa8_ch_nn_mat_mult_nt_t+0x820>
 800a6ac:	f9b2 0008 	ldrsh.w	r0, [r2, #8]
 800a6b0:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800a6b4:	1a09      	subs	r1, r1, r0
 800a6b6:	1a9b      	subs	r3, r3, r2
 800a6b8:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
 800a6ba:	fb02 f101 	mul.w	r1, r2, r1
 800a6be:	fb02 f303 	mul.w	r3, r2, r3
 800a6c2:	e460      	b.n	8009f86 <st_sssa8_ch_nn_mat_mult_nt_t+0xee>
 800a6c4:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800a6c6:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
 800a6c8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800a6ca:	18f5      	adds	r5, r6, r3
 800a6cc:	2c00      	cmp	r4, #0
 800a6ce:	d07e      	beq.n	800a7ce <st_sssa8_ch_nn_mat_mult_nt_t+0x936>
 800a6d0:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a6d2:	f856 1b04 	ldr.w	r1, [r6], #4
 800a6d6:	3c01      	subs	r4, #1
 800a6d8:	f855 2b04 	ldr.w	r2, [r5], #4
 800a6dc:	f103 0310 	add.w	r3, r3, #16
 800a6e0:	ea4f 2031 	mov.w	r0, r1, ror #8
 800a6e4:	fa2f f181 	sxtb16	r1, r1
 800a6e8:	fa2f f080 	sxtb16	r0, r0
 800a6ec:	f843 1c10 	str.w	r1, [r3, #-16]
 800a6f0:	ea4f 2132 	mov.w	r1, r2, ror #8
 800a6f4:	f843 0c0c 	str.w	r0, [r3, #-12]
 800a6f8:	fa2f f181 	sxtb16	r1, r1
 800a6fc:	fa2f f282 	sxtb16	r2, r2
 800a700:	f843 1c04 	str.w	r1, [r3, #-4]
 800a704:	f843 2c08 	str.w	r2, [r3, #-8]
 800a708:	d1e3      	bne.n	800a6d2 <st_sssa8_ch_nn_mat_mult_nt_t+0x83a>
 800a70a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800a70c:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a70e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800a710:	185d      	adds	r5, r3, r1
 800a712:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800a714:	189a      	adds	r2, r3, r2
 800a716:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a718:	440b      	add	r3, r1
 800a71a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 800a71c:	2800      	cmp	r0, #0
 800a71e:	f43f ac2d 	beq.w	8009f7c <st_sssa8_ch_nn_mat_mult_nt_t+0xe4>
 800a722:	f992 1000 	ldrsb.w	r1, [r2]
 800a726:	2801      	cmp	r0, #1
 800a728:	8019      	strh	r1, [r3, #0]
 800a72a:	f995 1000 	ldrsb.w	r1, [r5]
 800a72e:	8059      	strh	r1, [r3, #2]
 800a730:	f43f ac24 	beq.w	8009f7c <st_sssa8_ch_nn_mat_mult_nt_t+0xe4>
 800a734:	f992 1001 	ldrsb.w	r1, [r2, #1]
 800a738:	2802      	cmp	r0, #2
 800a73a:	8099      	strh	r1, [r3, #4]
 800a73c:	f995 1001 	ldrsb.w	r1, [r5, #1]
 800a740:	80d9      	strh	r1, [r3, #6]
 800a742:	f43f ac1b 	beq.w	8009f7c <st_sssa8_ch_nn_mat_mult_nt_t+0xe4>
 800a746:	f992 2002 	ldrsb.w	r2, [r2, #2]
 800a74a:	811a      	strh	r2, [r3, #8]
 800a74c:	f995 2002 	ldrsb.w	r2, [r5, #2]
 800a750:	815a      	strh	r2, [r3, #10]
 800a752:	e413      	b.n	8009f7c <st_sssa8_ch_nn_mat_mult_nt_t+0xe4>
 800a754:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800a758:	f8dd b058 	ldr.w	fp, [sp, #88]	; 0x58
 800a75c:	e5b2      	b.n	800a2c4 <st_sssa8_ch_nn_mat_mult_nt_t+0x42c>
 800a75e:	f1c1 0101 	rsb	r1, r1, #1
 800a762:	9a08      	ldr	r2, [sp, #32]
 800a764:	408a      	lsls	r2, r1
 800a766:	f302 021f 	ssat	r2, #32, r2
 800a76a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 800a76c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800a76e:	4618      	mov	r0, r3
 800a770:	5843      	ldr	r3, [r0, r1]
 800a772:	fb52 f213 	smmulr	r2, r2, r3
 800a776:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 800a778:	585b      	ldr	r3, [r3, r1]
 800a77a:	4413      	add	r3, r2
 800a77c:	f303 0307 	ssat	r3, #8, r3
 800a780:	f88b 3001 	strb.w	r3, [fp, #1]
 800a784:	e5a2      	b.n	800a2cc <st_sssa8_ch_nn_mat_mult_nt_t+0x434>
 800a786:	f1c3 0301 	rsb	r3, r3, #1
 800a78a:	9807      	ldr	r0, [sp, #28]
 800a78c:	4098      	lsls	r0, r3
 800a78e:	f300 031f 	ssat	r3, #32, r0
 800a792:	fb53 f311 	smmulr	r3, r3, r1
 800a796:	4413      	add	r3, r2
 800a798:	f303 0307 	ssat	r3, #8, r3
 800a79c:	f88b 3000 	strb.w	r3, [fp]
 800a7a0:	e728      	b.n	800a5f4 <st_sssa8_ch_nn_mat_mult_nt_t+0x75c>
 800a7a2:	f1c3 0301 	rsb	r3, r3, #1
 800a7a6:	fa02 f303 	lsl.w	r3, r2, r3
 800a7aa:	f303 031f 	ssat	r3, #32, r3
 800a7ae:	fb53 f314 	smmulr	r3, r3, r4
 800a7b2:	4403      	add	r3, r0
 800a7b4:	f303 0307 	ssat	r3, #8, r3
 800a7b8:	f88a 3000 	strb.w	r3, [sl]
 800a7bc:	e5ee      	b.n	800a39c <st_sssa8_ch_nn_mat_mult_nt_t+0x504>
 800a7be:	4621      	mov	r1, r4
 800a7c0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800a7c2:	4623      	mov	r3, r4
 800a7c4:	e75c      	b.n	800a680 <st_sssa8_ch_nn_mat_mult_nt_t+0x7e8>
 800a7c6:	f8dd e0fc 	ldr.w	lr, [sp, #252]	; 0xfc
 800a7ca:	2700      	movs	r7, #0
 800a7cc:	e696      	b.n	800a4fc <st_sssa8_ch_nn_mat_mult_nt_t+0x664>
 800a7ce:	4632      	mov	r2, r6
 800a7d0:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 800a7d2:	e7a2      	b.n	800a71a <st_sssa8_ch_nn_mat_mult_nt_t+0x882>

0800a7d4 <st_sssa8_ch_nn_mat_mult_kernel_opt>:
 800a7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7d8:	b09b      	sub	sp, #108	; 0x6c
 800a7da:	4683      	mov	fp, r0
 800a7dc:	460f      	mov	r7, r1
 800a7de:	f8bd 4090 	ldrh.w	r4, [sp, #144]	; 0x90
 800a7e2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800a7e4:	910d      	str	r1, [sp, #52]	; 0x34
 800a7e6:	0861      	lsrs	r1, r4, #1
 800a7e8:	eb00 0503 	add.w	r5, r0, r3
 800a7ec:	f8bd 0094 	ldrh.w	r0, [sp, #148]	; 0x94
 800a7f0:	9318      	str	r3, [sp, #96]	; 0x60
 800a7f2:	9417      	str	r4, [sp, #92]	; 0x5c
 800a7f4:	9215      	str	r2, [sp, #84]	; 0x54
 800a7f6:	9516      	str	r5, [sp, #88]	; 0x58
 800a7f8:	9006      	str	r0, [sp, #24]
 800a7fa:	f000 81c5 	beq.w	800ab88 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3b4>
 800a7fe:	3901      	subs	r1, #1
 800a800:	1ec4      	subs	r4, r0, #3
 800a802:	3210      	adds	r2, #16
 800a804:	f1a0 0310 	sub.w	r3, r0, #16
 800a808:	940f      	str	r4, [sp, #60]	; 0x3c
 800a80a:	b28c      	uxth	r4, r1
 800a80c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800a80e:	091b      	lsrs	r3, r3, #4
 800a810:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800a814:	9419      	str	r4, [sp, #100]	; 0x64
 800a816:	3108      	adds	r1, #8
 800a818:	3301      	adds	r3, #1
 800a81a:	920e      	str	r2, [sp, #56]	; 0x38
 800a81c:	eb07 0640 	add.w	r6, r7, r0, lsl #1
 800a820:	9107      	str	r1, [sp, #28]
 800a822:	9926      	ldr	r1, [sp, #152]	; 0x98
 800a824:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800a826:	3104      	adds	r1, #4
 800a828:	9610      	str	r6, [sp, #64]	; 0x40
 800a82a:	3208      	adds	r2, #8
 800a82c:	9105      	str	r1, [sp, #20]
 800a82e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800a830:	9204      	str	r2, [sp, #16]
 800a832:	015a      	lsls	r2, r3, #5
 800a834:	3102      	adds	r1, #2
 800a836:	9103      	str	r1, [sp, #12]
 800a838:	0119      	lsls	r1, r3, #4
 800a83a:	019b      	lsls	r3, r3, #6
 800a83c:	9113      	str	r1, [sp, #76]	; 0x4c
 800a83e:	9311      	str	r3, [sp, #68]	; 0x44
 800a840:	1cab      	adds	r3, r5, #2
 800a842:	9928      	ldr	r1, [sp, #160]	; 0xa0
 800a844:	9302      	str	r3, [sp, #8]
 800a846:	1f03      	subs	r3, r0, #4
 800a848:	3108      	adds	r1, #8
 800a84a:	9314      	str	r3, [sp, #80]	; 0x50
 800a84c:	9101      	str	r1, [sp, #4]
 800a84e:	18b9      	adds	r1, r7, r2
 800a850:	9b07      	ldr	r3, [sp, #28]
 800a852:	18b2      	adds	r2, r6, r2
 800a854:	9108      	str	r1, [sp, #32]
 800a856:	9212      	str	r2, [sp, #72]	; 0x48
 800a858:	f853 5c08 	ldr.w	r5, [r3, #-8]
 800a85c:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800a860:	9b06      	ldr	r3, [sp, #24]
 800a862:	2b0f      	cmp	r3, #15
 800a864:	f340 8255 	ble.w	800ad12 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x53e>
 800a868:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800a86c:	46dc      	mov	ip, fp
 800a86e:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800a872:	4603      	mov	r3, r0
 800a874:	462c      	mov	r4, r5
 800a876:	9e08      	ldr	r6, [sp, #32]
 800a878:	f8de 7000 	ldr.w	r7, [lr]
 800a87c:	f8d8 2000 	ldr.w	r2, [r8]
 800a880:	f8dc 1000 	ldr.w	r1, [ip]
 800a884:	f8dc a004 	ldr.w	sl, [ip, #4]
 800a888:	fb21 5507 	smlad	r5, r1, r7, r5
 800a88c:	fb21 4102 	smlad	r1, r1, r2, r4
 800a890:	fb2a 0007 	smlad	r0, sl, r7, r0
 800a894:	fb2a 3202 	smlad	r2, sl, r2, r3
 800a898:	f8de 7004 	ldr.w	r7, [lr, #4]
 800a89c:	f8d8 a004 	ldr.w	sl, [r8, #4]
 800a8a0:	f8dc 4008 	ldr.w	r4, [ip, #8]
 800a8a4:	f8dc 300c 	ldr.w	r3, [ip, #12]
 800a8a8:	fb24 5507 	smlad	r5, r4, r7, r5
 800a8ac:	fb24 110a 	smlad	r1, r4, sl, r1
 800a8b0:	fb23 0007 	smlad	r0, r3, r7, r0
 800a8b4:	fb23 230a 	smlad	r3, r3, sl, r2
 800a8b8:	f8de 7008 	ldr.w	r7, [lr, #8]
 800a8bc:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800a8c0:	f8dc 4010 	ldr.w	r4, [ip, #16]
 800a8c4:	f8dc a014 	ldr.w	sl, [ip, #20]
 800a8c8:	fb24 5507 	smlad	r5, r4, r7, r5
 800a8cc:	fb24 1102 	smlad	r1, r4, r2, r1
 800a8d0:	fb2a 0007 	smlad	r0, sl, r7, r0
 800a8d4:	fb2a 3202 	smlad	r2, sl, r2, r3
 800a8d8:	f8de 700c 	ldr.w	r7, [lr, #12]
 800a8dc:	f8d8 a00c 	ldr.w	sl, [r8, #12]
 800a8e0:	f8dc 4018 	ldr.w	r4, [ip, #24]
 800a8e4:	f8dc 901c 	ldr.w	r9, [ip, #28]
 800a8e8:	fb24 5507 	smlad	r5, r4, r7, r5
 800a8ec:	fb24 140a 	smlad	r4, r4, sl, r1
 800a8f0:	fb29 0007 	smlad	r0, r9, r7, r0
 800a8f4:	fb29 2a0a 	smlad	sl, r9, sl, r2
 800a8f8:	f8de 7010 	ldr.w	r7, [lr, #16]
 800a8fc:	f8d8 9010 	ldr.w	r9, [r8, #16]
 800a900:	f8dc 1020 	ldr.w	r1, [ip, #32]
 800a904:	f8dc 3024 	ldr.w	r3, [ip, #36]	; 0x24
 800a908:	fb21 5507 	smlad	r5, r1, r7, r5
 800a90c:	fb21 4409 	smlad	r4, r1, r9, r4
 800a910:	fb23 0007 	smlad	r0, r3, r7, r0
 800a914:	fb23 a909 	smlad	r9, r3, r9, sl
 800a918:	f8de 7014 	ldr.w	r7, [lr, #20]
 800a91c:	f8d8 2014 	ldr.w	r2, [r8, #20]
 800a920:	f8dc 1028 	ldr.w	r1, [ip, #40]	; 0x28
 800a924:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
 800a928:	fb21 5507 	smlad	r5, r1, r7, r5
 800a92c:	fb21 4402 	smlad	r4, r1, r2, r4
 800a930:	fb23 0007 	smlad	r0, r3, r7, r0
 800a934:	fb23 9302 	smlad	r3, r3, r2, r9
 800a938:	f8de 7018 	ldr.w	r7, [lr, #24]
 800a93c:	f8d8 9018 	ldr.w	r9, [r8, #24]
 800a940:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
 800a944:	f8dc 2034 	ldr.w	r2, [ip, #52]	; 0x34
 800a948:	fb21 5507 	smlad	r5, r1, r7, r5
 800a94c:	fb21 4409 	smlad	r4, r1, r9, r4
 800a950:	fb22 0707 	smlad	r7, r2, r7, r0
 800a954:	fb22 3909 	smlad	r9, r2, r9, r3
 800a958:	f8de 001c 	ldr.w	r0, [lr, #28]
 800a95c:	f108 0820 	add.w	r8, r8, #32
 800a960:	f858 3c04 	ldr.w	r3, [r8, #-4]
 800a964:	f10e 0e20 	add.w	lr, lr, #32
 800a968:	f8dc 1038 	ldr.w	r1, [ip, #56]	; 0x38
 800a96c:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 800a970:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 800a974:	fb21 5500 	smlad	r5, r1, r0, r5
 800a978:	fb21 4403 	smlad	r4, r1, r3, r4
 800a97c:	fb22 7000 	smlad	r0, r2, r0, r7
 800a980:	fb22 9303 	smlad	r3, r2, r3, r9
 800a984:	45b6      	cmp	lr, r6
 800a986:	f47f af77 	bne.w	800a878 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xa4>
 800a98a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800a98c:	9f08      	ldr	r7, [sp, #32]
 800a98e:	4493      	add	fp, r2
 800a990:	f8dd e04c 	ldr.w	lr, [sp, #76]	; 0x4c
 800a994:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800a996:	9200      	str	r2, [sp, #0]
 800a998:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800a99a:	4596      	cmp	lr, r2
 800a99c:	da41      	bge.n	800aa22 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x24e>
 800a99e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800a9a0:	465e      	mov	r6, fp
 800a9a2:	f8dd c000 	ldr.w	ip, [sp]
 800a9a6:	eba2 020e 	sub.w	r2, r2, lr
 800a9aa:	f8cd e030 	str.w	lr, [sp, #48]	; 0x30
 800a9ae:	0892      	lsrs	r2, r2, #2
 800a9b0:	920b      	str	r2, [sp, #44]	; 0x2c
 800a9b2:	3201      	adds	r2, #1
 800a9b4:	920a      	str	r2, [sp, #40]	; 0x28
 800a9b6:	00d2      	lsls	r2, r2, #3
 800a9b8:	eb07 0802 	add.w	r8, r7, r2
 800a9bc:	9209      	str	r2, [sp, #36]	; 0x24
 800a9be:	f8d7 e000 	ldr.w	lr, [r7]
 800a9c2:	f8dc 9000 	ldr.w	r9, [ip]
 800a9c6:	6831      	ldr	r1, [r6, #0]
 800a9c8:	f8d6 a004 	ldr.w	sl, [r6, #4]
 800a9cc:	fb21 550e 	smlad	r5, r1, lr, r5
 800a9d0:	fb21 4409 	smlad	r4, r1, r9, r4
 800a9d4:	fb2a 000e 	smlad	r0, sl, lr, r0
 800a9d8:	fb2a 3309 	smlad	r3, sl, r9, r3
 800a9dc:	f8d7 e004 	ldr.w	lr, [r7, #4]
 800a9e0:	f10c 0c08 	add.w	ip, ip, #8
 800a9e4:	f85c 9c04 	ldr.w	r9, [ip, #-4]
 800a9e8:	3708      	adds	r7, #8
 800a9ea:	68b1      	ldr	r1, [r6, #8]
 800a9ec:	3610      	adds	r6, #16
 800a9ee:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800a9f2:	fb21 550e 	smlad	r5, r1, lr, r5
 800a9f6:	fb21 4409 	smlad	r4, r1, r9, r4
 800a9fa:	fb22 000e 	smlad	r0, r2, lr, r0
 800a9fe:	fb22 3309 	smlad	r3, r2, r9, r3
 800aa02:	4547      	cmp	r7, r8
 800aa04:	d1db      	bne.n	800a9be <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1ea>
 800aa06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800aa08:	9909      	ldr	r1, [sp, #36]	; 0x24
 800aa0a:	eb0b 1b02 	add.w	fp, fp, r2, lsl #4
 800aa0e:	9a00      	ldr	r2, [sp, #0]
 800aa10:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800aa14:	440a      	add	r2, r1
 800aa16:	f10e 0e04 	add.w	lr, lr, #4
 800aa1a:	9200      	str	r2, [sp, #0]
 800aa1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa1e:	eb0e 0e82 	add.w	lr, lr, r2, lsl #2
 800aa22:	9a06      	ldr	r2, [sp, #24]
 800aa24:	4572      	cmp	r2, lr
 800aa26:	dd40      	ble.n	800aaaa <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2d6>
 800aa28:	9e00      	ldr	r6, [sp, #0]
 800aa2a:	f10e 0201 	add.w	r2, lr, #1
 800aa2e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800aa32:	f9b7 c000 	ldrsh.w	ip, [r7]
 800aa36:	f9b6 6000 	ldrsh.w	r6, [r6]
 800aa3a:	fb0c 0001 	mla	r0, ip, r1, r0
 800aa3e:	f9bb 8000 	ldrsh.w	r8, [fp]
 800aa42:	fb06 3301 	mla	r3, r6, r1, r3
 800aa46:	9906      	ldr	r1, [sp, #24]
 800aa48:	fb08 550c 	mla	r5, r8, ip, r5
 800aa4c:	4291      	cmp	r1, r2
 800aa4e:	fb08 4406 	mla	r4, r8, r6, r4
 800aa52:	f340 815b 	ble.w	800ad0c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x538>
 800aa56:	9a00      	ldr	r2, [sp, #0]
 800aa58:	f10e 0e02 	add.w	lr, lr, #2
 800aa5c:	f9b7 6002 	ldrsh.w	r6, [r7, #2]
 800aa60:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 800aa64:	f9bb 2006 	ldrsh.w	r2, [fp, #6]
 800aa68:	f9bb c004 	ldrsh.w	ip, [fp, #4]
 800aa6c:	fb06 0002 	mla	r0, r6, r2, r0
 800aa70:	fb01 3302 	mla	r3, r1, r2, r3
 800aa74:	9a06      	ldr	r2, [sp, #24]
 800aa76:	fb0c 5506 	mla	r5, ip, r6, r5
 800aa7a:	4572      	cmp	r2, lr
 800aa7c:	fb0c 4401 	mla	r4, ip, r1, r4
 800aa80:	f340 814f 	ble.w	800ad22 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x54e>
 800aa84:	9a00      	ldr	r2, [sp, #0]
 800aa86:	f10b 0b0c 	add.w	fp, fp, #12
 800aa8a:	f9b7 6004 	ldrsh.w	r6, [r7, #4]
 800aa8e:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 800aa92:	f93b 7c04 	ldrsh.w	r7, [fp, #-4]
 800aa96:	f93b 2c02 	ldrsh.w	r2, [fp, #-2]
 800aa9a:	fb07 5506 	mla	r5, r7, r6, r5
 800aa9e:	fb07 4401 	mla	r4, r7, r1, r4
 800aaa2:	fb06 0002 	mla	r0, r6, r2, r0
 800aaa6:	fb01 3302 	mla	r3, r1, r2, r3
 800aaaa:	9f05      	ldr	r7, [sp, #20]
 800aaac:	9904      	ldr	r1, [sp, #16]
 800aaae:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 800aab2:	9e01      	ldr	r6, [sp, #4]
 800aab4:	2a00      	cmp	r2, #0
 800aab6:	f851 1c08 	ldr.w	r1, [r1, #-8]
 800aaba:	f856 6c08 	ldr.w	r6, [r6, #-8]
 800aabe:	f340 8107 	ble.w	800acd0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4fc>
 800aac2:	006d      	lsls	r5, r5, #1
 800aac4:	0064      	lsls	r4, r4, #1
 800aac6:	fb55 6501 	smmla	r5, r5, r1, r6
 800aaca:	fb54 6401 	smmla	r4, r4, r1, r6
 800aace:	fa45 f202 	asr.w	r2, r5, r2
 800aad2:	f302 0207 	ssat	r2, #8, r2
 800aad6:	9903      	ldr	r1, [sp, #12]
 800aad8:	f801 2c02 	strb.w	r2, [r1, #-2]
 800aadc:	f937 1c04 	ldrsh.w	r1, [r7, #-4]
 800aae0:	410c      	asrs	r4, r1
 800aae2:	f304 0407 	ssat	r4, #8, r4
 800aae6:	9a02      	ldr	r2, [sp, #8]
 800aae8:	463d      	mov	r5, r7
 800aaea:	f802 4c02 	strb.w	r4, [r2, #-2]
 800aaee:	f935 2c02 	ldrsh.w	r2, [r5, #-2]
 800aaf2:	2a00      	cmp	r2, #0
 800aaf4:	f340 80c8 	ble.w	800ac88 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4b4>
 800aaf8:	9904      	ldr	r1, [sp, #16]
 800aafa:	0040      	lsls	r0, r0, #1
 800aafc:	9c01      	ldr	r4, [sp, #4]
 800aafe:	005b      	lsls	r3, r3, #1
 800ab00:	f851 1c04 	ldr.w	r1, [r1, #-4]
 800ab04:	f854 4c04 	ldr.w	r4, [r4, #-4]
 800ab08:	fb50 4001 	smmla	r0, r0, r1, r4
 800ab0c:	fb53 4301 	smmla	r3, r3, r1, r4
 800ab10:	4110      	asrs	r0, r2
 800ab12:	f300 0007 	ssat	r0, #8, r0
 800ab16:	9a03      	ldr	r2, [sp, #12]
 800ab18:	f802 0c01 	strb.w	r0, [r2, #-1]
 800ab1c:	f935 4c02 	ldrsh.w	r4, [r5, #-2]
 800ab20:	fa43 f404 	asr.w	r4, r3, r4
 800ab24:	f304 0407 	ssat	r4, #8, r4
 800ab28:	9b02      	ldr	r3, [sp, #8]
 800ab2a:	462a      	mov	r2, r5
 800ab2c:	f803 4c01 	strb.w	r4, [r3, #-1]
 800ab30:	3204      	adds	r2, #4
 800ab32:	9b07      	ldr	r3, [sp, #28]
 800ab34:	9205      	str	r2, [sp, #20]
 800ab36:	3308      	adds	r3, #8
 800ab38:	9a04      	ldr	r2, [sp, #16]
 800ab3a:	9307      	str	r3, [sp, #28]
 800ab3c:	3208      	adds	r2, #8
 800ab3e:	9204      	str	r2, [sp, #16]
 800ab40:	9a03      	ldr	r2, [sp, #12]
 800ab42:	3202      	adds	r2, #2
 800ab44:	9203      	str	r2, [sp, #12]
 800ab46:	9a01      	ldr	r2, [sp, #4]
 800ab48:	3208      	adds	r2, #8
 800ab4a:	9201      	str	r2, [sp, #4]
 800ab4c:	9a02      	ldr	r2, [sp, #8]
 800ab4e:	3202      	adds	r2, #2
 800ab50:	9202      	str	r2, [sp, #8]
 800ab52:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ab54:	429a      	cmp	r2, r3
 800ab56:	f47f ae7f 	bne.w	800a858 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x84>
 800ab5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ab5c:	9826      	ldr	r0, [sp, #152]	; 0x98
 800ab5e:	3301      	adds	r3, #1
 800ab60:	00da      	lsls	r2, r3, #3
 800ab62:	0059      	lsls	r1, r3, #1
 800ab64:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800ab68:	9326      	str	r3, [sp, #152]	; 0x98
 800ab6a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ab6c:	4413      	add	r3, r2
 800ab6e:	9315      	str	r3, [sp, #84]	; 0x54
 800ab70:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800ab72:	4413      	add	r3, r2
 800ab74:	9327      	str	r3, [sp, #156]	; 0x9c
 800ab76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ab78:	4413      	add	r3, r2
 800ab7a:	9328      	str	r3, [sp, #160]	; 0xa0
 800ab7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ab7e:	440b      	add	r3, r1
 800ab80:	9329      	str	r3, [sp, #164]	; 0xa4
 800ab82:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ab84:	440b      	add	r3, r1
 800ab86:	9316      	str	r3, [sp, #88]	; 0x58
 800ab88:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ab8a:	07da      	lsls	r2, r3, #31
 800ab8c:	d574      	bpl.n	800ac78 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4a4>
 800ab8e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ab90:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ab92:	6819      	ldr	r1, [r3, #0]
 800ab94:	9b06      	ldr	r3, [sp, #24]
 800ab96:	089e      	lsrs	r6, r3, #2
 800ab98:	eb00 0c43 	add.w	ip, r0, r3, lsl #1
 800ab9c:	f000 80e0 	beq.w	800ad60 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x58c>
 800aba0:	3e01      	subs	r6, #1
 800aba2:	4664      	mov	r4, ip
 800aba4:	460b      	mov	r3, r1
 800aba6:	b2b6      	uxth	r6, r6
 800aba8:	3601      	adds	r6, #1
 800abaa:	00f6      	lsls	r6, r6, #3
 800abac:	eb0b 0706 	add.w	r7, fp, r6
 800abb0:	f8db 5000 	ldr.w	r5, [fp]
 800abb4:	f10b 0b08 	add.w	fp, fp, #8
 800abb8:	f85b 2c04 	ldr.w	r2, [fp, #-4]
 800abbc:	f8d0 e000 	ldr.w	lr, [r0]
 800abc0:	fb25 110e 	smlad	r1, r5, lr, r1
 800abc4:	f8d4 e000 	ldr.w	lr, [r4]
 800abc8:	fb25 330e 	smlad	r3, r5, lr, r3
 800abcc:	f8d0 e004 	ldr.w	lr, [r0, #4]
 800abd0:	3408      	adds	r4, #8
 800abd2:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800abd6:	3008      	adds	r0, #8
 800abd8:	fb22 110e 	smlad	r1, r2, lr, r1
 800abdc:	fb22 3305 	smlad	r3, r2, r5, r3
 800abe0:	45bb      	cmp	fp, r7
 800abe2:	d1e5      	bne.n	800abb0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3dc>
 800abe4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800abe6:	44b4      	add	ip, r6
 800abe8:	4432      	add	r2, r6
 800abea:	920d      	str	r2, [sp, #52]	; 0x34
 800abec:	9a06      	ldr	r2, [sp, #24]
 800abee:	f012 0203 	ands.w	r2, r2, #3
 800abf2:	d01f      	beq.n	800ac34 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x460>
 800abf4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800abf6:	2a01      	cmp	r2, #1
 800abf8:	f9bb 0000 	ldrsh.w	r0, [fp]
 800abfc:	8835      	ldrh	r5, [r6, #0]
 800abfe:	f8bc 4000 	ldrh.w	r4, [ip]
 800ac02:	fb15 1100 	smlabb	r1, r5, r0, r1
 800ac06:	fb14 3300 	smlabb	r3, r4, r0, r3
 800ac0a:	d013      	beq.n	800ac34 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x460>
 800ac0c:	f9bb 0002 	ldrsh.w	r0, [fp, #2]
 800ac10:	2a02      	cmp	r2, #2
 800ac12:	8875      	ldrh	r5, [r6, #2]
 800ac14:	f8bc 4002 	ldrh.w	r4, [ip, #2]
 800ac18:	fb15 1100 	smlabb	r1, r5, r0, r1
 800ac1c:	fb14 3300 	smlabb	r3, r4, r0, r3
 800ac20:	d008      	beq.n	800ac34 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x460>
 800ac22:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
 800ac26:	88b4      	ldrh	r4, [r6, #4]
 800ac28:	f8bc 0004 	ldrh.w	r0, [ip, #4]
 800ac2c:	fb12 1104 	smlabb	r1, r2, r4, r1
 800ac30:	fb12 3300 	smlabb	r3, r2, r0, r3
 800ac34:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800ac36:	9c27      	ldr	r4, [sp, #156]	; 0x9c
 800ac38:	f9b2 2000 	ldrsh.w	r2, [r2]
 800ac3c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 800ac3e:	6825      	ldr	r5, [r4, #0]
 800ac40:	2a00      	cmp	r2, #0
 800ac42:	9c28      	ldr	r4, [sp, #160]	; 0xa0
 800ac44:	f100 0001 	add.w	r0, r0, #1
 800ac48:	6824      	ldr	r4, [r4, #0]
 800ac4a:	dd6d      	ble.n	800ad28 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x554>
 800ac4c:	0049      	lsls	r1, r1, #1
 800ac4e:	005b      	lsls	r3, r3, #1
 800ac50:	fb51 4105 	smmla	r1, r1, r5, r4
 800ac54:	fb53 4305 	smmla	r3, r3, r5, r4
 800ac58:	fa41 f202 	asr.w	r2, r1, r2
 800ac5c:	f302 0207 	ssat	r2, #8, r2
 800ac60:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ac62:	700a      	strb	r2, [r1, #0]
 800ac64:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800ac66:	f9b2 2000 	ldrsh.w	r2, [r2]
 800ac6a:	4113      	asrs	r3, r2
 800ac6c:	f303 0307 	ssat	r3, #8, r3
 800ac70:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800ac72:	9029      	str	r0, [sp, #164]	; 0xa4
 800ac74:	7013      	strb	r3, [r2, #0]
 800ac76:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ac78:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ac7a:	ebc3 0042 	rsb	r0, r3, r2, lsl #1
 800ac7e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ac80:	4418      	add	r0, r3
 800ac82:	b01b      	add	sp, #108	; 0x6c
 800ac84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac88:	f1c2 0201 	rsb	r2, r2, #1
 800ac8c:	fa00 f102 	lsl.w	r1, r0, r2
 800ac90:	f301 011f 	ssat	r1, #32, r1
 800ac94:	9804      	ldr	r0, [sp, #16]
 800ac96:	f850 4c04 	ldr.w	r4, [r0, #-4]
 800ac9a:	fb51 f114 	smmulr	r1, r1, r4
 800ac9e:	fa03 f202 	lsl.w	r2, r3, r2
 800aca2:	f302 001f 	ssat	r0, #32, r2
 800aca6:	fb50 f014 	smmulr	r0, r0, r4
 800acaa:	9b01      	ldr	r3, [sp, #4]
 800acac:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800acb0:	440a      	add	r2, r1
 800acb2:	f302 0207 	ssat	r2, #8, r2
 800acb6:	9903      	ldr	r1, [sp, #12]
 800acb8:	f801 2c01 	strb.w	r2, [r1, #-1]
 800acbc:	f853 3c04 	ldr.w	r3, [r3, #-4]
 800acc0:	4403      	add	r3, r0
 800acc2:	f303 0307 	ssat	r3, #8, r3
 800acc6:	9a02      	ldr	r2, [sp, #8]
 800acc8:	f802 3c01 	strb.w	r3, [r2, #-1]
 800accc:	462a      	mov	r2, r5
 800acce:	e72f      	b.n	800ab30 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x35c>
 800acd0:	f1c2 0201 	rsb	r2, r2, #1
 800acd4:	4095      	lsls	r5, r2
 800acd6:	f305 051f 	ssat	r5, #32, r5
 800acda:	fb55 f511 	smmulr	r5, r5, r1
 800acde:	fa04 f202 	lsl.w	r2, r4, r2
 800ace2:	f302 021f 	ssat	r2, #32, r2
 800ace6:	fb52 f111 	smmulr	r1, r2, r1
 800acea:	4435      	add	r5, r6
 800acec:	f305 0507 	ssat	r5, #8, r5
 800acf0:	9a03      	ldr	r2, [sp, #12]
 800acf2:	f802 5c02 	strb.w	r5, [r2, #-2]
 800acf6:	9a01      	ldr	r2, [sp, #4]
 800acf8:	f852 2c08 	ldr.w	r2, [r2, #-8]
 800acfc:	4411      	add	r1, r2
 800acfe:	f301 0107 	ssat	r1, #8, r1
 800ad02:	9a02      	ldr	r2, [sp, #8]
 800ad04:	463d      	mov	r5, r7
 800ad06:	f802 1c02 	strb.w	r1, [r2, #-2]
 800ad0a:	e6f0      	b.n	800aaee <st_sssa8_ch_nn_mat_mult_kernel_opt+0x31a>
 800ad0c:	f10b 0b04 	add.w	fp, fp, #4
 800ad10:	e6cb      	b.n	800aaaa <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2d6>
 800ad12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ad14:	462c      	mov	r4, r5
 800ad16:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800ad18:	f04f 0e00 	mov.w	lr, #0
 800ad1c:	9300      	str	r3, [sp, #0]
 800ad1e:	4603      	mov	r3, r0
 800ad20:	e63a      	b.n	800a998 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1c4>
 800ad22:	f10b 0b08 	add.w	fp, fp, #8
 800ad26:	e6c0      	b.n	800aaaa <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2d6>
 800ad28:	f1c2 0601 	rsb	r6, r2, #1
 800ad2c:	fa01 f206 	lsl.w	r2, r1, r6
 800ad30:	f302 021f 	ssat	r2, #32, r2
 800ad34:	fb52 f215 	smmulr	r2, r2, r5
 800ad38:	40b3      	lsls	r3, r6
 800ad3a:	f303 031f 	ssat	r3, #32, r3
 800ad3e:	fb53 f115 	smmulr	r1, r3, r5
 800ad42:	1913      	adds	r3, r2, r4
 800ad44:	f303 0307 	ssat	r3, #8, r3
 800ad48:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800ad4a:	7013      	strb	r3, [r2, #0]
 800ad4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	440b      	add	r3, r1
 800ad52:	f303 0307 	ssat	r3, #8, r3
 800ad56:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800ad58:	9029      	str	r0, [sp, #164]	; 0xa4
 800ad5a:	7013      	strb	r3, [r2, #0]
 800ad5c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800ad5e:	e78b      	b.n	800ac78 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x4a4>
 800ad60:	460b      	mov	r3, r1
 800ad62:	e743      	b.n	800abec <st_sssa8_ch_nn_mat_mult_kernel_opt+0x418>

0800ad64 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>:
 800ad64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad68:	b08f      	sub	sp, #60	; 0x3c
 800ad6a:	460f      	mov	r7, r1
 800ad6c:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 800ad70:	9105      	str	r1, [sp, #20]
 800ad72:	f8bd 4064 	ldrh.w	r4, [sp, #100]	; 0x64
 800ad76:	0859      	lsrs	r1, r3, #1
 800ad78:	930c      	str	r3, [sp, #48]	; 0x30
 800ad7a:	920b      	str	r2, [sp, #44]	; 0x2c
 800ad7c:	9402      	str	r4, [sp, #8]
 800ad7e:	f000 819c 	beq.w	800b0ba <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x356>
 800ad82:	4616      	mov	r6, r2
 800ad84:	1ee5      	subs	r5, r4, #3
 800ad86:	3901      	subs	r1, #1
 800ad88:	3210      	adds	r2, #16
 800ad8a:	9507      	str	r5, [sp, #28]
 800ad8c:	f106 0508 	add.w	r5, r6, #8
 800ad90:	f1a4 0310 	sub.w	r3, r4, #16
 800ad94:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800ad96:	9503      	str	r5, [sp, #12]
 800ad98:	b28d      	uxth	r5, r1
 800ad9a:	091b      	lsrs	r3, r3, #4
 800ad9c:	3602      	adds	r6, #2
 800ad9e:	eb02 02c5 	add.w	r2, r2, r5, lsl #3
 800ada2:	950d      	str	r5, [sp, #52]	; 0x34
 800ada4:	3301      	adds	r3, #1
 800ada6:	9601      	str	r6, [sp, #4]
 800ada8:	9206      	str	r2, [sp, #24]
 800adaa:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800adac:	eb07 1e43 	add.w	lr, r7, r3, lsl #5
 800adb0:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800adb2:	f102 0b08 	add.w	fp, r2, #8
 800adb6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800adb8:	3604      	adds	r6, #4
 800adba:	f102 0a08 	add.w	sl, r2, #8
 800adbe:	011a      	lsls	r2, r3, #4
 800adc0:	019b      	lsls	r3, r3, #6
 800adc2:	9600      	str	r6, [sp, #0]
 800adc4:	9209      	str	r2, [sp, #36]	; 0x24
 800adc6:	1f22      	subs	r2, r4, #4
 800adc8:	9308      	str	r3, [sp, #32]
 800adca:	9b03      	ldr	r3, [sp, #12]
 800adcc:	920a      	str	r2, [sp, #40]	; 0x28
 800adce:	9a02      	ldr	r2, [sp, #8]
 800add0:	f853 4c08 	ldr.w	r4, [r3, #-8]
 800add4:	2a0f      	cmp	r2, #15
 800add6:	f853 3c04 	ldr.w	r3, [r3, #-4]
 800adda:	f340 8158 	ble.w	800b08e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x32a>
 800adde:	f8dd c014 	ldr.w	ip, [sp, #20]
 800ade2:	4607      	mov	r7, r0
 800ade4:	f8dc 5000 	ldr.w	r5, [ip]
 800ade8:	6839      	ldr	r1, [r7, #0]
 800adea:	fb21 4405 	smlad	r4, r1, r5, r4
 800adee:	687a      	ldr	r2, [r7, #4]
 800adf0:	fb22 3305 	smlad	r3, r2, r5, r3
 800adf4:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800adf8:	68b9      	ldr	r1, [r7, #8]
 800adfa:	fb21 4105 	smlad	r1, r1, r5, r4
 800adfe:	68fa      	ldr	r2, [r7, #12]
 800ae00:	fb22 3205 	smlad	r2, r2, r5, r3
 800ae04:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800ae08:	693c      	ldr	r4, [r7, #16]
 800ae0a:	fb24 1105 	smlad	r1, r4, r5, r1
 800ae0e:	697b      	ldr	r3, [r7, #20]
 800ae10:	fb23 2205 	smlad	r2, r3, r5, r2
 800ae14:	f8dc 500c 	ldr.w	r5, [ip, #12]
 800ae18:	69bc      	ldr	r4, [r7, #24]
 800ae1a:	fb24 1405 	smlad	r4, r4, r5, r1
 800ae1e:	69fb      	ldr	r3, [r7, #28]
 800ae20:	fb23 2305 	smlad	r3, r3, r5, r2
 800ae24:	f8dc 5010 	ldr.w	r5, [ip, #16]
 800ae28:	6a39      	ldr	r1, [r7, #32]
 800ae2a:	fb21 4405 	smlad	r4, r1, r5, r4
 800ae2e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800ae30:	fb22 3305 	smlad	r3, r2, r5, r3
 800ae34:	f8dc 5014 	ldr.w	r5, [ip, #20]
 800ae38:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800ae3a:	fb21 4105 	smlad	r1, r1, r5, r4
 800ae3e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ae40:	fb22 3205 	smlad	r2, r2, r5, r3
 800ae44:	f8dc 5018 	ldr.w	r5, [ip, #24]
 800ae48:	6b3c      	ldr	r4, [r7, #48]	; 0x30
 800ae4a:	fb24 1105 	smlad	r1, r4, r5, r1
 800ae4e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ae50:	fb23 2205 	smlad	r2, r3, r5, r2
 800ae54:	f8dc 501c 	ldr.w	r5, [ip, #28]
 800ae58:	3740      	adds	r7, #64	; 0x40
 800ae5a:	f857 4c08 	ldr.w	r4, [r7, #-8]
 800ae5e:	f10c 0c20 	add.w	ip, ip, #32
 800ae62:	f857 3c04 	ldr.w	r3, [r7, #-4]
 800ae66:	fb24 1405 	smlad	r4, r4, r5, r1
 800ae6a:	fb23 2305 	smlad	r3, r3, r5, r2
 800ae6e:	45f4      	cmp	ip, lr
 800ae70:	d1b8      	bne.n	800ade4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x80>
 800ae72:	9a08      	ldr	r2, [sp, #32]
 800ae74:	4677      	mov	r7, lr
 800ae76:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 800ae7a:	4410      	add	r0, r2
 800ae7c:	9a07      	ldr	r2, [sp, #28]
 800ae7e:	4594      	cmp	ip, r2
 800ae80:	da25      	bge.n	800aece <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x16a>
 800ae82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ae84:	4606      	mov	r6, r0
 800ae86:	eba2 090c 	sub.w	r9, r2, ip
 800ae8a:	ea4f 0999 	mov.w	r9, r9, lsr #2
 800ae8e:	f109 0201 	add.w	r2, r9, #1
 800ae92:	eb07 08c2 	add.w	r8, r7, r2, lsl #3
 800ae96:	9204      	str	r2, [sp, #16]
 800ae98:	683a      	ldr	r2, [r7, #0]
 800ae9a:	6831      	ldr	r1, [r6, #0]
 800ae9c:	fb21 4402 	smlad	r4, r1, r2, r4
 800aea0:	6871      	ldr	r1, [r6, #4]
 800aea2:	fb21 3202 	smlad	r2, r1, r2, r3
 800aea6:	6879      	ldr	r1, [r7, #4]
 800aea8:	3610      	adds	r6, #16
 800aeaa:	f856 5c08 	ldr.w	r5, [r6, #-8]
 800aeae:	3708      	adds	r7, #8
 800aeb0:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800aeb4:	fb25 4401 	smlad	r4, r5, r1, r4
 800aeb8:	fb23 2301 	smlad	r3, r3, r1, r2
 800aebc:	4547      	cmp	r7, r8
 800aebe:	d1eb      	bne.n	800ae98 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x134>
 800aec0:	f10c 0c04 	add.w	ip, ip, #4
 800aec4:	9a04      	ldr	r2, [sp, #16]
 800aec6:	eb0c 0c89 	add.w	ip, ip, r9, lsl #2
 800aeca:	eb00 1002 	add.w	r0, r0, r2, lsl #4
 800aece:	9a02      	ldr	r2, [sp, #8]
 800aed0:	4562      	cmp	r2, ip
 800aed2:	dd26      	ble.n	800af22 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1be>
 800aed4:	f9b7 1000 	ldrsh.w	r1, [r7]
 800aed8:	f10c 0201 	add.w	r2, ip, #1
 800aedc:	8806      	ldrh	r6, [r0, #0]
 800aede:	8845      	ldrh	r5, [r0, #2]
 800aee0:	fb16 4401 	smlabb	r4, r6, r1, r4
 800aee4:	fb11 3305 	smlabb	r3, r1, r5, r3
 800aee8:	9902      	ldr	r1, [sp, #8]
 800aeea:	4291      	cmp	r1, r2
 800aeec:	f340 80cd 	ble.w	800b08a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x326>
 800aef0:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800aef4:	f10c 0c02 	add.w	ip, ip, #2
 800aef8:	8885      	ldrh	r5, [r0, #4]
 800aefa:	88c1      	ldrh	r1, [r0, #6]
 800aefc:	fb15 4402 	smlabb	r4, r5, r2, r4
 800af00:	fb12 3301 	smlabb	r3, r2, r1, r3
 800af04:	9a02      	ldr	r2, [sp, #8]
 800af06:	4562      	cmp	r2, ip
 800af08:	f340 80c5 	ble.w	800b096 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x332>
 800af0c:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 800af10:	300c      	adds	r0, #12
 800af12:	f830 5c04 	ldrh.w	r5, [r0, #-4]
 800af16:	f830 1c02 	ldrh.w	r1, [r0, #-2]
 800af1a:	fb15 4402 	smlabb	r4, r5, r2, r4
 800af1e:	fb12 3301 	smlabb	r3, r2, r1, r3
 800af22:	9a00      	ldr	r2, [sp, #0]
 800af24:	f85b 6c08 	ldr.w	r6, [fp, #-8]
 800af28:	f932 2c04 	ldrsh.w	r2, [r2, #-4]
 800af2c:	f85a 1c08 	ldr.w	r1, [sl, #-8]
 800af30:	2a00      	cmp	r2, #0
 800af32:	f340 809b 	ble.w	800b06c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x308>
 800af36:	0064      	lsls	r4, r4, #1
 800af38:	fb54 1406 	smmla	r4, r4, r6, r1
 800af3c:	4114      	asrs	r4, r2
 800af3e:	f304 0407 	ssat	r4, #8, r4
 800af42:	9a01      	ldr	r2, [sp, #4]
 800af44:	f802 4c02 	strb.w	r4, [r2, #-2]
 800af48:	9a00      	ldr	r2, [sp, #0]
 800af4a:	f932 6c02 	ldrsh.w	r6, [r2, #-2]
 800af4e:	2e00      	cmp	r6, #0
 800af50:	dd79      	ble.n	800b046 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2e2>
 800af52:	f85b 4c04 	ldr.w	r4, [fp, #-4]
 800af56:	005b      	lsls	r3, r3, #1
 800af58:	f85a 5c04 	ldr.w	r5, [sl, #-4]
 800af5c:	fb53 5304 	smmla	r3, r3, r4, r5
 800af60:	4133      	asrs	r3, r6
 800af62:	f303 0307 	ssat	r3, #8, r3
 800af66:	9a01      	ldr	r2, [sp, #4]
 800af68:	f802 3c01 	strb.w	r3, [r2, #-1]
 800af6c:	3202      	adds	r2, #2
 800af6e:	9b03      	ldr	r3, [sp, #12]
 800af70:	f10b 0b08 	add.w	fp, fp, #8
 800af74:	f10a 0a08 	add.w	sl, sl, #8
 800af78:	9201      	str	r2, [sp, #4]
 800af7a:	3308      	adds	r3, #8
 800af7c:	9a00      	ldr	r2, [sp, #0]
 800af7e:	9303      	str	r3, [sp, #12]
 800af80:	3204      	adds	r2, #4
 800af82:	9200      	str	r2, [sp, #0]
 800af84:	9a06      	ldr	r2, [sp, #24]
 800af86:	429a      	cmp	r2, r3
 800af88:	f47f af21 	bne.w	800adce <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x6a>
 800af8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af8e:	991d      	ldr	r1, [sp, #116]	; 0x74
 800af90:	3301      	adds	r3, #1
 800af92:	eb01 0443 	add.w	r4, r1, r3, lsl #1
 800af96:	991a      	ldr	r1, [sp, #104]	; 0x68
 800af98:	00da      	lsls	r2, r3, #3
 800af9a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800af9e:	931a      	str	r3, [sp, #104]	; 0x68
 800afa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800afa2:	4413      	add	r3, r2
 800afa4:	930b      	str	r3, [sp, #44]	; 0x2c
 800afa6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800afa8:	4413      	add	r3, r2
 800afaa:	931b      	str	r3, [sp, #108]	; 0x6c
 800afac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800afae:	4413      	add	r3, r2
 800afb0:	931c      	str	r3, [sp, #112]	; 0x70
 800afb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800afb4:	07db      	lsls	r3, r3, #31
 800afb6:	d542      	bpl.n	800b03e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2da>
 800afb8:	9a02      	ldr	r2, [sp, #8]
 800afba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800afbc:	0892      	lsrs	r2, r2, #2
 800afbe:	681b      	ldr	r3, [r3, #0]
 800afc0:	d016      	beq.n	800aff0 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x28c>
 800afc2:	1e56      	subs	r6, r2, #1
 800afc4:	9905      	ldr	r1, [sp, #20]
 800afc6:	b2b6      	uxth	r6, r6
 800afc8:	3601      	adds	r6, #1
 800afca:	00f6      	lsls	r6, r6, #3
 800afcc:	1987      	adds	r7, r0, r6
 800afce:	6805      	ldr	r5, [r0, #0]
 800afd0:	3008      	adds	r0, #8
 800afd2:	f850 2c04 	ldr.w	r2, [r0, #-4]
 800afd6:	f8d1 c000 	ldr.w	ip, [r1]
 800afda:	fb25 330c 	smlad	r3, r5, ip, r3
 800afde:	684d      	ldr	r5, [r1, #4]
 800afe0:	3108      	adds	r1, #8
 800afe2:	fb22 3305 	smlad	r3, r2, r5, r3
 800afe6:	42b8      	cmp	r0, r7
 800afe8:	d1f1      	bne.n	800afce <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x26a>
 800afea:	9a05      	ldr	r2, [sp, #20]
 800afec:	4432      	add	r2, r6
 800afee:	9205      	str	r2, [sp, #20]
 800aff0:	9a02      	ldr	r2, [sp, #8]
 800aff2:	f012 0203 	ands.w	r2, r2, #3
 800aff6:	d010      	beq.n	800b01a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2b6>
 800aff8:	9e05      	ldr	r6, [sp, #20]
 800affa:	2a01      	cmp	r2, #1
 800affc:	8801      	ldrh	r1, [r0, #0]
 800affe:	8835      	ldrh	r5, [r6, #0]
 800b000:	fb15 3301 	smlabb	r3, r5, r1, r3
 800b004:	d009      	beq.n	800b01a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2b6>
 800b006:	8875      	ldrh	r5, [r6, #2]
 800b008:	2a02      	cmp	r2, #2
 800b00a:	8841      	ldrh	r1, [r0, #2]
 800b00c:	fb15 3301 	smlabb	r3, r5, r1, r3
 800b010:	d003      	beq.n	800b01a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2b6>
 800b012:	8881      	ldrh	r1, [r0, #4]
 800b014:	88b2      	ldrh	r2, [r6, #4]
 800b016:	fb11 3302 	smlabb	r3, r1, r2, r3
 800b01a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b01c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800b01e:	f9b2 1000 	ldrsh.w	r1, [r2]
 800b022:	1c62      	adds	r2, r4, #1
 800b024:	6805      	ldr	r5, [r0, #0]
 800b026:	2900      	cmp	r1, #0
 800b028:	981c      	ldr	r0, [sp, #112]	; 0x70
 800b02a:	6800      	ldr	r0, [r0, #0]
 800b02c:	dd35      	ble.n	800b09a <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x336>
 800b02e:	005b      	lsls	r3, r3, #1
 800b030:	fb53 0305 	smmla	r3, r3, r5, r0
 800b034:	410b      	asrs	r3, r1
 800b036:	f303 0307 	ssat	r3, #8, r3
 800b03a:	7023      	strb	r3, [r4, #0]
 800b03c:	4614      	mov	r4, r2
 800b03e:	4620      	mov	r0, r4
 800b040:	b00f      	add	sp, #60	; 0x3c
 800b042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b046:	f1c6 0601 	rsb	r6, r6, #1
 800b04a:	40b3      	lsls	r3, r6
 800b04c:	f303 031f 	ssat	r3, #32, r3
 800b050:	f85b 2c04 	ldr.w	r2, [fp, #-4]
 800b054:	fb53 f212 	smmulr	r2, r3, r2
 800b058:	f85a 3c04 	ldr.w	r3, [sl, #-4]
 800b05c:	441a      	add	r2, r3
 800b05e:	f302 0207 	ssat	r2, #8, r2
 800b062:	9b01      	ldr	r3, [sp, #4]
 800b064:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b068:	461a      	mov	r2, r3
 800b06a:	e77f      	b.n	800af6c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x208>
 800b06c:	f1c2 0201 	rsb	r2, r2, #1
 800b070:	fa04 f202 	lsl.w	r2, r4, r2
 800b074:	f302 021f 	ssat	r2, #32, r2
 800b078:	fb52 f216 	smmulr	r2, r2, r6
 800b07c:	440a      	add	r2, r1
 800b07e:	f302 0207 	ssat	r2, #8, r2
 800b082:	9901      	ldr	r1, [sp, #4]
 800b084:	f801 2c02 	strb.w	r2, [r1, #-2]
 800b088:	e75e      	b.n	800af48 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1e4>
 800b08a:	3004      	adds	r0, #4
 800b08c:	e749      	b.n	800af22 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1be>
 800b08e:	9f05      	ldr	r7, [sp, #20]
 800b090:	f04f 0c00 	mov.w	ip, #0
 800b094:	e6f2      	b.n	800ae7c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x118>
 800b096:	3008      	adds	r0, #8
 800b098:	e743      	b.n	800af22 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1be>
 800b09a:	f1c1 0101 	rsb	r1, r1, #1
 800b09e:	408b      	lsls	r3, r1
 800b0a0:	f303 031f 	ssat	r3, #32, r3
 800b0a4:	fb53 f315 	smmulr	r3, r3, r5
 800b0a8:	4403      	add	r3, r0
 800b0aa:	f303 0307 	ssat	r3, #8, r3
 800b0ae:	7023      	strb	r3, [r4, #0]
 800b0b0:	4614      	mov	r4, r2
 800b0b2:	4620      	mov	r0, r4
 800b0b4:	b00f      	add	sp, #60	; 0x3c
 800b0b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0ba:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800b0bc:	e77a      	b.n	800afb4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x250>
 800b0be:	bf00      	nop

0800b0c0 <st_int8_avepool>:
 800b0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0c4:	b099      	sub	sp, #100	; 0x64
 800b0c6:	4615      	mov	r5, r2
 800b0c8:	eec0 4a20 	vdiv.f32	s9, s0, s1
 800b0cc:	900b      	str	r0, [sp, #44]	; 0x2c
 800b0ce:	f8bd 009c 	ldrh.w	r0, [sp, #156]	; 0x9c
 800b0d2:	f8bd 40a8 	ldrh.w	r4, [sp, #168]	; 0xa8
 800b0d6:	9012      	str	r0, [sp, #72]	; 0x48
 800b0d8:	f8bd 00a0 	ldrh.w	r0, [sp, #160]	; 0xa0
 800b0dc:	9109      	str	r1, [sp, #36]	; 0x24
 800b0de:	9015      	str	r0, [sp, #84]	; 0x54
 800b0e0:	f8bd 00a4 	ldrh.w	r0, [sp, #164]	; 0xa4
 800b0e4:	9416      	str	r4, [sp, #88]	; 0x58
 800b0e6:	900e      	str	r0, [sp, #56]	; 0x38
 800b0e8:	f99d 00ac 	ldrsb.w	r0, [sp, #172]	; 0xac
 800b0ec:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 800b0f0:	ee03 0a90 	vmov	s7, r0
 800b0f4:	f8bd 1090 	ldrh.w	r1, [sp, #144]	; 0x90
 800b0f8:	f99d 00b0 	ldrsb.w	r0, [sp, #176]	; 0xb0
 800b0fc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800b100:	f8bd 308c 	ldrh.w	r3, [sp, #140]	; 0x8c
 800b104:	f8bd 2098 	ldrh.w	r2, [sp, #152]	; 0x98
 800b108:	9311      	str	r3, [sp, #68]	; 0x44
 800b10a:	f8bd 3094 	ldrh.w	r3, [sp, #148]	; 0x94
 800b10e:	2c00      	cmp	r4, #0
 800b110:	f000 80dd 	beq.w	800b2ce <st_int8_avepool+0x20e>
 800b114:	1a89      	subs	r1, r1, r2
 800b116:	eeb4 0a60 	vcmp.f32	s0, s1
 800b11a:	4252      	negs	r2, r2
 800b11c:	425b      	negs	r3, r3
 800b11e:	b289      	uxth	r1, r1
 800b120:	ee04 0a10 	vmov	s8, r0
 800b124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b128:	f04f 0000 	mov.w	r0, #0
 800b12c:	b29b      	uxth	r3, r3
 800b12e:	9113      	str	r1, [sp, #76]	; 0x4c
 800b130:	b291      	uxth	r1, r2
 800b132:	9014      	str	r0, [sp, #80]	; 0x50
 800b134:	9317      	str	r3, [sp, #92]	; 0x5c
 800b136:	4602      	mov	r2, r0
 800b138:	462b      	mov	r3, r5
 800b13a:	9101      	str	r1, [sp, #4]
 800b13c:	bf18      	it	ne
 800b13e:	4603      	movne	r3, r0
 800b140:	fb05 fb07 	mul.w	fp, r5, r7
 800b144:	bf08      	it	eq
 800b146:	2301      	moveq	r3, #1
 800b148:	ee13 1a90 	vmov	r1, s7
 800b14c:	ee14 0a10 	vmov	r0, s8
 800b150:	ed9f 3a6d 	vldr	s6, [pc, #436]	; 800b308 <st_int8_avepool+0x248>
 800b154:	46da      	mov	sl, fp
 800b156:	46b9      	mov	r9, r7
 800b158:	4281      	cmp	r1, r0
 800b15a:	bf14      	ite	ne
 800b15c:	2300      	movne	r3, #0
 800b15e:	f003 0301 	andeq.w	r3, r3, #1
 800b162:	9307      	str	r3, [sp, #28]
 800b164:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b166:	2900      	cmp	r1, #0
 800b168:	f000 809e 	beq.w	800b2a8 <st_int8_avepool+0x1e8>
 800b16c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800b16e:	fb01 f202 	mul.w	r2, r1, r2
 800b172:	9d01      	ldr	r5, [sp, #4]
 800b174:	2400      	movs	r4, #0
 800b176:	1e43      	subs	r3, r0, #1
 800b178:	920f      	str	r2, [sp, #60]	; 0x3c
 800b17a:	fa0f fb85 	sxth.w	fp, r5
 800b17e:	9a03      	ldr	r2, [sp, #12]
 800b180:	1b5b      	subs	r3, r3, r5
 800b182:	b201      	sxth	r1, r0
 800b184:	fb02 f20b 	mul.w	r2, r2, fp
 800b188:	464f      	mov	r7, r9
 800b18a:	b29b      	uxth	r3, r3
 800b18c:	9108      	str	r1, [sp, #32]
 800b18e:	9210      	str	r2, [sp, #64]	; 0x40
 800b190:	4622      	mov	r2, r4
 800b192:	3301      	adds	r3, #1
 800b194:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800b196:	940d      	str	r4, [sp, #52]	; 0x34
 800b198:	4699      	mov	r9, r3
 800b19a:	910c      	str	r1, [sp, #48]	; 0x30
 800b19c:	2f00      	cmp	r7, #0
 800b19e:	d075      	beq.n	800b28c <st_int8_avepool+0x1cc>
 800b1a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b1a2:	eeb8 5ae3 	vcvt.f32.s32	s10, s7
 800b1a6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b1a8:	eef8 5ac4 	vcvt.f32.s32	s11, s8
 800b1ac:	441a      	add	r2, r3
 800b1ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b1b0:	fa0f f881 	sxth.w	r8, r1
 800b1b4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800b1b8:	185d      	adds	r5, r3, r1
 800b1ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b1bc:	2100      	movs	r1, #0
 800b1be:	fb07 f202 	mul.w	r2, r7, r2
 800b1c2:	4443      	add	r3, r8
 800b1c4:	b22d      	sxth	r5, r5
 800b1c6:	9105      	str	r1, [sp, #20]
 800b1c8:	fb07 f303 	mul.w	r3, r7, r3
 800b1cc:	9206      	str	r2, [sp, #24]
 800b1ce:	930a      	str	r3, [sp, #40]	; 0x28
 800b1d0:	9104      	str	r1, [sp, #16]
 800b1d2:	9b08      	ldr	r3, [sp, #32]
 800b1d4:	459b      	cmp	fp, r3
 800b1d6:	f280 8090 	bge.w	800b2fa <st_int8_avepool+0x23a>
 800b1da:	9b04      	ldr	r3, [sp, #16]
 800b1dc:	2400      	movs	r4, #0
 800b1de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b1e0:	46a4      	mov	ip, r4
 800b1e2:	46a6      	mov	lr, r4
 800b1e4:	189e      	adds	r6, r3, r2
 800b1e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b1e8:	441e      	add	r6, r3
 800b1ea:	45a8      	cmp	r8, r5
 800b1ec:	da1b      	bge.n	800b226 <st_int8_avepool+0x166>
 800b1ee:	9b01      	ldr	r3, [sp, #4]
 800b1f0:	9902      	ldr	r1, [sp, #8]
 800b1f2:	191a      	adds	r2, r3, r4
 800b1f4:	eb0b 0304 	add.w	r3, fp, r4
 800b1f8:	43d2      	mvns	r2, r2
 800b1fa:	4299      	cmp	r1, r3
 800b1fc:	f3c2 32c0 	ubfx	r2, r2, #15, #1
 800b200:	dd11      	ble.n	800b226 <st_int8_avepool+0x166>
 800b202:	4631      	mov	r1, r6
 800b204:	4643      	mov	r3, r8
 800b206:	0418      	lsls	r0, r3, #16
 800b208:	d408      	bmi.n	800b21c <st_int8_avepool+0x15c>
 800b20a:	b13a      	cbz	r2, 800b21c <st_int8_avepool+0x15c>
 800b20c:	9803      	ldr	r0, [sp, #12]
 800b20e:	4298      	cmp	r0, r3
 800b210:	dd04      	ble.n	800b21c <st_int8_avepool+0x15c>
 800b212:	f991 0000 	ldrsb.w	r0, [r1]
 800b216:	f10c 0c01 	add.w	ip, ip, #1
 800b21a:	4486      	add	lr, r0
 800b21c:	3301      	adds	r3, #1
 800b21e:	4439      	add	r1, r7
 800b220:	b218      	sxth	r0, r3
 800b222:	4285      	cmp	r5, r0
 800b224:	dcef      	bgt.n	800b206 <st_int8_avepool+0x146>
 800b226:	3401      	adds	r4, #1
 800b228:	4456      	add	r6, sl
 800b22a:	45a1      	cmp	r9, r4
 800b22c:	d1dd      	bne.n	800b1ea <st_int8_avepool+0x12a>
 800b22e:	9b07      	ldr	r3, [sp, #28]
 800b230:	2b00      	cmp	r3, #0
 800b232:	d14f      	bne.n	800b2d4 <st_int8_avepool+0x214>
 800b234:	ee07 ea90 	vmov	s15, lr
 800b238:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800b23c:	ee07 ca90 	vmov	s15, ip
 800b240:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800b244:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800b248:	ee77 7ac5 	vsub.f32	s15, s15, s10
 800b24c:	eef0 6a65 	vmov.f32	s13, s11
 800b250:	eebe 7a00 	vmov.f32	s14, #224	; 0xbf000000 -0.5
 800b254:	eee7 6aa4 	vfma.f32	s13, s15, s9
 800b258:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 800b25c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b260:	fe26 7a07 	vselge.f32	s14, s12, s14
 800b264:	ee77 7a26 	vadd.f32	s15, s14, s13
 800b268:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b26c:	ee17 3a90 	vmov	r3, s15
 800b270:	f303 0307 	ssat	r3, #8, r3
 800b274:	9906      	ldr	r1, [sp, #24]
 800b276:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b278:	440a      	add	r2, r1
 800b27a:	9904      	ldr	r1, [sp, #16]
 800b27c:	5453      	strb	r3, [r2, r1]
 800b27e:	9b05      	ldr	r3, [sp, #20]
 800b280:	3301      	adds	r3, #1
 800b282:	b21b      	sxth	r3, r3
 800b284:	42bb      	cmp	r3, r7
 800b286:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800b28a:	dba2      	blt.n	800b1d2 <st_int8_avepool+0x112>
 800b28c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b28e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b290:	9912      	ldr	r1, [sp, #72]	; 0x48
 800b292:	3201      	adds	r2, #1
 800b294:	440b      	add	r3, r1
 800b296:	b212      	sxth	r2, r2
 800b298:	990e      	ldr	r1, [sp, #56]	; 0x38
 800b29a:	b29b      	uxth	r3, r3
 800b29c:	920d      	str	r2, [sp, #52]	; 0x34
 800b29e:	428a      	cmp	r2, r1
 800b2a0:	930c      	str	r3, [sp, #48]	; 0x30
 800b2a2:	f6ff af7b 	blt.w	800b19c <st_int8_avepool+0xdc>
 800b2a6:	46b9      	mov	r9, r7
 800b2a8:	9b01      	ldr	r3, [sp, #4]
 800b2aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 800b2ac:	461a      	mov	r2, r3
 800b2ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b2b0:	9914      	ldr	r1, [sp, #80]	; 0x50
 800b2b2:	4403      	add	r3, r0
 800b2b4:	4402      	add	r2, r0
 800b2b6:	3101      	adds	r1, #1
 800b2b8:	b29b      	uxth	r3, r3
 800b2ba:	b209      	sxth	r1, r1
 800b2bc:	9313      	str	r3, [sp, #76]	; 0x4c
 800b2be:	b292      	uxth	r2, r2
 800b2c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800b2c2:	9201      	str	r2, [sp, #4]
 800b2c4:	460a      	mov	r2, r1
 800b2c6:	428b      	cmp	r3, r1
 800b2c8:	9114      	str	r1, [sp, #80]	; 0x50
 800b2ca:	f73f af4b 	bgt.w	800b164 <st_int8_avepool+0xa4>
 800b2ce:	b019      	add	sp, #100	; 0x64
 800b2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b2d4:	f1be 0f00 	cmp.w	lr, #0
 800b2d8:	db04      	blt.n	800b2e4 <st_int8_avepool+0x224>
 800b2da:	eb0e 0e6c 	add.w	lr, lr, ip, asr #1
 800b2de:	fb9e f3fc 	sdiv	r3, lr, ip
 800b2e2:	e7c5      	b.n	800b270 <st_int8_avepool+0x1b0>
 800b2e4:	f1bc 0f00 	cmp.w	ip, #0
 800b2e8:	4663      	mov	r3, ip
 800b2ea:	bfb8      	it	lt
 800b2ec:	f10c 0301 	addlt.w	r3, ip, #1
 800b2f0:	ebae 0363 	sub.w	r3, lr, r3, asr #1
 800b2f4:	fb93 f3fc 	sdiv	r3, r3, ip
 800b2f8:	e7ba      	b.n	800b270 <st_int8_avepool+0x1b0>
 800b2fa:	9b07      	ldr	r3, [sp, #28]
 800b2fc:	b913      	cbnz	r3, 800b304 <st_int8_avepool+0x244>
 800b2fe:	eef0 7a43 	vmov.f32	s15, s6
 800b302:	e7a1      	b.n	800b248 <st_int8_avepool+0x188>
 800b304:	deff      	udf	#255	; 0xff
 800b306:	bf00      	nop
 800b308:	7fc00000 	.word	0x7fc00000

0800b30c <ai_array_to_buffer_fmt>:
 800b30c:	f3c0 4343 	ubfx	r3, r0, #17, #4
 800b310:	2b02      	cmp	r3, #2
 800b312:	d02e      	beq.n	800b372 <ai_array_to_buffer_fmt+0x66>
 800b314:	f020 437e 	bic.w	r3, r0, #4261412864	; 0xfe000000
 800b318:	4a1a      	ldr	r2, [pc, #104]	; (800b384 <ai_array_to_buffer_fmt+0x78>)
 800b31a:	4293      	cmp	r3, r2
 800b31c:	d00e      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b31e:	dd11      	ble.n	800b344 <ai_array_to_buffer_fmt+0x38>
 800b320:	4a19      	ldr	r2, [pc, #100]	; (800b388 <ai_array_to_buffer_fmt+0x7c>)
 800b322:	4293      	cmp	r3, r2
 800b324:	d00a      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b326:	dd18      	ble.n	800b35a <ai_array_to_buffer_fmt+0x4e>
 800b328:	4a18      	ldr	r2, [pc, #96]	; (800b38c <ai_array_to_buffer_fmt+0x80>)
 800b32a:	4293      	cmp	r3, r2
 800b32c:	d006      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b32e:	4a18      	ldr	r2, [pc, #96]	; (800b390 <ai_array_to_buffer_fmt+0x84>)
 800b330:	4293      	cmp	r3, r2
 800b332:	d003      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b334:	4a17      	ldr	r2, [pc, #92]	; (800b394 <ai_array_to_buffer_fmt+0x88>)
 800b336:	4293      	cmp	r3, r2
 800b338:	d000      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b33a:	2340      	movs	r3, #64	; 0x40
 800b33c:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800b340:	4318      	orrs	r0, r3
 800b342:	4770      	bx	lr
 800b344:	4a14      	ldr	r2, [pc, #80]	; (800b398 <ai_array_to_buffer_fmt+0x8c>)
 800b346:	4293      	cmp	r3, r2
 800b348:	d0f8      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b34a:	dd06      	ble.n	800b35a <ai_array_to_buffer_fmt+0x4e>
 800b34c:	4a13      	ldr	r2, [pc, #76]	; (800b39c <ai_array_to_buffer_fmt+0x90>)
 800b34e:	4293      	cmp	r3, r2
 800b350:	d0f4      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b352:	320f      	adds	r2, #15
 800b354:	4293      	cmp	r3, r2
 800b356:	d0f1      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b358:	e7ef      	b.n	800b33a <ai_array_to_buffer_fmt+0x2e>
 800b35a:	f2a2 4207 	subw	r2, r2, #1031	; 0x407
 800b35e:	4293      	cmp	r3, r2
 800b360:	d0ec      	beq.n	800b33c <ai_array_to_buffer_fmt+0x30>
 800b362:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b366:	4293      	cmp	r3, r2
 800b368:	d1e7      	bne.n	800b33a <ai_array_to_buffer_fmt+0x2e>
 800b36a:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800b36e:	4318      	orrs	r0, r3
 800b370:	4770      	bx	lr
 800b372:	4b0b      	ldr	r3, [pc, #44]	; (800b3a0 <ai_array_to_buffer_fmt+0x94>)
 800b374:	4003      	ands	r3, r0
 800b376:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800b37a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800b37e:	4318      	orrs	r0, r3
 800b380:	4770      	bx	lr
 800b382:	bf00      	nop
 800b384:	00060440 	.word	0x00060440
 800b388:	00840447 	.word	0x00840447
 800b38c:	0084084f 	.word	0x0084084f
 800b390:	01821040 	.word	0x01821040
 800b394:	00840840 	.word	0x00840840
 800b398:	00040447 	.word	0x00040447
 800b39c:	00040840 	.word	0x00040840
 800b3a0:	00803fff 	.word	0x00803fff

0800b3a4 <ai_array_get_byte_size>:
 800b3a4:	b1e1      	cbz	r1, 800b3e0 <ai_array_get_byte_size+0x3c>
 800b3a6:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 800b3aa:	f3c0 5241 	ubfx	r2, r0, #21, #2
 800b3ae:	b410      	push	{r4}
 800b3b0:	f3c0 3482 	ubfx	r4, r0, #14, #3
 800b3b4:	f3c0 4043 	ubfx	r0, r0, #17, #4
 800b3b8:	4423      	add	r3, r4
 800b3ba:	2804      	cmp	r0, #4
 800b3bc:	fb01 f103 	mul.w	r1, r1, r3
 800b3c0:	f101 0107 	add.w	r1, r1, #7
 800b3c4:	f021 0107 	bic.w	r1, r1, #7
 800b3c8:	fa21 f102 	lsr.w	r1, r1, r2
 800b3cc:	d00a      	beq.n	800b3e4 <ai_array_get_byte_size+0x40>
 800b3ce:	2808      	cmp	r0, #8
 800b3d0:	d101      	bne.n	800b3d6 <ai_array_get_byte_size+0x32>
 800b3d2:	eb01 2103 	add.w	r1, r1, r3, lsl #8
 800b3d6:	3107      	adds	r1, #7
 800b3d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b3dc:	08c8      	lsrs	r0, r1, #3
 800b3de:	4770      	bx	lr
 800b3e0:	4608      	mov	r0, r1
 800b3e2:	4770      	bx	lr
 800b3e4:	eb01 1103 	add.w	r1, r1, r3, lsl #4
 800b3e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b3ec:	3107      	adds	r1, #7
 800b3ee:	08c8      	lsrs	r0, r1, #3
 800b3f0:	4770      	bx	lr
 800b3f2:	bf00      	nop

0800b3f4 <core_tensor_clone>:
 800b3f4:	680b      	ldr	r3, [r1, #0]
 800b3f6:	6882      	ldr	r2, [r0, #8]
 800b3f8:	6003      	str	r3, [r0, #0]
 800b3fa:	684b      	ldr	r3, [r1, #4]
 800b3fc:	6043      	str	r3, [r0, #4]
 800b3fe:	698b      	ldr	r3, [r1, #24]
 800b400:	6183      	str	r3, [r0, #24]
 800b402:	688b      	ldr	r3, [r1, #8]
 800b404:	f3c3 2317 	ubfx	r3, r3, #8, #24
 800b408:	f363 221f 	bfi	r2, r3, #8, #24
 800b40c:	b410      	push	{r4}
 800b40e:	6082      	str	r2, [r0, #8]
 800b410:	b15b      	cbz	r3, 800b42a <core_tensor_clone+0x36>
 800b412:	2300      	movs	r3, #0
 800b414:	68cc      	ldr	r4, [r1, #12]
 800b416:	68c2      	ldr	r2, [r0, #12]
 800b418:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800b41c:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 800b420:	3301      	adds	r3, #1
 800b422:	6882      	ldr	r2, [r0, #8]
 800b424:	ebb3 2f12 	cmp.w	r3, r2, lsr #8
 800b428:	d3f4      	bcc.n	800b414 <core_tensor_clone+0x20>
 800b42a:	690b      	ldr	r3, [r1, #16]
 800b42c:	6902      	ldr	r2, [r0, #16]
 800b42e:	f3c3 2317 	ubfx	r3, r3, #8, #24
 800b432:	f363 221f 	bfi	r2, r3, #8, #24
 800b436:	6102      	str	r2, [r0, #16]
 800b438:	b15b      	cbz	r3, 800b452 <core_tensor_clone+0x5e>
 800b43a:	2300      	movs	r3, #0
 800b43c:	694c      	ldr	r4, [r1, #20]
 800b43e:	6942      	ldr	r2, [r0, #20]
 800b440:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800b444:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 800b448:	3301      	adds	r3, #1
 800b44a:	6902      	ldr	r2, [r0, #16]
 800b44c:	ebb3 2f12 	cmp.w	r3, r2, lsr #8
 800b450:	d3f4      	bcc.n	800b43c <core_tensor_clone+0x48>
 800b452:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b456:	4770      	bx	lr

0800b458 <core_array_clone>:
 800b458:	b410      	push	{r4}
 800b45a:	4604      	mov	r4, r0
 800b45c:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 800b45e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b462:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b466:	4770      	bx	lr

0800b468 <arm_copy_q7>:
 800b468:	b470      	push	{r4, r5, r6}
 800b46a:	0896      	lsrs	r6, r2, #2
 800b46c:	d01b      	beq.n	800b4a6 <arm_copy_q7+0x3e>
 800b46e:	00b6      	lsls	r6, r6, #2
 800b470:	460b      	mov	r3, r1
 800b472:	1985      	adds	r5, r0, r6
 800b474:	f850 4b04 	ldr.w	r4, [r0], #4
 800b478:	42a8      	cmp	r0, r5
 800b47a:	f843 4b04 	str.w	r4, [r3], #4
 800b47e:	d1f9      	bne.n	800b474 <arm_copy_q7+0xc>
 800b480:	4431      	add	r1, r6
 800b482:	f012 0203 	ands.w	r2, r2, #3
 800b486:	d00c      	beq.n	800b4a2 <arm_copy_q7+0x3a>
 800b488:	f995 3000 	ldrsb.w	r3, [r5]
 800b48c:	2a01      	cmp	r2, #1
 800b48e:	700b      	strb	r3, [r1, #0]
 800b490:	d007      	beq.n	800b4a2 <arm_copy_q7+0x3a>
 800b492:	f995 3001 	ldrsb.w	r3, [r5, #1]
 800b496:	2a02      	cmp	r2, #2
 800b498:	704b      	strb	r3, [r1, #1]
 800b49a:	d002      	beq.n	800b4a2 <arm_copy_q7+0x3a>
 800b49c:	f995 3002 	ldrsb.w	r3, [r5, #2]
 800b4a0:	708b      	strb	r3, [r1, #2]
 800b4a2:	bc70      	pop	{r4, r5, r6}
 800b4a4:	4770      	bx	lr
 800b4a6:	4605      	mov	r5, r0
 800b4a8:	e7eb      	b.n	800b482 <arm_copy_q7+0x1a>
 800b4aa:	bf00      	nop

0800b4ac <arm_fill_q15>:
 800b4ac:	b470      	push	{r4, r5, r6}
 800b4ae:	b285      	uxth	r5, r0
 800b4b0:	0896      	lsrs	r6, r2, #2
 800b4b2:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800b4b6:	d009      	beq.n	800b4cc <arm_fill_q15+0x20>
 800b4b8:	460b      	mov	r3, r1
 800b4ba:	4634      	mov	r4, r6
 800b4bc:	3c01      	subs	r4, #1
 800b4be:	601d      	str	r5, [r3, #0]
 800b4c0:	605d      	str	r5, [r3, #4]
 800b4c2:	f103 0308 	add.w	r3, r3, #8
 800b4c6:	d1f9      	bne.n	800b4bc <arm_fill_q15+0x10>
 800b4c8:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800b4cc:	f012 0203 	ands.w	r2, r2, #3
 800b4d0:	d006      	beq.n	800b4e0 <arm_fill_q15+0x34>
 800b4d2:	2a01      	cmp	r2, #1
 800b4d4:	8008      	strh	r0, [r1, #0]
 800b4d6:	d003      	beq.n	800b4e0 <arm_fill_q15+0x34>
 800b4d8:	2a02      	cmp	r2, #2
 800b4da:	8048      	strh	r0, [r1, #2]
 800b4dc:	bf18      	it	ne
 800b4de:	8088      	strhne	r0, [r1, #4]
 800b4e0:	bc70      	pop	{r4, r5, r6}
 800b4e2:	4770      	bx	lr

0800b4e4 <fabsf>:
 800b4e4:	ee10 3a10 	vmov	r3, s0
 800b4e8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800b4ec:	ee00 3a10 	vmov	s0, r3
 800b4f0:	4770      	bx	lr
	...

0800b4f4 <expf>:
 800b4f4:	b508      	push	{r3, lr}
 800b4f6:	ed2d 8b02 	vpush	{d8}
 800b4fa:	eef0 8a40 	vmov.f32	s17, s0
 800b4fe:	f000 f887 	bl	800b610 <__ieee754_expf>
 800b502:	eeb0 8a40 	vmov.f32	s16, s0
 800b506:	eeb0 0a68 	vmov.f32	s0, s17
 800b50a:	f000 fc43 	bl	800bd94 <finitef>
 800b50e:	b160      	cbz	r0, 800b52a <expf+0x36>
 800b510:	eddf 7a0f 	vldr	s15, [pc, #60]	; 800b550 <expf+0x5c>
 800b514:	eef4 8ae7 	vcmpe.f32	s17, s15
 800b518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b51c:	dd0a      	ble.n	800b534 <expf+0x40>
 800b51e:	f000 fcb9 	bl	800be94 <__errno>
 800b522:	ed9f 8a0c 	vldr	s16, [pc, #48]	; 800b554 <expf+0x60>
 800b526:	2322      	movs	r3, #34	; 0x22
 800b528:	6003      	str	r3, [r0, #0]
 800b52a:	eeb0 0a48 	vmov.f32	s0, s16
 800b52e:	ecbd 8b02 	vpop	{d8}
 800b532:	bd08      	pop	{r3, pc}
 800b534:	eddf 7a08 	vldr	s15, [pc, #32]	; 800b558 <expf+0x64>
 800b538:	eef4 8ae7 	vcmpe.f32	s17, s15
 800b53c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b540:	d5f3      	bpl.n	800b52a <expf+0x36>
 800b542:	f000 fca7 	bl	800be94 <__errno>
 800b546:	2322      	movs	r3, #34	; 0x22
 800b548:	ed9f 8a04 	vldr	s16, [pc, #16]	; 800b55c <expf+0x68>
 800b54c:	6003      	str	r3, [r0, #0]
 800b54e:	e7ec      	b.n	800b52a <expf+0x36>
 800b550:	42b17180 	.word	0x42b17180
 800b554:	7f800000 	.word	0x7f800000
 800b558:	c2cff1b5 	.word	0xc2cff1b5
 800b55c:	00000000 	.word	0x00000000

0800b560 <powf>:
 800b560:	b508      	push	{r3, lr}
 800b562:	ed2d 8b04 	vpush	{d8-d9}
 800b566:	eeb0 8a60 	vmov.f32	s16, s1
 800b56a:	eeb0 9a40 	vmov.f32	s18, s0
 800b56e:	f000 f91d 	bl	800b7ac <__ieee754_powf>
 800b572:	eeb4 8a48 	vcmp.f32	s16, s16
 800b576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b57a:	eef0 8a40 	vmov.f32	s17, s0
 800b57e:	d63e      	bvs.n	800b5fe <powf+0x9e>
 800b580:	eeb5 9a40 	vcmp.f32	s18, #0.0
 800b584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b588:	d112      	bne.n	800b5b0 <powf+0x50>
 800b58a:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800b58e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b592:	d039      	beq.n	800b608 <powf+0xa8>
 800b594:	eeb0 0a48 	vmov.f32	s0, s16
 800b598:	f000 fbfc 	bl	800bd94 <finitef>
 800b59c:	b378      	cbz	r0, 800b5fe <powf+0x9e>
 800b59e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800b5a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5a6:	d52a      	bpl.n	800b5fe <powf+0x9e>
 800b5a8:	f000 fc74 	bl	800be94 <__errno>
 800b5ac:	2322      	movs	r3, #34	; 0x22
 800b5ae:	e014      	b.n	800b5da <powf+0x7a>
 800b5b0:	f000 fbf0 	bl	800bd94 <finitef>
 800b5b4:	b998      	cbnz	r0, 800b5de <powf+0x7e>
 800b5b6:	eeb0 0a49 	vmov.f32	s0, s18
 800b5ba:	f000 fbeb 	bl	800bd94 <finitef>
 800b5be:	b170      	cbz	r0, 800b5de <powf+0x7e>
 800b5c0:	eeb0 0a48 	vmov.f32	s0, s16
 800b5c4:	f000 fbe6 	bl	800bd94 <finitef>
 800b5c8:	b148      	cbz	r0, 800b5de <powf+0x7e>
 800b5ca:	eef4 8a68 	vcmp.f32	s17, s17
 800b5ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5d2:	d7e9      	bvc.n	800b5a8 <powf+0x48>
 800b5d4:	f000 fc5e 	bl	800be94 <__errno>
 800b5d8:	2321      	movs	r3, #33	; 0x21
 800b5da:	6003      	str	r3, [r0, #0]
 800b5dc:	e00f      	b.n	800b5fe <powf+0x9e>
 800b5de:	eef5 8a40 	vcmp.f32	s17, #0.0
 800b5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5e6:	d10a      	bne.n	800b5fe <powf+0x9e>
 800b5e8:	eeb0 0a49 	vmov.f32	s0, s18
 800b5ec:	f000 fbd2 	bl	800bd94 <finitef>
 800b5f0:	b128      	cbz	r0, 800b5fe <powf+0x9e>
 800b5f2:	eeb0 0a48 	vmov.f32	s0, s16
 800b5f6:	f000 fbcd 	bl	800bd94 <finitef>
 800b5fa:	2800      	cmp	r0, #0
 800b5fc:	d1d4      	bne.n	800b5a8 <powf+0x48>
 800b5fe:	eeb0 0a68 	vmov.f32	s0, s17
 800b602:	ecbd 8b04 	vpop	{d8-d9}
 800b606:	bd08      	pop	{r3, pc}
 800b608:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800b60c:	e7f7      	b.n	800b5fe <powf+0x9e>
	...

0800b610 <__ieee754_expf>:
 800b610:	ee10 2a10 	vmov	r2, s0
 800b614:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 800b618:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 800b61c:	d902      	bls.n	800b624 <__ieee754_expf+0x14>
 800b61e:	ee30 0a00 	vadd.f32	s0, s0, s0
 800b622:	4770      	bx	lr
 800b624:	ea4f 73d2 	mov.w	r3, r2, lsr #31
 800b628:	d106      	bne.n	800b638 <__ieee754_expf+0x28>
 800b62a:	eddf 7a4e 	vldr	s15, [pc, #312]	; 800b764 <__ieee754_expf+0x154>
 800b62e:	2b00      	cmp	r3, #0
 800b630:	bf18      	it	ne
 800b632:	eeb0 0a67 	vmovne.f32	s0, s15
 800b636:	4770      	bx	lr
 800b638:	484b      	ldr	r0, [pc, #300]	; (800b768 <__ieee754_expf+0x158>)
 800b63a:	4282      	cmp	r2, r0
 800b63c:	dd02      	ble.n	800b644 <__ieee754_expf+0x34>
 800b63e:	2000      	movs	r0, #0
 800b640:	f000 bba2 	b.w	800bd88 <__math_oflowf>
 800b644:	2a00      	cmp	r2, #0
 800b646:	da05      	bge.n	800b654 <__ieee754_expf+0x44>
 800b648:	4a48      	ldr	r2, [pc, #288]	; (800b76c <__ieee754_expf+0x15c>)
 800b64a:	4291      	cmp	r1, r2
 800b64c:	d902      	bls.n	800b654 <__ieee754_expf+0x44>
 800b64e:	2000      	movs	r0, #0
 800b650:	f000 bb94 	b.w	800bd7c <__math_uflowf>
 800b654:	4a46      	ldr	r2, [pc, #280]	; (800b770 <__ieee754_expf+0x160>)
 800b656:	4291      	cmp	r1, r2
 800b658:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 800b65c:	d952      	bls.n	800b704 <__ieee754_expf+0xf4>
 800b65e:	4a45      	ldr	r2, [pc, #276]	; (800b774 <__ieee754_expf+0x164>)
 800b660:	4291      	cmp	r1, r2
 800b662:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800b666:	d834      	bhi.n	800b6d2 <__ieee754_expf+0xc2>
 800b668:	4943      	ldr	r1, [pc, #268]	; (800b778 <__ieee754_expf+0x168>)
 800b66a:	4411      	add	r1, r2
 800b66c:	ed91 7a00 	vldr	s14, [r1]
 800b670:	4942      	ldr	r1, [pc, #264]	; (800b77c <__ieee754_expf+0x16c>)
 800b672:	440a      	add	r2, r1
 800b674:	edd2 7a00 	vldr	s15, [r2]
 800b678:	ee30 7a47 	vsub.f32	s14, s0, s14
 800b67c:	f1c3 0201 	rsb	r2, r3, #1
 800b680:	1ad2      	subs	r2, r2, r3
 800b682:	ee37 0a67 	vsub.f32	s0, s14, s15
 800b686:	ee20 6a00 	vmul.f32	s12, s0, s0
 800b68a:	ed9f 5a3d 	vldr	s10, [pc, #244]	; 800b780 <__ieee754_expf+0x170>
 800b68e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800b784 <__ieee754_expf+0x174>
 800b692:	eee6 6a05 	vfma.f32	s13, s12, s10
 800b696:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 800b788 <__ieee754_expf+0x178>
 800b69a:	eea6 5a86 	vfma.f32	s10, s13, s12
 800b69e:	eddf 6a3b 	vldr	s13, [pc, #236]	; 800b78c <__ieee754_expf+0x17c>
 800b6a2:	eee5 6a06 	vfma.f32	s13, s10, s12
 800b6a6:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 800b790 <__ieee754_expf+0x180>
 800b6aa:	eea6 5a86 	vfma.f32	s10, s13, s12
 800b6ae:	eef0 6a40 	vmov.f32	s13, s0
 800b6b2:	eee5 6a46 	vfms.f32	s13, s10, s12
 800b6b6:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 800b6ba:	ee20 5a26 	vmul.f32	s10, s0, s13
 800b6be:	bb92      	cbnz	r2, 800b726 <__ieee754_expf+0x116>
 800b6c0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800b6c4:	eec5 7a26 	vdiv.f32	s15, s10, s13
 800b6c8:	ee37 0ac0 	vsub.f32	s0, s15, s0
 800b6cc:	ee35 0ac0 	vsub.f32	s0, s11, s0
 800b6d0:	4770      	bx	lr
 800b6d2:	4b30      	ldr	r3, [pc, #192]	; (800b794 <__ieee754_expf+0x184>)
 800b6d4:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800b798 <__ieee754_expf+0x188>
 800b6d8:	eddf 6a30 	vldr	s13, [pc, #192]	; 800b79c <__ieee754_expf+0x18c>
 800b6dc:	4413      	add	r3, r2
 800b6de:	edd3 7a00 	vldr	s15, [r3]
 800b6e2:	eee0 7a07 	vfma.f32	s15, s0, s14
 800b6e6:	eeb0 7a40 	vmov.f32	s14, s0
 800b6ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b6ee:	ee17 2a90 	vmov	r2, s15
 800b6f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6f6:	eea7 7ae6 	vfms.f32	s14, s15, s13
 800b6fa:	eddf 6a29 	vldr	s13, [pc, #164]	; 800b7a0 <__ieee754_expf+0x190>
 800b6fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800b702:	e7be      	b.n	800b682 <__ieee754_expf+0x72>
 800b704:	f1b1 5f50 	cmp.w	r1, #872415232	; 0x34000000
 800b708:	d20b      	bcs.n	800b722 <__ieee754_expf+0x112>
 800b70a:	eddf 6a26 	vldr	s13, [pc, #152]	; 800b7a4 <__ieee754_expf+0x194>
 800b70e:	ee70 6a26 	vadd.f32	s13, s0, s13
 800b712:	eef4 6ae5 	vcmpe.f32	s13, s11
 800b716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b71a:	dd02      	ble.n	800b722 <__ieee754_expf+0x112>
 800b71c:	ee30 0a25 	vadd.f32	s0, s0, s11
 800b720:	4770      	bx	lr
 800b722:	2200      	movs	r2, #0
 800b724:	e7af      	b.n	800b686 <__ieee754_expf+0x76>
 800b726:	ee76 6a66 	vsub.f32	s13, s12, s13
 800b72a:	f112 0f7d 	cmn.w	r2, #125	; 0x7d
 800b72e:	ee85 0a26 	vdiv.f32	s0, s10, s13
 800b732:	bfb8      	it	lt
 800b734:	3264      	addlt	r2, #100	; 0x64
 800b736:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800b73a:	ee37 0ac7 	vsub.f32	s0, s15, s14
 800b73e:	ee75 7ac0 	vsub.f32	s15, s11, s0
 800b742:	ee17 3a90 	vmov	r3, s15
 800b746:	bfab      	itete	ge
 800b748:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 800b74c:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 800b750:	ee00 3a10 	vmovge	s0, r3
 800b754:	eddf 7a14 	vldrlt	s15, [pc, #80]	; 800b7a8 <__ieee754_expf+0x198>
 800b758:	bfbc      	itt	lt
 800b75a:	ee00 3a10 	vmovlt	s0, r3
 800b75e:	ee20 0a27 	vmullt.f32	s0, s0, s15
 800b762:	4770      	bx	lr
 800b764:	00000000 	.word	0x00000000
 800b768:	42b17217 	.word	0x42b17217
 800b76c:	42cff1b5 	.word	0x42cff1b5
 800b770:	3eb17218 	.word	0x3eb17218
 800b774:	3f851591 	.word	0x3f851591
 800b778:	080768f0 	.word	0x080768f0
 800b77c:	080768f8 	.word	0x080768f8
 800b780:	3331bb4c 	.word	0x3331bb4c
 800b784:	b5ddea0e 	.word	0xb5ddea0e
 800b788:	388ab355 	.word	0x388ab355
 800b78c:	bb360b61 	.word	0xbb360b61
 800b790:	3e2aaaab 	.word	0x3e2aaaab
 800b794:	080768e8 	.word	0x080768e8
 800b798:	3fb8aa3b 	.word	0x3fb8aa3b
 800b79c:	3f317180 	.word	0x3f317180
 800b7a0:	3717f7d1 	.word	0x3717f7d1
 800b7a4:	7149f2ca 	.word	0x7149f2ca
 800b7a8:	0d800000 	.word	0x0d800000

0800b7ac <__ieee754_powf>:
 800b7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b7b0:	ee10 4a90 	vmov	r4, s1
 800b7b4:	f034 4800 	bics.w	r8, r4, #2147483648	; 0x80000000
 800b7b8:	ed2d 8b02 	vpush	{d8}
 800b7bc:	ee10 6a10 	vmov	r6, s0
 800b7c0:	eeb0 8a40 	vmov.f32	s16, s0
 800b7c4:	eef0 8a60 	vmov.f32	s17, s1
 800b7c8:	d10c      	bne.n	800b7e4 <__ieee754_powf+0x38>
 800b7ca:	f486 0680 	eor.w	r6, r6, #4194304	; 0x400000
 800b7ce:	0076      	lsls	r6, r6, #1
 800b7d0:	f516 0f00 	cmn.w	r6, #8388608	; 0x800000
 800b7d4:	f240 8296 	bls.w	800bd04 <__ieee754_powf+0x558>
 800b7d8:	ee38 0a28 	vadd.f32	s0, s16, s17
 800b7dc:	ecbd 8b02 	vpop	{d8}
 800b7e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7e4:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 800b7e8:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 800b7ec:	dcf4      	bgt.n	800b7d8 <__ieee754_powf+0x2c>
 800b7ee:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 800b7f2:	dd08      	ble.n	800b806 <__ieee754_powf+0x5a>
 800b7f4:	f1b6 5f7e 	cmp.w	r6, #1065353216	; 0x3f800000
 800b7f8:	d1ee      	bne.n	800b7d8 <__ieee754_powf+0x2c>
 800b7fa:	f484 0480 	eor.w	r4, r4, #4194304	; 0x400000
 800b7fe:	0064      	lsls	r4, r4, #1
 800b800:	f514 0f00 	cmn.w	r4, #8388608	; 0x800000
 800b804:	e7e6      	b.n	800b7d4 <__ieee754_powf+0x28>
 800b806:	2e00      	cmp	r6, #0
 800b808:	da20      	bge.n	800b84c <__ieee754_powf+0xa0>
 800b80a:	f1b8 4f97 	cmp.w	r8, #1266679808	; 0x4b800000
 800b80e:	da2d      	bge.n	800b86c <__ieee754_powf+0xc0>
 800b810:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 800b814:	f2c0 827f 	blt.w	800bd16 <__ieee754_powf+0x56a>
 800b818:	ea4f 53e8 	mov.w	r3, r8, asr #23
 800b81c:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 800b820:	fa48 f703 	asr.w	r7, r8, r3
 800b824:	fa07 f303 	lsl.w	r3, r7, r3
 800b828:	4543      	cmp	r3, r8
 800b82a:	f040 8274 	bne.w	800bd16 <__ieee754_powf+0x56a>
 800b82e:	f007 0701 	and.w	r7, r7, #1
 800b832:	f1c7 0702 	rsb	r7, r7, #2
 800b836:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 800b83a:	d11f      	bne.n	800b87c <__ieee754_powf+0xd0>
 800b83c:	2c00      	cmp	r4, #0
 800b83e:	f280 8267 	bge.w	800bd10 <__ieee754_powf+0x564>
 800b842:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b846:	ee87 0a88 	vdiv.f32	s0, s15, s16
 800b84a:	e7c7      	b.n	800b7dc <__ieee754_powf+0x30>
 800b84c:	2700      	movs	r7, #0
 800b84e:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 800b852:	d1f0      	bne.n	800b836 <__ieee754_powf+0x8a>
 800b854:	f1b5 5f7e 	cmp.w	r5, #1065353216	; 0x3f800000
 800b858:	f000 8254 	beq.w	800bd04 <__ieee754_powf+0x558>
 800b85c:	dd08      	ble.n	800b870 <__ieee754_powf+0xc4>
 800b85e:	ed9f 0ac2 	vldr	s0, [pc, #776]	; 800bb68 <__ieee754_powf+0x3bc>
 800b862:	2c00      	cmp	r4, #0
 800b864:	bfa8      	it	ge
 800b866:	eeb0 0a68 	vmovge.f32	s0, s17
 800b86a:	e7b7      	b.n	800b7dc <__ieee754_powf+0x30>
 800b86c:	2702      	movs	r7, #2
 800b86e:	e7ee      	b.n	800b84e <__ieee754_powf+0xa2>
 800b870:	2c00      	cmp	r4, #0
 800b872:	f280 824a 	bge.w	800bd0a <__ieee754_powf+0x55e>
 800b876:	eeb1 0a68 	vneg.f32	s0, s17
 800b87a:	e7af      	b.n	800b7dc <__ieee754_powf+0x30>
 800b87c:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 800b880:	d102      	bne.n	800b888 <__ieee754_powf+0xdc>
 800b882:	ee28 0a08 	vmul.f32	s0, s16, s16
 800b886:	e7a9      	b.n	800b7dc <__ieee754_powf+0x30>
 800b888:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 800b88c:	eeb0 0a48 	vmov.f32	s0, s16
 800b890:	d107      	bne.n	800b8a2 <__ieee754_powf+0xf6>
 800b892:	2e00      	cmp	r6, #0
 800b894:	db05      	blt.n	800b8a2 <__ieee754_powf+0xf6>
 800b896:	ecbd 8b02 	vpop	{d8}
 800b89a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b89e:	f000 ba53 	b.w	800bd48 <__ieee754_sqrtf>
 800b8a2:	f7ff fe1f 	bl	800b4e4 <fabsf>
 800b8a6:	b125      	cbz	r5, 800b8b2 <__ieee754_powf+0x106>
 800b8a8:	f026 4340 	bic.w	r3, r6, #3221225472	; 0xc0000000
 800b8ac:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 800b8b0:	d116      	bne.n	800b8e0 <__ieee754_powf+0x134>
 800b8b2:	2c00      	cmp	r4, #0
 800b8b4:	bfbc      	itt	lt
 800b8b6:	eef7 7a00 	vmovlt.f32	s15, #112	; 0x3f800000  1.0
 800b8ba:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 800b8be:	2e00      	cmp	r6, #0
 800b8c0:	da8c      	bge.n	800b7dc <__ieee754_powf+0x30>
 800b8c2:	f1a5 557e 	sub.w	r5, r5, #1065353216	; 0x3f800000
 800b8c6:	ea55 0307 	orrs.w	r3, r5, r7
 800b8ca:	d104      	bne.n	800b8d6 <__ieee754_powf+0x12a>
 800b8cc:	ee70 7a40 	vsub.f32	s15, s0, s0
 800b8d0:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 800b8d4:	e782      	b.n	800b7dc <__ieee754_powf+0x30>
 800b8d6:	2f01      	cmp	r7, #1
 800b8d8:	d180      	bne.n	800b7dc <__ieee754_powf+0x30>
 800b8da:	eeb1 0a40 	vneg.f32	s0, s0
 800b8de:	e77d      	b.n	800b7dc <__ieee754_powf+0x30>
 800b8e0:	0ff0      	lsrs	r0, r6, #31
 800b8e2:	3801      	subs	r0, #1
 800b8e4:	ea57 0300 	orrs.w	r3, r7, r0
 800b8e8:	d104      	bne.n	800b8f4 <__ieee754_powf+0x148>
 800b8ea:	ee38 8a48 	vsub.f32	s16, s16, s16
 800b8ee:	ee88 0a08 	vdiv.f32	s0, s16, s16
 800b8f2:	e773      	b.n	800b7dc <__ieee754_powf+0x30>
 800b8f4:	f1b8 4f9a 	cmp.w	r8, #1291845632	; 0x4d000000
 800b8f8:	dd74      	ble.n	800b9e4 <__ieee754_powf+0x238>
 800b8fa:	4b9c      	ldr	r3, [pc, #624]	; (800bb6c <__ieee754_powf+0x3c0>)
 800b8fc:	429d      	cmp	r5, r3
 800b8fe:	dc08      	bgt.n	800b912 <__ieee754_powf+0x166>
 800b900:	2c00      	cmp	r4, #0
 800b902:	da0b      	bge.n	800b91c <__ieee754_powf+0x170>
 800b904:	2000      	movs	r0, #0
 800b906:	ecbd 8b02 	vpop	{d8}
 800b90a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b90e:	f000 ba3b 	b.w	800bd88 <__math_oflowf>
 800b912:	4b97      	ldr	r3, [pc, #604]	; (800bb70 <__ieee754_powf+0x3c4>)
 800b914:	429d      	cmp	r5, r3
 800b916:	dd08      	ble.n	800b92a <__ieee754_powf+0x17e>
 800b918:	2c00      	cmp	r4, #0
 800b91a:	dcf3      	bgt.n	800b904 <__ieee754_powf+0x158>
 800b91c:	2000      	movs	r0, #0
 800b91e:	ecbd 8b02 	vpop	{d8}
 800b922:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b926:	f000 ba29 	b.w	800bd7c <__math_uflowf>
 800b92a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b92e:	ee30 0a67 	vsub.f32	s0, s0, s15
 800b932:	eddf 6a90 	vldr	s13, [pc, #576]	; 800bb74 <__ieee754_powf+0x3c8>
 800b936:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 800b93a:	eee0 6a67 	vfms.f32	s13, s0, s15
 800b93e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800b942:	eee6 7ac0 	vfms.f32	s15, s13, s0
 800b946:	ee20 7a00 	vmul.f32	s14, s0, s0
 800b94a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800b94e:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 800bb78 <__ieee754_powf+0x3cc>
 800b952:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800b956:	ed9f 7a89 	vldr	s14, [pc, #548]	; 800bb7c <__ieee754_powf+0x3d0>
 800b95a:	eee0 7a07 	vfma.f32	s15, s0, s14
 800b95e:	ed9f 7a88 	vldr	s14, [pc, #544]	; 800bb80 <__ieee754_powf+0x3d4>
 800b962:	eef0 6a67 	vmov.f32	s13, s15
 800b966:	eee0 6a07 	vfma.f32	s13, s0, s14
 800b96a:	ee16 3a90 	vmov	r3, s13
 800b96e:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800b972:	f023 030f 	bic.w	r3, r3, #15
 800b976:	ee00 3a90 	vmov	s1, r3
 800b97a:	eee0 0a47 	vfms.f32	s1, s0, s14
 800b97e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 800b982:	f424 647f 	bic.w	r4, r4, #4080	; 0xff0
 800b986:	f024 040f 	bic.w	r4, r4, #15
 800b98a:	ee07 4a10 	vmov	s14, r4
 800b98e:	ee67 0aa8 	vmul.f32	s1, s15, s17
 800b992:	ee38 7ac7 	vsub.f32	s14, s17, s14
 800b996:	ee07 3a90 	vmov	s15, r3
 800b99a:	eee7 0a27 	vfma.f32	s1, s14, s15
 800b99e:	3f01      	subs	r7, #1
 800b9a0:	ea57 0200 	orrs.w	r2, r7, r0
 800b9a4:	ee07 4a10 	vmov	s14, r4
 800b9a8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b9ac:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 800b9b0:	ee30 7aa7 	vadd.f32	s14, s1, s15
 800b9b4:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 800b9b8:	ee17 4a10 	vmov	r4, s14
 800b9bc:	bf08      	it	eq
 800b9be:	eeb0 8a40 	vmoveq.f32	s16, s0
 800b9c2:	2c00      	cmp	r4, #0
 800b9c4:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800b9c8:	f340 817e 	ble.w	800bcc8 <__ieee754_powf+0x51c>
 800b9cc:	f1b3 4f86 	cmp.w	r3, #1124073472	; 0x43000000
 800b9d0:	f340 80f8 	ble.w	800bbc4 <__ieee754_powf+0x418>
 800b9d4:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800b9d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9dc:	bf4c      	ite	mi
 800b9de:	2001      	movmi	r0, #1
 800b9e0:	2000      	movpl	r0, #0
 800b9e2:	e790      	b.n	800b906 <__ieee754_powf+0x15a>
 800b9e4:	f016 4fff 	tst.w	r6, #2139095040	; 0x7f800000
 800b9e8:	bf01      	itttt	eq
 800b9ea:	eddf 7a66 	vldreq	s15, [pc, #408]	; 800bb84 <__ieee754_powf+0x3d8>
 800b9ee:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 800b9f2:	f06f 0217 	mvneq.w	r2, #23
 800b9f6:	ee17 5a90 	vmoveq	r5, s15
 800b9fa:	ea4f 53e5 	mov.w	r3, r5, asr #23
 800b9fe:	bf18      	it	ne
 800ba00:	2200      	movne	r2, #0
 800ba02:	3b7f      	subs	r3, #127	; 0x7f
 800ba04:	4413      	add	r3, r2
 800ba06:	4a60      	ldr	r2, [pc, #384]	; (800bb88 <__ieee754_powf+0x3dc>)
 800ba08:	f3c5 0516 	ubfx	r5, r5, #0, #23
 800ba0c:	4295      	cmp	r5, r2
 800ba0e:	f045 517e 	orr.w	r1, r5, #1065353216	; 0x3f800000
 800ba12:	dd06      	ble.n	800ba22 <__ieee754_powf+0x276>
 800ba14:	4a5d      	ldr	r2, [pc, #372]	; (800bb8c <__ieee754_powf+0x3e0>)
 800ba16:	4295      	cmp	r5, r2
 800ba18:	f340 80a4 	ble.w	800bb64 <__ieee754_powf+0x3b8>
 800ba1c:	3301      	adds	r3, #1
 800ba1e:	f5a1 0100 	sub.w	r1, r1, #8388608	; 0x800000
 800ba22:	2500      	movs	r5, #0
 800ba24:	4a5a      	ldr	r2, [pc, #360]	; (800bb90 <__ieee754_powf+0x3e4>)
 800ba26:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 800ba2a:	ee07 1a90 	vmov	s15, r1
 800ba2e:	ed92 7a00 	vldr	s14, [r2]
 800ba32:	4a58      	ldr	r2, [pc, #352]	; (800bb94 <__ieee754_powf+0x3e8>)
 800ba34:	ee37 6a27 	vadd.f32	s12, s14, s15
 800ba38:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 800ba3c:	eec5 6a86 	vdiv.f32	s13, s11, s12
 800ba40:	1049      	asrs	r1, r1, #1
 800ba42:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 800ba46:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
 800ba4a:	eb01 5145 	add.w	r1, r1, r5, lsl #21
 800ba4e:	ee37 5ac7 	vsub.f32	s10, s15, s14
 800ba52:	ee06 1a10 	vmov	s12, r1
 800ba56:	ee65 4a26 	vmul.f32	s9, s10, s13
 800ba5a:	ee36 7a47 	vsub.f32	s14, s12, s14
 800ba5e:	ee14 6a90 	vmov	r6, s9
 800ba62:	4016      	ands	r6, r2
 800ba64:	ee05 6a90 	vmov	s11, r6
 800ba68:	eea5 5ac6 	vfms.f32	s10, s11, s12
 800ba6c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800ba70:	ed9f 7a49 	vldr	s14, [pc, #292]	; 800bb98 <__ieee754_powf+0x3ec>
 800ba74:	eea5 5ae7 	vfms.f32	s10, s11, s15
 800ba78:	ee64 7aa4 	vmul.f32	s15, s9, s9
 800ba7c:	ee25 6a26 	vmul.f32	s12, s10, s13
 800ba80:	eddf 6a46 	vldr	s13, [pc, #280]	; 800bb9c <__ieee754_powf+0x3f0>
 800ba84:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800ba88:	eddf 6a45 	vldr	s13, [pc, #276]	; 800bba0 <__ieee754_powf+0x3f4>
 800ba8c:	eee7 6a27 	vfma.f32	s13, s14, s15
 800ba90:	ed9f 7a38 	vldr	s14, [pc, #224]	; 800bb74 <__ieee754_powf+0x3c8>
 800ba94:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800ba98:	eddf 6a42 	vldr	s13, [pc, #264]	; 800bba4 <__ieee754_powf+0x3f8>
 800ba9c:	eee7 6a27 	vfma.f32	s13, s14, s15
 800baa0:	ed9f 7a41 	vldr	s14, [pc, #260]	; 800bba8 <__ieee754_powf+0x3fc>
 800baa4:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800baa8:	ee74 6aa5 	vadd.f32	s13, s9, s11
 800baac:	ee27 5aa7 	vmul.f32	s10, s15, s15
 800bab0:	ee66 6a86 	vmul.f32	s13, s13, s12
 800bab4:	eee5 6a07 	vfma.f32	s13, s10, s14
 800bab8:	eeb0 5a08 	vmov.f32	s10, #8	; 0x40400000  3.0
 800babc:	eef0 7a45 	vmov.f32	s15, s10
 800bac0:	eee5 7aa5 	vfma.f32	s15, s11, s11
 800bac4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bac8:	ee17 1a90 	vmov	r1, s15
 800bacc:	4011      	ands	r1, r2
 800bace:	ee07 1a90 	vmov	s15, r1
 800bad2:	ee37 7ac5 	vsub.f32	s14, s15, s10
 800bad6:	eea5 7ae5 	vfms.f32	s14, s11, s11
 800bada:	ee36 7ac7 	vsub.f32	s14, s13, s14
 800bade:	ee27 7a24 	vmul.f32	s14, s14, s9
 800bae2:	eea6 7a27 	vfma.f32	s14, s12, s15
 800bae6:	eeb0 6a47 	vmov.f32	s12, s14
 800baea:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800baee:	ee16 1a10 	vmov	r1, s12
 800baf2:	4011      	ands	r1, r2
 800baf4:	ee06 1a90 	vmov	s13, r1
 800baf8:	eee5 6ae7 	vfms.f32	s13, s11, s15
 800bafc:	eddf 7a2b 	vldr	s15, [pc, #172]	; 800bbac <__ieee754_powf+0x400>
 800bb00:	eddf 5a2b 	vldr	s11, [pc, #172]	; 800bbb0 <__ieee754_powf+0x404>
 800bb04:	ee37 7a66 	vsub.f32	s14, s14, s13
 800bb08:	ee06 1a10 	vmov	s12, r1
 800bb0c:	ee27 7a27 	vmul.f32	s14, s14, s15
 800bb10:	eddf 7a28 	vldr	s15, [pc, #160]	; 800bbb4 <__ieee754_powf+0x408>
 800bb14:	4928      	ldr	r1, [pc, #160]	; (800bbb8 <__ieee754_powf+0x40c>)
 800bb16:	eea6 7a27 	vfma.f32	s14, s12, s15
 800bb1a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800bb1e:	edd1 7a00 	vldr	s15, [r1]
 800bb22:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bb26:	ee07 3a90 	vmov	s15, r3
 800bb2a:	4b24      	ldr	r3, [pc, #144]	; (800bbbc <__ieee754_powf+0x410>)
 800bb2c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800bb30:	eef0 7a47 	vmov.f32	s15, s14
 800bb34:	eee6 7a25 	vfma.f32	s15, s12, s11
 800bb38:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 800bb3c:	edd5 0a00 	vldr	s1, [r5]
 800bb40:	ee77 7aa0 	vadd.f32	s15, s15, s1
 800bb44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bb48:	ee17 3a90 	vmov	r3, s15
 800bb4c:	4013      	ands	r3, r2
 800bb4e:	ee07 3a90 	vmov	s15, r3
 800bb52:	ee77 6ae6 	vsub.f32	s13, s15, s13
 800bb56:	ee76 6ae0 	vsub.f32	s13, s13, s1
 800bb5a:	eee6 6a65 	vfms.f32	s13, s12, s11
 800bb5e:	ee77 7a66 	vsub.f32	s15, s14, s13
 800bb62:	e70e      	b.n	800b982 <__ieee754_powf+0x1d6>
 800bb64:	2501      	movs	r5, #1
 800bb66:	e75d      	b.n	800ba24 <__ieee754_powf+0x278>
 800bb68:	00000000 	.word	0x00000000
 800bb6c:	3f7ffff3 	.word	0x3f7ffff3
 800bb70:	3f800007 	.word	0x3f800007
 800bb74:	3eaaaaab 	.word	0x3eaaaaab
 800bb78:	3fb8aa3b 	.word	0x3fb8aa3b
 800bb7c:	36eca570 	.word	0x36eca570
 800bb80:	3fb8aa00 	.word	0x3fb8aa00
 800bb84:	4b800000 	.word	0x4b800000
 800bb88:	001cc471 	.word	0x001cc471
 800bb8c:	005db3d6 	.word	0x005db3d6
 800bb90:	08076900 	.word	0x08076900
 800bb94:	fffff000 	.word	0xfffff000
 800bb98:	3e6c3255 	.word	0x3e6c3255
 800bb9c:	3e53f142 	.word	0x3e53f142
 800bba0:	3e8ba305 	.word	0x3e8ba305
 800bba4:	3edb6db7 	.word	0x3edb6db7
 800bba8:	3f19999a 	.word	0x3f19999a
 800bbac:	3f76384f 	.word	0x3f76384f
 800bbb0:	3f763800 	.word	0x3f763800
 800bbb4:	369dc3a0 	.word	0x369dc3a0
 800bbb8:	08076910 	.word	0x08076910
 800bbbc:	08076908 	.word	0x08076908
 800bbc0:	3338aa3c 	.word	0x3338aa3c
 800bbc4:	f040 8095 	bne.w	800bcf2 <__ieee754_powf+0x546>
 800bbc8:	ed5f 6a03 	vldr	s13, [pc, #-12]	; 800bbc0 <__ieee754_powf+0x414>
 800bbcc:	ee37 7a67 	vsub.f32	s14, s14, s15
 800bbd0:	ee70 6aa6 	vadd.f32	s13, s1, s13
 800bbd4:	eef4 6ac7 	vcmpe.f32	s13, s14
 800bbd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbdc:	f73f aefa 	bgt.w	800b9d4 <__ieee754_powf+0x228>
 800bbe0:	15db      	asrs	r3, r3, #23
 800bbe2:	f1a3 007e 	sub.w	r0, r3, #126	; 0x7e
 800bbe6:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800bbea:	4103      	asrs	r3, r0
 800bbec:	4423      	add	r3, r4
 800bbee:	494b      	ldr	r1, [pc, #300]	; (800bd1c <__ieee754_powf+0x570>)
 800bbf0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 800bbf4:	3a7f      	subs	r2, #127	; 0x7f
 800bbf6:	4111      	asrs	r1, r2
 800bbf8:	ea23 0101 	bic.w	r1, r3, r1
 800bbfc:	ee07 1a10 	vmov	s14, r1
 800bc00:	f3c3 0016 	ubfx	r0, r3, #0, #23
 800bc04:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800bc08:	f1c2 0217 	rsb	r2, r2, #23
 800bc0c:	4110      	asrs	r0, r2
 800bc0e:	2c00      	cmp	r4, #0
 800bc10:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800bc14:	bfb8      	it	lt
 800bc16:	4240      	neglt	r0, r0
 800bc18:	ee37 7aa0 	vadd.f32	s14, s15, s1
 800bc1c:	ed9f 0a40 	vldr	s0, [pc, #256]	; 800bd20 <__ieee754_powf+0x574>
 800bc20:	eddf 6a40 	vldr	s13, [pc, #256]	; 800bd24 <__ieee754_powf+0x578>
 800bc24:	ee17 3a10 	vmov	r3, s14
 800bc28:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800bc2c:	f023 030f 	bic.w	r3, r3, #15
 800bc30:	ee07 3a10 	vmov	s14, r3
 800bc34:	ee77 7a67 	vsub.f32	s15, s14, s15
 800bc38:	ee27 0a00 	vmul.f32	s0, s14, s0
 800bc3c:	ee70 0ae7 	vsub.f32	s1, s1, s15
 800bc40:	eddf 7a39 	vldr	s15, [pc, #228]	; 800bd28 <__ieee754_powf+0x57c>
 800bc44:	eea0 0aa7 	vfma.f32	s0, s1, s15
 800bc48:	eef0 7a40 	vmov.f32	s15, s0
 800bc4c:	eee7 7a26 	vfma.f32	s15, s14, s13
 800bc50:	eeb0 6a67 	vmov.f32	s12, s15
 800bc54:	eea7 6a66 	vfms.f32	s12, s14, s13
 800bc58:	ee27 7aa7 	vmul.f32	s14, s15, s15
 800bc5c:	ee30 0a46 	vsub.f32	s0, s0, s12
 800bc60:	eddf 6a32 	vldr	s13, [pc, #200]	; 800bd2c <__ieee754_powf+0x580>
 800bc64:	ed9f 6a32 	vldr	s12, [pc, #200]	; 800bd30 <__ieee754_powf+0x584>
 800bc68:	eee7 6a06 	vfma.f32	s13, s14, s12
 800bc6c:	ed9f 6a31 	vldr	s12, [pc, #196]	; 800bd34 <__ieee754_powf+0x588>
 800bc70:	eea6 6a87 	vfma.f32	s12, s13, s14
 800bc74:	eddf 6a30 	vldr	s13, [pc, #192]	; 800bd38 <__ieee754_powf+0x58c>
 800bc78:	eee6 6a07 	vfma.f32	s13, s12, s14
 800bc7c:	ed9f 6a2f 	vldr	s12, [pc, #188]	; 800bd3c <__ieee754_powf+0x590>
 800bc80:	eea6 6a87 	vfma.f32	s12, s13, s14
 800bc84:	eef0 6a67 	vmov.f32	s13, s15
 800bc88:	eee6 6a47 	vfms.f32	s13, s12, s14
 800bc8c:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 800bc90:	ee27 6aa6 	vmul.f32	s12, s15, s13
 800bc94:	ee76 6ac7 	vsub.f32	s13, s13, s14
 800bc98:	eea7 0a80 	vfma.f32	s0, s15, s0
 800bc9c:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800bca0:	ee37 0a40 	vsub.f32	s0, s14, s0
 800bca4:	ee70 7a67 	vsub.f32	s15, s0, s15
 800bca8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800bcac:	ee30 0a67 	vsub.f32	s0, s0, s15
 800bcb0:	ee10 3a10 	vmov	r3, s0
 800bcb4:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 800bcb8:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 800bcbc:	da1f      	bge.n	800bcfe <__ieee754_powf+0x552>
 800bcbe:	f000 f877 	bl	800bdb0 <scalbnf>
 800bcc2:	ee20 0a08 	vmul.f32	s0, s0, s16
 800bcc6:	e589      	b.n	800b7dc <__ieee754_powf+0x30>
 800bcc8:	4a1d      	ldr	r2, [pc, #116]	; (800bd40 <__ieee754_powf+0x594>)
 800bcca:	4293      	cmp	r3, r2
 800bccc:	dd07      	ble.n	800bcde <__ieee754_powf+0x532>
 800bcce:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800bcd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcd6:	bf4c      	ite	mi
 800bcd8:	2001      	movmi	r0, #1
 800bcda:	2000      	movpl	r0, #0
 800bcdc:	e61f      	b.n	800b91e <__ieee754_powf+0x172>
 800bcde:	d108      	bne.n	800bcf2 <__ieee754_powf+0x546>
 800bce0:	ee37 7a67 	vsub.f32	s14, s14, s15
 800bce4:	eeb4 7ae0 	vcmpe.f32	s14, s1
 800bce8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcec:	f6ff af78 	blt.w	800bbe0 <__ieee754_powf+0x434>
 800bcf0:	e7ed      	b.n	800bcce <__ieee754_powf+0x522>
 800bcf2:	f1b3 5f7c 	cmp.w	r3, #1056964608	; 0x3f000000
 800bcf6:	f73f af73 	bgt.w	800bbe0 <__ieee754_powf+0x434>
 800bcfa:	2000      	movs	r0, #0
 800bcfc:	e78c      	b.n	800bc18 <__ieee754_powf+0x46c>
 800bcfe:	ee00 3a10 	vmov	s0, r3
 800bd02:	e7de      	b.n	800bcc2 <__ieee754_powf+0x516>
 800bd04:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800bd08:	e568      	b.n	800b7dc <__ieee754_powf+0x30>
 800bd0a:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 800bd44 <__ieee754_powf+0x598>
 800bd0e:	e565      	b.n	800b7dc <__ieee754_powf+0x30>
 800bd10:	eeb0 0a48 	vmov.f32	s0, s16
 800bd14:	e562      	b.n	800b7dc <__ieee754_powf+0x30>
 800bd16:	2700      	movs	r7, #0
 800bd18:	e58d      	b.n	800b836 <__ieee754_powf+0x8a>
 800bd1a:	bf00      	nop
 800bd1c:	007fffff 	.word	0x007fffff
 800bd20:	35bfbe8c 	.word	0x35bfbe8c
 800bd24:	3f317200 	.word	0x3f317200
 800bd28:	3f317218 	.word	0x3f317218
 800bd2c:	b5ddea0e 	.word	0xb5ddea0e
 800bd30:	3331bb4c 	.word	0x3331bb4c
 800bd34:	388ab355 	.word	0x388ab355
 800bd38:	bb360b61 	.word	0xbb360b61
 800bd3c:	3e2aaaab 	.word	0x3e2aaaab
 800bd40:	43160000 	.word	0x43160000
 800bd44:	00000000 	.word	0x00000000

0800bd48 <__ieee754_sqrtf>:
 800bd48:	eeb1 0ac0 	vsqrt.f32	s0, s0
 800bd4c:	4770      	bx	lr

0800bd4e <with_errnof>:
 800bd4e:	b513      	push	{r0, r1, r4, lr}
 800bd50:	4604      	mov	r4, r0
 800bd52:	ed8d 0a01 	vstr	s0, [sp, #4]
 800bd56:	f000 f89d 	bl	800be94 <__errno>
 800bd5a:	ed9d 0a01 	vldr	s0, [sp, #4]
 800bd5e:	6004      	str	r4, [r0, #0]
 800bd60:	b002      	add	sp, #8
 800bd62:	bd10      	pop	{r4, pc}

0800bd64 <xflowf>:
 800bd64:	b130      	cbz	r0, 800bd74 <xflowf+0x10>
 800bd66:	eef1 7a40 	vneg.f32	s15, s0
 800bd6a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800bd6e:	2022      	movs	r0, #34	; 0x22
 800bd70:	f7ff bfed 	b.w	800bd4e <with_errnof>
 800bd74:	eef0 7a40 	vmov.f32	s15, s0
 800bd78:	e7f7      	b.n	800bd6a <xflowf+0x6>
	...

0800bd7c <__math_uflowf>:
 800bd7c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800bd84 <__math_uflowf+0x8>
 800bd80:	f7ff bff0 	b.w	800bd64 <xflowf>
 800bd84:	10000000 	.word	0x10000000

0800bd88 <__math_oflowf>:
 800bd88:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800bd90 <__math_oflowf+0x8>
 800bd8c:	f7ff bfea 	b.w	800bd64 <xflowf>
 800bd90:	70000000 	.word	0x70000000

0800bd94 <finitef>:
 800bd94:	b082      	sub	sp, #8
 800bd96:	ed8d 0a01 	vstr	s0, [sp, #4]
 800bd9a:	9801      	ldr	r0, [sp, #4]
 800bd9c:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 800bda0:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 800bda4:	bfac      	ite	ge
 800bda6:	2000      	movge	r0, #0
 800bda8:	2001      	movlt	r0, #1
 800bdaa:	b002      	add	sp, #8
 800bdac:	4770      	bx	lr
	...

0800bdb0 <scalbnf>:
 800bdb0:	ee10 3a10 	vmov	r3, s0
 800bdb4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 800bdb8:	d025      	beq.n	800be06 <scalbnf+0x56>
 800bdba:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 800bdbe:	d302      	bcc.n	800bdc6 <scalbnf+0x16>
 800bdc0:	ee30 0a00 	vadd.f32	s0, s0, s0
 800bdc4:	4770      	bx	lr
 800bdc6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 800bdca:	d122      	bne.n	800be12 <scalbnf+0x62>
 800bdcc:	4b2a      	ldr	r3, [pc, #168]	; (800be78 <scalbnf+0xc8>)
 800bdce:	eddf 7a2b 	vldr	s15, [pc, #172]	; 800be7c <scalbnf+0xcc>
 800bdd2:	4298      	cmp	r0, r3
 800bdd4:	ee20 0a27 	vmul.f32	s0, s0, s15
 800bdd8:	db16      	blt.n	800be08 <scalbnf+0x58>
 800bdda:	ee10 3a10 	vmov	r3, s0
 800bdde:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 800bde2:	3a19      	subs	r2, #25
 800bde4:	4402      	add	r2, r0
 800bde6:	2afe      	cmp	r2, #254	; 0xfe
 800bde8:	dd15      	ble.n	800be16 <scalbnf+0x66>
 800bdea:	ee10 3a10 	vmov	r3, s0
 800bdee:	eddf 7a24 	vldr	s15, [pc, #144]	; 800be80 <scalbnf+0xd0>
 800bdf2:	eddf 6a24 	vldr	s13, [pc, #144]	; 800be84 <scalbnf+0xd4>
 800bdf6:	2b00      	cmp	r3, #0
 800bdf8:	eeb0 7a67 	vmov.f32	s14, s15
 800bdfc:	bfb8      	it	lt
 800bdfe:	eef0 7a66 	vmovlt.f32	s15, s13
 800be02:	ee27 0a27 	vmul.f32	s0, s14, s15
 800be06:	4770      	bx	lr
 800be08:	eddf 7a1f 	vldr	s15, [pc, #124]	; 800be88 <scalbnf+0xd8>
 800be0c:	ee20 0a27 	vmul.f32	s0, s0, s15
 800be10:	4770      	bx	lr
 800be12:	0dd2      	lsrs	r2, r2, #23
 800be14:	e7e6      	b.n	800bde4 <scalbnf+0x34>
 800be16:	2a00      	cmp	r2, #0
 800be18:	dd06      	ble.n	800be28 <scalbnf+0x78>
 800be1a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800be1e:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 800be22:	ee00 3a10 	vmov	s0, r3
 800be26:	4770      	bx	lr
 800be28:	f112 0f16 	cmn.w	r2, #22
 800be2c:	da1a      	bge.n	800be64 <scalbnf+0xb4>
 800be2e:	f24c 3350 	movw	r3, #50000	; 0xc350
 800be32:	4298      	cmp	r0, r3
 800be34:	ee10 3a10 	vmov	r3, s0
 800be38:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800be3c:	dd0a      	ble.n	800be54 <scalbnf+0xa4>
 800be3e:	ed9f 0a10 	vldr	s0, [pc, #64]	; 800be80 <scalbnf+0xd0>
 800be42:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800be84 <scalbnf+0xd4>
 800be46:	eef0 7a40 	vmov.f32	s15, s0
 800be4a:	2b00      	cmp	r3, #0
 800be4c:	bf18      	it	ne
 800be4e:	eeb0 0a47 	vmovne.f32	s0, s14
 800be52:	e7db      	b.n	800be0c <scalbnf+0x5c>
 800be54:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 800be88 <scalbnf+0xd8>
 800be58:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 800be8c <scalbnf+0xdc>
 800be5c:	eef0 7a40 	vmov.f32	s15, s0
 800be60:	2b00      	cmp	r3, #0
 800be62:	e7f3      	b.n	800be4c <scalbnf+0x9c>
 800be64:	3219      	adds	r2, #25
 800be66:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800be6a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 800be6e:	eddf 7a08 	vldr	s15, [pc, #32]	; 800be90 <scalbnf+0xe0>
 800be72:	ee07 3a10 	vmov	s14, r3
 800be76:	e7c4      	b.n	800be02 <scalbnf+0x52>
 800be78:	ffff3cb0 	.word	0xffff3cb0
 800be7c:	4c000000 	.word	0x4c000000
 800be80:	7149f2ca 	.word	0x7149f2ca
 800be84:	f149f2ca 	.word	0xf149f2ca
 800be88:	0da24260 	.word	0x0da24260
 800be8c:	8da24260 	.word	0x8da24260
 800be90:	33000000 	.word	0x33000000

0800be94 <__errno>:
 800be94:	4b01      	ldr	r3, [pc, #4]	; (800be9c <__errno+0x8>)
 800be96:	6818      	ldr	r0, [r3, #0]
 800be98:	4770      	bx	lr
 800be9a:	bf00      	nop
 800be9c:	20004b48 	.word	0x20004b48

0800bea0 <__libc_init_array>:
 800bea0:	b570      	push	{r4, r5, r6, lr}
 800bea2:	4d0d      	ldr	r5, [pc, #52]	; (800bed8 <__libc_init_array+0x38>)
 800bea4:	4c0d      	ldr	r4, [pc, #52]	; (800bedc <__libc_init_array+0x3c>)
 800bea6:	1b64      	subs	r4, r4, r5
 800bea8:	10a4      	asrs	r4, r4, #2
 800beaa:	2600      	movs	r6, #0
 800beac:	42a6      	cmp	r6, r4
 800beae:	d109      	bne.n	800bec4 <__libc_init_array+0x24>
 800beb0:	4d0b      	ldr	r5, [pc, #44]	; (800bee0 <__libc_init_array+0x40>)
 800beb2:	4c0c      	ldr	r4, [pc, #48]	; (800bee4 <__libc_init_array+0x44>)
 800beb4:	f002 ff42 	bl	800ed3c <_init>
 800beb8:	1b64      	subs	r4, r4, r5
 800beba:	10a4      	asrs	r4, r4, #2
 800bebc:	2600      	movs	r6, #0
 800bebe:	42a6      	cmp	r6, r4
 800bec0:	d105      	bne.n	800bece <__libc_init_array+0x2e>
 800bec2:	bd70      	pop	{r4, r5, r6, pc}
 800bec4:	f855 3b04 	ldr.w	r3, [r5], #4
 800bec8:	4798      	blx	r3
 800beca:	3601      	adds	r6, #1
 800becc:	e7ee      	b.n	800beac <__libc_init_array+0xc>
 800bece:	f855 3b04 	ldr.w	r3, [r5], #4
 800bed2:	4798      	blx	r3
 800bed4:	3601      	adds	r6, #1
 800bed6:	e7f2      	b.n	800bebe <__libc_init_array+0x1e>
 800bed8:	08076cfc 	.word	0x08076cfc
 800bedc:	08076cfc 	.word	0x08076cfc
 800bee0:	08076cfc 	.word	0x08076cfc
 800bee4:	08076d00 	.word	0x08076d00

0800bee8 <malloc>:
 800bee8:	4b02      	ldr	r3, [pc, #8]	; (800bef4 <malloc+0xc>)
 800beea:	4601      	mov	r1, r0
 800beec:	6818      	ldr	r0, [r3, #0]
 800beee:	f000 b885 	b.w	800bffc <_malloc_r>
 800bef2:	bf00      	nop
 800bef4:	20004b48 	.word	0x20004b48

0800bef8 <memcpy>:
 800bef8:	440a      	add	r2, r1
 800befa:	4291      	cmp	r1, r2
 800befc:	f100 33ff 	add.w	r3, r0, #4294967295
 800bf00:	d100      	bne.n	800bf04 <memcpy+0xc>
 800bf02:	4770      	bx	lr
 800bf04:	b510      	push	{r4, lr}
 800bf06:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bf0a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800bf0e:	4291      	cmp	r1, r2
 800bf10:	d1f9      	bne.n	800bf06 <memcpy+0xe>
 800bf12:	bd10      	pop	{r4, pc}

0800bf14 <memset>:
 800bf14:	4402      	add	r2, r0
 800bf16:	4603      	mov	r3, r0
 800bf18:	4293      	cmp	r3, r2
 800bf1a:	d100      	bne.n	800bf1e <memset+0xa>
 800bf1c:	4770      	bx	lr
 800bf1e:	f803 1b01 	strb.w	r1, [r3], #1
 800bf22:	e7f9      	b.n	800bf18 <memset+0x4>

0800bf24 <_free_r>:
 800bf24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf26:	2900      	cmp	r1, #0
 800bf28:	d044      	beq.n	800bfb4 <_free_r+0x90>
 800bf2a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bf2e:	9001      	str	r0, [sp, #4]
 800bf30:	2b00      	cmp	r3, #0
 800bf32:	f1a1 0404 	sub.w	r4, r1, #4
 800bf36:	bfb8      	it	lt
 800bf38:	18e4      	addlt	r4, r4, r3
 800bf3a:	f001 fbeb 	bl	800d714 <__malloc_lock>
 800bf3e:	4a1e      	ldr	r2, [pc, #120]	; (800bfb8 <_free_r+0x94>)
 800bf40:	9801      	ldr	r0, [sp, #4]
 800bf42:	6813      	ldr	r3, [r2, #0]
 800bf44:	b933      	cbnz	r3, 800bf54 <_free_r+0x30>
 800bf46:	6063      	str	r3, [r4, #4]
 800bf48:	6014      	str	r4, [r2, #0]
 800bf4a:	b003      	add	sp, #12
 800bf4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bf50:	f001 bbe6 	b.w	800d720 <__malloc_unlock>
 800bf54:	42a3      	cmp	r3, r4
 800bf56:	d908      	bls.n	800bf6a <_free_r+0x46>
 800bf58:	6825      	ldr	r5, [r4, #0]
 800bf5a:	1961      	adds	r1, r4, r5
 800bf5c:	428b      	cmp	r3, r1
 800bf5e:	bf01      	itttt	eq
 800bf60:	6819      	ldreq	r1, [r3, #0]
 800bf62:	685b      	ldreq	r3, [r3, #4]
 800bf64:	1949      	addeq	r1, r1, r5
 800bf66:	6021      	streq	r1, [r4, #0]
 800bf68:	e7ed      	b.n	800bf46 <_free_r+0x22>
 800bf6a:	461a      	mov	r2, r3
 800bf6c:	685b      	ldr	r3, [r3, #4]
 800bf6e:	b10b      	cbz	r3, 800bf74 <_free_r+0x50>
 800bf70:	42a3      	cmp	r3, r4
 800bf72:	d9fa      	bls.n	800bf6a <_free_r+0x46>
 800bf74:	6811      	ldr	r1, [r2, #0]
 800bf76:	1855      	adds	r5, r2, r1
 800bf78:	42a5      	cmp	r5, r4
 800bf7a:	d10b      	bne.n	800bf94 <_free_r+0x70>
 800bf7c:	6824      	ldr	r4, [r4, #0]
 800bf7e:	4421      	add	r1, r4
 800bf80:	1854      	adds	r4, r2, r1
 800bf82:	42a3      	cmp	r3, r4
 800bf84:	6011      	str	r1, [r2, #0]
 800bf86:	d1e0      	bne.n	800bf4a <_free_r+0x26>
 800bf88:	681c      	ldr	r4, [r3, #0]
 800bf8a:	685b      	ldr	r3, [r3, #4]
 800bf8c:	6053      	str	r3, [r2, #4]
 800bf8e:	4421      	add	r1, r4
 800bf90:	6011      	str	r1, [r2, #0]
 800bf92:	e7da      	b.n	800bf4a <_free_r+0x26>
 800bf94:	d902      	bls.n	800bf9c <_free_r+0x78>
 800bf96:	230c      	movs	r3, #12
 800bf98:	6003      	str	r3, [r0, #0]
 800bf9a:	e7d6      	b.n	800bf4a <_free_r+0x26>
 800bf9c:	6825      	ldr	r5, [r4, #0]
 800bf9e:	1961      	adds	r1, r4, r5
 800bfa0:	428b      	cmp	r3, r1
 800bfa2:	bf04      	itt	eq
 800bfa4:	6819      	ldreq	r1, [r3, #0]
 800bfa6:	685b      	ldreq	r3, [r3, #4]
 800bfa8:	6063      	str	r3, [r4, #4]
 800bfaa:	bf04      	itt	eq
 800bfac:	1949      	addeq	r1, r1, r5
 800bfae:	6021      	streq	r1, [r4, #0]
 800bfb0:	6054      	str	r4, [r2, #4]
 800bfb2:	e7ca      	b.n	800bf4a <_free_r+0x26>
 800bfb4:	b003      	add	sp, #12
 800bfb6:	bd30      	pop	{r4, r5, pc}
 800bfb8:	20005068 	.word	0x20005068

0800bfbc <sbrk_aligned>:
 800bfbc:	b570      	push	{r4, r5, r6, lr}
 800bfbe:	4e0e      	ldr	r6, [pc, #56]	; (800bff8 <sbrk_aligned+0x3c>)
 800bfc0:	460c      	mov	r4, r1
 800bfc2:	6831      	ldr	r1, [r6, #0]
 800bfc4:	4605      	mov	r5, r0
 800bfc6:	b911      	cbnz	r1, 800bfce <sbrk_aligned+0x12>
 800bfc8:	f000 fcf6 	bl	800c9b8 <_sbrk_r>
 800bfcc:	6030      	str	r0, [r6, #0]
 800bfce:	4621      	mov	r1, r4
 800bfd0:	4628      	mov	r0, r5
 800bfd2:	f000 fcf1 	bl	800c9b8 <_sbrk_r>
 800bfd6:	1c43      	adds	r3, r0, #1
 800bfd8:	d00a      	beq.n	800bff0 <sbrk_aligned+0x34>
 800bfda:	1cc4      	adds	r4, r0, #3
 800bfdc:	f024 0403 	bic.w	r4, r4, #3
 800bfe0:	42a0      	cmp	r0, r4
 800bfe2:	d007      	beq.n	800bff4 <sbrk_aligned+0x38>
 800bfe4:	1a21      	subs	r1, r4, r0
 800bfe6:	4628      	mov	r0, r5
 800bfe8:	f000 fce6 	bl	800c9b8 <_sbrk_r>
 800bfec:	3001      	adds	r0, #1
 800bfee:	d101      	bne.n	800bff4 <sbrk_aligned+0x38>
 800bff0:	f04f 34ff 	mov.w	r4, #4294967295
 800bff4:	4620      	mov	r0, r4
 800bff6:	bd70      	pop	{r4, r5, r6, pc}
 800bff8:	2000506c 	.word	0x2000506c

0800bffc <_malloc_r>:
 800bffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c000:	1ccd      	adds	r5, r1, #3
 800c002:	f025 0503 	bic.w	r5, r5, #3
 800c006:	3508      	adds	r5, #8
 800c008:	2d0c      	cmp	r5, #12
 800c00a:	bf38      	it	cc
 800c00c:	250c      	movcc	r5, #12
 800c00e:	2d00      	cmp	r5, #0
 800c010:	4607      	mov	r7, r0
 800c012:	db01      	blt.n	800c018 <_malloc_r+0x1c>
 800c014:	42a9      	cmp	r1, r5
 800c016:	d905      	bls.n	800c024 <_malloc_r+0x28>
 800c018:	230c      	movs	r3, #12
 800c01a:	603b      	str	r3, [r7, #0]
 800c01c:	2600      	movs	r6, #0
 800c01e:	4630      	mov	r0, r6
 800c020:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c024:	4e2e      	ldr	r6, [pc, #184]	; (800c0e0 <_malloc_r+0xe4>)
 800c026:	f001 fb75 	bl	800d714 <__malloc_lock>
 800c02a:	6833      	ldr	r3, [r6, #0]
 800c02c:	461c      	mov	r4, r3
 800c02e:	bb34      	cbnz	r4, 800c07e <_malloc_r+0x82>
 800c030:	4629      	mov	r1, r5
 800c032:	4638      	mov	r0, r7
 800c034:	f7ff ffc2 	bl	800bfbc <sbrk_aligned>
 800c038:	1c43      	adds	r3, r0, #1
 800c03a:	4604      	mov	r4, r0
 800c03c:	d14d      	bne.n	800c0da <_malloc_r+0xde>
 800c03e:	6834      	ldr	r4, [r6, #0]
 800c040:	4626      	mov	r6, r4
 800c042:	2e00      	cmp	r6, #0
 800c044:	d140      	bne.n	800c0c8 <_malloc_r+0xcc>
 800c046:	6823      	ldr	r3, [r4, #0]
 800c048:	4631      	mov	r1, r6
 800c04a:	4638      	mov	r0, r7
 800c04c:	eb04 0803 	add.w	r8, r4, r3
 800c050:	f000 fcb2 	bl	800c9b8 <_sbrk_r>
 800c054:	4580      	cmp	r8, r0
 800c056:	d13a      	bne.n	800c0ce <_malloc_r+0xd2>
 800c058:	6821      	ldr	r1, [r4, #0]
 800c05a:	3503      	adds	r5, #3
 800c05c:	1a6d      	subs	r5, r5, r1
 800c05e:	f025 0503 	bic.w	r5, r5, #3
 800c062:	3508      	adds	r5, #8
 800c064:	2d0c      	cmp	r5, #12
 800c066:	bf38      	it	cc
 800c068:	250c      	movcc	r5, #12
 800c06a:	4629      	mov	r1, r5
 800c06c:	4638      	mov	r0, r7
 800c06e:	f7ff ffa5 	bl	800bfbc <sbrk_aligned>
 800c072:	3001      	adds	r0, #1
 800c074:	d02b      	beq.n	800c0ce <_malloc_r+0xd2>
 800c076:	6823      	ldr	r3, [r4, #0]
 800c078:	442b      	add	r3, r5
 800c07a:	6023      	str	r3, [r4, #0]
 800c07c:	e00e      	b.n	800c09c <_malloc_r+0xa0>
 800c07e:	6822      	ldr	r2, [r4, #0]
 800c080:	1b52      	subs	r2, r2, r5
 800c082:	d41e      	bmi.n	800c0c2 <_malloc_r+0xc6>
 800c084:	2a0b      	cmp	r2, #11
 800c086:	d916      	bls.n	800c0b6 <_malloc_r+0xba>
 800c088:	1961      	adds	r1, r4, r5
 800c08a:	42a3      	cmp	r3, r4
 800c08c:	6025      	str	r5, [r4, #0]
 800c08e:	bf18      	it	ne
 800c090:	6059      	strne	r1, [r3, #4]
 800c092:	6863      	ldr	r3, [r4, #4]
 800c094:	bf08      	it	eq
 800c096:	6031      	streq	r1, [r6, #0]
 800c098:	5162      	str	r2, [r4, r5]
 800c09a:	604b      	str	r3, [r1, #4]
 800c09c:	4638      	mov	r0, r7
 800c09e:	f104 060b 	add.w	r6, r4, #11
 800c0a2:	f001 fb3d 	bl	800d720 <__malloc_unlock>
 800c0a6:	f026 0607 	bic.w	r6, r6, #7
 800c0aa:	1d23      	adds	r3, r4, #4
 800c0ac:	1af2      	subs	r2, r6, r3
 800c0ae:	d0b6      	beq.n	800c01e <_malloc_r+0x22>
 800c0b0:	1b9b      	subs	r3, r3, r6
 800c0b2:	50a3      	str	r3, [r4, r2]
 800c0b4:	e7b3      	b.n	800c01e <_malloc_r+0x22>
 800c0b6:	6862      	ldr	r2, [r4, #4]
 800c0b8:	42a3      	cmp	r3, r4
 800c0ba:	bf0c      	ite	eq
 800c0bc:	6032      	streq	r2, [r6, #0]
 800c0be:	605a      	strne	r2, [r3, #4]
 800c0c0:	e7ec      	b.n	800c09c <_malloc_r+0xa0>
 800c0c2:	4623      	mov	r3, r4
 800c0c4:	6864      	ldr	r4, [r4, #4]
 800c0c6:	e7b2      	b.n	800c02e <_malloc_r+0x32>
 800c0c8:	4634      	mov	r4, r6
 800c0ca:	6876      	ldr	r6, [r6, #4]
 800c0cc:	e7b9      	b.n	800c042 <_malloc_r+0x46>
 800c0ce:	230c      	movs	r3, #12
 800c0d0:	603b      	str	r3, [r7, #0]
 800c0d2:	4638      	mov	r0, r7
 800c0d4:	f001 fb24 	bl	800d720 <__malloc_unlock>
 800c0d8:	e7a1      	b.n	800c01e <_malloc_r+0x22>
 800c0da:	6025      	str	r5, [r4, #0]
 800c0dc:	e7de      	b.n	800c09c <_malloc_r+0xa0>
 800c0de:	bf00      	nop
 800c0e0:	20005068 	.word	0x20005068

0800c0e4 <__cvt>:
 800c0e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c0e8:	ec55 4b10 	vmov	r4, r5, d0
 800c0ec:	2d00      	cmp	r5, #0
 800c0ee:	460e      	mov	r6, r1
 800c0f0:	4619      	mov	r1, r3
 800c0f2:	462b      	mov	r3, r5
 800c0f4:	bfbb      	ittet	lt
 800c0f6:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800c0fa:	461d      	movlt	r5, r3
 800c0fc:	2300      	movge	r3, #0
 800c0fe:	232d      	movlt	r3, #45	; 0x2d
 800c100:	700b      	strb	r3, [r1, #0]
 800c102:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c104:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c108:	4691      	mov	r9, r2
 800c10a:	f023 0820 	bic.w	r8, r3, #32
 800c10e:	bfbc      	itt	lt
 800c110:	4622      	movlt	r2, r4
 800c112:	4614      	movlt	r4, r2
 800c114:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c118:	d005      	beq.n	800c126 <__cvt+0x42>
 800c11a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800c11e:	d100      	bne.n	800c122 <__cvt+0x3e>
 800c120:	3601      	adds	r6, #1
 800c122:	2102      	movs	r1, #2
 800c124:	e000      	b.n	800c128 <__cvt+0x44>
 800c126:	2103      	movs	r1, #3
 800c128:	ab03      	add	r3, sp, #12
 800c12a:	9301      	str	r3, [sp, #4]
 800c12c:	ab02      	add	r3, sp, #8
 800c12e:	9300      	str	r3, [sp, #0]
 800c130:	ec45 4b10 	vmov	d0, r4, r5
 800c134:	4653      	mov	r3, sl
 800c136:	4632      	mov	r2, r6
 800c138:	f000 fcfa 	bl	800cb30 <_dtoa_r>
 800c13c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800c140:	4607      	mov	r7, r0
 800c142:	d102      	bne.n	800c14a <__cvt+0x66>
 800c144:	f019 0f01 	tst.w	r9, #1
 800c148:	d022      	beq.n	800c190 <__cvt+0xac>
 800c14a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c14e:	eb07 0906 	add.w	r9, r7, r6
 800c152:	d110      	bne.n	800c176 <__cvt+0x92>
 800c154:	783b      	ldrb	r3, [r7, #0]
 800c156:	2b30      	cmp	r3, #48	; 0x30
 800c158:	d10a      	bne.n	800c170 <__cvt+0x8c>
 800c15a:	2200      	movs	r2, #0
 800c15c:	2300      	movs	r3, #0
 800c15e:	4620      	mov	r0, r4
 800c160:	4629      	mov	r1, r5
 800c162:	f7f4 fcd1 	bl	8000b08 <__aeabi_dcmpeq>
 800c166:	b918      	cbnz	r0, 800c170 <__cvt+0x8c>
 800c168:	f1c6 0601 	rsb	r6, r6, #1
 800c16c:	f8ca 6000 	str.w	r6, [sl]
 800c170:	f8da 3000 	ldr.w	r3, [sl]
 800c174:	4499      	add	r9, r3
 800c176:	2200      	movs	r2, #0
 800c178:	2300      	movs	r3, #0
 800c17a:	4620      	mov	r0, r4
 800c17c:	4629      	mov	r1, r5
 800c17e:	f7f4 fcc3 	bl	8000b08 <__aeabi_dcmpeq>
 800c182:	b108      	cbz	r0, 800c188 <__cvt+0xa4>
 800c184:	f8cd 900c 	str.w	r9, [sp, #12]
 800c188:	2230      	movs	r2, #48	; 0x30
 800c18a:	9b03      	ldr	r3, [sp, #12]
 800c18c:	454b      	cmp	r3, r9
 800c18e:	d307      	bcc.n	800c1a0 <__cvt+0xbc>
 800c190:	9b03      	ldr	r3, [sp, #12]
 800c192:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c194:	1bdb      	subs	r3, r3, r7
 800c196:	4638      	mov	r0, r7
 800c198:	6013      	str	r3, [r2, #0]
 800c19a:	b004      	add	sp, #16
 800c19c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c1a0:	1c59      	adds	r1, r3, #1
 800c1a2:	9103      	str	r1, [sp, #12]
 800c1a4:	701a      	strb	r2, [r3, #0]
 800c1a6:	e7f0      	b.n	800c18a <__cvt+0xa6>

0800c1a8 <__exponent>:
 800c1a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c1aa:	4603      	mov	r3, r0
 800c1ac:	2900      	cmp	r1, #0
 800c1ae:	bfb8      	it	lt
 800c1b0:	4249      	neglt	r1, r1
 800c1b2:	f803 2b02 	strb.w	r2, [r3], #2
 800c1b6:	bfb4      	ite	lt
 800c1b8:	222d      	movlt	r2, #45	; 0x2d
 800c1ba:	222b      	movge	r2, #43	; 0x2b
 800c1bc:	2909      	cmp	r1, #9
 800c1be:	7042      	strb	r2, [r0, #1]
 800c1c0:	dd2a      	ble.n	800c218 <__exponent+0x70>
 800c1c2:	f10d 0407 	add.w	r4, sp, #7
 800c1c6:	46a4      	mov	ip, r4
 800c1c8:	270a      	movs	r7, #10
 800c1ca:	46a6      	mov	lr, r4
 800c1cc:	460a      	mov	r2, r1
 800c1ce:	fb91 f6f7 	sdiv	r6, r1, r7
 800c1d2:	fb07 1516 	mls	r5, r7, r6, r1
 800c1d6:	3530      	adds	r5, #48	; 0x30
 800c1d8:	2a63      	cmp	r2, #99	; 0x63
 800c1da:	f104 34ff 	add.w	r4, r4, #4294967295
 800c1de:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800c1e2:	4631      	mov	r1, r6
 800c1e4:	dcf1      	bgt.n	800c1ca <__exponent+0x22>
 800c1e6:	3130      	adds	r1, #48	; 0x30
 800c1e8:	f1ae 0502 	sub.w	r5, lr, #2
 800c1ec:	f804 1c01 	strb.w	r1, [r4, #-1]
 800c1f0:	1c44      	adds	r4, r0, #1
 800c1f2:	4629      	mov	r1, r5
 800c1f4:	4561      	cmp	r1, ip
 800c1f6:	d30a      	bcc.n	800c20e <__exponent+0x66>
 800c1f8:	f10d 0209 	add.w	r2, sp, #9
 800c1fc:	eba2 020e 	sub.w	r2, r2, lr
 800c200:	4565      	cmp	r5, ip
 800c202:	bf88      	it	hi
 800c204:	2200      	movhi	r2, #0
 800c206:	4413      	add	r3, r2
 800c208:	1a18      	subs	r0, r3, r0
 800c20a:	b003      	add	sp, #12
 800c20c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c20e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c212:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c216:	e7ed      	b.n	800c1f4 <__exponent+0x4c>
 800c218:	2330      	movs	r3, #48	; 0x30
 800c21a:	3130      	adds	r1, #48	; 0x30
 800c21c:	7083      	strb	r3, [r0, #2]
 800c21e:	70c1      	strb	r1, [r0, #3]
 800c220:	1d03      	adds	r3, r0, #4
 800c222:	e7f1      	b.n	800c208 <__exponent+0x60>

0800c224 <_printf_float>:
 800c224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c228:	ed2d 8b02 	vpush	{d8}
 800c22c:	b08d      	sub	sp, #52	; 0x34
 800c22e:	460c      	mov	r4, r1
 800c230:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800c234:	4616      	mov	r6, r2
 800c236:	461f      	mov	r7, r3
 800c238:	4605      	mov	r5, r0
 800c23a:	f001 fa67 	bl	800d70c <_localeconv_r>
 800c23e:	f8d0 a000 	ldr.w	sl, [r0]
 800c242:	4650      	mov	r0, sl
 800c244:	f7f3 ffe4 	bl	8000210 <strlen>
 800c248:	2300      	movs	r3, #0
 800c24a:	930a      	str	r3, [sp, #40]	; 0x28
 800c24c:	6823      	ldr	r3, [r4, #0]
 800c24e:	9305      	str	r3, [sp, #20]
 800c250:	f8d8 3000 	ldr.w	r3, [r8]
 800c254:	f894 b018 	ldrb.w	fp, [r4, #24]
 800c258:	3307      	adds	r3, #7
 800c25a:	f023 0307 	bic.w	r3, r3, #7
 800c25e:	f103 0208 	add.w	r2, r3, #8
 800c262:	f8c8 2000 	str.w	r2, [r8]
 800c266:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c26a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800c26e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800c272:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c276:	9307      	str	r3, [sp, #28]
 800c278:	f8cd 8018 	str.w	r8, [sp, #24]
 800c27c:	ee08 0a10 	vmov	s16, r0
 800c280:	4b9f      	ldr	r3, [pc, #636]	; (800c500 <_printf_float+0x2dc>)
 800c282:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c286:	f04f 32ff 	mov.w	r2, #4294967295
 800c28a:	f7f4 fc6f 	bl	8000b6c <__aeabi_dcmpun>
 800c28e:	bb88      	cbnz	r0, 800c2f4 <_printf_float+0xd0>
 800c290:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c294:	4b9a      	ldr	r3, [pc, #616]	; (800c500 <_printf_float+0x2dc>)
 800c296:	f04f 32ff 	mov.w	r2, #4294967295
 800c29a:	f7f4 fc49 	bl	8000b30 <__aeabi_dcmple>
 800c29e:	bb48      	cbnz	r0, 800c2f4 <_printf_float+0xd0>
 800c2a0:	2200      	movs	r2, #0
 800c2a2:	2300      	movs	r3, #0
 800c2a4:	4640      	mov	r0, r8
 800c2a6:	4649      	mov	r1, r9
 800c2a8:	f7f4 fc38 	bl	8000b1c <__aeabi_dcmplt>
 800c2ac:	b110      	cbz	r0, 800c2b4 <_printf_float+0x90>
 800c2ae:	232d      	movs	r3, #45	; 0x2d
 800c2b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c2b4:	4b93      	ldr	r3, [pc, #588]	; (800c504 <_printf_float+0x2e0>)
 800c2b6:	4894      	ldr	r0, [pc, #592]	; (800c508 <_printf_float+0x2e4>)
 800c2b8:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800c2bc:	bf94      	ite	ls
 800c2be:	4698      	movls	r8, r3
 800c2c0:	4680      	movhi	r8, r0
 800c2c2:	2303      	movs	r3, #3
 800c2c4:	6123      	str	r3, [r4, #16]
 800c2c6:	9b05      	ldr	r3, [sp, #20]
 800c2c8:	f023 0204 	bic.w	r2, r3, #4
 800c2cc:	6022      	str	r2, [r4, #0]
 800c2ce:	f04f 0900 	mov.w	r9, #0
 800c2d2:	9700      	str	r7, [sp, #0]
 800c2d4:	4633      	mov	r3, r6
 800c2d6:	aa0b      	add	r2, sp, #44	; 0x2c
 800c2d8:	4621      	mov	r1, r4
 800c2da:	4628      	mov	r0, r5
 800c2dc:	f000 f9d8 	bl	800c690 <_printf_common>
 800c2e0:	3001      	adds	r0, #1
 800c2e2:	f040 8090 	bne.w	800c406 <_printf_float+0x1e2>
 800c2e6:	f04f 30ff 	mov.w	r0, #4294967295
 800c2ea:	b00d      	add	sp, #52	; 0x34
 800c2ec:	ecbd 8b02 	vpop	{d8}
 800c2f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2f4:	4642      	mov	r2, r8
 800c2f6:	464b      	mov	r3, r9
 800c2f8:	4640      	mov	r0, r8
 800c2fa:	4649      	mov	r1, r9
 800c2fc:	f7f4 fc36 	bl	8000b6c <__aeabi_dcmpun>
 800c300:	b140      	cbz	r0, 800c314 <_printf_float+0xf0>
 800c302:	464b      	mov	r3, r9
 800c304:	2b00      	cmp	r3, #0
 800c306:	bfbc      	itt	lt
 800c308:	232d      	movlt	r3, #45	; 0x2d
 800c30a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800c30e:	487f      	ldr	r0, [pc, #508]	; (800c50c <_printf_float+0x2e8>)
 800c310:	4b7f      	ldr	r3, [pc, #508]	; (800c510 <_printf_float+0x2ec>)
 800c312:	e7d1      	b.n	800c2b8 <_printf_float+0x94>
 800c314:	6863      	ldr	r3, [r4, #4]
 800c316:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800c31a:	9206      	str	r2, [sp, #24]
 800c31c:	1c5a      	adds	r2, r3, #1
 800c31e:	d13f      	bne.n	800c3a0 <_printf_float+0x17c>
 800c320:	2306      	movs	r3, #6
 800c322:	6063      	str	r3, [r4, #4]
 800c324:	9b05      	ldr	r3, [sp, #20]
 800c326:	6861      	ldr	r1, [r4, #4]
 800c328:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800c32c:	2300      	movs	r3, #0
 800c32e:	9303      	str	r3, [sp, #12]
 800c330:	ab0a      	add	r3, sp, #40	; 0x28
 800c332:	e9cd b301 	strd	fp, r3, [sp, #4]
 800c336:	ab09      	add	r3, sp, #36	; 0x24
 800c338:	ec49 8b10 	vmov	d0, r8, r9
 800c33c:	9300      	str	r3, [sp, #0]
 800c33e:	6022      	str	r2, [r4, #0]
 800c340:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800c344:	4628      	mov	r0, r5
 800c346:	f7ff fecd 	bl	800c0e4 <__cvt>
 800c34a:	9b06      	ldr	r3, [sp, #24]
 800c34c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c34e:	2b47      	cmp	r3, #71	; 0x47
 800c350:	4680      	mov	r8, r0
 800c352:	d108      	bne.n	800c366 <_printf_float+0x142>
 800c354:	1cc8      	adds	r0, r1, #3
 800c356:	db02      	blt.n	800c35e <_printf_float+0x13a>
 800c358:	6863      	ldr	r3, [r4, #4]
 800c35a:	4299      	cmp	r1, r3
 800c35c:	dd41      	ble.n	800c3e2 <_printf_float+0x1be>
 800c35e:	f1ab 0b02 	sub.w	fp, fp, #2
 800c362:	fa5f fb8b 	uxtb.w	fp, fp
 800c366:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c36a:	d820      	bhi.n	800c3ae <_printf_float+0x18a>
 800c36c:	3901      	subs	r1, #1
 800c36e:	465a      	mov	r2, fp
 800c370:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800c374:	9109      	str	r1, [sp, #36]	; 0x24
 800c376:	f7ff ff17 	bl	800c1a8 <__exponent>
 800c37a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c37c:	1813      	adds	r3, r2, r0
 800c37e:	2a01      	cmp	r2, #1
 800c380:	4681      	mov	r9, r0
 800c382:	6123      	str	r3, [r4, #16]
 800c384:	dc02      	bgt.n	800c38c <_printf_float+0x168>
 800c386:	6822      	ldr	r2, [r4, #0]
 800c388:	07d2      	lsls	r2, r2, #31
 800c38a:	d501      	bpl.n	800c390 <_printf_float+0x16c>
 800c38c:	3301      	adds	r3, #1
 800c38e:	6123      	str	r3, [r4, #16]
 800c390:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800c394:	2b00      	cmp	r3, #0
 800c396:	d09c      	beq.n	800c2d2 <_printf_float+0xae>
 800c398:	232d      	movs	r3, #45	; 0x2d
 800c39a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c39e:	e798      	b.n	800c2d2 <_printf_float+0xae>
 800c3a0:	9a06      	ldr	r2, [sp, #24]
 800c3a2:	2a47      	cmp	r2, #71	; 0x47
 800c3a4:	d1be      	bne.n	800c324 <_printf_float+0x100>
 800c3a6:	2b00      	cmp	r3, #0
 800c3a8:	d1bc      	bne.n	800c324 <_printf_float+0x100>
 800c3aa:	2301      	movs	r3, #1
 800c3ac:	e7b9      	b.n	800c322 <_printf_float+0xfe>
 800c3ae:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800c3b2:	d118      	bne.n	800c3e6 <_printf_float+0x1c2>
 800c3b4:	2900      	cmp	r1, #0
 800c3b6:	6863      	ldr	r3, [r4, #4]
 800c3b8:	dd0b      	ble.n	800c3d2 <_printf_float+0x1ae>
 800c3ba:	6121      	str	r1, [r4, #16]
 800c3bc:	b913      	cbnz	r3, 800c3c4 <_printf_float+0x1a0>
 800c3be:	6822      	ldr	r2, [r4, #0]
 800c3c0:	07d0      	lsls	r0, r2, #31
 800c3c2:	d502      	bpl.n	800c3ca <_printf_float+0x1a6>
 800c3c4:	3301      	adds	r3, #1
 800c3c6:	440b      	add	r3, r1
 800c3c8:	6123      	str	r3, [r4, #16]
 800c3ca:	65a1      	str	r1, [r4, #88]	; 0x58
 800c3cc:	f04f 0900 	mov.w	r9, #0
 800c3d0:	e7de      	b.n	800c390 <_printf_float+0x16c>
 800c3d2:	b913      	cbnz	r3, 800c3da <_printf_float+0x1b6>
 800c3d4:	6822      	ldr	r2, [r4, #0]
 800c3d6:	07d2      	lsls	r2, r2, #31
 800c3d8:	d501      	bpl.n	800c3de <_printf_float+0x1ba>
 800c3da:	3302      	adds	r3, #2
 800c3dc:	e7f4      	b.n	800c3c8 <_printf_float+0x1a4>
 800c3de:	2301      	movs	r3, #1
 800c3e0:	e7f2      	b.n	800c3c8 <_printf_float+0x1a4>
 800c3e2:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800c3e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c3e8:	4299      	cmp	r1, r3
 800c3ea:	db05      	blt.n	800c3f8 <_printf_float+0x1d4>
 800c3ec:	6823      	ldr	r3, [r4, #0]
 800c3ee:	6121      	str	r1, [r4, #16]
 800c3f0:	07d8      	lsls	r0, r3, #31
 800c3f2:	d5ea      	bpl.n	800c3ca <_printf_float+0x1a6>
 800c3f4:	1c4b      	adds	r3, r1, #1
 800c3f6:	e7e7      	b.n	800c3c8 <_printf_float+0x1a4>
 800c3f8:	2900      	cmp	r1, #0
 800c3fa:	bfd4      	ite	le
 800c3fc:	f1c1 0202 	rsble	r2, r1, #2
 800c400:	2201      	movgt	r2, #1
 800c402:	4413      	add	r3, r2
 800c404:	e7e0      	b.n	800c3c8 <_printf_float+0x1a4>
 800c406:	6823      	ldr	r3, [r4, #0]
 800c408:	055a      	lsls	r2, r3, #21
 800c40a:	d407      	bmi.n	800c41c <_printf_float+0x1f8>
 800c40c:	6923      	ldr	r3, [r4, #16]
 800c40e:	4642      	mov	r2, r8
 800c410:	4631      	mov	r1, r6
 800c412:	4628      	mov	r0, r5
 800c414:	47b8      	blx	r7
 800c416:	3001      	adds	r0, #1
 800c418:	d12c      	bne.n	800c474 <_printf_float+0x250>
 800c41a:	e764      	b.n	800c2e6 <_printf_float+0xc2>
 800c41c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c420:	f240 80e0 	bls.w	800c5e4 <_printf_float+0x3c0>
 800c424:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c428:	2200      	movs	r2, #0
 800c42a:	2300      	movs	r3, #0
 800c42c:	f7f4 fb6c 	bl	8000b08 <__aeabi_dcmpeq>
 800c430:	2800      	cmp	r0, #0
 800c432:	d034      	beq.n	800c49e <_printf_float+0x27a>
 800c434:	4a37      	ldr	r2, [pc, #220]	; (800c514 <_printf_float+0x2f0>)
 800c436:	2301      	movs	r3, #1
 800c438:	4631      	mov	r1, r6
 800c43a:	4628      	mov	r0, r5
 800c43c:	47b8      	blx	r7
 800c43e:	3001      	adds	r0, #1
 800c440:	f43f af51 	beq.w	800c2e6 <_printf_float+0xc2>
 800c444:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c448:	429a      	cmp	r2, r3
 800c44a:	db02      	blt.n	800c452 <_printf_float+0x22e>
 800c44c:	6823      	ldr	r3, [r4, #0]
 800c44e:	07d8      	lsls	r0, r3, #31
 800c450:	d510      	bpl.n	800c474 <_printf_float+0x250>
 800c452:	ee18 3a10 	vmov	r3, s16
 800c456:	4652      	mov	r2, sl
 800c458:	4631      	mov	r1, r6
 800c45a:	4628      	mov	r0, r5
 800c45c:	47b8      	blx	r7
 800c45e:	3001      	adds	r0, #1
 800c460:	f43f af41 	beq.w	800c2e6 <_printf_float+0xc2>
 800c464:	f04f 0800 	mov.w	r8, #0
 800c468:	f104 091a 	add.w	r9, r4, #26
 800c46c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c46e:	3b01      	subs	r3, #1
 800c470:	4543      	cmp	r3, r8
 800c472:	dc09      	bgt.n	800c488 <_printf_float+0x264>
 800c474:	6823      	ldr	r3, [r4, #0]
 800c476:	079b      	lsls	r3, r3, #30
 800c478:	f100 8105 	bmi.w	800c686 <_printf_float+0x462>
 800c47c:	68e0      	ldr	r0, [r4, #12]
 800c47e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c480:	4298      	cmp	r0, r3
 800c482:	bfb8      	it	lt
 800c484:	4618      	movlt	r0, r3
 800c486:	e730      	b.n	800c2ea <_printf_float+0xc6>
 800c488:	2301      	movs	r3, #1
 800c48a:	464a      	mov	r2, r9
 800c48c:	4631      	mov	r1, r6
 800c48e:	4628      	mov	r0, r5
 800c490:	47b8      	blx	r7
 800c492:	3001      	adds	r0, #1
 800c494:	f43f af27 	beq.w	800c2e6 <_printf_float+0xc2>
 800c498:	f108 0801 	add.w	r8, r8, #1
 800c49c:	e7e6      	b.n	800c46c <_printf_float+0x248>
 800c49e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4a0:	2b00      	cmp	r3, #0
 800c4a2:	dc39      	bgt.n	800c518 <_printf_float+0x2f4>
 800c4a4:	4a1b      	ldr	r2, [pc, #108]	; (800c514 <_printf_float+0x2f0>)
 800c4a6:	2301      	movs	r3, #1
 800c4a8:	4631      	mov	r1, r6
 800c4aa:	4628      	mov	r0, r5
 800c4ac:	47b8      	blx	r7
 800c4ae:	3001      	adds	r0, #1
 800c4b0:	f43f af19 	beq.w	800c2e6 <_printf_float+0xc2>
 800c4b4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c4b8:	4313      	orrs	r3, r2
 800c4ba:	d102      	bne.n	800c4c2 <_printf_float+0x29e>
 800c4bc:	6823      	ldr	r3, [r4, #0]
 800c4be:	07d9      	lsls	r1, r3, #31
 800c4c0:	d5d8      	bpl.n	800c474 <_printf_float+0x250>
 800c4c2:	ee18 3a10 	vmov	r3, s16
 800c4c6:	4652      	mov	r2, sl
 800c4c8:	4631      	mov	r1, r6
 800c4ca:	4628      	mov	r0, r5
 800c4cc:	47b8      	blx	r7
 800c4ce:	3001      	adds	r0, #1
 800c4d0:	f43f af09 	beq.w	800c2e6 <_printf_float+0xc2>
 800c4d4:	f04f 0900 	mov.w	r9, #0
 800c4d8:	f104 0a1a 	add.w	sl, r4, #26
 800c4dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4de:	425b      	negs	r3, r3
 800c4e0:	454b      	cmp	r3, r9
 800c4e2:	dc01      	bgt.n	800c4e8 <_printf_float+0x2c4>
 800c4e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c4e6:	e792      	b.n	800c40e <_printf_float+0x1ea>
 800c4e8:	2301      	movs	r3, #1
 800c4ea:	4652      	mov	r2, sl
 800c4ec:	4631      	mov	r1, r6
 800c4ee:	4628      	mov	r0, r5
 800c4f0:	47b8      	blx	r7
 800c4f2:	3001      	adds	r0, #1
 800c4f4:	f43f aef7 	beq.w	800c2e6 <_printf_float+0xc2>
 800c4f8:	f109 0901 	add.w	r9, r9, #1
 800c4fc:	e7ee      	b.n	800c4dc <_printf_float+0x2b8>
 800c4fe:	bf00      	nop
 800c500:	7fefffff 	.word	0x7fefffff
 800c504:	0807691c 	.word	0x0807691c
 800c508:	08076920 	.word	0x08076920
 800c50c:	08076928 	.word	0x08076928
 800c510:	08076924 	.word	0x08076924
 800c514:	0807692c 	.word	0x0807692c
 800c518:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c51a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c51c:	429a      	cmp	r2, r3
 800c51e:	bfa8      	it	ge
 800c520:	461a      	movge	r2, r3
 800c522:	2a00      	cmp	r2, #0
 800c524:	4691      	mov	r9, r2
 800c526:	dc37      	bgt.n	800c598 <_printf_float+0x374>
 800c528:	f04f 0b00 	mov.w	fp, #0
 800c52c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c530:	f104 021a 	add.w	r2, r4, #26
 800c534:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c536:	9305      	str	r3, [sp, #20]
 800c538:	eba3 0309 	sub.w	r3, r3, r9
 800c53c:	455b      	cmp	r3, fp
 800c53e:	dc33      	bgt.n	800c5a8 <_printf_float+0x384>
 800c540:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c544:	429a      	cmp	r2, r3
 800c546:	db3b      	blt.n	800c5c0 <_printf_float+0x39c>
 800c548:	6823      	ldr	r3, [r4, #0]
 800c54a:	07da      	lsls	r2, r3, #31
 800c54c:	d438      	bmi.n	800c5c0 <_printf_float+0x39c>
 800c54e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c550:	9a05      	ldr	r2, [sp, #20]
 800c552:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c554:	1a9a      	subs	r2, r3, r2
 800c556:	eba3 0901 	sub.w	r9, r3, r1
 800c55a:	4591      	cmp	r9, r2
 800c55c:	bfa8      	it	ge
 800c55e:	4691      	movge	r9, r2
 800c560:	f1b9 0f00 	cmp.w	r9, #0
 800c564:	dc35      	bgt.n	800c5d2 <_printf_float+0x3ae>
 800c566:	f04f 0800 	mov.w	r8, #0
 800c56a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c56e:	f104 0a1a 	add.w	sl, r4, #26
 800c572:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c576:	1a9b      	subs	r3, r3, r2
 800c578:	eba3 0309 	sub.w	r3, r3, r9
 800c57c:	4543      	cmp	r3, r8
 800c57e:	f77f af79 	ble.w	800c474 <_printf_float+0x250>
 800c582:	2301      	movs	r3, #1
 800c584:	4652      	mov	r2, sl
 800c586:	4631      	mov	r1, r6
 800c588:	4628      	mov	r0, r5
 800c58a:	47b8      	blx	r7
 800c58c:	3001      	adds	r0, #1
 800c58e:	f43f aeaa 	beq.w	800c2e6 <_printf_float+0xc2>
 800c592:	f108 0801 	add.w	r8, r8, #1
 800c596:	e7ec      	b.n	800c572 <_printf_float+0x34e>
 800c598:	4613      	mov	r3, r2
 800c59a:	4631      	mov	r1, r6
 800c59c:	4642      	mov	r2, r8
 800c59e:	4628      	mov	r0, r5
 800c5a0:	47b8      	blx	r7
 800c5a2:	3001      	adds	r0, #1
 800c5a4:	d1c0      	bne.n	800c528 <_printf_float+0x304>
 800c5a6:	e69e      	b.n	800c2e6 <_printf_float+0xc2>
 800c5a8:	2301      	movs	r3, #1
 800c5aa:	4631      	mov	r1, r6
 800c5ac:	4628      	mov	r0, r5
 800c5ae:	9205      	str	r2, [sp, #20]
 800c5b0:	47b8      	blx	r7
 800c5b2:	3001      	adds	r0, #1
 800c5b4:	f43f ae97 	beq.w	800c2e6 <_printf_float+0xc2>
 800c5b8:	9a05      	ldr	r2, [sp, #20]
 800c5ba:	f10b 0b01 	add.w	fp, fp, #1
 800c5be:	e7b9      	b.n	800c534 <_printf_float+0x310>
 800c5c0:	ee18 3a10 	vmov	r3, s16
 800c5c4:	4652      	mov	r2, sl
 800c5c6:	4631      	mov	r1, r6
 800c5c8:	4628      	mov	r0, r5
 800c5ca:	47b8      	blx	r7
 800c5cc:	3001      	adds	r0, #1
 800c5ce:	d1be      	bne.n	800c54e <_printf_float+0x32a>
 800c5d0:	e689      	b.n	800c2e6 <_printf_float+0xc2>
 800c5d2:	9a05      	ldr	r2, [sp, #20]
 800c5d4:	464b      	mov	r3, r9
 800c5d6:	4442      	add	r2, r8
 800c5d8:	4631      	mov	r1, r6
 800c5da:	4628      	mov	r0, r5
 800c5dc:	47b8      	blx	r7
 800c5de:	3001      	adds	r0, #1
 800c5e0:	d1c1      	bne.n	800c566 <_printf_float+0x342>
 800c5e2:	e680      	b.n	800c2e6 <_printf_float+0xc2>
 800c5e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c5e6:	2a01      	cmp	r2, #1
 800c5e8:	dc01      	bgt.n	800c5ee <_printf_float+0x3ca>
 800c5ea:	07db      	lsls	r3, r3, #31
 800c5ec:	d538      	bpl.n	800c660 <_printf_float+0x43c>
 800c5ee:	2301      	movs	r3, #1
 800c5f0:	4642      	mov	r2, r8
 800c5f2:	4631      	mov	r1, r6
 800c5f4:	4628      	mov	r0, r5
 800c5f6:	47b8      	blx	r7
 800c5f8:	3001      	adds	r0, #1
 800c5fa:	f43f ae74 	beq.w	800c2e6 <_printf_float+0xc2>
 800c5fe:	ee18 3a10 	vmov	r3, s16
 800c602:	4652      	mov	r2, sl
 800c604:	4631      	mov	r1, r6
 800c606:	4628      	mov	r0, r5
 800c608:	47b8      	blx	r7
 800c60a:	3001      	adds	r0, #1
 800c60c:	f43f ae6b 	beq.w	800c2e6 <_printf_float+0xc2>
 800c610:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c614:	2200      	movs	r2, #0
 800c616:	2300      	movs	r3, #0
 800c618:	f7f4 fa76 	bl	8000b08 <__aeabi_dcmpeq>
 800c61c:	b9d8      	cbnz	r0, 800c656 <_printf_float+0x432>
 800c61e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c620:	f108 0201 	add.w	r2, r8, #1
 800c624:	3b01      	subs	r3, #1
 800c626:	4631      	mov	r1, r6
 800c628:	4628      	mov	r0, r5
 800c62a:	47b8      	blx	r7
 800c62c:	3001      	adds	r0, #1
 800c62e:	d10e      	bne.n	800c64e <_printf_float+0x42a>
 800c630:	e659      	b.n	800c2e6 <_printf_float+0xc2>
 800c632:	2301      	movs	r3, #1
 800c634:	4652      	mov	r2, sl
 800c636:	4631      	mov	r1, r6
 800c638:	4628      	mov	r0, r5
 800c63a:	47b8      	blx	r7
 800c63c:	3001      	adds	r0, #1
 800c63e:	f43f ae52 	beq.w	800c2e6 <_printf_float+0xc2>
 800c642:	f108 0801 	add.w	r8, r8, #1
 800c646:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c648:	3b01      	subs	r3, #1
 800c64a:	4543      	cmp	r3, r8
 800c64c:	dcf1      	bgt.n	800c632 <_printf_float+0x40e>
 800c64e:	464b      	mov	r3, r9
 800c650:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800c654:	e6dc      	b.n	800c410 <_printf_float+0x1ec>
 800c656:	f04f 0800 	mov.w	r8, #0
 800c65a:	f104 0a1a 	add.w	sl, r4, #26
 800c65e:	e7f2      	b.n	800c646 <_printf_float+0x422>
 800c660:	2301      	movs	r3, #1
 800c662:	4642      	mov	r2, r8
 800c664:	e7df      	b.n	800c626 <_printf_float+0x402>
 800c666:	2301      	movs	r3, #1
 800c668:	464a      	mov	r2, r9
 800c66a:	4631      	mov	r1, r6
 800c66c:	4628      	mov	r0, r5
 800c66e:	47b8      	blx	r7
 800c670:	3001      	adds	r0, #1
 800c672:	f43f ae38 	beq.w	800c2e6 <_printf_float+0xc2>
 800c676:	f108 0801 	add.w	r8, r8, #1
 800c67a:	68e3      	ldr	r3, [r4, #12]
 800c67c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c67e:	1a5b      	subs	r3, r3, r1
 800c680:	4543      	cmp	r3, r8
 800c682:	dcf0      	bgt.n	800c666 <_printf_float+0x442>
 800c684:	e6fa      	b.n	800c47c <_printf_float+0x258>
 800c686:	f04f 0800 	mov.w	r8, #0
 800c68a:	f104 0919 	add.w	r9, r4, #25
 800c68e:	e7f4      	b.n	800c67a <_printf_float+0x456>

0800c690 <_printf_common>:
 800c690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c694:	4616      	mov	r6, r2
 800c696:	4699      	mov	r9, r3
 800c698:	688a      	ldr	r2, [r1, #8]
 800c69a:	690b      	ldr	r3, [r1, #16]
 800c69c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c6a0:	4293      	cmp	r3, r2
 800c6a2:	bfb8      	it	lt
 800c6a4:	4613      	movlt	r3, r2
 800c6a6:	6033      	str	r3, [r6, #0]
 800c6a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800c6ac:	4607      	mov	r7, r0
 800c6ae:	460c      	mov	r4, r1
 800c6b0:	b10a      	cbz	r2, 800c6b6 <_printf_common+0x26>
 800c6b2:	3301      	adds	r3, #1
 800c6b4:	6033      	str	r3, [r6, #0]
 800c6b6:	6823      	ldr	r3, [r4, #0]
 800c6b8:	0699      	lsls	r1, r3, #26
 800c6ba:	bf42      	ittt	mi
 800c6bc:	6833      	ldrmi	r3, [r6, #0]
 800c6be:	3302      	addmi	r3, #2
 800c6c0:	6033      	strmi	r3, [r6, #0]
 800c6c2:	6825      	ldr	r5, [r4, #0]
 800c6c4:	f015 0506 	ands.w	r5, r5, #6
 800c6c8:	d106      	bne.n	800c6d8 <_printf_common+0x48>
 800c6ca:	f104 0a19 	add.w	sl, r4, #25
 800c6ce:	68e3      	ldr	r3, [r4, #12]
 800c6d0:	6832      	ldr	r2, [r6, #0]
 800c6d2:	1a9b      	subs	r3, r3, r2
 800c6d4:	42ab      	cmp	r3, r5
 800c6d6:	dc26      	bgt.n	800c726 <_printf_common+0x96>
 800c6d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800c6dc:	1e13      	subs	r3, r2, #0
 800c6de:	6822      	ldr	r2, [r4, #0]
 800c6e0:	bf18      	it	ne
 800c6e2:	2301      	movne	r3, #1
 800c6e4:	0692      	lsls	r2, r2, #26
 800c6e6:	d42b      	bmi.n	800c740 <_printf_common+0xb0>
 800c6e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800c6ec:	4649      	mov	r1, r9
 800c6ee:	4638      	mov	r0, r7
 800c6f0:	47c0      	blx	r8
 800c6f2:	3001      	adds	r0, #1
 800c6f4:	d01e      	beq.n	800c734 <_printf_common+0xa4>
 800c6f6:	6823      	ldr	r3, [r4, #0]
 800c6f8:	68e5      	ldr	r5, [r4, #12]
 800c6fa:	6832      	ldr	r2, [r6, #0]
 800c6fc:	f003 0306 	and.w	r3, r3, #6
 800c700:	2b04      	cmp	r3, #4
 800c702:	bf08      	it	eq
 800c704:	1aad      	subeq	r5, r5, r2
 800c706:	68a3      	ldr	r3, [r4, #8]
 800c708:	6922      	ldr	r2, [r4, #16]
 800c70a:	bf0c      	ite	eq
 800c70c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c710:	2500      	movne	r5, #0
 800c712:	4293      	cmp	r3, r2
 800c714:	bfc4      	itt	gt
 800c716:	1a9b      	subgt	r3, r3, r2
 800c718:	18ed      	addgt	r5, r5, r3
 800c71a:	2600      	movs	r6, #0
 800c71c:	341a      	adds	r4, #26
 800c71e:	42b5      	cmp	r5, r6
 800c720:	d11a      	bne.n	800c758 <_printf_common+0xc8>
 800c722:	2000      	movs	r0, #0
 800c724:	e008      	b.n	800c738 <_printf_common+0xa8>
 800c726:	2301      	movs	r3, #1
 800c728:	4652      	mov	r2, sl
 800c72a:	4649      	mov	r1, r9
 800c72c:	4638      	mov	r0, r7
 800c72e:	47c0      	blx	r8
 800c730:	3001      	adds	r0, #1
 800c732:	d103      	bne.n	800c73c <_printf_common+0xac>
 800c734:	f04f 30ff 	mov.w	r0, #4294967295
 800c738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c73c:	3501      	adds	r5, #1
 800c73e:	e7c6      	b.n	800c6ce <_printf_common+0x3e>
 800c740:	18e1      	adds	r1, r4, r3
 800c742:	1c5a      	adds	r2, r3, #1
 800c744:	2030      	movs	r0, #48	; 0x30
 800c746:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800c74a:	4422      	add	r2, r4
 800c74c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c750:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800c754:	3302      	adds	r3, #2
 800c756:	e7c7      	b.n	800c6e8 <_printf_common+0x58>
 800c758:	2301      	movs	r3, #1
 800c75a:	4622      	mov	r2, r4
 800c75c:	4649      	mov	r1, r9
 800c75e:	4638      	mov	r0, r7
 800c760:	47c0      	blx	r8
 800c762:	3001      	adds	r0, #1
 800c764:	d0e6      	beq.n	800c734 <_printf_common+0xa4>
 800c766:	3601      	adds	r6, #1
 800c768:	e7d9      	b.n	800c71e <_printf_common+0x8e>
	...

0800c76c <_printf_i>:
 800c76c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c770:	7e0f      	ldrb	r7, [r1, #24]
 800c772:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800c774:	2f78      	cmp	r7, #120	; 0x78
 800c776:	4691      	mov	r9, r2
 800c778:	4680      	mov	r8, r0
 800c77a:	460c      	mov	r4, r1
 800c77c:	469a      	mov	sl, r3
 800c77e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800c782:	d807      	bhi.n	800c794 <_printf_i+0x28>
 800c784:	2f62      	cmp	r7, #98	; 0x62
 800c786:	d80a      	bhi.n	800c79e <_printf_i+0x32>
 800c788:	2f00      	cmp	r7, #0
 800c78a:	f000 80d8 	beq.w	800c93e <_printf_i+0x1d2>
 800c78e:	2f58      	cmp	r7, #88	; 0x58
 800c790:	f000 80a3 	beq.w	800c8da <_printf_i+0x16e>
 800c794:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c798:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800c79c:	e03a      	b.n	800c814 <_printf_i+0xa8>
 800c79e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800c7a2:	2b15      	cmp	r3, #21
 800c7a4:	d8f6      	bhi.n	800c794 <_printf_i+0x28>
 800c7a6:	a101      	add	r1, pc, #4	; (adr r1, 800c7ac <_printf_i+0x40>)
 800c7a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c7ac:	0800c805 	.word	0x0800c805
 800c7b0:	0800c819 	.word	0x0800c819
 800c7b4:	0800c795 	.word	0x0800c795
 800c7b8:	0800c795 	.word	0x0800c795
 800c7bc:	0800c795 	.word	0x0800c795
 800c7c0:	0800c795 	.word	0x0800c795
 800c7c4:	0800c819 	.word	0x0800c819
 800c7c8:	0800c795 	.word	0x0800c795
 800c7cc:	0800c795 	.word	0x0800c795
 800c7d0:	0800c795 	.word	0x0800c795
 800c7d4:	0800c795 	.word	0x0800c795
 800c7d8:	0800c925 	.word	0x0800c925
 800c7dc:	0800c849 	.word	0x0800c849
 800c7e0:	0800c907 	.word	0x0800c907
 800c7e4:	0800c795 	.word	0x0800c795
 800c7e8:	0800c795 	.word	0x0800c795
 800c7ec:	0800c947 	.word	0x0800c947
 800c7f0:	0800c795 	.word	0x0800c795
 800c7f4:	0800c849 	.word	0x0800c849
 800c7f8:	0800c795 	.word	0x0800c795
 800c7fc:	0800c795 	.word	0x0800c795
 800c800:	0800c90f 	.word	0x0800c90f
 800c804:	682b      	ldr	r3, [r5, #0]
 800c806:	1d1a      	adds	r2, r3, #4
 800c808:	681b      	ldr	r3, [r3, #0]
 800c80a:	602a      	str	r2, [r5, #0]
 800c80c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c810:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c814:	2301      	movs	r3, #1
 800c816:	e0a3      	b.n	800c960 <_printf_i+0x1f4>
 800c818:	6820      	ldr	r0, [r4, #0]
 800c81a:	6829      	ldr	r1, [r5, #0]
 800c81c:	0606      	lsls	r6, r0, #24
 800c81e:	f101 0304 	add.w	r3, r1, #4
 800c822:	d50a      	bpl.n	800c83a <_printf_i+0xce>
 800c824:	680e      	ldr	r6, [r1, #0]
 800c826:	602b      	str	r3, [r5, #0]
 800c828:	2e00      	cmp	r6, #0
 800c82a:	da03      	bge.n	800c834 <_printf_i+0xc8>
 800c82c:	232d      	movs	r3, #45	; 0x2d
 800c82e:	4276      	negs	r6, r6
 800c830:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c834:	485e      	ldr	r0, [pc, #376]	; (800c9b0 <_printf_i+0x244>)
 800c836:	230a      	movs	r3, #10
 800c838:	e019      	b.n	800c86e <_printf_i+0x102>
 800c83a:	680e      	ldr	r6, [r1, #0]
 800c83c:	602b      	str	r3, [r5, #0]
 800c83e:	f010 0f40 	tst.w	r0, #64	; 0x40
 800c842:	bf18      	it	ne
 800c844:	b236      	sxthne	r6, r6
 800c846:	e7ef      	b.n	800c828 <_printf_i+0xbc>
 800c848:	682b      	ldr	r3, [r5, #0]
 800c84a:	6820      	ldr	r0, [r4, #0]
 800c84c:	1d19      	adds	r1, r3, #4
 800c84e:	6029      	str	r1, [r5, #0]
 800c850:	0601      	lsls	r1, r0, #24
 800c852:	d501      	bpl.n	800c858 <_printf_i+0xec>
 800c854:	681e      	ldr	r6, [r3, #0]
 800c856:	e002      	b.n	800c85e <_printf_i+0xf2>
 800c858:	0646      	lsls	r6, r0, #25
 800c85a:	d5fb      	bpl.n	800c854 <_printf_i+0xe8>
 800c85c:	881e      	ldrh	r6, [r3, #0]
 800c85e:	4854      	ldr	r0, [pc, #336]	; (800c9b0 <_printf_i+0x244>)
 800c860:	2f6f      	cmp	r7, #111	; 0x6f
 800c862:	bf0c      	ite	eq
 800c864:	2308      	moveq	r3, #8
 800c866:	230a      	movne	r3, #10
 800c868:	2100      	movs	r1, #0
 800c86a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800c86e:	6865      	ldr	r5, [r4, #4]
 800c870:	60a5      	str	r5, [r4, #8]
 800c872:	2d00      	cmp	r5, #0
 800c874:	bfa2      	ittt	ge
 800c876:	6821      	ldrge	r1, [r4, #0]
 800c878:	f021 0104 	bicge.w	r1, r1, #4
 800c87c:	6021      	strge	r1, [r4, #0]
 800c87e:	b90e      	cbnz	r6, 800c884 <_printf_i+0x118>
 800c880:	2d00      	cmp	r5, #0
 800c882:	d04d      	beq.n	800c920 <_printf_i+0x1b4>
 800c884:	4615      	mov	r5, r2
 800c886:	fbb6 f1f3 	udiv	r1, r6, r3
 800c88a:	fb03 6711 	mls	r7, r3, r1, r6
 800c88e:	5dc7      	ldrb	r7, [r0, r7]
 800c890:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800c894:	4637      	mov	r7, r6
 800c896:	42bb      	cmp	r3, r7
 800c898:	460e      	mov	r6, r1
 800c89a:	d9f4      	bls.n	800c886 <_printf_i+0x11a>
 800c89c:	2b08      	cmp	r3, #8
 800c89e:	d10b      	bne.n	800c8b8 <_printf_i+0x14c>
 800c8a0:	6823      	ldr	r3, [r4, #0]
 800c8a2:	07de      	lsls	r6, r3, #31
 800c8a4:	d508      	bpl.n	800c8b8 <_printf_i+0x14c>
 800c8a6:	6923      	ldr	r3, [r4, #16]
 800c8a8:	6861      	ldr	r1, [r4, #4]
 800c8aa:	4299      	cmp	r1, r3
 800c8ac:	bfde      	ittt	le
 800c8ae:	2330      	movle	r3, #48	; 0x30
 800c8b0:	f805 3c01 	strble.w	r3, [r5, #-1]
 800c8b4:	f105 35ff 	addle.w	r5, r5, #4294967295
 800c8b8:	1b52      	subs	r2, r2, r5
 800c8ba:	6122      	str	r2, [r4, #16]
 800c8bc:	f8cd a000 	str.w	sl, [sp]
 800c8c0:	464b      	mov	r3, r9
 800c8c2:	aa03      	add	r2, sp, #12
 800c8c4:	4621      	mov	r1, r4
 800c8c6:	4640      	mov	r0, r8
 800c8c8:	f7ff fee2 	bl	800c690 <_printf_common>
 800c8cc:	3001      	adds	r0, #1
 800c8ce:	d14c      	bne.n	800c96a <_printf_i+0x1fe>
 800c8d0:	f04f 30ff 	mov.w	r0, #4294967295
 800c8d4:	b004      	add	sp, #16
 800c8d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c8da:	4835      	ldr	r0, [pc, #212]	; (800c9b0 <_printf_i+0x244>)
 800c8dc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800c8e0:	6829      	ldr	r1, [r5, #0]
 800c8e2:	6823      	ldr	r3, [r4, #0]
 800c8e4:	f851 6b04 	ldr.w	r6, [r1], #4
 800c8e8:	6029      	str	r1, [r5, #0]
 800c8ea:	061d      	lsls	r5, r3, #24
 800c8ec:	d514      	bpl.n	800c918 <_printf_i+0x1ac>
 800c8ee:	07df      	lsls	r7, r3, #31
 800c8f0:	bf44      	itt	mi
 800c8f2:	f043 0320 	orrmi.w	r3, r3, #32
 800c8f6:	6023      	strmi	r3, [r4, #0]
 800c8f8:	b91e      	cbnz	r6, 800c902 <_printf_i+0x196>
 800c8fa:	6823      	ldr	r3, [r4, #0]
 800c8fc:	f023 0320 	bic.w	r3, r3, #32
 800c900:	6023      	str	r3, [r4, #0]
 800c902:	2310      	movs	r3, #16
 800c904:	e7b0      	b.n	800c868 <_printf_i+0xfc>
 800c906:	6823      	ldr	r3, [r4, #0]
 800c908:	f043 0320 	orr.w	r3, r3, #32
 800c90c:	6023      	str	r3, [r4, #0]
 800c90e:	2378      	movs	r3, #120	; 0x78
 800c910:	4828      	ldr	r0, [pc, #160]	; (800c9b4 <_printf_i+0x248>)
 800c912:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800c916:	e7e3      	b.n	800c8e0 <_printf_i+0x174>
 800c918:	0659      	lsls	r1, r3, #25
 800c91a:	bf48      	it	mi
 800c91c:	b2b6      	uxthmi	r6, r6
 800c91e:	e7e6      	b.n	800c8ee <_printf_i+0x182>
 800c920:	4615      	mov	r5, r2
 800c922:	e7bb      	b.n	800c89c <_printf_i+0x130>
 800c924:	682b      	ldr	r3, [r5, #0]
 800c926:	6826      	ldr	r6, [r4, #0]
 800c928:	6961      	ldr	r1, [r4, #20]
 800c92a:	1d18      	adds	r0, r3, #4
 800c92c:	6028      	str	r0, [r5, #0]
 800c92e:	0635      	lsls	r5, r6, #24
 800c930:	681b      	ldr	r3, [r3, #0]
 800c932:	d501      	bpl.n	800c938 <_printf_i+0x1cc>
 800c934:	6019      	str	r1, [r3, #0]
 800c936:	e002      	b.n	800c93e <_printf_i+0x1d2>
 800c938:	0670      	lsls	r0, r6, #25
 800c93a:	d5fb      	bpl.n	800c934 <_printf_i+0x1c8>
 800c93c:	8019      	strh	r1, [r3, #0]
 800c93e:	2300      	movs	r3, #0
 800c940:	6123      	str	r3, [r4, #16]
 800c942:	4615      	mov	r5, r2
 800c944:	e7ba      	b.n	800c8bc <_printf_i+0x150>
 800c946:	682b      	ldr	r3, [r5, #0]
 800c948:	1d1a      	adds	r2, r3, #4
 800c94a:	602a      	str	r2, [r5, #0]
 800c94c:	681d      	ldr	r5, [r3, #0]
 800c94e:	6862      	ldr	r2, [r4, #4]
 800c950:	2100      	movs	r1, #0
 800c952:	4628      	mov	r0, r5
 800c954:	f7f3 fc64 	bl	8000220 <memchr>
 800c958:	b108      	cbz	r0, 800c95e <_printf_i+0x1f2>
 800c95a:	1b40      	subs	r0, r0, r5
 800c95c:	6060      	str	r0, [r4, #4]
 800c95e:	6863      	ldr	r3, [r4, #4]
 800c960:	6123      	str	r3, [r4, #16]
 800c962:	2300      	movs	r3, #0
 800c964:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c968:	e7a8      	b.n	800c8bc <_printf_i+0x150>
 800c96a:	6923      	ldr	r3, [r4, #16]
 800c96c:	462a      	mov	r2, r5
 800c96e:	4649      	mov	r1, r9
 800c970:	4640      	mov	r0, r8
 800c972:	47d0      	blx	sl
 800c974:	3001      	adds	r0, #1
 800c976:	d0ab      	beq.n	800c8d0 <_printf_i+0x164>
 800c978:	6823      	ldr	r3, [r4, #0]
 800c97a:	079b      	lsls	r3, r3, #30
 800c97c:	d413      	bmi.n	800c9a6 <_printf_i+0x23a>
 800c97e:	68e0      	ldr	r0, [r4, #12]
 800c980:	9b03      	ldr	r3, [sp, #12]
 800c982:	4298      	cmp	r0, r3
 800c984:	bfb8      	it	lt
 800c986:	4618      	movlt	r0, r3
 800c988:	e7a4      	b.n	800c8d4 <_printf_i+0x168>
 800c98a:	2301      	movs	r3, #1
 800c98c:	4632      	mov	r2, r6
 800c98e:	4649      	mov	r1, r9
 800c990:	4640      	mov	r0, r8
 800c992:	47d0      	blx	sl
 800c994:	3001      	adds	r0, #1
 800c996:	d09b      	beq.n	800c8d0 <_printf_i+0x164>
 800c998:	3501      	adds	r5, #1
 800c99a:	68e3      	ldr	r3, [r4, #12]
 800c99c:	9903      	ldr	r1, [sp, #12]
 800c99e:	1a5b      	subs	r3, r3, r1
 800c9a0:	42ab      	cmp	r3, r5
 800c9a2:	dcf2      	bgt.n	800c98a <_printf_i+0x21e>
 800c9a4:	e7eb      	b.n	800c97e <_printf_i+0x212>
 800c9a6:	2500      	movs	r5, #0
 800c9a8:	f104 0619 	add.w	r6, r4, #25
 800c9ac:	e7f5      	b.n	800c99a <_printf_i+0x22e>
 800c9ae:	bf00      	nop
 800c9b0:	0807692e 	.word	0x0807692e
 800c9b4:	0807693f 	.word	0x0807693f

0800c9b8 <_sbrk_r>:
 800c9b8:	b538      	push	{r3, r4, r5, lr}
 800c9ba:	4d06      	ldr	r5, [pc, #24]	; (800c9d4 <_sbrk_r+0x1c>)
 800c9bc:	2300      	movs	r3, #0
 800c9be:	4604      	mov	r4, r0
 800c9c0:	4608      	mov	r0, r1
 800c9c2:	602b      	str	r3, [r5, #0]
 800c9c4:	f7f4 fde8 	bl	8001598 <_sbrk>
 800c9c8:	1c43      	adds	r3, r0, #1
 800c9ca:	d102      	bne.n	800c9d2 <_sbrk_r+0x1a>
 800c9cc:	682b      	ldr	r3, [r5, #0]
 800c9ce:	b103      	cbz	r3, 800c9d2 <_sbrk_r+0x1a>
 800c9d0:	6023      	str	r3, [r4, #0]
 800c9d2:	bd38      	pop	{r3, r4, r5, pc}
 800c9d4:	20005070 	.word	0x20005070

0800c9d8 <siprintf>:
 800c9d8:	b40e      	push	{r1, r2, r3}
 800c9da:	b500      	push	{lr}
 800c9dc:	b09c      	sub	sp, #112	; 0x70
 800c9de:	ab1d      	add	r3, sp, #116	; 0x74
 800c9e0:	9002      	str	r0, [sp, #8]
 800c9e2:	9006      	str	r0, [sp, #24]
 800c9e4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800c9e8:	4809      	ldr	r0, [pc, #36]	; (800ca10 <siprintf+0x38>)
 800c9ea:	9107      	str	r1, [sp, #28]
 800c9ec:	9104      	str	r1, [sp, #16]
 800c9ee:	4909      	ldr	r1, [pc, #36]	; (800ca14 <siprintf+0x3c>)
 800c9f0:	f853 2b04 	ldr.w	r2, [r3], #4
 800c9f4:	9105      	str	r1, [sp, #20]
 800c9f6:	6800      	ldr	r0, [r0, #0]
 800c9f8:	9301      	str	r3, [sp, #4]
 800c9fa:	a902      	add	r1, sp, #8
 800c9fc:	f001 faba 	bl	800df74 <_svfiprintf_r>
 800ca00:	9b02      	ldr	r3, [sp, #8]
 800ca02:	2200      	movs	r2, #0
 800ca04:	701a      	strb	r2, [r3, #0]
 800ca06:	b01c      	add	sp, #112	; 0x70
 800ca08:	f85d eb04 	ldr.w	lr, [sp], #4
 800ca0c:	b003      	add	sp, #12
 800ca0e:	4770      	bx	lr
 800ca10:	20004b48 	.word	0x20004b48
 800ca14:	ffff0208 	.word	0xffff0208

0800ca18 <quorem>:
 800ca18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca1c:	6903      	ldr	r3, [r0, #16]
 800ca1e:	690c      	ldr	r4, [r1, #16]
 800ca20:	42a3      	cmp	r3, r4
 800ca22:	4607      	mov	r7, r0
 800ca24:	f2c0 8081 	blt.w	800cb2a <quorem+0x112>
 800ca28:	3c01      	subs	r4, #1
 800ca2a:	f101 0814 	add.w	r8, r1, #20
 800ca2e:	f100 0514 	add.w	r5, r0, #20
 800ca32:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ca36:	9301      	str	r3, [sp, #4]
 800ca38:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800ca3c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ca40:	3301      	adds	r3, #1
 800ca42:	429a      	cmp	r2, r3
 800ca44:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800ca48:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800ca4c:	fbb2 f6f3 	udiv	r6, r2, r3
 800ca50:	d331      	bcc.n	800cab6 <quorem+0x9e>
 800ca52:	f04f 0e00 	mov.w	lr, #0
 800ca56:	4640      	mov	r0, r8
 800ca58:	46ac      	mov	ip, r5
 800ca5a:	46f2      	mov	sl, lr
 800ca5c:	f850 2b04 	ldr.w	r2, [r0], #4
 800ca60:	b293      	uxth	r3, r2
 800ca62:	fb06 e303 	mla	r3, r6, r3, lr
 800ca66:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800ca6a:	b29b      	uxth	r3, r3
 800ca6c:	ebaa 0303 	sub.w	r3, sl, r3
 800ca70:	f8dc a000 	ldr.w	sl, [ip]
 800ca74:	0c12      	lsrs	r2, r2, #16
 800ca76:	fa13 f38a 	uxtah	r3, r3, sl
 800ca7a:	fb06 e202 	mla	r2, r6, r2, lr
 800ca7e:	9300      	str	r3, [sp, #0]
 800ca80:	9b00      	ldr	r3, [sp, #0]
 800ca82:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800ca86:	b292      	uxth	r2, r2
 800ca88:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800ca8c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800ca90:	f8bd 3000 	ldrh.w	r3, [sp]
 800ca94:	4581      	cmp	r9, r0
 800ca96:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ca9a:	f84c 3b04 	str.w	r3, [ip], #4
 800ca9e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800caa2:	d2db      	bcs.n	800ca5c <quorem+0x44>
 800caa4:	f855 300b 	ldr.w	r3, [r5, fp]
 800caa8:	b92b      	cbnz	r3, 800cab6 <quorem+0x9e>
 800caaa:	9b01      	ldr	r3, [sp, #4]
 800caac:	3b04      	subs	r3, #4
 800caae:	429d      	cmp	r5, r3
 800cab0:	461a      	mov	r2, r3
 800cab2:	d32e      	bcc.n	800cb12 <quorem+0xfa>
 800cab4:	613c      	str	r4, [r7, #16]
 800cab6:	4638      	mov	r0, r7
 800cab8:	f001 f8ba 	bl	800dc30 <__mcmp>
 800cabc:	2800      	cmp	r0, #0
 800cabe:	db24      	blt.n	800cb0a <quorem+0xf2>
 800cac0:	3601      	adds	r6, #1
 800cac2:	4628      	mov	r0, r5
 800cac4:	f04f 0c00 	mov.w	ip, #0
 800cac8:	f858 2b04 	ldr.w	r2, [r8], #4
 800cacc:	f8d0 e000 	ldr.w	lr, [r0]
 800cad0:	b293      	uxth	r3, r2
 800cad2:	ebac 0303 	sub.w	r3, ip, r3
 800cad6:	0c12      	lsrs	r2, r2, #16
 800cad8:	fa13 f38e 	uxtah	r3, r3, lr
 800cadc:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800cae0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cae4:	b29b      	uxth	r3, r3
 800cae6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800caea:	45c1      	cmp	r9, r8
 800caec:	f840 3b04 	str.w	r3, [r0], #4
 800caf0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800caf4:	d2e8      	bcs.n	800cac8 <quorem+0xb0>
 800caf6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cafa:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cafe:	b922      	cbnz	r2, 800cb0a <quorem+0xf2>
 800cb00:	3b04      	subs	r3, #4
 800cb02:	429d      	cmp	r5, r3
 800cb04:	461a      	mov	r2, r3
 800cb06:	d30a      	bcc.n	800cb1e <quorem+0x106>
 800cb08:	613c      	str	r4, [r7, #16]
 800cb0a:	4630      	mov	r0, r6
 800cb0c:	b003      	add	sp, #12
 800cb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb12:	6812      	ldr	r2, [r2, #0]
 800cb14:	3b04      	subs	r3, #4
 800cb16:	2a00      	cmp	r2, #0
 800cb18:	d1cc      	bne.n	800cab4 <quorem+0x9c>
 800cb1a:	3c01      	subs	r4, #1
 800cb1c:	e7c7      	b.n	800caae <quorem+0x96>
 800cb1e:	6812      	ldr	r2, [r2, #0]
 800cb20:	3b04      	subs	r3, #4
 800cb22:	2a00      	cmp	r2, #0
 800cb24:	d1f0      	bne.n	800cb08 <quorem+0xf0>
 800cb26:	3c01      	subs	r4, #1
 800cb28:	e7eb      	b.n	800cb02 <quorem+0xea>
 800cb2a:	2000      	movs	r0, #0
 800cb2c:	e7ee      	b.n	800cb0c <quorem+0xf4>
	...

0800cb30 <_dtoa_r>:
 800cb30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb34:	ed2d 8b04 	vpush	{d8-d9}
 800cb38:	ec57 6b10 	vmov	r6, r7, d0
 800cb3c:	b093      	sub	sp, #76	; 0x4c
 800cb3e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800cb40:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800cb44:	9106      	str	r1, [sp, #24]
 800cb46:	ee10 aa10 	vmov	sl, s0
 800cb4a:	4604      	mov	r4, r0
 800cb4c:	9209      	str	r2, [sp, #36]	; 0x24
 800cb4e:	930c      	str	r3, [sp, #48]	; 0x30
 800cb50:	46bb      	mov	fp, r7
 800cb52:	b975      	cbnz	r5, 800cb72 <_dtoa_r+0x42>
 800cb54:	2010      	movs	r0, #16
 800cb56:	f7ff f9c7 	bl	800bee8 <malloc>
 800cb5a:	4602      	mov	r2, r0
 800cb5c:	6260      	str	r0, [r4, #36]	; 0x24
 800cb5e:	b920      	cbnz	r0, 800cb6a <_dtoa_r+0x3a>
 800cb60:	4ba7      	ldr	r3, [pc, #668]	; (800ce00 <_dtoa_r+0x2d0>)
 800cb62:	21ea      	movs	r1, #234	; 0xea
 800cb64:	48a7      	ldr	r0, [pc, #668]	; (800ce04 <_dtoa_r+0x2d4>)
 800cb66:	f001 fb05 	bl	800e174 <__assert_func>
 800cb6a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800cb6e:	6005      	str	r5, [r0, #0]
 800cb70:	60c5      	str	r5, [r0, #12]
 800cb72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb74:	6819      	ldr	r1, [r3, #0]
 800cb76:	b151      	cbz	r1, 800cb8e <_dtoa_r+0x5e>
 800cb78:	685a      	ldr	r2, [r3, #4]
 800cb7a:	604a      	str	r2, [r1, #4]
 800cb7c:	2301      	movs	r3, #1
 800cb7e:	4093      	lsls	r3, r2
 800cb80:	608b      	str	r3, [r1, #8]
 800cb82:	4620      	mov	r0, r4
 800cb84:	f000 fe12 	bl	800d7ac <_Bfree>
 800cb88:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb8a:	2200      	movs	r2, #0
 800cb8c:	601a      	str	r2, [r3, #0]
 800cb8e:	1e3b      	subs	r3, r7, #0
 800cb90:	bfaa      	itet	ge
 800cb92:	2300      	movge	r3, #0
 800cb94:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800cb98:	f8c8 3000 	strge.w	r3, [r8]
 800cb9c:	4b9a      	ldr	r3, [pc, #616]	; (800ce08 <_dtoa_r+0x2d8>)
 800cb9e:	bfbc      	itt	lt
 800cba0:	2201      	movlt	r2, #1
 800cba2:	f8c8 2000 	strlt.w	r2, [r8]
 800cba6:	ea33 030b 	bics.w	r3, r3, fp
 800cbaa:	d11b      	bne.n	800cbe4 <_dtoa_r+0xb4>
 800cbac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cbae:	f242 730f 	movw	r3, #9999	; 0x270f
 800cbb2:	6013      	str	r3, [r2, #0]
 800cbb4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800cbb8:	4333      	orrs	r3, r6
 800cbba:	f000 8592 	beq.w	800d6e2 <_dtoa_r+0xbb2>
 800cbbe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cbc0:	b963      	cbnz	r3, 800cbdc <_dtoa_r+0xac>
 800cbc2:	4b92      	ldr	r3, [pc, #584]	; (800ce0c <_dtoa_r+0x2dc>)
 800cbc4:	e022      	b.n	800cc0c <_dtoa_r+0xdc>
 800cbc6:	4b92      	ldr	r3, [pc, #584]	; (800ce10 <_dtoa_r+0x2e0>)
 800cbc8:	9301      	str	r3, [sp, #4]
 800cbca:	3308      	adds	r3, #8
 800cbcc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800cbce:	6013      	str	r3, [r2, #0]
 800cbd0:	9801      	ldr	r0, [sp, #4]
 800cbd2:	b013      	add	sp, #76	; 0x4c
 800cbd4:	ecbd 8b04 	vpop	{d8-d9}
 800cbd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbdc:	4b8b      	ldr	r3, [pc, #556]	; (800ce0c <_dtoa_r+0x2dc>)
 800cbde:	9301      	str	r3, [sp, #4]
 800cbe0:	3303      	adds	r3, #3
 800cbe2:	e7f3      	b.n	800cbcc <_dtoa_r+0x9c>
 800cbe4:	2200      	movs	r2, #0
 800cbe6:	2300      	movs	r3, #0
 800cbe8:	4650      	mov	r0, sl
 800cbea:	4659      	mov	r1, fp
 800cbec:	f7f3 ff8c 	bl	8000b08 <__aeabi_dcmpeq>
 800cbf0:	ec4b ab19 	vmov	d9, sl, fp
 800cbf4:	4680      	mov	r8, r0
 800cbf6:	b158      	cbz	r0, 800cc10 <_dtoa_r+0xe0>
 800cbf8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cbfa:	2301      	movs	r3, #1
 800cbfc:	6013      	str	r3, [r2, #0]
 800cbfe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cc00:	2b00      	cmp	r3, #0
 800cc02:	f000 856b 	beq.w	800d6dc <_dtoa_r+0xbac>
 800cc06:	4883      	ldr	r0, [pc, #524]	; (800ce14 <_dtoa_r+0x2e4>)
 800cc08:	6018      	str	r0, [r3, #0]
 800cc0a:	1e43      	subs	r3, r0, #1
 800cc0c:	9301      	str	r3, [sp, #4]
 800cc0e:	e7df      	b.n	800cbd0 <_dtoa_r+0xa0>
 800cc10:	ec4b ab10 	vmov	d0, sl, fp
 800cc14:	aa10      	add	r2, sp, #64	; 0x40
 800cc16:	a911      	add	r1, sp, #68	; 0x44
 800cc18:	4620      	mov	r0, r4
 800cc1a:	f001 f8af 	bl	800dd7c <__d2b>
 800cc1e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800cc22:	ee08 0a10 	vmov	s16, r0
 800cc26:	2d00      	cmp	r5, #0
 800cc28:	f000 8084 	beq.w	800cd34 <_dtoa_r+0x204>
 800cc2c:	ee19 3a90 	vmov	r3, s19
 800cc30:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cc34:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800cc38:	4656      	mov	r6, sl
 800cc3a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800cc3e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800cc42:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800cc46:	4b74      	ldr	r3, [pc, #464]	; (800ce18 <_dtoa_r+0x2e8>)
 800cc48:	2200      	movs	r2, #0
 800cc4a:	4630      	mov	r0, r6
 800cc4c:	4639      	mov	r1, r7
 800cc4e:	f7f3 fb3b 	bl	80002c8 <__aeabi_dsub>
 800cc52:	a365      	add	r3, pc, #404	; (adr r3, 800cde8 <_dtoa_r+0x2b8>)
 800cc54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc58:	f7f3 fcee 	bl	8000638 <__aeabi_dmul>
 800cc5c:	a364      	add	r3, pc, #400	; (adr r3, 800cdf0 <_dtoa_r+0x2c0>)
 800cc5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc62:	f7f3 fb33 	bl	80002cc <__adddf3>
 800cc66:	4606      	mov	r6, r0
 800cc68:	4628      	mov	r0, r5
 800cc6a:	460f      	mov	r7, r1
 800cc6c:	f7f3 fc7a 	bl	8000564 <__aeabi_i2d>
 800cc70:	a361      	add	r3, pc, #388	; (adr r3, 800cdf8 <_dtoa_r+0x2c8>)
 800cc72:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cc76:	f7f3 fcdf 	bl	8000638 <__aeabi_dmul>
 800cc7a:	4602      	mov	r2, r0
 800cc7c:	460b      	mov	r3, r1
 800cc7e:	4630      	mov	r0, r6
 800cc80:	4639      	mov	r1, r7
 800cc82:	f7f3 fb23 	bl	80002cc <__adddf3>
 800cc86:	4606      	mov	r6, r0
 800cc88:	460f      	mov	r7, r1
 800cc8a:	f7f3 ff85 	bl	8000b98 <__aeabi_d2iz>
 800cc8e:	2200      	movs	r2, #0
 800cc90:	9000      	str	r0, [sp, #0]
 800cc92:	2300      	movs	r3, #0
 800cc94:	4630      	mov	r0, r6
 800cc96:	4639      	mov	r1, r7
 800cc98:	f7f3 ff40 	bl	8000b1c <__aeabi_dcmplt>
 800cc9c:	b150      	cbz	r0, 800ccb4 <_dtoa_r+0x184>
 800cc9e:	9800      	ldr	r0, [sp, #0]
 800cca0:	f7f3 fc60 	bl	8000564 <__aeabi_i2d>
 800cca4:	4632      	mov	r2, r6
 800cca6:	463b      	mov	r3, r7
 800cca8:	f7f3 ff2e 	bl	8000b08 <__aeabi_dcmpeq>
 800ccac:	b910      	cbnz	r0, 800ccb4 <_dtoa_r+0x184>
 800ccae:	9b00      	ldr	r3, [sp, #0]
 800ccb0:	3b01      	subs	r3, #1
 800ccb2:	9300      	str	r3, [sp, #0]
 800ccb4:	9b00      	ldr	r3, [sp, #0]
 800ccb6:	2b16      	cmp	r3, #22
 800ccb8:	d85a      	bhi.n	800cd70 <_dtoa_r+0x240>
 800ccba:	9a00      	ldr	r2, [sp, #0]
 800ccbc:	4b57      	ldr	r3, [pc, #348]	; (800ce1c <_dtoa_r+0x2ec>)
 800ccbe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ccc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ccc6:	ec51 0b19 	vmov	r0, r1, d9
 800ccca:	f7f3 ff27 	bl	8000b1c <__aeabi_dcmplt>
 800ccce:	2800      	cmp	r0, #0
 800ccd0:	d050      	beq.n	800cd74 <_dtoa_r+0x244>
 800ccd2:	9b00      	ldr	r3, [sp, #0]
 800ccd4:	3b01      	subs	r3, #1
 800ccd6:	9300      	str	r3, [sp, #0]
 800ccd8:	2300      	movs	r3, #0
 800ccda:	930b      	str	r3, [sp, #44]	; 0x2c
 800ccdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ccde:	1b5d      	subs	r5, r3, r5
 800cce0:	1e6b      	subs	r3, r5, #1
 800cce2:	9305      	str	r3, [sp, #20]
 800cce4:	bf45      	ittet	mi
 800cce6:	f1c5 0301 	rsbmi	r3, r5, #1
 800ccea:	9304      	strmi	r3, [sp, #16]
 800ccec:	2300      	movpl	r3, #0
 800ccee:	2300      	movmi	r3, #0
 800ccf0:	bf4c      	ite	mi
 800ccf2:	9305      	strmi	r3, [sp, #20]
 800ccf4:	9304      	strpl	r3, [sp, #16]
 800ccf6:	9b00      	ldr	r3, [sp, #0]
 800ccf8:	2b00      	cmp	r3, #0
 800ccfa:	db3d      	blt.n	800cd78 <_dtoa_r+0x248>
 800ccfc:	9b05      	ldr	r3, [sp, #20]
 800ccfe:	9a00      	ldr	r2, [sp, #0]
 800cd00:	920a      	str	r2, [sp, #40]	; 0x28
 800cd02:	4413      	add	r3, r2
 800cd04:	9305      	str	r3, [sp, #20]
 800cd06:	2300      	movs	r3, #0
 800cd08:	9307      	str	r3, [sp, #28]
 800cd0a:	9b06      	ldr	r3, [sp, #24]
 800cd0c:	2b09      	cmp	r3, #9
 800cd0e:	f200 8089 	bhi.w	800ce24 <_dtoa_r+0x2f4>
 800cd12:	2b05      	cmp	r3, #5
 800cd14:	bfc4      	itt	gt
 800cd16:	3b04      	subgt	r3, #4
 800cd18:	9306      	strgt	r3, [sp, #24]
 800cd1a:	9b06      	ldr	r3, [sp, #24]
 800cd1c:	f1a3 0302 	sub.w	r3, r3, #2
 800cd20:	bfcc      	ite	gt
 800cd22:	2500      	movgt	r5, #0
 800cd24:	2501      	movle	r5, #1
 800cd26:	2b03      	cmp	r3, #3
 800cd28:	f200 8087 	bhi.w	800ce3a <_dtoa_r+0x30a>
 800cd2c:	e8df f003 	tbb	[pc, r3]
 800cd30:	59383a2d 	.word	0x59383a2d
 800cd34:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800cd38:	441d      	add	r5, r3
 800cd3a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800cd3e:	2b20      	cmp	r3, #32
 800cd40:	bfc1      	itttt	gt
 800cd42:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800cd46:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800cd4a:	fa0b f303 	lslgt.w	r3, fp, r3
 800cd4e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800cd52:	bfda      	itte	le
 800cd54:	f1c3 0320 	rsble	r3, r3, #32
 800cd58:	fa06 f003 	lslle.w	r0, r6, r3
 800cd5c:	4318      	orrgt	r0, r3
 800cd5e:	f7f3 fbf1 	bl	8000544 <__aeabi_ui2d>
 800cd62:	2301      	movs	r3, #1
 800cd64:	4606      	mov	r6, r0
 800cd66:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800cd6a:	3d01      	subs	r5, #1
 800cd6c:	930e      	str	r3, [sp, #56]	; 0x38
 800cd6e:	e76a      	b.n	800cc46 <_dtoa_r+0x116>
 800cd70:	2301      	movs	r3, #1
 800cd72:	e7b2      	b.n	800ccda <_dtoa_r+0x1aa>
 800cd74:	900b      	str	r0, [sp, #44]	; 0x2c
 800cd76:	e7b1      	b.n	800ccdc <_dtoa_r+0x1ac>
 800cd78:	9b04      	ldr	r3, [sp, #16]
 800cd7a:	9a00      	ldr	r2, [sp, #0]
 800cd7c:	1a9b      	subs	r3, r3, r2
 800cd7e:	9304      	str	r3, [sp, #16]
 800cd80:	4253      	negs	r3, r2
 800cd82:	9307      	str	r3, [sp, #28]
 800cd84:	2300      	movs	r3, #0
 800cd86:	930a      	str	r3, [sp, #40]	; 0x28
 800cd88:	e7bf      	b.n	800cd0a <_dtoa_r+0x1da>
 800cd8a:	2300      	movs	r3, #0
 800cd8c:	9308      	str	r3, [sp, #32]
 800cd8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd90:	2b00      	cmp	r3, #0
 800cd92:	dc55      	bgt.n	800ce40 <_dtoa_r+0x310>
 800cd94:	2301      	movs	r3, #1
 800cd96:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800cd9a:	461a      	mov	r2, r3
 800cd9c:	9209      	str	r2, [sp, #36]	; 0x24
 800cd9e:	e00c      	b.n	800cdba <_dtoa_r+0x28a>
 800cda0:	2301      	movs	r3, #1
 800cda2:	e7f3      	b.n	800cd8c <_dtoa_r+0x25c>
 800cda4:	2300      	movs	r3, #0
 800cda6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cda8:	9308      	str	r3, [sp, #32]
 800cdaa:	9b00      	ldr	r3, [sp, #0]
 800cdac:	4413      	add	r3, r2
 800cdae:	9302      	str	r3, [sp, #8]
 800cdb0:	3301      	adds	r3, #1
 800cdb2:	2b01      	cmp	r3, #1
 800cdb4:	9303      	str	r3, [sp, #12]
 800cdb6:	bfb8      	it	lt
 800cdb8:	2301      	movlt	r3, #1
 800cdba:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800cdbc:	2200      	movs	r2, #0
 800cdbe:	6042      	str	r2, [r0, #4]
 800cdc0:	2204      	movs	r2, #4
 800cdc2:	f102 0614 	add.w	r6, r2, #20
 800cdc6:	429e      	cmp	r6, r3
 800cdc8:	6841      	ldr	r1, [r0, #4]
 800cdca:	d93d      	bls.n	800ce48 <_dtoa_r+0x318>
 800cdcc:	4620      	mov	r0, r4
 800cdce:	f000 fcad 	bl	800d72c <_Balloc>
 800cdd2:	9001      	str	r0, [sp, #4]
 800cdd4:	2800      	cmp	r0, #0
 800cdd6:	d13b      	bne.n	800ce50 <_dtoa_r+0x320>
 800cdd8:	4b11      	ldr	r3, [pc, #68]	; (800ce20 <_dtoa_r+0x2f0>)
 800cdda:	4602      	mov	r2, r0
 800cddc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800cde0:	e6c0      	b.n	800cb64 <_dtoa_r+0x34>
 800cde2:	2301      	movs	r3, #1
 800cde4:	e7df      	b.n	800cda6 <_dtoa_r+0x276>
 800cde6:	bf00      	nop
 800cde8:	636f4361 	.word	0x636f4361
 800cdec:	3fd287a7 	.word	0x3fd287a7
 800cdf0:	8b60c8b3 	.word	0x8b60c8b3
 800cdf4:	3fc68a28 	.word	0x3fc68a28
 800cdf8:	509f79fb 	.word	0x509f79fb
 800cdfc:	3fd34413 	.word	0x3fd34413
 800ce00:	0807695d 	.word	0x0807695d
 800ce04:	08076974 	.word	0x08076974
 800ce08:	7ff00000 	.word	0x7ff00000
 800ce0c:	08076959 	.word	0x08076959
 800ce10:	08076950 	.word	0x08076950
 800ce14:	0807692d 	.word	0x0807692d
 800ce18:	3ff80000 	.word	0x3ff80000
 800ce1c:	08076a68 	.word	0x08076a68
 800ce20:	080769cf 	.word	0x080769cf
 800ce24:	2501      	movs	r5, #1
 800ce26:	2300      	movs	r3, #0
 800ce28:	9306      	str	r3, [sp, #24]
 800ce2a:	9508      	str	r5, [sp, #32]
 800ce2c:	f04f 33ff 	mov.w	r3, #4294967295
 800ce30:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800ce34:	2200      	movs	r2, #0
 800ce36:	2312      	movs	r3, #18
 800ce38:	e7b0      	b.n	800cd9c <_dtoa_r+0x26c>
 800ce3a:	2301      	movs	r3, #1
 800ce3c:	9308      	str	r3, [sp, #32]
 800ce3e:	e7f5      	b.n	800ce2c <_dtoa_r+0x2fc>
 800ce40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce42:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800ce46:	e7b8      	b.n	800cdba <_dtoa_r+0x28a>
 800ce48:	3101      	adds	r1, #1
 800ce4a:	6041      	str	r1, [r0, #4]
 800ce4c:	0052      	lsls	r2, r2, #1
 800ce4e:	e7b8      	b.n	800cdc2 <_dtoa_r+0x292>
 800ce50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ce52:	9a01      	ldr	r2, [sp, #4]
 800ce54:	601a      	str	r2, [r3, #0]
 800ce56:	9b03      	ldr	r3, [sp, #12]
 800ce58:	2b0e      	cmp	r3, #14
 800ce5a:	f200 809d 	bhi.w	800cf98 <_dtoa_r+0x468>
 800ce5e:	2d00      	cmp	r5, #0
 800ce60:	f000 809a 	beq.w	800cf98 <_dtoa_r+0x468>
 800ce64:	9b00      	ldr	r3, [sp, #0]
 800ce66:	2b00      	cmp	r3, #0
 800ce68:	dd32      	ble.n	800ced0 <_dtoa_r+0x3a0>
 800ce6a:	4ab7      	ldr	r2, [pc, #732]	; (800d148 <_dtoa_r+0x618>)
 800ce6c:	f003 030f 	and.w	r3, r3, #15
 800ce70:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ce74:	e9d3 8900 	ldrd	r8, r9, [r3]
 800ce78:	9b00      	ldr	r3, [sp, #0]
 800ce7a:	05d8      	lsls	r0, r3, #23
 800ce7c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800ce80:	d516      	bpl.n	800ceb0 <_dtoa_r+0x380>
 800ce82:	4bb2      	ldr	r3, [pc, #712]	; (800d14c <_dtoa_r+0x61c>)
 800ce84:	ec51 0b19 	vmov	r0, r1, d9
 800ce88:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ce8c:	f7f3 fcfe 	bl	800088c <__aeabi_ddiv>
 800ce90:	f007 070f 	and.w	r7, r7, #15
 800ce94:	4682      	mov	sl, r0
 800ce96:	468b      	mov	fp, r1
 800ce98:	2503      	movs	r5, #3
 800ce9a:	4eac      	ldr	r6, [pc, #688]	; (800d14c <_dtoa_r+0x61c>)
 800ce9c:	b957      	cbnz	r7, 800ceb4 <_dtoa_r+0x384>
 800ce9e:	4642      	mov	r2, r8
 800cea0:	464b      	mov	r3, r9
 800cea2:	4650      	mov	r0, sl
 800cea4:	4659      	mov	r1, fp
 800cea6:	f7f3 fcf1 	bl	800088c <__aeabi_ddiv>
 800ceaa:	4682      	mov	sl, r0
 800ceac:	468b      	mov	fp, r1
 800ceae:	e028      	b.n	800cf02 <_dtoa_r+0x3d2>
 800ceb0:	2502      	movs	r5, #2
 800ceb2:	e7f2      	b.n	800ce9a <_dtoa_r+0x36a>
 800ceb4:	07f9      	lsls	r1, r7, #31
 800ceb6:	d508      	bpl.n	800ceca <_dtoa_r+0x39a>
 800ceb8:	4640      	mov	r0, r8
 800ceba:	4649      	mov	r1, r9
 800cebc:	e9d6 2300 	ldrd	r2, r3, [r6]
 800cec0:	f7f3 fbba 	bl	8000638 <__aeabi_dmul>
 800cec4:	3501      	adds	r5, #1
 800cec6:	4680      	mov	r8, r0
 800cec8:	4689      	mov	r9, r1
 800ceca:	107f      	asrs	r7, r7, #1
 800cecc:	3608      	adds	r6, #8
 800cece:	e7e5      	b.n	800ce9c <_dtoa_r+0x36c>
 800ced0:	f000 809b 	beq.w	800d00a <_dtoa_r+0x4da>
 800ced4:	9b00      	ldr	r3, [sp, #0]
 800ced6:	4f9d      	ldr	r7, [pc, #628]	; (800d14c <_dtoa_r+0x61c>)
 800ced8:	425e      	negs	r6, r3
 800ceda:	4b9b      	ldr	r3, [pc, #620]	; (800d148 <_dtoa_r+0x618>)
 800cedc:	f006 020f 	and.w	r2, r6, #15
 800cee0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800cee4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cee8:	ec51 0b19 	vmov	r0, r1, d9
 800ceec:	f7f3 fba4 	bl	8000638 <__aeabi_dmul>
 800cef0:	1136      	asrs	r6, r6, #4
 800cef2:	4682      	mov	sl, r0
 800cef4:	468b      	mov	fp, r1
 800cef6:	2300      	movs	r3, #0
 800cef8:	2502      	movs	r5, #2
 800cefa:	2e00      	cmp	r6, #0
 800cefc:	d17a      	bne.n	800cff4 <_dtoa_r+0x4c4>
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	d1d3      	bne.n	800ceaa <_dtoa_r+0x37a>
 800cf02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800cf04:	2b00      	cmp	r3, #0
 800cf06:	f000 8082 	beq.w	800d00e <_dtoa_r+0x4de>
 800cf0a:	4b91      	ldr	r3, [pc, #580]	; (800d150 <_dtoa_r+0x620>)
 800cf0c:	2200      	movs	r2, #0
 800cf0e:	4650      	mov	r0, sl
 800cf10:	4659      	mov	r1, fp
 800cf12:	f7f3 fe03 	bl	8000b1c <__aeabi_dcmplt>
 800cf16:	2800      	cmp	r0, #0
 800cf18:	d079      	beq.n	800d00e <_dtoa_r+0x4de>
 800cf1a:	9b03      	ldr	r3, [sp, #12]
 800cf1c:	2b00      	cmp	r3, #0
 800cf1e:	d076      	beq.n	800d00e <_dtoa_r+0x4de>
 800cf20:	9b02      	ldr	r3, [sp, #8]
 800cf22:	2b00      	cmp	r3, #0
 800cf24:	dd36      	ble.n	800cf94 <_dtoa_r+0x464>
 800cf26:	9b00      	ldr	r3, [sp, #0]
 800cf28:	4650      	mov	r0, sl
 800cf2a:	4659      	mov	r1, fp
 800cf2c:	1e5f      	subs	r7, r3, #1
 800cf2e:	2200      	movs	r2, #0
 800cf30:	4b88      	ldr	r3, [pc, #544]	; (800d154 <_dtoa_r+0x624>)
 800cf32:	f7f3 fb81 	bl	8000638 <__aeabi_dmul>
 800cf36:	9e02      	ldr	r6, [sp, #8]
 800cf38:	4682      	mov	sl, r0
 800cf3a:	468b      	mov	fp, r1
 800cf3c:	3501      	adds	r5, #1
 800cf3e:	4628      	mov	r0, r5
 800cf40:	f7f3 fb10 	bl	8000564 <__aeabi_i2d>
 800cf44:	4652      	mov	r2, sl
 800cf46:	465b      	mov	r3, fp
 800cf48:	f7f3 fb76 	bl	8000638 <__aeabi_dmul>
 800cf4c:	4b82      	ldr	r3, [pc, #520]	; (800d158 <_dtoa_r+0x628>)
 800cf4e:	2200      	movs	r2, #0
 800cf50:	f7f3 f9bc 	bl	80002cc <__adddf3>
 800cf54:	46d0      	mov	r8, sl
 800cf56:	46d9      	mov	r9, fp
 800cf58:	4682      	mov	sl, r0
 800cf5a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800cf5e:	2e00      	cmp	r6, #0
 800cf60:	d158      	bne.n	800d014 <_dtoa_r+0x4e4>
 800cf62:	4b7e      	ldr	r3, [pc, #504]	; (800d15c <_dtoa_r+0x62c>)
 800cf64:	2200      	movs	r2, #0
 800cf66:	4640      	mov	r0, r8
 800cf68:	4649      	mov	r1, r9
 800cf6a:	f7f3 f9ad 	bl	80002c8 <__aeabi_dsub>
 800cf6e:	4652      	mov	r2, sl
 800cf70:	465b      	mov	r3, fp
 800cf72:	4680      	mov	r8, r0
 800cf74:	4689      	mov	r9, r1
 800cf76:	f7f3 fdef 	bl	8000b58 <__aeabi_dcmpgt>
 800cf7a:	2800      	cmp	r0, #0
 800cf7c:	f040 8295 	bne.w	800d4aa <_dtoa_r+0x97a>
 800cf80:	4652      	mov	r2, sl
 800cf82:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800cf86:	4640      	mov	r0, r8
 800cf88:	4649      	mov	r1, r9
 800cf8a:	f7f3 fdc7 	bl	8000b1c <__aeabi_dcmplt>
 800cf8e:	2800      	cmp	r0, #0
 800cf90:	f040 8289 	bne.w	800d4a6 <_dtoa_r+0x976>
 800cf94:	ec5b ab19 	vmov	sl, fp, d9
 800cf98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cf9a:	2b00      	cmp	r3, #0
 800cf9c:	f2c0 8148 	blt.w	800d230 <_dtoa_r+0x700>
 800cfa0:	9a00      	ldr	r2, [sp, #0]
 800cfa2:	2a0e      	cmp	r2, #14
 800cfa4:	f300 8144 	bgt.w	800d230 <_dtoa_r+0x700>
 800cfa8:	4b67      	ldr	r3, [pc, #412]	; (800d148 <_dtoa_r+0x618>)
 800cfaa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800cfae:	e9d3 8900 	ldrd	r8, r9, [r3]
 800cfb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cfb4:	2b00      	cmp	r3, #0
 800cfb6:	f280 80d5 	bge.w	800d164 <_dtoa_r+0x634>
 800cfba:	9b03      	ldr	r3, [sp, #12]
 800cfbc:	2b00      	cmp	r3, #0
 800cfbe:	f300 80d1 	bgt.w	800d164 <_dtoa_r+0x634>
 800cfc2:	f040 826f 	bne.w	800d4a4 <_dtoa_r+0x974>
 800cfc6:	4b65      	ldr	r3, [pc, #404]	; (800d15c <_dtoa_r+0x62c>)
 800cfc8:	2200      	movs	r2, #0
 800cfca:	4640      	mov	r0, r8
 800cfcc:	4649      	mov	r1, r9
 800cfce:	f7f3 fb33 	bl	8000638 <__aeabi_dmul>
 800cfd2:	4652      	mov	r2, sl
 800cfd4:	465b      	mov	r3, fp
 800cfd6:	f7f3 fdb5 	bl	8000b44 <__aeabi_dcmpge>
 800cfda:	9e03      	ldr	r6, [sp, #12]
 800cfdc:	4637      	mov	r7, r6
 800cfde:	2800      	cmp	r0, #0
 800cfe0:	f040 8245 	bne.w	800d46e <_dtoa_r+0x93e>
 800cfe4:	9d01      	ldr	r5, [sp, #4]
 800cfe6:	2331      	movs	r3, #49	; 0x31
 800cfe8:	f805 3b01 	strb.w	r3, [r5], #1
 800cfec:	9b00      	ldr	r3, [sp, #0]
 800cfee:	3301      	adds	r3, #1
 800cff0:	9300      	str	r3, [sp, #0]
 800cff2:	e240      	b.n	800d476 <_dtoa_r+0x946>
 800cff4:	07f2      	lsls	r2, r6, #31
 800cff6:	d505      	bpl.n	800d004 <_dtoa_r+0x4d4>
 800cff8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800cffc:	f7f3 fb1c 	bl	8000638 <__aeabi_dmul>
 800d000:	3501      	adds	r5, #1
 800d002:	2301      	movs	r3, #1
 800d004:	1076      	asrs	r6, r6, #1
 800d006:	3708      	adds	r7, #8
 800d008:	e777      	b.n	800cefa <_dtoa_r+0x3ca>
 800d00a:	2502      	movs	r5, #2
 800d00c:	e779      	b.n	800cf02 <_dtoa_r+0x3d2>
 800d00e:	9f00      	ldr	r7, [sp, #0]
 800d010:	9e03      	ldr	r6, [sp, #12]
 800d012:	e794      	b.n	800cf3e <_dtoa_r+0x40e>
 800d014:	9901      	ldr	r1, [sp, #4]
 800d016:	4b4c      	ldr	r3, [pc, #304]	; (800d148 <_dtoa_r+0x618>)
 800d018:	4431      	add	r1, r6
 800d01a:	910d      	str	r1, [sp, #52]	; 0x34
 800d01c:	9908      	ldr	r1, [sp, #32]
 800d01e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800d022:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d026:	2900      	cmp	r1, #0
 800d028:	d043      	beq.n	800d0b2 <_dtoa_r+0x582>
 800d02a:	494d      	ldr	r1, [pc, #308]	; (800d160 <_dtoa_r+0x630>)
 800d02c:	2000      	movs	r0, #0
 800d02e:	f7f3 fc2d 	bl	800088c <__aeabi_ddiv>
 800d032:	4652      	mov	r2, sl
 800d034:	465b      	mov	r3, fp
 800d036:	f7f3 f947 	bl	80002c8 <__aeabi_dsub>
 800d03a:	9d01      	ldr	r5, [sp, #4]
 800d03c:	4682      	mov	sl, r0
 800d03e:	468b      	mov	fp, r1
 800d040:	4649      	mov	r1, r9
 800d042:	4640      	mov	r0, r8
 800d044:	f7f3 fda8 	bl	8000b98 <__aeabi_d2iz>
 800d048:	4606      	mov	r6, r0
 800d04a:	f7f3 fa8b 	bl	8000564 <__aeabi_i2d>
 800d04e:	4602      	mov	r2, r0
 800d050:	460b      	mov	r3, r1
 800d052:	4640      	mov	r0, r8
 800d054:	4649      	mov	r1, r9
 800d056:	f7f3 f937 	bl	80002c8 <__aeabi_dsub>
 800d05a:	3630      	adds	r6, #48	; 0x30
 800d05c:	f805 6b01 	strb.w	r6, [r5], #1
 800d060:	4652      	mov	r2, sl
 800d062:	465b      	mov	r3, fp
 800d064:	4680      	mov	r8, r0
 800d066:	4689      	mov	r9, r1
 800d068:	f7f3 fd58 	bl	8000b1c <__aeabi_dcmplt>
 800d06c:	2800      	cmp	r0, #0
 800d06e:	d163      	bne.n	800d138 <_dtoa_r+0x608>
 800d070:	4642      	mov	r2, r8
 800d072:	464b      	mov	r3, r9
 800d074:	4936      	ldr	r1, [pc, #216]	; (800d150 <_dtoa_r+0x620>)
 800d076:	2000      	movs	r0, #0
 800d078:	f7f3 f926 	bl	80002c8 <__aeabi_dsub>
 800d07c:	4652      	mov	r2, sl
 800d07e:	465b      	mov	r3, fp
 800d080:	f7f3 fd4c 	bl	8000b1c <__aeabi_dcmplt>
 800d084:	2800      	cmp	r0, #0
 800d086:	f040 80b5 	bne.w	800d1f4 <_dtoa_r+0x6c4>
 800d08a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d08c:	429d      	cmp	r5, r3
 800d08e:	d081      	beq.n	800cf94 <_dtoa_r+0x464>
 800d090:	4b30      	ldr	r3, [pc, #192]	; (800d154 <_dtoa_r+0x624>)
 800d092:	2200      	movs	r2, #0
 800d094:	4650      	mov	r0, sl
 800d096:	4659      	mov	r1, fp
 800d098:	f7f3 face 	bl	8000638 <__aeabi_dmul>
 800d09c:	4b2d      	ldr	r3, [pc, #180]	; (800d154 <_dtoa_r+0x624>)
 800d09e:	4682      	mov	sl, r0
 800d0a0:	468b      	mov	fp, r1
 800d0a2:	4640      	mov	r0, r8
 800d0a4:	4649      	mov	r1, r9
 800d0a6:	2200      	movs	r2, #0
 800d0a8:	f7f3 fac6 	bl	8000638 <__aeabi_dmul>
 800d0ac:	4680      	mov	r8, r0
 800d0ae:	4689      	mov	r9, r1
 800d0b0:	e7c6      	b.n	800d040 <_dtoa_r+0x510>
 800d0b2:	4650      	mov	r0, sl
 800d0b4:	4659      	mov	r1, fp
 800d0b6:	f7f3 fabf 	bl	8000638 <__aeabi_dmul>
 800d0ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0bc:	9d01      	ldr	r5, [sp, #4]
 800d0be:	930f      	str	r3, [sp, #60]	; 0x3c
 800d0c0:	4682      	mov	sl, r0
 800d0c2:	468b      	mov	fp, r1
 800d0c4:	4649      	mov	r1, r9
 800d0c6:	4640      	mov	r0, r8
 800d0c8:	f7f3 fd66 	bl	8000b98 <__aeabi_d2iz>
 800d0cc:	4606      	mov	r6, r0
 800d0ce:	f7f3 fa49 	bl	8000564 <__aeabi_i2d>
 800d0d2:	3630      	adds	r6, #48	; 0x30
 800d0d4:	4602      	mov	r2, r0
 800d0d6:	460b      	mov	r3, r1
 800d0d8:	4640      	mov	r0, r8
 800d0da:	4649      	mov	r1, r9
 800d0dc:	f7f3 f8f4 	bl	80002c8 <__aeabi_dsub>
 800d0e0:	f805 6b01 	strb.w	r6, [r5], #1
 800d0e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d0e6:	429d      	cmp	r5, r3
 800d0e8:	4680      	mov	r8, r0
 800d0ea:	4689      	mov	r9, r1
 800d0ec:	f04f 0200 	mov.w	r2, #0
 800d0f0:	d124      	bne.n	800d13c <_dtoa_r+0x60c>
 800d0f2:	4b1b      	ldr	r3, [pc, #108]	; (800d160 <_dtoa_r+0x630>)
 800d0f4:	4650      	mov	r0, sl
 800d0f6:	4659      	mov	r1, fp
 800d0f8:	f7f3 f8e8 	bl	80002cc <__adddf3>
 800d0fc:	4602      	mov	r2, r0
 800d0fe:	460b      	mov	r3, r1
 800d100:	4640      	mov	r0, r8
 800d102:	4649      	mov	r1, r9
 800d104:	f7f3 fd28 	bl	8000b58 <__aeabi_dcmpgt>
 800d108:	2800      	cmp	r0, #0
 800d10a:	d173      	bne.n	800d1f4 <_dtoa_r+0x6c4>
 800d10c:	4652      	mov	r2, sl
 800d10e:	465b      	mov	r3, fp
 800d110:	4913      	ldr	r1, [pc, #76]	; (800d160 <_dtoa_r+0x630>)
 800d112:	2000      	movs	r0, #0
 800d114:	f7f3 f8d8 	bl	80002c8 <__aeabi_dsub>
 800d118:	4602      	mov	r2, r0
 800d11a:	460b      	mov	r3, r1
 800d11c:	4640      	mov	r0, r8
 800d11e:	4649      	mov	r1, r9
 800d120:	f7f3 fcfc 	bl	8000b1c <__aeabi_dcmplt>
 800d124:	2800      	cmp	r0, #0
 800d126:	f43f af35 	beq.w	800cf94 <_dtoa_r+0x464>
 800d12a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800d12c:	1e6b      	subs	r3, r5, #1
 800d12e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d130:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800d134:	2b30      	cmp	r3, #48	; 0x30
 800d136:	d0f8      	beq.n	800d12a <_dtoa_r+0x5fa>
 800d138:	9700      	str	r7, [sp, #0]
 800d13a:	e049      	b.n	800d1d0 <_dtoa_r+0x6a0>
 800d13c:	4b05      	ldr	r3, [pc, #20]	; (800d154 <_dtoa_r+0x624>)
 800d13e:	f7f3 fa7b 	bl	8000638 <__aeabi_dmul>
 800d142:	4680      	mov	r8, r0
 800d144:	4689      	mov	r9, r1
 800d146:	e7bd      	b.n	800d0c4 <_dtoa_r+0x594>
 800d148:	08076a68 	.word	0x08076a68
 800d14c:	08076a40 	.word	0x08076a40
 800d150:	3ff00000 	.word	0x3ff00000
 800d154:	40240000 	.word	0x40240000
 800d158:	401c0000 	.word	0x401c0000
 800d15c:	40140000 	.word	0x40140000
 800d160:	3fe00000 	.word	0x3fe00000
 800d164:	9d01      	ldr	r5, [sp, #4]
 800d166:	4656      	mov	r6, sl
 800d168:	465f      	mov	r7, fp
 800d16a:	4642      	mov	r2, r8
 800d16c:	464b      	mov	r3, r9
 800d16e:	4630      	mov	r0, r6
 800d170:	4639      	mov	r1, r7
 800d172:	f7f3 fb8b 	bl	800088c <__aeabi_ddiv>
 800d176:	f7f3 fd0f 	bl	8000b98 <__aeabi_d2iz>
 800d17a:	4682      	mov	sl, r0
 800d17c:	f7f3 f9f2 	bl	8000564 <__aeabi_i2d>
 800d180:	4642      	mov	r2, r8
 800d182:	464b      	mov	r3, r9
 800d184:	f7f3 fa58 	bl	8000638 <__aeabi_dmul>
 800d188:	4602      	mov	r2, r0
 800d18a:	460b      	mov	r3, r1
 800d18c:	4630      	mov	r0, r6
 800d18e:	4639      	mov	r1, r7
 800d190:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800d194:	f7f3 f898 	bl	80002c8 <__aeabi_dsub>
 800d198:	f805 6b01 	strb.w	r6, [r5], #1
 800d19c:	9e01      	ldr	r6, [sp, #4]
 800d19e:	9f03      	ldr	r7, [sp, #12]
 800d1a0:	1bae      	subs	r6, r5, r6
 800d1a2:	42b7      	cmp	r7, r6
 800d1a4:	4602      	mov	r2, r0
 800d1a6:	460b      	mov	r3, r1
 800d1a8:	d135      	bne.n	800d216 <_dtoa_r+0x6e6>
 800d1aa:	f7f3 f88f 	bl	80002cc <__adddf3>
 800d1ae:	4642      	mov	r2, r8
 800d1b0:	464b      	mov	r3, r9
 800d1b2:	4606      	mov	r6, r0
 800d1b4:	460f      	mov	r7, r1
 800d1b6:	f7f3 fccf 	bl	8000b58 <__aeabi_dcmpgt>
 800d1ba:	b9d0      	cbnz	r0, 800d1f2 <_dtoa_r+0x6c2>
 800d1bc:	4642      	mov	r2, r8
 800d1be:	464b      	mov	r3, r9
 800d1c0:	4630      	mov	r0, r6
 800d1c2:	4639      	mov	r1, r7
 800d1c4:	f7f3 fca0 	bl	8000b08 <__aeabi_dcmpeq>
 800d1c8:	b110      	cbz	r0, 800d1d0 <_dtoa_r+0x6a0>
 800d1ca:	f01a 0f01 	tst.w	sl, #1
 800d1ce:	d110      	bne.n	800d1f2 <_dtoa_r+0x6c2>
 800d1d0:	4620      	mov	r0, r4
 800d1d2:	ee18 1a10 	vmov	r1, s16
 800d1d6:	f000 fae9 	bl	800d7ac <_Bfree>
 800d1da:	2300      	movs	r3, #0
 800d1dc:	9800      	ldr	r0, [sp, #0]
 800d1de:	702b      	strb	r3, [r5, #0]
 800d1e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d1e2:	3001      	adds	r0, #1
 800d1e4:	6018      	str	r0, [r3, #0]
 800d1e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d1e8:	2b00      	cmp	r3, #0
 800d1ea:	f43f acf1 	beq.w	800cbd0 <_dtoa_r+0xa0>
 800d1ee:	601d      	str	r5, [r3, #0]
 800d1f0:	e4ee      	b.n	800cbd0 <_dtoa_r+0xa0>
 800d1f2:	9f00      	ldr	r7, [sp, #0]
 800d1f4:	462b      	mov	r3, r5
 800d1f6:	461d      	mov	r5, r3
 800d1f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d1fc:	2a39      	cmp	r2, #57	; 0x39
 800d1fe:	d106      	bne.n	800d20e <_dtoa_r+0x6de>
 800d200:	9a01      	ldr	r2, [sp, #4]
 800d202:	429a      	cmp	r2, r3
 800d204:	d1f7      	bne.n	800d1f6 <_dtoa_r+0x6c6>
 800d206:	9901      	ldr	r1, [sp, #4]
 800d208:	2230      	movs	r2, #48	; 0x30
 800d20a:	3701      	adds	r7, #1
 800d20c:	700a      	strb	r2, [r1, #0]
 800d20e:	781a      	ldrb	r2, [r3, #0]
 800d210:	3201      	adds	r2, #1
 800d212:	701a      	strb	r2, [r3, #0]
 800d214:	e790      	b.n	800d138 <_dtoa_r+0x608>
 800d216:	4ba6      	ldr	r3, [pc, #664]	; (800d4b0 <_dtoa_r+0x980>)
 800d218:	2200      	movs	r2, #0
 800d21a:	f7f3 fa0d 	bl	8000638 <__aeabi_dmul>
 800d21e:	2200      	movs	r2, #0
 800d220:	2300      	movs	r3, #0
 800d222:	4606      	mov	r6, r0
 800d224:	460f      	mov	r7, r1
 800d226:	f7f3 fc6f 	bl	8000b08 <__aeabi_dcmpeq>
 800d22a:	2800      	cmp	r0, #0
 800d22c:	d09d      	beq.n	800d16a <_dtoa_r+0x63a>
 800d22e:	e7cf      	b.n	800d1d0 <_dtoa_r+0x6a0>
 800d230:	9a08      	ldr	r2, [sp, #32]
 800d232:	2a00      	cmp	r2, #0
 800d234:	f000 80d7 	beq.w	800d3e6 <_dtoa_r+0x8b6>
 800d238:	9a06      	ldr	r2, [sp, #24]
 800d23a:	2a01      	cmp	r2, #1
 800d23c:	f300 80ba 	bgt.w	800d3b4 <_dtoa_r+0x884>
 800d240:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d242:	2a00      	cmp	r2, #0
 800d244:	f000 80b2 	beq.w	800d3ac <_dtoa_r+0x87c>
 800d248:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d24c:	9e07      	ldr	r6, [sp, #28]
 800d24e:	9d04      	ldr	r5, [sp, #16]
 800d250:	9a04      	ldr	r2, [sp, #16]
 800d252:	441a      	add	r2, r3
 800d254:	9204      	str	r2, [sp, #16]
 800d256:	9a05      	ldr	r2, [sp, #20]
 800d258:	2101      	movs	r1, #1
 800d25a:	441a      	add	r2, r3
 800d25c:	4620      	mov	r0, r4
 800d25e:	9205      	str	r2, [sp, #20]
 800d260:	f000 fb5c 	bl	800d91c <__i2b>
 800d264:	4607      	mov	r7, r0
 800d266:	2d00      	cmp	r5, #0
 800d268:	dd0c      	ble.n	800d284 <_dtoa_r+0x754>
 800d26a:	9b05      	ldr	r3, [sp, #20]
 800d26c:	2b00      	cmp	r3, #0
 800d26e:	dd09      	ble.n	800d284 <_dtoa_r+0x754>
 800d270:	42ab      	cmp	r3, r5
 800d272:	9a04      	ldr	r2, [sp, #16]
 800d274:	bfa8      	it	ge
 800d276:	462b      	movge	r3, r5
 800d278:	1ad2      	subs	r2, r2, r3
 800d27a:	9204      	str	r2, [sp, #16]
 800d27c:	9a05      	ldr	r2, [sp, #20]
 800d27e:	1aed      	subs	r5, r5, r3
 800d280:	1ad3      	subs	r3, r2, r3
 800d282:	9305      	str	r3, [sp, #20]
 800d284:	9b07      	ldr	r3, [sp, #28]
 800d286:	b31b      	cbz	r3, 800d2d0 <_dtoa_r+0x7a0>
 800d288:	9b08      	ldr	r3, [sp, #32]
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	f000 80af 	beq.w	800d3ee <_dtoa_r+0x8be>
 800d290:	2e00      	cmp	r6, #0
 800d292:	dd13      	ble.n	800d2bc <_dtoa_r+0x78c>
 800d294:	4639      	mov	r1, r7
 800d296:	4632      	mov	r2, r6
 800d298:	4620      	mov	r0, r4
 800d29a:	f000 fbff 	bl	800da9c <__pow5mult>
 800d29e:	ee18 2a10 	vmov	r2, s16
 800d2a2:	4601      	mov	r1, r0
 800d2a4:	4607      	mov	r7, r0
 800d2a6:	4620      	mov	r0, r4
 800d2a8:	f000 fb4e 	bl	800d948 <__multiply>
 800d2ac:	ee18 1a10 	vmov	r1, s16
 800d2b0:	4680      	mov	r8, r0
 800d2b2:	4620      	mov	r0, r4
 800d2b4:	f000 fa7a 	bl	800d7ac <_Bfree>
 800d2b8:	ee08 8a10 	vmov	s16, r8
 800d2bc:	9b07      	ldr	r3, [sp, #28]
 800d2be:	1b9a      	subs	r2, r3, r6
 800d2c0:	d006      	beq.n	800d2d0 <_dtoa_r+0x7a0>
 800d2c2:	ee18 1a10 	vmov	r1, s16
 800d2c6:	4620      	mov	r0, r4
 800d2c8:	f000 fbe8 	bl	800da9c <__pow5mult>
 800d2cc:	ee08 0a10 	vmov	s16, r0
 800d2d0:	2101      	movs	r1, #1
 800d2d2:	4620      	mov	r0, r4
 800d2d4:	f000 fb22 	bl	800d91c <__i2b>
 800d2d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2da:	2b00      	cmp	r3, #0
 800d2dc:	4606      	mov	r6, r0
 800d2de:	f340 8088 	ble.w	800d3f2 <_dtoa_r+0x8c2>
 800d2e2:	461a      	mov	r2, r3
 800d2e4:	4601      	mov	r1, r0
 800d2e6:	4620      	mov	r0, r4
 800d2e8:	f000 fbd8 	bl	800da9c <__pow5mult>
 800d2ec:	9b06      	ldr	r3, [sp, #24]
 800d2ee:	2b01      	cmp	r3, #1
 800d2f0:	4606      	mov	r6, r0
 800d2f2:	f340 8081 	ble.w	800d3f8 <_dtoa_r+0x8c8>
 800d2f6:	f04f 0800 	mov.w	r8, #0
 800d2fa:	6933      	ldr	r3, [r6, #16]
 800d2fc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800d300:	6918      	ldr	r0, [r3, #16]
 800d302:	f000 fabb 	bl	800d87c <__hi0bits>
 800d306:	f1c0 0020 	rsb	r0, r0, #32
 800d30a:	9b05      	ldr	r3, [sp, #20]
 800d30c:	4418      	add	r0, r3
 800d30e:	f010 001f 	ands.w	r0, r0, #31
 800d312:	f000 8092 	beq.w	800d43a <_dtoa_r+0x90a>
 800d316:	f1c0 0320 	rsb	r3, r0, #32
 800d31a:	2b04      	cmp	r3, #4
 800d31c:	f340 808a 	ble.w	800d434 <_dtoa_r+0x904>
 800d320:	f1c0 001c 	rsb	r0, r0, #28
 800d324:	9b04      	ldr	r3, [sp, #16]
 800d326:	4403      	add	r3, r0
 800d328:	9304      	str	r3, [sp, #16]
 800d32a:	9b05      	ldr	r3, [sp, #20]
 800d32c:	4403      	add	r3, r0
 800d32e:	4405      	add	r5, r0
 800d330:	9305      	str	r3, [sp, #20]
 800d332:	9b04      	ldr	r3, [sp, #16]
 800d334:	2b00      	cmp	r3, #0
 800d336:	dd07      	ble.n	800d348 <_dtoa_r+0x818>
 800d338:	ee18 1a10 	vmov	r1, s16
 800d33c:	461a      	mov	r2, r3
 800d33e:	4620      	mov	r0, r4
 800d340:	f000 fc06 	bl	800db50 <__lshift>
 800d344:	ee08 0a10 	vmov	s16, r0
 800d348:	9b05      	ldr	r3, [sp, #20]
 800d34a:	2b00      	cmp	r3, #0
 800d34c:	dd05      	ble.n	800d35a <_dtoa_r+0x82a>
 800d34e:	4631      	mov	r1, r6
 800d350:	461a      	mov	r2, r3
 800d352:	4620      	mov	r0, r4
 800d354:	f000 fbfc 	bl	800db50 <__lshift>
 800d358:	4606      	mov	r6, r0
 800d35a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d35c:	2b00      	cmp	r3, #0
 800d35e:	d06e      	beq.n	800d43e <_dtoa_r+0x90e>
 800d360:	ee18 0a10 	vmov	r0, s16
 800d364:	4631      	mov	r1, r6
 800d366:	f000 fc63 	bl	800dc30 <__mcmp>
 800d36a:	2800      	cmp	r0, #0
 800d36c:	da67      	bge.n	800d43e <_dtoa_r+0x90e>
 800d36e:	9b00      	ldr	r3, [sp, #0]
 800d370:	3b01      	subs	r3, #1
 800d372:	ee18 1a10 	vmov	r1, s16
 800d376:	9300      	str	r3, [sp, #0]
 800d378:	220a      	movs	r2, #10
 800d37a:	2300      	movs	r3, #0
 800d37c:	4620      	mov	r0, r4
 800d37e:	f000 fa37 	bl	800d7f0 <__multadd>
 800d382:	9b08      	ldr	r3, [sp, #32]
 800d384:	ee08 0a10 	vmov	s16, r0
 800d388:	2b00      	cmp	r3, #0
 800d38a:	f000 81b1 	beq.w	800d6f0 <_dtoa_r+0xbc0>
 800d38e:	2300      	movs	r3, #0
 800d390:	4639      	mov	r1, r7
 800d392:	220a      	movs	r2, #10
 800d394:	4620      	mov	r0, r4
 800d396:	f000 fa2b 	bl	800d7f0 <__multadd>
 800d39a:	9b02      	ldr	r3, [sp, #8]
 800d39c:	2b00      	cmp	r3, #0
 800d39e:	4607      	mov	r7, r0
 800d3a0:	f300 808e 	bgt.w	800d4c0 <_dtoa_r+0x990>
 800d3a4:	9b06      	ldr	r3, [sp, #24]
 800d3a6:	2b02      	cmp	r3, #2
 800d3a8:	dc51      	bgt.n	800d44e <_dtoa_r+0x91e>
 800d3aa:	e089      	b.n	800d4c0 <_dtoa_r+0x990>
 800d3ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d3ae:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d3b2:	e74b      	b.n	800d24c <_dtoa_r+0x71c>
 800d3b4:	9b03      	ldr	r3, [sp, #12]
 800d3b6:	1e5e      	subs	r6, r3, #1
 800d3b8:	9b07      	ldr	r3, [sp, #28]
 800d3ba:	42b3      	cmp	r3, r6
 800d3bc:	bfbf      	itttt	lt
 800d3be:	9b07      	ldrlt	r3, [sp, #28]
 800d3c0:	9607      	strlt	r6, [sp, #28]
 800d3c2:	1af2      	sublt	r2, r6, r3
 800d3c4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d3c6:	bfb6      	itet	lt
 800d3c8:	189b      	addlt	r3, r3, r2
 800d3ca:	1b9e      	subge	r6, r3, r6
 800d3cc:	930a      	strlt	r3, [sp, #40]	; 0x28
 800d3ce:	9b03      	ldr	r3, [sp, #12]
 800d3d0:	bfb8      	it	lt
 800d3d2:	2600      	movlt	r6, #0
 800d3d4:	2b00      	cmp	r3, #0
 800d3d6:	bfb7      	itett	lt
 800d3d8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800d3dc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800d3e0:	1a9d      	sublt	r5, r3, r2
 800d3e2:	2300      	movlt	r3, #0
 800d3e4:	e734      	b.n	800d250 <_dtoa_r+0x720>
 800d3e6:	9e07      	ldr	r6, [sp, #28]
 800d3e8:	9d04      	ldr	r5, [sp, #16]
 800d3ea:	9f08      	ldr	r7, [sp, #32]
 800d3ec:	e73b      	b.n	800d266 <_dtoa_r+0x736>
 800d3ee:	9a07      	ldr	r2, [sp, #28]
 800d3f0:	e767      	b.n	800d2c2 <_dtoa_r+0x792>
 800d3f2:	9b06      	ldr	r3, [sp, #24]
 800d3f4:	2b01      	cmp	r3, #1
 800d3f6:	dc18      	bgt.n	800d42a <_dtoa_r+0x8fa>
 800d3f8:	f1ba 0f00 	cmp.w	sl, #0
 800d3fc:	d115      	bne.n	800d42a <_dtoa_r+0x8fa>
 800d3fe:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d402:	b993      	cbnz	r3, 800d42a <_dtoa_r+0x8fa>
 800d404:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800d408:	0d1b      	lsrs	r3, r3, #20
 800d40a:	051b      	lsls	r3, r3, #20
 800d40c:	b183      	cbz	r3, 800d430 <_dtoa_r+0x900>
 800d40e:	9b04      	ldr	r3, [sp, #16]
 800d410:	3301      	adds	r3, #1
 800d412:	9304      	str	r3, [sp, #16]
 800d414:	9b05      	ldr	r3, [sp, #20]
 800d416:	3301      	adds	r3, #1
 800d418:	9305      	str	r3, [sp, #20]
 800d41a:	f04f 0801 	mov.w	r8, #1
 800d41e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d420:	2b00      	cmp	r3, #0
 800d422:	f47f af6a 	bne.w	800d2fa <_dtoa_r+0x7ca>
 800d426:	2001      	movs	r0, #1
 800d428:	e76f      	b.n	800d30a <_dtoa_r+0x7da>
 800d42a:	f04f 0800 	mov.w	r8, #0
 800d42e:	e7f6      	b.n	800d41e <_dtoa_r+0x8ee>
 800d430:	4698      	mov	r8, r3
 800d432:	e7f4      	b.n	800d41e <_dtoa_r+0x8ee>
 800d434:	f43f af7d 	beq.w	800d332 <_dtoa_r+0x802>
 800d438:	4618      	mov	r0, r3
 800d43a:	301c      	adds	r0, #28
 800d43c:	e772      	b.n	800d324 <_dtoa_r+0x7f4>
 800d43e:	9b03      	ldr	r3, [sp, #12]
 800d440:	2b00      	cmp	r3, #0
 800d442:	dc37      	bgt.n	800d4b4 <_dtoa_r+0x984>
 800d444:	9b06      	ldr	r3, [sp, #24]
 800d446:	2b02      	cmp	r3, #2
 800d448:	dd34      	ble.n	800d4b4 <_dtoa_r+0x984>
 800d44a:	9b03      	ldr	r3, [sp, #12]
 800d44c:	9302      	str	r3, [sp, #8]
 800d44e:	9b02      	ldr	r3, [sp, #8]
 800d450:	b96b      	cbnz	r3, 800d46e <_dtoa_r+0x93e>
 800d452:	4631      	mov	r1, r6
 800d454:	2205      	movs	r2, #5
 800d456:	4620      	mov	r0, r4
 800d458:	f000 f9ca 	bl	800d7f0 <__multadd>
 800d45c:	4601      	mov	r1, r0
 800d45e:	4606      	mov	r6, r0
 800d460:	ee18 0a10 	vmov	r0, s16
 800d464:	f000 fbe4 	bl	800dc30 <__mcmp>
 800d468:	2800      	cmp	r0, #0
 800d46a:	f73f adbb 	bgt.w	800cfe4 <_dtoa_r+0x4b4>
 800d46e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d470:	9d01      	ldr	r5, [sp, #4]
 800d472:	43db      	mvns	r3, r3
 800d474:	9300      	str	r3, [sp, #0]
 800d476:	f04f 0800 	mov.w	r8, #0
 800d47a:	4631      	mov	r1, r6
 800d47c:	4620      	mov	r0, r4
 800d47e:	f000 f995 	bl	800d7ac <_Bfree>
 800d482:	2f00      	cmp	r7, #0
 800d484:	f43f aea4 	beq.w	800d1d0 <_dtoa_r+0x6a0>
 800d488:	f1b8 0f00 	cmp.w	r8, #0
 800d48c:	d005      	beq.n	800d49a <_dtoa_r+0x96a>
 800d48e:	45b8      	cmp	r8, r7
 800d490:	d003      	beq.n	800d49a <_dtoa_r+0x96a>
 800d492:	4641      	mov	r1, r8
 800d494:	4620      	mov	r0, r4
 800d496:	f000 f989 	bl	800d7ac <_Bfree>
 800d49a:	4639      	mov	r1, r7
 800d49c:	4620      	mov	r0, r4
 800d49e:	f000 f985 	bl	800d7ac <_Bfree>
 800d4a2:	e695      	b.n	800d1d0 <_dtoa_r+0x6a0>
 800d4a4:	2600      	movs	r6, #0
 800d4a6:	4637      	mov	r7, r6
 800d4a8:	e7e1      	b.n	800d46e <_dtoa_r+0x93e>
 800d4aa:	9700      	str	r7, [sp, #0]
 800d4ac:	4637      	mov	r7, r6
 800d4ae:	e599      	b.n	800cfe4 <_dtoa_r+0x4b4>
 800d4b0:	40240000 	.word	0x40240000
 800d4b4:	9b08      	ldr	r3, [sp, #32]
 800d4b6:	2b00      	cmp	r3, #0
 800d4b8:	f000 80ca 	beq.w	800d650 <_dtoa_r+0xb20>
 800d4bc:	9b03      	ldr	r3, [sp, #12]
 800d4be:	9302      	str	r3, [sp, #8]
 800d4c0:	2d00      	cmp	r5, #0
 800d4c2:	dd05      	ble.n	800d4d0 <_dtoa_r+0x9a0>
 800d4c4:	4639      	mov	r1, r7
 800d4c6:	462a      	mov	r2, r5
 800d4c8:	4620      	mov	r0, r4
 800d4ca:	f000 fb41 	bl	800db50 <__lshift>
 800d4ce:	4607      	mov	r7, r0
 800d4d0:	f1b8 0f00 	cmp.w	r8, #0
 800d4d4:	d05b      	beq.n	800d58e <_dtoa_r+0xa5e>
 800d4d6:	6879      	ldr	r1, [r7, #4]
 800d4d8:	4620      	mov	r0, r4
 800d4da:	f000 f927 	bl	800d72c <_Balloc>
 800d4de:	4605      	mov	r5, r0
 800d4e0:	b928      	cbnz	r0, 800d4ee <_dtoa_r+0x9be>
 800d4e2:	4b87      	ldr	r3, [pc, #540]	; (800d700 <_dtoa_r+0xbd0>)
 800d4e4:	4602      	mov	r2, r0
 800d4e6:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d4ea:	f7ff bb3b 	b.w	800cb64 <_dtoa_r+0x34>
 800d4ee:	693a      	ldr	r2, [r7, #16]
 800d4f0:	3202      	adds	r2, #2
 800d4f2:	0092      	lsls	r2, r2, #2
 800d4f4:	f107 010c 	add.w	r1, r7, #12
 800d4f8:	300c      	adds	r0, #12
 800d4fa:	f7fe fcfd 	bl	800bef8 <memcpy>
 800d4fe:	2201      	movs	r2, #1
 800d500:	4629      	mov	r1, r5
 800d502:	4620      	mov	r0, r4
 800d504:	f000 fb24 	bl	800db50 <__lshift>
 800d508:	9b01      	ldr	r3, [sp, #4]
 800d50a:	f103 0901 	add.w	r9, r3, #1
 800d50e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800d512:	4413      	add	r3, r2
 800d514:	9305      	str	r3, [sp, #20]
 800d516:	f00a 0301 	and.w	r3, sl, #1
 800d51a:	46b8      	mov	r8, r7
 800d51c:	9304      	str	r3, [sp, #16]
 800d51e:	4607      	mov	r7, r0
 800d520:	4631      	mov	r1, r6
 800d522:	ee18 0a10 	vmov	r0, s16
 800d526:	f7ff fa77 	bl	800ca18 <quorem>
 800d52a:	4641      	mov	r1, r8
 800d52c:	9002      	str	r0, [sp, #8]
 800d52e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d532:	ee18 0a10 	vmov	r0, s16
 800d536:	f000 fb7b 	bl	800dc30 <__mcmp>
 800d53a:	463a      	mov	r2, r7
 800d53c:	9003      	str	r0, [sp, #12]
 800d53e:	4631      	mov	r1, r6
 800d540:	4620      	mov	r0, r4
 800d542:	f000 fb91 	bl	800dc68 <__mdiff>
 800d546:	68c2      	ldr	r2, [r0, #12]
 800d548:	f109 3bff 	add.w	fp, r9, #4294967295
 800d54c:	4605      	mov	r5, r0
 800d54e:	bb02      	cbnz	r2, 800d592 <_dtoa_r+0xa62>
 800d550:	4601      	mov	r1, r0
 800d552:	ee18 0a10 	vmov	r0, s16
 800d556:	f000 fb6b 	bl	800dc30 <__mcmp>
 800d55a:	4602      	mov	r2, r0
 800d55c:	4629      	mov	r1, r5
 800d55e:	4620      	mov	r0, r4
 800d560:	9207      	str	r2, [sp, #28]
 800d562:	f000 f923 	bl	800d7ac <_Bfree>
 800d566:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d56a:	ea43 0102 	orr.w	r1, r3, r2
 800d56e:	9b04      	ldr	r3, [sp, #16]
 800d570:	430b      	orrs	r3, r1
 800d572:	464d      	mov	r5, r9
 800d574:	d10f      	bne.n	800d596 <_dtoa_r+0xa66>
 800d576:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d57a:	d02a      	beq.n	800d5d2 <_dtoa_r+0xaa2>
 800d57c:	9b03      	ldr	r3, [sp, #12]
 800d57e:	2b00      	cmp	r3, #0
 800d580:	dd02      	ble.n	800d588 <_dtoa_r+0xa58>
 800d582:	9b02      	ldr	r3, [sp, #8]
 800d584:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800d588:	f88b a000 	strb.w	sl, [fp]
 800d58c:	e775      	b.n	800d47a <_dtoa_r+0x94a>
 800d58e:	4638      	mov	r0, r7
 800d590:	e7ba      	b.n	800d508 <_dtoa_r+0x9d8>
 800d592:	2201      	movs	r2, #1
 800d594:	e7e2      	b.n	800d55c <_dtoa_r+0xa2c>
 800d596:	9b03      	ldr	r3, [sp, #12]
 800d598:	2b00      	cmp	r3, #0
 800d59a:	db04      	blt.n	800d5a6 <_dtoa_r+0xa76>
 800d59c:	9906      	ldr	r1, [sp, #24]
 800d59e:	430b      	orrs	r3, r1
 800d5a0:	9904      	ldr	r1, [sp, #16]
 800d5a2:	430b      	orrs	r3, r1
 800d5a4:	d122      	bne.n	800d5ec <_dtoa_r+0xabc>
 800d5a6:	2a00      	cmp	r2, #0
 800d5a8:	ddee      	ble.n	800d588 <_dtoa_r+0xa58>
 800d5aa:	ee18 1a10 	vmov	r1, s16
 800d5ae:	2201      	movs	r2, #1
 800d5b0:	4620      	mov	r0, r4
 800d5b2:	f000 facd 	bl	800db50 <__lshift>
 800d5b6:	4631      	mov	r1, r6
 800d5b8:	ee08 0a10 	vmov	s16, r0
 800d5bc:	f000 fb38 	bl	800dc30 <__mcmp>
 800d5c0:	2800      	cmp	r0, #0
 800d5c2:	dc03      	bgt.n	800d5cc <_dtoa_r+0xa9c>
 800d5c4:	d1e0      	bne.n	800d588 <_dtoa_r+0xa58>
 800d5c6:	f01a 0f01 	tst.w	sl, #1
 800d5ca:	d0dd      	beq.n	800d588 <_dtoa_r+0xa58>
 800d5cc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d5d0:	d1d7      	bne.n	800d582 <_dtoa_r+0xa52>
 800d5d2:	2339      	movs	r3, #57	; 0x39
 800d5d4:	f88b 3000 	strb.w	r3, [fp]
 800d5d8:	462b      	mov	r3, r5
 800d5da:	461d      	mov	r5, r3
 800d5dc:	3b01      	subs	r3, #1
 800d5de:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800d5e2:	2a39      	cmp	r2, #57	; 0x39
 800d5e4:	d071      	beq.n	800d6ca <_dtoa_r+0xb9a>
 800d5e6:	3201      	adds	r2, #1
 800d5e8:	701a      	strb	r2, [r3, #0]
 800d5ea:	e746      	b.n	800d47a <_dtoa_r+0x94a>
 800d5ec:	2a00      	cmp	r2, #0
 800d5ee:	dd07      	ble.n	800d600 <_dtoa_r+0xad0>
 800d5f0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d5f4:	d0ed      	beq.n	800d5d2 <_dtoa_r+0xaa2>
 800d5f6:	f10a 0301 	add.w	r3, sl, #1
 800d5fa:	f88b 3000 	strb.w	r3, [fp]
 800d5fe:	e73c      	b.n	800d47a <_dtoa_r+0x94a>
 800d600:	9b05      	ldr	r3, [sp, #20]
 800d602:	f809 ac01 	strb.w	sl, [r9, #-1]
 800d606:	4599      	cmp	r9, r3
 800d608:	d047      	beq.n	800d69a <_dtoa_r+0xb6a>
 800d60a:	ee18 1a10 	vmov	r1, s16
 800d60e:	2300      	movs	r3, #0
 800d610:	220a      	movs	r2, #10
 800d612:	4620      	mov	r0, r4
 800d614:	f000 f8ec 	bl	800d7f0 <__multadd>
 800d618:	45b8      	cmp	r8, r7
 800d61a:	ee08 0a10 	vmov	s16, r0
 800d61e:	f04f 0300 	mov.w	r3, #0
 800d622:	f04f 020a 	mov.w	r2, #10
 800d626:	4641      	mov	r1, r8
 800d628:	4620      	mov	r0, r4
 800d62a:	d106      	bne.n	800d63a <_dtoa_r+0xb0a>
 800d62c:	f000 f8e0 	bl	800d7f0 <__multadd>
 800d630:	4680      	mov	r8, r0
 800d632:	4607      	mov	r7, r0
 800d634:	f109 0901 	add.w	r9, r9, #1
 800d638:	e772      	b.n	800d520 <_dtoa_r+0x9f0>
 800d63a:	f000 f8d9 	bl	800d7f0 <__multadd>
 800d63e:	4639      	mov	r1, r7
 800d640:	4680      	mov	r8, r0
 800d642:	2300      	movs	r3, #0
 800d644:	220a      	movs	r2, #10
 800d646:	4620      	mov	r0, r4
 800d648:	f000 f8d2 	bl	800d7f0 <__multadd>
 800d64c:	4607      	mov	r7, r0
 800d64e:	e7f1      	b.n	800d634 <_dtoa_r+0xb04>
 800d650:	9b03      	ldr	r3, [sp, #12]
 800d652:	9302      	str	r3, [sp, #8]
 800d654:	9d01      	ldr	r5, [sp, #4]
 800d656:	ee18 0a10 	vmov	r0, s16
 800d65a:	4631      	mov	r1, r6
 800d65c:	f7ff f9dc 	bl	800ca18 <quorem>
 800d660:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d664:	9b01      	ldr	r3, [sp, #4]
 800d666:	f805 ab01 	strb.w	sl, [r5], #1
 800d66a:	1aea      	subs	r2, r5, r3
 800d66c:	9b02      	ldr	r3, [sp, #8]
 800d66e:	4293      	cmp	r3, r2
 800d670:	dd09      	ble.n	800d686 <_dtoa_r+0xb56>
 800d672:	ee18 1a10 	vmov	r1, s16
 800d676:	2300      	movs	r3, #0
 800d678:	220a      	movs	r2, #10
 800d67a:	4620      	mov	r0, r4
 800d67c:	f000 f8b8 	bl	800d7f0 <__multadd>
 800d680:	ee08 0a10 	vmov	s16, r0
 800d684:	e7e7      	b.n	800d656 <_dtoa_r+0xb26>
 800d686:	9b02      	ldr	r3, [sp, #8]
 800d688:	2b00      	cmp	r3, #0
 800d68a:	bfc8      	it	gt
 800d68c:	461d      	movgt	r5, r3
 800d68e:	9b01      	ldr	r3, [sp, #4]
 800d690:	bfd8      	it	le
 800d692:	2501      	movle	r5, #1
 800d694:	441d      	add	r5, r3
 800d696:	f04f 0800 	mov.w	r8, #0
 800d69a:	ee18 1a10 	vmov	r1, s16
 800d69e:	2201      	movs	r2, #1
 800d6a0:	4620      	mov	r0, r4
 800d6a2:	f000 fa55 	bl	800db50 <__lshift>
 800d6a6:	4631      	mov	r1, r6
 800d6a8:	ee08 0a10 	vmov	s16, r0
 800d6ac:	f000 fac0 	bl	800dc30 <__mcmp>
 800d6b0:	2800      	cmp	r0, #0
 800d6b2:	dc91      	bgt.n	800d5d8 <_dtoa_r+0xaa8>
 800d6b4:	d102      	bne.n	800d6bc <_dtoa_r+0xb8c>
 800d6b6:	f01a 0f01 	tst.w	sl, #1
 800d6ba:	d18d      	bne.n	800d5d8 <_dtoa_r+0xaa8>
 800d6bc:	462b      	mov	r3, r5
 800d6be:	461d      	mov	r5, r3
 800d6c0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d6c4:	2a30      	cmp	r2, #48	; 0x30
 800d6c6:	d0fa      	beq.n	800d6be <_dtoa_r+0xb8e>
 800d6c8:	e6d7      	b.n	800d47a <_dtoa_r+0x94a>
 800d6ca:	9a01      	ldr	r2, [sp, #4]
 800d6cc:	429a      	cmp	r2, r3
 800d6ce:	d184      	bne.n	800d5da <_dtoa_r+0xaaa>
 800d6d0:	9b00      	ldr	r3, [sp, #0]
 800d6d2:	3301      	adds	r3, #1
 800d6d4:	9300      	str	r3, [sp, #0]
 800d6d6:	2331      	movs	r3, #49	; 0x31
 800d6d8:	7013      	strb	r3, [r2, #0]
 800d6da:	e6ce      	b.n	800d47a <_dtoa_r+0x94a>
 800d6dc:	4b09      	ldr	r3, [pc, #36]	; (800d704 <_dtoa_r+0xbd4>)
 800d6de:	f7ff ba95 	b.w	800cc0c <_dtoa_r+0xdc>
 800d6e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d6e4:	2b00      	cmp	r3, #0
 800d6e6:	f47f aa6e 	bne.w	800cbc6 <_dtoa_r+0x96>
 800d6ea:	4b07      	ldr	r3, [pc, #28]	; (800d708 <_dtoa_r+0xbd8>)
 800d6ec:	f7ff ba8e 	b.w	800cc0c <_dtoa_r+0xdc>
 800d6f0:	9b02      	ldr	r3, [sp, #8]
 800d6f2:	2b00      	cmp	r3, #0
 800d6f4:	dcae      	bgt.n	800d654 <_dtoa_r+0xb24>
 800d6f6:	9b06      	ldr	r3, [sp, #24]
 800d6f8:	2b02      	cmp	r3, #2
 800d6fa:	f73f aea8 	bgt.w	800d44e <_dtoa_r+0x91e>
 800d6fe:	e7a9      	b.n	800d654 <_dtoa_r+0xb24>
 800d700:	080769cf 	.word	0x080769cf
 800d704:	0807692c 	.word	0x0807692c
 800d708:	08076950 	.word	0x08076950

0800d70c <_localeconv_r>:
 800d70c:	4800      	ldr	r0, [pc, #0]	; (800d710 <_localeconv_r+0x4>)
 800d70e:	4770      	bx	lr
 800d710:	20004c9c 	.word	0x20004c9c

0800d714 <__malloc_lock>:
 800d714:	4801      	ldr	r0, [pc, #4]	; (800d71c <__malloc_lock+0x8>)
 800d716:	f000 bd5e 	b.w	800e1d6 <__retarget_lock_acquire_recursive>
 800d71a:	bf00      	nop
 800d71c:	20005074 	.word	0x20005074

0800d720 <__malloc_unlock>:
 800d720:	4801      	ldr	r0, [pc, #4]	; (800d728 <__malloc_unlock+0x8>)
 800d722:	f000 bd59 	b.w	800e1d8 <__retarget_lock_release_recursive>
 800d726:	bf00      	nop
 800d728:	20005074 	.word	0x20005074

0800d72c <_Balloc>:
 800d72c:	b570      	push	{r4, r5, r6, lr}
 800d72e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d730:	4604      	mov	r4, r0
 800d732:	460d      	mov	r5, r1
 800d734:	b976      	cbnz	r6, 800d754 <_Balloc+0x28>
 800d736:	2010      	movs	r0, #16
 800d738:	f7fe fbd6 	bl	800bee8 <malloc>
 800d73c:	4602      	mov	r2, r0
 800d73e:	6260      	str	r0, [r4, #36]	; 0x24
 800d740:	b920      	cbnz	r0, 800d74c <_Balloc+0x20>
 800d742:	4b18      	ldr	r3, [pc, #96]	; (800d7a4 <_Balloc+0x78>)
 800d744:	4818      	ldr	r0, [pc, #96]	; (800d7a8 <_Balloc+0x7c>)
 800d746:	2166      	movs	r1, #102	; 0x66
 800d748:	f000 fd14 	bl	800e174 <__assert_func>
 800d74c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d750:	6006      	str	r6, [r0, #0]
 800d752:	60c6      	str	r6, [r0, #12]
 800d754:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d756:	68f3      	ldr	r3, [r6, #12]
 800d758:	b183      	cbz	r3, 800d77c <_Balloc+0x50>
 800d75a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d75c:	68db      	ldr	r3, [r3, #12]
 800d75e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d762:	b9b8      	cbnz	r0, 800d794 <_Balloc+0x68>
 800d764:	2101      	movs	r1, #1
 800d766:	fa01 f605 	lsl.w	r6, r1, r5
 800d76a:	1d72      	adds	r2, r6, #5
 800d76c:	0092      	lsls	r2, r2, #2
 800d76e:	4620      	mov	r0, r4
 800d770:	f000 fb60 	bl	800de34 <_calloc_r>
 800d774:	b160      	cbz	r0, 800d790 <_Balloc+0x64>
 800d776:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d77a:	e00e      	b.n	800d79a <_Balloc+0x6e>
 800d77c:	2221      	movs	r2, #33	; 0x21
 800d77e:	2104      	movs	r1, #4
 800d780:	4620      	mov	r0, r4
 800d782:	f000 fb57 	bl	800de34 <_calloc_r>
 800d786:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d788:	60f0      	str	r0, [r6, #12]
 800d78a:	68db      	ldr	r3, [r3, #12]
 800d78c:	2b00      	cmp	r3, #0
 800d78e:	d1e4      	bne.n	800d75a <_Balloc+0x2e>
 800d790:	2000      	movs	r0, #0
 800d792:	bd70      	pop	{r4, r5, r6, pc}
 800d794:	6802      	ldr	r2, [r0, #0]
 800d796:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d79a:	2300      	movs	r3, #0
 800d79c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7a0:	e7f7      	b.n	800d792 <_Balloc+0x66>
 800d7a2:	bf00      	nop
 800d7a4:	0807695d 	.word	0x0807695d
 800d7a8:	080769e0 	.word	0x080769e0

0800d7ac <_Bfree>:
 800d7ac:	b570      	push	{r4, r5, r6, lr}
 800d7ae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d7b0:	4605      	mov	r5, r0
 800d7b2:	460c      	mov	r4, r1
 800d7b4:	b976      	cbnz	r6, 800d7d4 <_Bfree+0x28>
 800d7b6:	2010      	movs	r0, #16
 800d7b8:	f7fe fb96 	bl	800bee8 <malloc>
 800d7bc:	4602      	mov	r2, r0
 800d7be:	6268      	str	r0, [r5, #36]	; 0x24
 800d7c0:	b920      	cbnz	r0, 800d7cc <_Bfree+0x20>
 800d7c2:	4b09      	ldr	r3, [pc, #36]	; (800d7e8 <_Bfree+0x3c>)
 800d7c4:	4809      	ldr	r0, [pc, #36]	; (800d7ec <_Bfree+0x40>)
 800d7c6:	218a      	movs	r1, #138	; 0x8a
 800d7c8:	f000 fcd4 	bl	800e174 <__assert_func>
 800d7cc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d7d0:	6006      	str	r6, [r0, #0]
 800d7d2:	60c6      	str	r6, [r0, #12]
 800d7d4:	b13c      	cbz	r4, 800d7e6 <_Bfree+0x3a>
 800d7d6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d7d8:	6862      	ldr	r2, [r4, #4]
 800d7da:	68db      	ldr	r3, [r3, #12]
 800d7dc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d7e0:	6021      	str	r1, [r4, #0]
 800d7e2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d7e6:	bd70      	pop	{r4, r5, r6, pc}
 800d7e8:	0807695d 	.word	0x0807695d
 800d7ec:	080769e0 	.word	0x080769e0

0800d7f0 <__multadd>:
 800d7f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7f4:	690d      	ldr	r5, [r1, #16]
 800d7f6:	4607      	mov	r7, r0
 800d7f8:	460c      	mov	r4, r1
 800d7fa:	461e      	mov	r6, r3
 800d7fc:	f101 0c14 	add.w	ip, r1, #20
 800d800:	2000      	movs	r0, #0
 800d802:	f8dc 3000 	ldr.w	r3, [ip]
 800d806:	b299      	uxth	r1, r3
 800d808:	fb02 6101 	mla	r1, r2, r1, r6
 800d80c:	0c1e      	lsrs	r6, r3, #16
 800d80e:	0c0b      	lsrs	r3, r1, #16
 800d810:	fb02 3306 	mla	r3, r2, r6, r3
 800d814:	b289      	uxth	r1, r1
 800d816:	3001      	adds	r0, #1
 800d818:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d81c:	4285      	cmp	r5, r0
 800d81e:	f84c 1b04 	str.w	r1, [ip], #4
 800d822:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d826:	dcec      	bgt.n	800d802 <__multadd+0x12>
 800d828:	b30e      	cbz	r6, 800d86e <__multadd+0x7e>
 800d82a:	68a3      	ldr	r3, [r4, #8]
 800d82c:	42ab      	cmp	r3, r5
 800d82e:	dc19      	bgt.n	800d864 <__multadd+0x74>
 800d830:	6861      	ldr	r1, [r4, #4]
 800d832:	4638      	mov	r0, r7
 800d834:	3101      	adds	r1, #1
 800d836:	f7ff ff79 	bl	800d72c <_Balloc>
 800d83a:	4680      	mov	r8, r0
 800d83c:	b928      	cbnz	r0, 800d84a <__multadd+0x5a>
 800d83e:	4602      	mov	r2, r0
 800d840:	4b0c      	ldr	r3, [pc, #48]	; (800d874 <__multadd+0x84>)
 800d842:	480d      	ldr	r0, [pc, #52]	; (800d878 <__multadd+0x88>)
 800d844:	21b5      	movs	r1, #181	; 0xb5
 800d846:	f000 fc95 	bl	800e174 <__assert_func>
 800d84a:	6922      	ldr	r2, [r4, #16]
 800d84c:	3202      	adds	r2, #2
 800d84e:	f104 010c 	add.w	r1, r4, #12
 800d852:	0092      	lsls	r2, r2, #2
 800d854:	300c      	adds	r0, #12
 800d856:	f7fe fb4f 	bl	800bef8 <memcpy>
 800d85a:	4621      	mov	r1, r4
 800d85c:	4638      	mov	r0, r7
 800d85e:	f7ff ffa5 	bl	800d7ac <_Bfree>
 800d862:	4644      	mov	r4, r8
 800d864:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d868:	3501      	adds	r5, #1
 800d86a:	615e      	str	r6, [r3, #20]
 800d86c:	6125      	str	r5, [r4, #16]
 800d86e:	4620      	mov	r0, r4
 800d870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d874:	080769cf 	.word	0x080769cf
 800d878:	080769e0 	.word	0x080769e0

0800d87c <__hi0bits>:
 800d87c:	0c03      	lsrs	r3, r0, #16
 800d87e:	041b      	lsls	r3, r3, #16
 800d880:	b9d3      	cbnz	r3, 800d8b8 <__hi0bits+0x3c>
 800d882:	0400      	lsls	r0, r0, #16
 800d884:	2310      	movs	r3, #16
 800d886:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d88a:	bf04      	itt	eq
 800d88c:	0200      	lsleq	r0, r0, #8
 800d88e:	3308      	addeq	r3, #8
 800d890:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800d894:	bf04      	itt	eq
 800d896:	0100      	lsleq	r0, r0, #4
 800d898:	3304      	addeq	r3, #4
 800d89a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800d89e:	bf04      	itt	eq
 800d8a0:	0080      	lsleq	r0, r0, #2
 800d8a2:	3302      	addeq	r3, #2
 800d8a4:	2800      	cmp	r0, #0
 800d8a6:	db05      	blt.n	800d8b4 <__hi0bits+0x38>
 800d8a8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800d8ac:	f103 0301 	add.w	r3, r3, #1
 800d8b0:	bf08      	it	eq
 800d8b2:	2320      	moveq	r3, #32
 800d8b4:	4618      	mov	r0, r3
 800d8b6:	4770      	bx	lr
 800d8b8:	2300      	movs	r3, #0
 800d8ba:	e7e4      	b.n	800d886 <__hi0bits+0xa>

0800d8bc <__lo0bits>:
 800d8bc:	6803      	ldr	r3, [r0, #0]
 800d8be:	f013 0207 	ands.w	r2, r3, #7
 800d8c2:	4601      	mov	r1, r0
 800d8c4:	d00b      	beq.n	800d8de <__lo0bits+0x22>
 800d8c6:	07da      	lsls	r2, r3, #31
 800d8c8:	d423      	bmi.n	800d912 <__lo0bits+0x56>
 800d8ca:	0798      	lsls	r0, r3, #30
 800d8cc:	bf49      	itett	mi
 800d8ce:	085b      	lsrmi	r3, r3, #1
 800d8d0:	089b      	lsrpl	r3, r3, #2
 800d8d2:	2001      	movmi	r0, #1
 800d8d4:	600b      	strmi	r3, [r1, #0]
 800d8d6:	bf5c      	itt	pl
 800d8d8:	600b      	strpl	r3, [r1, #0]
 800d8da:	2002      	movpl	r0, #2
 800d8dc:	4770      	bx	lr
 800d8de:	b298      	uxth	r0, r3
 800d8e0:	b9a8      	cbnz	r0, 800d90e <__lo0bits+0x52>
 800d8e2:	0c1b      	lsrs	r3, r3, #16
 800d8e4:	2010      	movs	r0, #16
 800d8e6:	b2da      	uxtb	r2, r3
 800d8e8:	b90a      	cbnz	r2, 800d8ee <__lo0bits+0x32>
 800d8ea:	3008      	adds	r0, #8
 800d8ec:	0a1b      	lsrs	r3, r3, #8
 800d8ee:	071a      	lsls	r2, r3, #28
 800d8f0:	bf04      	itt	eq
 800d8f2:	091b      	lsreq	r3, r3, #4
 800d8f4:	3004      	addeq	r0, #4
 800d8f6:	079a      	lsls	r2, r3, #30
 800d8f8:	bf04      	itt	eq
 800d8fa:	089b      	lsreq	r3, r3, #2
 800d8fc:	3002      	addeq	r0, #2
 800d8fe:	07da      	lsls	r2, r3, #31
 800d900:	d403      	bmi.n	800d90a <__lo0bits+0x4e>
 800d902:	085b      	lsrs	r3, r3, #1
 800d904:	f100 0001 	add.w	r0, r0, #1
 800d908:	d005      	beq.n	800d916 <__lo0bits+0x5a>
 800d90a:	600b      	str	r3, [r1, #0]
 800d90c:	4770      	bx	lr
 800d90e:	4610      	mov	r0, r2
 800d910:	e7e9      	b.n	800d8e6 <__lo0bits+0x2a>
 800d912:	2000      	movs	r0, #0
 800d914:	4770      	bx	lr
 800d916:	2020      	movs	r0, #32
 800d918:	4770      	bx	lr
	...

0800d91c <__i2b>:
 800d91c:	b510      	push	{r4, lr}
 800d91e:	460c      	mov	r4, r1
 800d920:	2101      	movs	r1, #1
 800d922:	f7ff ff03 	bl	800d72c <_Balloc>
 800d926:	4602      	mov	r2, r0
 800d928:	b928      	cbnz	r0, 800d936 <__i2b+0x1a>
 800d92a:	4b05      	ldr	r3, [pc, #20]	; (800d940 <__i2b+0x24>)
 800d92c:	4805      	ldr	r0, [pc, #20]	; (800d944 <__i2b+0x28>)
 800d92e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800d932:	f000 fc1f 	bl	800e174 <__assert_func>
 800d936:	2301      	movs	r3, #1
 800d938:	6144      	str	r4, [r0, #20]
 800d93a:	6103      	str	r3, [r0, #16]
 800d93c:	bd10      	pop	{r4, pc}
 800d93e:	bf00      	nop
 800d940:	080769cf 	.word	0x080769cf
 800d944:	080769e0 	.word	0x080769e0

0800d948 <__multiply>:
 800d948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d94c:	4691      	mov	r9, r2
 800d94e:	690a      	ldr	r2, [r1, #16]
 800d950:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800d954:	429a      	cmp	r2, r3
 800d956:	bfb8      	it	lt
 800d958:	460b      	movlt	r3, r1
 800d95a:	460c      	mov	r4, r1
 800d95c:	bfbc      	itt	lt
 800d95e:	464c      	movlt	r4, r9
 800d960:	4699      	movlt	r9, r3
 800d962:	6927      	ldr	r7, [r4, #16]
 800d964:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800d968:	68a3      	ldr	r3, [r4, #8]
 800d96a:	6861      	ldr	r1, [r4, #4]
 800d96c:	eb07 060a 	add.w	r6, r7, sl
 800d970:	42b3      	cmp	r3, r6
 800d972:	b085      	sub	sp, #20
 800d974:	bfb8      	it	lt
 800d976:	3101      	addlt	r1, #1
 800d978:	f7ff fed8 	bl	800d72c <_Balloc>
 800d97c:	b930      	cbnz	r0, 800d98c <__multiply+0x44>
 800d97e:	4602      	mov	r2, r0
 800d980:	4b44      	ldr	r3, [pc, #272]	; (800da94 <__multiply+0x14c>)
 800d982:	4845      	ldr	r0, [pc, #276]	; (800da98 <__multiply+0x150>)
 800d984:	f240 115d 	movw	r1, #349	; 0x15d
 800d988:	f000 fbf4 	bl	800e174 <__assert_func>
 800d98c:	f100 0514 	add.w	r5, r0, #20
 800d990:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800d994:	462b      	mov	r3, r5
 800d996:	2200      	movs	r2, #0
 800d998:	4543      	cmp	r3, r8
 800d99a:	d321      	bcc.n	800d9e0 <__multiply+0x98>
 800d99c:	f104 0314 	add.w	r3, r4, #20
 800d9a0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800d9a4:	f109 0314 	add.w	r3, r9, #20
 800d9a8:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800d9ac:	9202      	str	r2, [sp, #8]
 800d9ae:	1b3a      	subs	r2, r7, r4
 800d9b0:	3a15      	subs	r2, #21
 800d9b2:	f022 0203 	bic.w	r2, r2, #3
 800d9b6:	3204      	adds	r2, #4
 800d9b8:	f104 0115 	add.w	r1, r4, #21
 800d9bc:	428f      	cmp	r7, r1
 800d9be:	bf38      	it	cc
 800d9c0:	2204      	movcc	r2, #4
 800d9c2:	9201      	str	r2, [sp, #4]
 800d9c4:	9a02      	ldr	r2, [sp, #8]
 800d9c6:	9303      	str	r3, [sp, #12]
 800d9c8:	429a      	cmp	r2, r3
 800d9ca:	d80c      	bhi.n	800d9e6 <__multiply+0x9e>
 800d9cc:	2e00      	cmp	r6, #0
 800d9ce:	dd03      	ble.n	800d9d8 <__multiply+0x90>
 800d9d0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800d9d4:	2b00      	cmp	r3, #0
 800d9d6:	d05a      	beq.n	800da8e <__multiply+0x146>
 800d9d8:	6106      	str	r6, [r0, #16]
 800d9da:	b005      	add	sp, #20
 800d9dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9e0:	f843 2b04 	str.w	r2, [r3], #4
 800d9e4:	e7d8      	b.n	800d998 <__multiply+0x50>
 800d9e6:	f8b3 a000 	ldrh.w	sl, [r3]
 800d9ea:	f1ba 0f00 	cmp.w	sl, #0
 800d9ee:	d024      	beq.n	800da3a <__multiply+0xf2>
 800d9f0:	f104 0e14 	add.w	lr, r4, #20
 800d9f4:	46a9      	mov	r9, r5
 800d9f6:	f04f 0c00 	mov.w	ip, #0
 800d9fa:	f85e 2b04 	ldr.w	r2, [lr], #4
 800d9fe:	f8d9 1000 	ldr.w	r1, [r9]
 800da02:	fa1f fb82 	uxth.w	fp, r2
 800da06:	b289      	uxth	r1, r1
 800da08:	fb0a 110b 	mla	r1, sl, fp, r1
 800da0c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800da10:	f8d9 2000 	ldr.w	r2, [r9]
 800da14:	4461      	add	r1, ip
 800da16:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800da1a:	fb0a c20b 	mla	r2, sl, fp, ip
 800da1e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800da22:	b289      	uxth	r1, r1
 800da24:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800da28:	4577      	cmp	r7, lr
 800da2a:	f849 1b04 	str.w	r1, [r9], #4
 800da2e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800da32:	d8e2      	bhi.n	800d9fa <__multiply+0xb2>
 800da34:	9a01      	ldr	r2, [sp, #4]
 800da36:	f845 c002 	str.w	ip, [r5, r2]
 800da3a:	9a03      	ldr	r2, [sp, #12]
 800da3c:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800da40:	3304      	adds	r3, #4
 800da42:	f1b9 0f00 	cmp.w	r9, #0
 800da46:	d020      	beq.n	800da8a <__multiply+0x142>
 800da48:	6829      	ldr	r1, [r5, #0]
 800da4a:	f104 0c14 	add.w	ip, r4, #20
 800da4e:	46ae      	mov	lr, r5
 800da50:	f04f 0a00 	mov.w	sl, #0
 800da54:	f8bc b000 	ldrh.w	fp, [ip]
 800da58:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800da5c:	fb09 220b 	mla	r2, r9, fp, r2
 800da60:	4492      	add	sl, r2
 800da62:	b289      	uxth	r1, r1
 800da64:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800da68:	f84e 1b04 	str.w	r1, [lr], #4
 800da6c:	f85c 2b04 	ldr.w	r2, [ip], #4
 800da70:	f8be 1000 	ldrh.w	r1, [lr]
 800da74:	0c12      	lsrs	r2, r2, #16
 800da76:	fb09 1102 	mla	r1, r9, r2, r1
 800da7a:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800da7e:	4567      	cmp	r7, ip
 800da80:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800da84:	d8e6      	bhi.n	800da54 <__multiply+0x10c>
 800da86:	9a01      	ldr	r2, [sp, #4]
 800da88:	50a9      	str	r1, [r5, r2]
 800da8a:	3504      	adds	r5, #4
 800da8c:	e79a      	b.n	800d9c4 <__multiply+0x7c>
 800da8e:	3e01      	subs	r6, #1
 800da90:	e79c      	b.n	800d9cc <__multiply+0x84>
 800da92:	bf00      	nop
 800da94:	080769cf 	.word	0x080769cf
 800da98:	080769e0 	.word	0x080769e0

0800da9c <__pow5mult>:
 800da9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800daa0:	4615      	mov	r5, r2
 800daa2:	f012 0203 	ands.w	r2, r2, #3
 800daa6:	4606      	mov	r6, r0
 800daa8:	460f      	mov	r7, r1
 800daaa:	d007      	beq.n	800dabc <__pow5mult+0x20>
 800daac:	4c25      	ldr	r4, [pc, #148]	; (800db44 <__pow5mult+0xa8>)
 800daae:	3a01      	subs	r2, #1
 800dab0:	2300      	movs	r3, #0
 800dab2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800dab6:	f7ff fe9b 	bl	800d7f0 <__multadd>
 800daba:	4607      	mov	r7, r0
 800dabc:	10ad      	asrs	r5, r5, #2
 800dabe:	d03d      	beq.n	800db3c <__pow5mult+0xa0>
 800dac0:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800dac2:	b97c      	cbnz	r4, 800dae4 <__pow5mult+0x48>
 800dac4:	2010      	movs	r0, #16
 800dac6:	f7fe fa0f 	bl	800bee8 <malloc>
 800daca:	4602      	mov	r2, r0
 800dacc:	6270      	str	r0, [r6, #36]	; 0x24
 800dace:	b928      	cbnz	r0, 800dadc <__pow5mult+0x40>
 800dad0:	4b1d      	ldr	r3, [pc, #116]	; (800db48 <__pow5mult+0xac>)
 800dad2:	481e      	ldr	r0, [pc, #120]	; (800db4c <__pow5mult+0xb0>)
 800dad4:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800dad8:	f000 fb4c 	bl	800e174 <__assert_func>
 800dadc:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800dae0:	6004      	str	r4, [r0, #0]
 800dae2:	60c4      	str	r4, [r0, #12]
 800dae4:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800dae8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800daec:	b94c      	cbnz	r4, 800db02 <__pow5mult+0x66>
 800daee:	f240 2171 	movw	r1, #625	; 0x271
 800daf2:	4630      	mov	r0, r6
 800daf4:	f7ff ff12 	bl	800d91c <__i2b>
 800daf8:	2300      	movs	r3, #0
 800dafa:	f8c8 0008 	str.w	r0, [r8, #8]
 800dafe:	4604      	mov	r4, r0
 800db00:	6003      	str	r3, [r0, #0]
 800db02:	f04f 0900 	mov.w	r9, #0
 800db06:	07eb      	lsls	r3, r5, #31
 800db08:	d50a      	bpl.n	800db20 <__pow5mult+0x84>
 800db0a:	4639      	mov	r1, r7
 800db0c:	4622      	mov	r2, r4
 800db0e:	4630      	mov	r0, r6
 800db10:	f7ff ff1a 	bl	800d948 <__multiply>
 800db14:	4639      	mov	r1, r7
 800db16:	4680      	mov	r8, r0
 800db18:	4630      	mov	r0, r6
 800db1a:	f7ff fe47 	bl	800d7ac <_Bfree>
 800db1e:	4647      	mov	r7, r8
 800db20:	106d      	asrs	r5, r5, #1
 800db22:	d00b      	beq.n	800db3c <__pow5mult+0xa0>
 800db24:	6820      	ldr	r0, [r4, #0]
 800db26:	b938      	cbnz	r0, 800db38 <__pow5mult+0x9c>
 800db28:	4622      	mov	r2, r4
 800db2a:	4621      	mov	r1, r4
 800db2c:	4630      	mov	r0, r6
 800db2e:	f7ff ff0b 	bl	800d948 <__multiply>
 800db32:	6020      	str	r0, [r4, #0]
 800db34:	f8c0 9000 	str.w	r9, [r0]
 800db38:	4604      	mov	r4, r0
 800db3a:	e7e4      	b.n	800db06 <__pow5mult+0x6a>
 800db3c:	4638      	mov	r0, r7
 800db3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800db42:	bf00      	nop
 800db44:	08076b30 	.word	0x08076b30
 800db48:	0807695d 	.word	0x0807695d
 800db4c:	080769e0 	.word	0x080769e0

0800db50 <__lshift>:
 800db50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db54:	460c      	mov	r4, r1
 800db56:	6849      	ldr	r1, [r1, #4]
 800db58:	6923      	ldr	r3, [r4, #16]
 800db5a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800db5e:	68a3      	ldr	r3, [r4, #8]
 800db60:	4607      	mov	r7, r0
 800db62:	4691      	mov	r9, r2
 800db64:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800db68:	f108 0601 	add.w	r6, r8, #1
 800db6c:	42b3      	cmp	r3, r6
 800db6e:	db0b      	blt.n	800db88 <__lshift+0x38>
 800db70:	4638      	mov	r0, r7
 800db72:	f7ff fddb 	bl	800d72c <_Balloc>
 800db76:	4605      	mov	r5, r0
 800db78:	b948      	cbnz	r0, 800db8e <__lshift+0x3e>
 800db7a:	4602      	mov	r2, r0
 800db7c:	4b2a      	ldr	r3, [pc, #168]	; (800dc28 <__lshift+0xd8>)
 800db7e:	482b      	ldr	r0, [pc, #172]	; (800dc2c <__lshift+0xdc>)
 800db80:	f240 11d9 	movw	r1, #473	; 0x1d9
 800db84:	f000 faf6 	bl	800e174 <__assert_func>
 800db88:	3101      	adds	r1, #1
 800db8a:	005b      	lsls	r3, r3, #1
 800db8c:	e7ee      	b.n	800db6c <__lshift+0x1c>
 800db8e:	2300      	movs	r3, #0
 800db90:	f100 0114 	add.w	r1, r0, #20
 800db94:	f100 0210 	add.w	r2, r0, #16
 800db98:	4618      	mov	r0, r3
 800db9a:	4553      	cmp	r3, sl
 800db9c:	db37      	blt.n	800dc0e <__lshift+0xbe>
 800db9e:	6920      	ldr	r0, [r4, #16]
 800dba0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dba4:	f104 0314 	add.w	r3, r4, #20
 800dba8:	f019 091f 	ands.w	r9, r9, #31
 800dbac:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dbb0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800dbb4:	d02f      	beq.n	800dc16 <__lshift+0xc6>
 800dbb6:	f1c9 0e20 	rsb	lr, r9, #32
 800dbba:	468a      	mov	sl, r1
 800dbbc:	f04f 0c00 	mov.w	ip, #0
 800dbc0:	681a      	ldr	r2, [r3, #0]
 800dbc2:	fa02 f209 	lsl.w	r2, r2, r9
 800dbc6:	ea42 020c 	orr.w	r2, r2, ip
 800dbca:	f84a 2b04 	str.w	r2, [sl], #4
 800dbce:	f853 2b04 	ldr.w	r2, [r3], #4
 800dbd2:	4298      	cmp	r0, r3
 800dbd4:	fa22 fc0e 	lsr.w	ip, r2, lr
 800dbd8:	d8f2      	bhi.n	800dbc0 <__lshift+0x70>
 800dbda:	1b03      	subs	r3, r0, r4
 800dbdc:	3b15      	subs	r3, #21
 800dbde:	f023 0303 	bic.w	r3, r3, #3
 800dbe2:	3304      	adds	r3, #4
 800dbe4:	f104 0215 	add.w	r2, r4, #21
 800dbe8:	4290      	cmp	r0, r2
 800dbea:	bf38      	it	cc
 800dbec:	2304      	movcc	r3, #4
 800dbee:	f841 c003 	str.w	ip, [r1, r3]
 800dbf2:	f1bc 0f00 	cmp.w	ip, #0
 800dbf6:	d001      	beq.n	800dbfc <__lshift+0xac>
 800dbf8:	f108 0602 	add.w	r6, r8, #2
 800dbfc:	3e01      	subs	r6, #1
 800dbfe:	4638      	mov	r0, r7
 800dc00:	612e      	str	r6, [r5, #16]
 800dc02:	4621      	mov	r1, r4
 800dc04:	f7ff fdd2 	bl	800d7ac <_Bfree>
 800dc08:	4628      	mov	r0, r5
 800dc0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc0e:	f842 0f04 	str.w	r0, [r2, #4]!
 800dc12:	3301      	adds	r3, #1
 800dc14:	e7c1      	b.n	800db9a <__lshift+0x4a>
 800dc16:	3904      	subs	r1, #4
 800dc18:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc1c:	f841 2f04 	str.w	r2, [r1, #4]!
 800dc20:	4298      	cmp	r0, r3
 800dc22:	d8f9      	bhi.n	800dc18 <__lshift+0xc8>
 800dc24:	e7ea      	b.n	800dbfc <__lshift+0xac>
 800dc26:	bf00      	nop
 800dc28:	080769cf 	.word	0x080769cf
 800dc2c:	080769e0 	.word	0x080769e0

0800dc30 <__mcmp>:
 800dc30:	b530      	push	{r4, r5, lr}
 800dc32:	6902      	ldr	r2, [r0, #16]
 800dc34:	690c      	ldr	r4, [r1, #16]
 800dc36:	1b12      	subs	r2, r2, r4
 800dc38:	d10e      	bne.n	800dc58 <__mcmp+0x28>
 800dc3a:	f100 0314 	add.w	r3, r0, #20
 800dc3e:	3114      	adds	r1, #20
 800dc40:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800dc44:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800dc48:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800dc4c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800dc50:	42a5      	cmp	r5, r4
 800dc52:	d003      	beq.n	800dc5c <__mcmp+0x2c>
 800dc54:	d305      	bcc.n	800dc62 <__mcmp+0x32>
 800dc56:	2201      	movs	r2, #1
 800dc58:	4610      	mov	r0, r2
 800dc5a:	bd30      	pop	{r4, r5, pc}
 800dc5c:	4283      	cmp	r3, r0
 800dc5e:	d3f3      	bcc.n	800dc48 <__mcmp+0x18>
 800dc60:	e7fa      	b.n	800dc58 <__mcmp+0x28>
 800dc62:	f04f 32ff 	mov.w	r2, #4294967295
 800dc66:	e7f7      	b.n	800dc58 <__mcmp+0x28>

0800dc68 <__mdiff>:
 800dc68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc6c:	460c      	mov	r4, r1
 800dc6e:	4606      	mov	r6, r0
 800dc70:	4611      	mov	r1, r2
 800dc72:	4620      	mov	r0, r4
 800dc74:	4690      	mov	r8, r2
 800dc76:	f7ff ffdb 	bl	800dc30 <__mcmp>
 800dc7a:	1e05      	subs	r5, r0, #0
 800dc7c:	d110      	bne.n	800dca0 <__mdiff+0x38>
 800dc7e:	4629      	mov	r1, r5
 800dc80:	4630      	mov	r0, r6
 800dc82:	f7ff fd53 	bl	800d72c <_Balloc>
 800dc86:	b930      	cbnz	r0, 800dc96 <__mdiff+0x2e>
 800dc88:	4b3a      	ldr	r3, [pc, #232]	; (800dd74 <__mdiff+0x10c>)
 800dc8a:	4602      	mov	r2, r0
 800dc8c:	f240 2132 	movw	r1, #562	; 0x232
 800dc90:	4839      	ldr	r0, [pc, #228]	; (800dd78 <__mdiff+0x110>)
 800dc92:	f000 fa6f 	bl	800e174 <__assert_func>
 800dc96:	2301      	movs	r3, #1
 800dc98:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800dc9c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dca0:	bfa4      	itt	ge
 800dca2:	4643      	movge	r3, r8
 800dca4:	46a0      	movge	r8, r4
 800dca6:	4630      	mov	r0, r6
 800dca8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800dcac:	bfa6      	itte	ge
 800dcae:	461c      	movge	r4, r3
 800dcb0:	2500      	movge	r5, #0
 800dcb2:	2501      	movlt	r5, #1
 800dcb4:	f7ff fd3a 	bl	800d72c <_Balloc>
 800dcb8:	b920      	cbnz	r0, 800dcc4 <__mdiff+0x5c>
 800dcba:	4b2e      	ldr	r3, [pc, #184]	; (800dd74 <__mdiff+0x10c>)
 800dcbc:	4602      	mov	r2, r0
 800dcbe:	f44f 7110 	mov.w	r1, #576	; 0x240
 800dcc2:	e7e5      	b.n	800dc90 <__mdiff+0x28>
 800dcc4:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800dcc8:	6926      	ldr	r6, [r4, #16]
 800dcca:	60c5      	str	r5, [r0, #12]
 800dccc:	f104 0914 	add.w	r9, r4, #20
 800dcd0:	f108 0514 	add.w	r5, r8, #20
 800dcd4:	f100 0e14 	add.w	lr, r0, #20
 800dcd8:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800dcdc:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800dce0:	f108 0210 	add.w	r2, r8, #16
 800dce4:	46f2      	mov	sl, lr
 800dce6:	2100      	movs	r1, #0
 800dce8:	f859 3b04 	ldr.w	r3, [r9], #4
 800dcec:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800dcf0:	fa1f f883 	uxth.w	r8, r3
 800dcf4:	fa11 f18b 	uxtah	r1, r1, fp
 800dcf8:	0c1b      	lsrs	r3, r3, #16
 800dcfa:	eba1 0808 	sub.w	r8, r1, r8
 800dcfe:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800dd02:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800dd06:	fa1f f888 	uxth.w	r8, r8
 800dd0a:	1419      	asrs	r1, r3, #16
 800dd0c:	454e      	cmp	r6, r9
 800dd0e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800dd12:	f84a 3b04 	str.w	r3, [sl], #4
 800dd16:	d8e7      	bhi.n	800dce8 <__mdiff+0x80>
 800dd18:	1b33      	subs	r3, r6, r4
 800dd1a:	3b15      	subs	r3, #21
 800dd1c:	f023 0303 	bic.w	r3, r3, #3
 800dd20:	3304      	adds	r3, #4
 800dd22:	3415      	adds	r4, #21
 800dd24:	42a6      	cmp	r6, r4
 800dd26:	bf38      	it	cc
 800dd28:	2304      	movcc	r3, #4
 800dd2a:	441d      	add	r5, r3
 800dd2c:	4473      	add	r3, lr
 800dd2e:	469e      	mov	lr, r3
 800dd30:	462e      	mov	r6, r5
 800dd32:	4566      	cmp	r6, ip
 800dd34:	d30e      	bcc.n	800dd54 <__mdiff+0xec>
 800dd36:	f10c 0203 	add.w	r2, ip, #3
 800dd3a:	1b52      	subs	r2, r2, r5
 800dd3c:	f022 0203 	bic.w	r2, r2, #3
 800dd40:	3d03      	subs	r5, #3
 800dd42:	45ac      	cmp	ip, r5
 800dd44:	bf38      	it	cc
 800dd46:	2200      	movcc	r2, #0
 800dd48:	441a      	add	r2, r3
 800dd4a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800dd4e:	b17b      	cbz	r3, 800dd70 <__mdiff+0x108>
 800dd50:	6107      	str	r7, [r0, #16]
 800dd52:	e7a3      	b.n	800dc9c <__mdiff+0x34>
 800dd54:	f856 8b04 	ldr.w	r8, [r6], #4
 800dd58:	fa11 f288 	uxtah	r2, r1, r8
 800dd5c:	1414      	asrs	r4, r2, #16
 800dd5e:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800dd62:	b292      	uxth	r2, r2
 800dd64:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800dd68:	f84e 2b04 	str.w	r2, [lr], #4
 800dd6c:	1421      	asrs	r1, r4, #16
 800dd6e:	e7e0      	b.n	800dd32 <__mdiff+0xca>
 800dd70:	3f01      	subs	r7, #1
 800dd72:	e7ea      	b.n	800dd4a <__mdiff+0xe2>
 800dd74:	080769cf 	.word	0x080769cf
 800dd78:	080769e0 	.word	0x080769e0

0800dd7c <__d2b>:
 800dd7c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dd80:	4689      	mov	r9, r1
 800dd82:	2101      	movs	r1, #1
 800dd84:	ec57 6b10 	vmov	r6, r7, d0
 800dd88:	4690      	mov	r8, r2
 800dd8a:	f7ff fccf 	bl	800d72c <_Balloc>
 800dd8e:	4604      	mov	r4, r0
 800dd90:	b930      	cbnz	r0, 800dda0 <__d2b+0x24>
 800dd92:	4602      	mov	r2, r0
 800dd94:	4b25      	ldr	r3, [pc, #148]	; (800de2c <__d2b+0xb0>)
 800dd96:	4826      	ldr	r0, [pc, #152]	; (800de30 <__d2b+0xb4>)
 800dd98:	f240 310a 	movw	r1, #778	; 0x30a
 800dd9c:	f000 f9ea 	bl	800e174 <__assert_func>
 800dda0:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800dda4:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800dda8:	bb35      	cbnz	r5, 800ddf8 <__d2b+0x7c>
 800ddaa:	2e00      	cmp	r6, #0
 800ddac:	9301      	str	r3, [sp, #4]
 800ddae:	d028      	beq.n	800de02 <__d2b+0x86>
 800ddb0:	4668      	mov	r0, sp
 800ddb2:	9600      	str	r6, [sp, #0]
 800ddb4:	f7ff fd82 	bl	800d8bc <__lo0bits>
 800ddb8:	9900      	ldr	r1, [sp, #0]
 800ddba:	b300      	cbz	r0, 800ddfe <__d2b+0x82>
 800ddbc:	9a01      	ldr	r2, [sp, #4]
 800ddbe:	f1c0 0320 	rsb	r3, r0, #32
 800ddc2:	fa02 f303 	lsl.w	r3, r2, r3
 800ddc6:	430b      	orrs	r3, r1
 800ddc8:	40c2      	lsrs	r2, r0
 800ddca:	6163      	str	r3, [r4, #20]
 800ddcc:	9201      	str	r2, [sp, #4]
 800ddce:	9b01      	ldr	r3, [sp, #4]
 800ddd0:	61a3      	str	r3, [r4, #24]
 800ddd2:	2b00      	cmp	r3, #0
 800ddd4:	bf14      	ite	ne
 800ddd6:	2202      	movne	r2, #2
 800ddd8:	2201      	moveq	r2, #1
 800ddda:	6122      	str	r2, [r4, #16]
 800dddc:	b1d5      	cbz	r5, 800de14 <__d2b+0x98>
 800ddde:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800dde2:	4405      	add	r5, r0
 800dde4:	f8c9 5000 	str.w	r5, [r9]
 800dde8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800ddec:	f8c8 0000 	str.w	r0, [r8]
 800ddf0:	4620      	mov	r0, r4
 800ddf2:	b003      	add	sp, #12
 800ddf4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ddf8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800ddfc:	e7d5      	b.n	800ddaa <__d2b+0x2e>
 800ddfe:	6161      	str	r1, [r4, #20]
 800de00:	e7e5      	b.n	800ddce <__d2b+0x52>
 800de02:	a801      	add	r0, sp, #4
 800de04:	f7ff fd5a 	bl	800d8bc <__lo0bits>
 800de08:	9b01      	ldr	r3, [sp, #4]
 800de0a:	6163      	str	r3, [r4, #20]
 800de0c:	2201      	movs	r2, #1
 800de0e:	6122      	str	r2, [r4, #16]
 800de10:	3020      	adds	r0, #32
 800de12:	e7e3      	b.n	800dddc <__d2b+0x60>
 800de14:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800de18:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800de1c:	f8c9 0000 	str.w	r0, [r9]
 800de20:	6918      	ldr	r0, [r3, #16]
 800de22:	f7ff fd2b 	bl	800d87c <__hi0bits>
 800de26:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800de2a:	e7df      	b.n	800ddec <__d2b+0x70>
 800de2c:	080769cf 	.word	0x080769cf
 800de30:	080769e0 	.word	0x080769e0

0800de34 <_calloc_r>:
 800de34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de36:	fba1 2402 	umull	r2, r4, r1, r2
 800de3a:	b94c      	cbnz	r4, 800de50 <_calloc_r+0x1c>
 800de3c:	4611      	mov	r1, r2
 800de3e:	9201      	str	r2, [sp, #4]
 800de40:	f7fe f8dc 	bl	800bffc <_malloc_r>
 800de44:	9a01      	ldr	r2, [sp, #4]
 800de46:	4605      	mov	r5, r0
 800de48:	b930      	cbnz	r0, 800de58 <_calloc_r+0x24>
 800de4a:	4628      	mov	r0, r5
 800de4c:	b003      	add	sp, #12
 800de4e:	bd30      	pop	{r4, r5, pc}
 800de50:	220c      	movs	r2, #12
 800de52:	6002      	str	r2, [r0, #0]
 800de54:	2500      	movs	r5, #0
 800de56:	e7f8      	b.n	800de4a <_calloc_r+0x16>
 800de58:	4621      	mov	r1, r4
 800de5a:	f7fe f85b 	bl	800bf14 <memset>
 800de5e:	e7f4      	b.n	800de4a <_calloc_r+0x16>

0800de60 <_realloc_r>:
 800de60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de64:	4680      	mov	r8, r0
 800de66:	4614      	mov	r4, r2
 800de68:	460e      	mov	r6, r1
 800de6a:	b921      	cbnz	r1, 800de76 <_realloc_r+0x16>
 800de6c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800de70:	4611      	mov	r1, r2
 800de72:	f7fe b8c3 	b.w	800bffc <_malloc_r>
 800de76:	b92a      	cbnz	r2, 800de84 <_realloc_r+0x24>
 800de78:	f7fe f854 	bl	800bf24 <_free_r>
 800de7c:	4625      	mov	r5, r4
 800de7e:	4628      	mov	r0, r5
 800de80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de84:	f000 f9d5 	bl	800e232 <_malloc_usable_size_r>
 800de88:	4284      	cmp	r4, r0
 800de8a:	4607      	mov	r7, r0
 800de8c:	d802      	bhi.n	800de94 <_realloc_r+0x34>
 800de8e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800de92:	d812      	bhi.n	800deba <_realloc_r+0x5a>
 800de94:	4621      	mov	r1, r4
 800de96:	4640      	mov	r0, r8
 800de98:	f7fe f8b0 	bl	800bffc <_malloc_r>
 800de9c:	4605      	mov	r5, r0
 800de9e:	2800      	cmp	r0, #0
 800dea0:	d0ed      	beq.n	800de7e <_realloc_r+0x1e>
 800dea2:	42bc      	cmp	r4, r7
 800dea4:	4622      	mov	r2, r4
 800dea6:	4631      	mov	r1, r6
 800dea8:	bf28      	it	cs
 800deaa:	463a      	movcs	r2, r7
 800deac:	f7fe f824 	bl	800bef8 <memcpy>
 800deb0:	4631      	mov	r1, r6
 800deb2:	4640      	mov	r0, r8
 800deb4:	f7fe f836 	bl	800bf24 <_free_r>
 800deb8:	e7e1      	b.n	800de7e <_realloc_r+0x1e>
 800deba:	4635      	mov	r5, r6
 800debc:	e7df      	b.n	800de7e <_realloc_r+0x1e>

0800debe <__ssputs_r>:
 800debe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dec2:	688e      	ldr	r6, [r1, #8]
 800dec4:	429e      	cmp	r6, r3
 800dec6:	4682      	mov	sl, r0
 800dec8:	460c      	mov	r4, r1
 800deca:	4690      	mov	r8, r2
 800decc:	461f      	mov	r7, r3
 800dece:	d838      	bhi.n	800df42 <__ssputs_r+0x84>
 800ded0:	898a      	ldrh	r2, [r1, #12]
 800ded2:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800ded6:	d032      	beq.n	800df3e <__ssputs_r+0x80>
 800ded8:	6825      	ldr	r5, [r4, #0]
 800deda:	6909      	ldr	r1, [r1, #16]
 800dedc:	eba5 0901 	sub.w	r9, r5, r1
 800dee0:	6965      	ldr	r5, [r4, #20]
 800dee2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800dee6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800deea:	3301      	adds	r3, #1
 800deec:	444b      	add	r3, r9
 800deee:	106d      	asrs	r5, r5, #1
 800def0:	429d      	cmp	r5, r3
 800def2:	bf38      	it	cc
 800def4:	461d      	movcc	r5, r3
 800def6:	0553      	lsls	r3, r2, #21
 800def8:	d531      	bpl.n	800df5e <__ssputs_r+0xa0>
 800defa:	4629      	mov	r1, r5
 800defc:	f7fe f87e 	bl	800bffc <_malloc_r>
 800df00:	4606      	mov	r6, r0
 800df02:	b950      	cbnz	r0, 800df1a <__ssputs_r+0x5c>
 800df04:	230c      	movs	r3, #12
 800df06:	f8ca 3000 	str.w	r3, [sl]
 800df0a:	89a3      	ldrh	r3, [r4, #12]
 800df0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800df10:	81a3      	strh	r3, [r4, #12]
 800df12:	f04f 30ff 	mov.w	r0, #4294967295
 800df16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800df1a:	6921      	ldr	r1, [r4, #16]
 800df1c:	464a      	mov	r2, r9
 800df1e:	f7fd ffeb 	bl	800bef8 <memcpy>
 800df22:	89a3      	ldrh	r3, [r4, #12]
 800df24:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800df28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800df2c:	81a3      	strh	r3, [r4, #12]
 800df2e:	6126      	str	r6, [r4, #16]
 800df30:	6165      	str	r5, [r4, #20]
 800df32:	444e      	add	r6, r9
 800df34:	eba5 0509 	sub.w	r5, r5, r9
 800df38:	6026      	str	r6, [r4, #0]
 800df3a:	60a5      	str	r5, [r4, #8]
 800df3c:	463e      	mov	r6, r7
 800df3e:	42be      	cmp	r6, r7
 800df40:	d900      	bls.n	800df44 <__ssputs_r+0x86>
 800df42:	463e      	mov	r6, r7
 800df44:	6820      	ldr	r0, [r4, #0]
 800df46:	4632      	mov	r2, r6
 800df48:	4641      	mov	r1, r8
 800df4a:	f000 f958 	bl	800e1fe <memmove>
 800df4e:	68a3      	ldr	r3, [r4, #8]
 800df50:	1b9b      	subs	r3, r3, r6
 800df52:	60a3      	str	r3, [r4, #8]
 800df54:	6823      	ldr	r3, [r4, #0]
 800df56:	4433      	add	r3, r6
 800df58:	6023      	str	r3, [r4, #0]
 800df5a:	2000      	movs	r0, #0
 800df5c:	e7db      	b.n	800df16 <__ssputs_r+0x58>
 800df5e:	462a      	mov	r2, r5
 800df60:	f7ff ff7e 	bl	800de60 <_realloc_r>
 800df64:	4606      	mov	r6, r0
 800df66:	2800      	cmp	r0, #0
 800df68:	d1e1      	bne.n	800df2e <__ssputs_r+0x70>
 800df6a:	6921      	ldr	r1, [r4, #16]
 800df6c:	4650      	mov	r0, sl
 800df6e:	f7fd ffd9 	bl	800bf24 <_free_r>
 800df72:	e7c7      	b.n	800df04 <__ssputs_r+0x46>

0800df74 <_svfiprintf_r>:
 800df74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df78:	4698      	mov	r8, r3
 800df7a:	898b      	ldrh	r3, [r1, #12]
 800df7c:	061b      	lsls	r3, r3, #24
 800df7e:	b09d      	sub	sp, #116	; 0x74
 800df80:	4607      	mov	r7, r0
 800df82:	460d      	mov	r5, r1
 800df84:	4614      	mov	r4, r2
 800df86:	d50e      	bpl.n	800dfa6 <_svfiprintf_r+0x32>
 800df88:	690b      	ldr	r3, [r1, #16]
 800df8a:	b963      	cbnz	r3, 800dfa6 <_svfiprintf_r+0x32>
 800df8c:	2140      	movs	r1, #64	; 0x40
 800df8e:	f7fe f835 	bl	800bffc <_malloc_r>
 800df92:	6028      	str	r0, [r5, #0]
 800df94:	6128      	str	r0, [r5, #16]
 800df96:	b920      	cbnz	r0, 800dfa2 <_svfiprintf_r+0x2e>
 800df98:	230c      	movs	r3, #12
 800df9a:	603b      	str	r3, [r7, #0]
 800df9c:	f04f 30ff 	mov.w	r0, #4294967295
 800dfa0:	e0d1      	b.n	800e146 <_svfiprintf_r+0x1d2>
 800dfa2:	2340      	movs	r3, #64	; 0x40
 800dfa4:	616b      	str	r3, [r5, #20]
 800dfa6:	2300      	movs	r3, #0
 800dfa8:	9309      	str	r3, [sp, #36]	; 0x24
 800dfaa:	2320      	movs	r3, #32
 800dfac:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dfb0:	f8cd 800c 	str.w	r8, [sp, #12]
 800dfb4:	2330      	movs	r3, #48	; 0x30
 800dfb6:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e160 <_svfiprintf_r+0x1ec>
 800dfba:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800dfbe:	f04f 0901 	mov.w	r9, #1
 800dfc2:	4623      	mov	r3, r4
 800dfc4:	469a      	mov	sl, r3
 800dfc6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dfca:	b10a      	cbz	r2, 800dfd0 <_svfiprintf_r+0x5c>
 800dfcc:	2a25      	cmp	r2, #37	; 0x25
 800dfce:	d1f9      	bne.n	800dfc4 <_svfiprintf_r+0x50>
 800dfd0:	ebba 0b04 	subs.w	fp, sl, r4
 800dfd4:	d00b      	beq.n	800dfee <_svfiprintf_r+0x7a>
 800dfd6:	465b      	mov	r3, fp
 800dfd8:	4622      	mov	r2, r4
 800dfda:	4629      	mov	r1, r5
 800dfdc:	4638      	mov	r0, r7
 800dfde:	f7ff ff6e 	bl	800debe <__ssputs_r>
 800dfe2:	3001      	adds	r0, #1
 800dfe4:	f000 80aa 	beq.w	800e13c <_svfiprintf_r+0x1c8>
 800dfe8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800dfea:	445a      	add	r2, fp
 800dfec:	9209      	str	r2, [sp, #36]	; 0x24
 800dfee:	f89a 3000 	ldrb.w	r3, [sl]
 800dff2:	2b00      	cmp	r3, #0
 800dff4:	f000 80a2 	beq.w	800e13c <_svfiprintf_r+0x1c8>
 800dff8:	2300      	movs	r3, #0
 800dffa:	f04f 32ff 	mov.w	r2, #4294967295
 800dffe:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e002:	f10a 0a01 	add.w	sl, sl, #1
 800e006:	9304      	str	r3, [sp, #16]
 800e008:	9307      	str	r3, [sp, #28]
 800e00a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e00e:	931a      	str	r3, [sp, #104]	; 0x68
 800e010:	4654      	mov	r4, sl
 800e012:	2205      	movs	r2, #5
 800e014:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e018:	4851      	ldr	r0, [pc, #324]	; (800e160 <_svfiprintf_r+0x1ec>)
 800e01a:	f7f2 f901 	bl	8000220 <memchr>
 800e01e:	9a04      	ldr	r2, [sp, #16]
 800e020:	b9d8      	cbnz	r0, 800e05a <_svfiprintf_r+0xe6>
 800e022:	06d0      	lsls	r0, r2, #27
 800e024:	bf44      	itt	mi
 800e026:	2320      	movmi	r3, #32
 800e028:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e02c:	0711      	lsls	r1, r2, #28
 800e02e:	bf44      	itt	mi
 800e030:	232b      	movmi	r3, #43	; 0x2b
 800e032:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e036:	f89a 3000 	ldrb.w	r3, [sl]
 800e03a:	2b2a      	cmp	r3, #42	; 0x2a
 800e03c:	d015      	beq.n	800e06a <_svfiprintf_r+0xf6>
 800e03e:	9a07      	ldr	r2, [sp, #28]
 800e040:	4654      	mov	r4, sl
 800e042:	2000      	movs	r0, #0
 800e044:	f04f 0c0a 	mov.w	ip, #10
 800e048:	4621      	mov	r1, r4
 800e04a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e04e:	3b30      	subs	r3, #48	; 0x30
 800e050:	2b09      	cmp	r3, #9
 800e052:	d94e      	bls.n	800e0f2 <_svfiprintf_r+0x17e>
 800e054:	b1b0      	cbz	r0, 800e084 <_svfiprintf_r+0x110>
 800e056:	9207      	str	r2, [sp, #28]
 800e058:	e014      	b.n	800e084 <_svfiprintf_r+0x110>
 800e05a:	eba0 0308 	sub.w	r3, r0, r8
 800e05e:	fa09 f303 	lsl.w	r3, r9, r3
 800e062:	4313      	orrs	r3, r2
 800e064:	9304      	str	r3, [sp, #16]
 800e066:	46a2      	mov	sl, r4
 800e068:	e7d2      	b.n	800e010 <_svfiprintf_r+0x9c>
 800e06a:	9b03      	ldr	r3, [sp, #12]
 800e06c:	1d19      	adds	r1, r3, #4
 800e06e:	681b      	ldr	r3, [r3, #0]
 800e070:	9103      	str	r1, [sp, #12]
 800e072:	2b00      	cmp	r3, #0
 800e074:	bfbb      	ittet	lt
 800e076:	425b      	neglt	r3, r3
 800e078:	f042 0202 	orrlt.w	r2, r2, #2
 800e07c:	9307      	strge	r3, [sp, #28]
 800e07e:	9307      	strlt	r3, [sp, #28]
 800e080:	bfb8      	it	lt
 800e082:	9204      	strlt	r2, [sp, #16]
 800e084:	7823      	ldrb	r3, [r4, #0]
 800e086:	2b2e      	cmp	r3, #46	; 0x2e
 800e088:	d10c      	bne.n	800e0a4 <_svfiprintf_r+0x130>
 800e08a:	7863      	ldrb	r3, [r4, #1]
 800e08c:	2b2a      	cmp	r3, #42	; 0x2a
 800e08e:	d135      	bne.n	800e0fc <_svfiprintf_r+0x188>
 800e090:	9b03      	ldr	r3, [sp, #12]
 800e092:	1d1a      	adds	r2, r3, #4
 800e094:	681b      	ldr	r3, [r3, #0]
 800e096:	9203      	str	r2, [sp, #12]
 800e098:	2b00      	cmp	r3, #0
 800e09a:	bfb8      	it	lt
 800e09c:	f04f 33ff 	movlt.w	r3, #4294967295
 800e0a0:	3402      	adds	r4, #2
 800e0a2:	9305      	str	r3, [sp, #20]
 800e0a4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e170 <_svfiprintf_r+0x1fc>
 800e0a8:	7821      	ldrb	r1, [r4, #0]
 800e0aa:	2203      	movs	r2, #3
 800e0ac:	4650      	mov	r0, sl
 800e0ae:	f7f2 f8b7 	bl	8000220 <memchr>
 800e0b2:	b140      	cbz	r0, 800e0c6 <_svfiprintf_r+0x152>
 800e0b4:	2340      	movs	r3, #64	; 0x40
 800e0b6:	eba0 000a 	sub.w	r0, r0, sl
 800e0ba:	fa03 f000 	lsl.w	r0, r3, r0
 800e0be:	9b04      	ldr	r3, [sp, #16]
 800e0c0:	4303      	orrs	r3, r0
 800e0c2:	3401      	adds	r4, #1
 800e0c4:	9304      	str	r3, [sp, #16]
 800e0c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e0ca:	4826      	ldr	r0, [pc, #152]	; (800e164 <_svfiprintf_r+0x1f0>)
 800e0cc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e0d0:	2206      	movs	r2, #6
 800e0d2:	f7f2 f8a5 	bl	8000220 <memchr>
 800e0d6:	2800      	cmp	r0, #0
 800e0d8:	d038      	beq.n	800e14c <_svfiprintf_r+0x1d8>
 800e0da:	4b23      	ldr	r3, [pc, #140]	; (800e168 <_svfiprintf_r+0x1f4>)
 800e0dc:	bb1b      	cbnz	r3, 800e126 <_svfiprintf_r+0x1b2>
 800e0de:	9b03      	ldr	r3, [sp, #12]
 800e0e0:	3307      	adds	r3, #7
 800e0e2:	f023 0307 	bic.w	r3, r3, #7
 800e0e6:	3308      	adds	r3, #8
 800e0e8:	9303      	str	r3, [sp, #12]
 800e0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e0ec:	4433      	add	r3, r6
 800e0ee:	9309      	str	r3, [sp, #36]	; 0x24
 800e0f0:	e767      	b.n	800dfc2 <_svfiprintf_r+0x4e>
 800e0f2:	fb0c 3202 	mla	r2, ip, r2, r3
 800e0f6:	460c      	mov	r4, r1
 800e0f8:	2001      	movs	r0, #1
 800e0fa:	e7a5      	b.n	800e048 <_svfiprintf_r+0xd4>
 800e0fc:	2300      	movs	r3, #0
 800e0fe:	3401      	adds	r4, #1
 800e100:	9305      	str	r3, [sp, #20]
 800e102:	4619      	mov	r1, r3
 800e104:	f04f 0c0a 	mov.w	ip, #10
 800e108:	4620      	mov	r0, r4
 800e10a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e10e:	3a30      	subs	r2, #48	; 0x30
 800e110:	2a09      	cmp	r2, #9
 800e112:	d903      	bls.n	800e11c <_svfiprintf_r+0x1a8>
 800e114:	2b00      	cmp	r3, #0
 800e116:	d0c5      	beq.n	800e0a4 <_svfiprintf_r+0x130>
 800e118:	9105      	str	r1, [sp, #20]
 800e11a:	e7c3      	b.n	800e0a4 <_svfiprintf_r+0x130>
 800e11c:	fb0c 2101 	mla	r1, ip, r1, r2
 800e120:	4604      	mov	r4, r0
 800e122:	2301      	movs	r3, #1
 800e124:	e7f0      	b.n	800e108 <_svfiprintf_r+0x194>
 800e126:	ab03      	add	r3, sp, #12
 800e128:	9300      	str	r3, [sp, #0]
 800e12a:	462a      	mov	r2, r5
 800e12c:	4b0f      	ldr	r3, [pc, #60]	; (800e16c <_svfiprintf_r+0x1f8>)
 800e12e:	a904      	add	r1, sp, #16
 800e130:	4638      	mov	r0, r7
 800e132:	f7fe f877 	bl	800c224 <_printf_float>
 800e136:	1c42      	adds	r2, r0, #1
 800e138:	4606      	mov	r6, r0
 800e13a:	d1d6      	bne.n	800e0ea <_svfiprintf_r+0x176>
 800e13c:	89ab      	ldrh	r3, [r5, #12]
 800e13e:	065b      	lsls	r3, r3, #25
 800e140:	f53f af2c 	bmi.w	800df9c <_svfiprintf_r+0x28>
 800e144:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e146:	b01d      	add	sp, #116	; 0x74
 800e148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e14c:	ab03      	add	r3, sp, #12
 800e14e:	9300      	str	r3, [sp, #0]
 800e150:	462a      	mov	r2, r5
 800e152:	4b06      	ldr	r3, [pc, #24]	; (800e16c <_svfiprintf_r+0x1f8>)
 800e154:	a904      	add	r1, sp, #16
 800e156:	4638      	mov	r0, r7
 800e158:	f7fe fb08 	bl	800c76c <_printf_i>
 800e15c:	e7eb      	b.n	800e136 <_svfiprintf_r+0x1c2>
 800e15e:	bf00      	nop
 800e160:	08076b3c 	.word	0x08076b3c
 800e164:	08076b46 	.word	0x08076b46
 800e168:	0800c225 	.word	0x0800c225
 800e16c:	0800debf 	.word	0x0800debf
 800e170:	08076b42 	.word	0x08076b42

0800e174 <__assert_func>:
 800e174:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e176:	4614      	mov	r4, r2
 800e178:	461a      	mov	r2, r3
 800e17a:	4b09      	ldr	r3, [pc, #36]	; (800e1a0 <__assert_func+0x2c>)
 800e17c:	681b      	ldr	r3, [r3, #0]
 800e17e:	4605      	mov	r5, r0
 800e180:	68d8      	ldr	r0, [r3, #12]
 800e182:	b14c      	cbz	r4, 800e198 <__assert_func+0x24>
 800e184:	4b07      	ldr	r3, [pc, #28]	; (800e1a4 <__assert_func+0x30>)
 800e186:	9100      	str	r1, [sp, #0]
 800e188:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e18c:	4906      	ldr	r1, [pc, #24]	; (800e1a8 <__assert_func+0x34>)
 800e18e:	462b      	mov	r3, r5
 800e190:	f000 f80e 	bl	800e1b0 <fiprintf>
 800e194:	f000 fa7c 	bl	800e690 <abort>
 800e198:	4b04      	ldr	r3, [pc, #16]	; (800e1ac <__assert_func+0x38>)
 800e19a:	461c      	mov	r4, r3
 800e19c:	e7f3      	b.n	800e186 <__assert_func+0x12>
 800e19e:	bf00      	nop
 800e1a0:	20004b48 	.word	0x20004b48
 800e1a4:	08076b4d 	.word	0x08076b4d
 800e1a8:	08076b5a 	.word	0x08076b5a
 800e1ac:	08076b88 	.word	0x08076b88

0800e1b0 <fiprintf>:
 800e1b0:	b40e      	push	{r1, r2, r3}
 800e1b2:	b503      	push	{r0, r1, lr}
 800e1b4:	4601      	mov	r1, r0
 800e1b6:	ab03      	add	r3, sp, #12
 800e1b8:	4805      	ldr	r0, [pc, #20]	; (800e1d0 <fiprintf+0x20>)
 800e1ba:	f853 2b04 	ldr.w	r2, [r3], #4
 800e1be:	6800      	ldr	r0, [r0, #0]
 800e1c0:	9301      	str	r3, [sp, #4]
 800e1c2:	f000 f867 	bl	800e294 <_vfiprintf_r>
 800e1c6:	b002      	add	sp, #8
 800e1c8:	f85d eb04 	ldr.w	lr, [sp], #4
 800e1cc:	b003      	add	sp, #12
 800e1ce:	4770      	bx	lr
 800e1d0:	20004b48 	.word	0x20004b48

0800e1d4 <__retarget_lock_init_recursive>:
 800e1d4:	4770      	bx	lr

0800e1d6 <__retarget_lock_acquire_recursive>:
 800e1d6:	4770      	bx	lr

0800e1d8 <__retarget_lock_release_recursive>:
 800e1d8:	4770      	bx	lr

0800e1da <__ascii_mbtowc>:
 800e1da:	b082      	sub	sp, #8
 800e1dc:	b901      	cbnz	r1, 800e1e0 <__ascii_mbtowc+0x6>
 800e1de:	a901      	add	r1, sp, #4
 800e1e0:	b142      	cbz	r2, 800e1f4 <__ascii_mbtowc+0x1a>
 800e1e2:	b14b      	cbz	r3, 800e1f8 <__ascii_mbtowc+0x1e>
 800e1e4:	7813      	ldrb	r3, [r2, #0]
 800e1e6:	600b      	str	r3, [r1, #0]
 800e1e8:	7812      	ldrb	r2, [r2, #0]
 800e1ea:	1e10      	subs	r0, r2, #0
 800e1ec:	bf18      	it	ne
 800e1ee:	2001      	movne	r0, #1
 800e1f0:	b002      	add	sp, #8
 800e1f2:	4770      	bx	lr
 800e1f4:	4610      	mov	r0, r2
 800e1f6:	e7fb      	b.n	800e1f0 <__ascii_mbtowc+0x16>
 800e1f8:	f06f 0001 	mvn.w	r0, #1
 800e1fc:	e7f8      	b.n	800e1f0 <__ascii_mbtowc+0x16>

0800e1fe <memmove>:
 800e1fe:	4288      	cmp	r0, r1
 800e200:	b510      	push	{r4, lr}
 800e202:	eb01 0402 	add.w	r4, r1, r2
 800e206:	d902      	bls.n	800e20e <memmove+0x10>
 800e208:	4284      	cmp	r4, r0
 800e20a:	4623      	mov	r3, r4
 800e20c:	d807      	bhi.n	800e21e <memmove+0x20>
 800e20e:	1e43      	subs	r3, r0, #1
 800e210:	42a1      	cmp	r1, r4
 800e212:	d008      	beq.n	800e226 <memmove+0x28>
 800e214:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e218:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e21c:	e7f8      	b.n	800e210 <memmove+0x12>
 800e21e:	4402      	add	r2, r0
 800e220:	4601      	mov	r1, r0
 800e222:	428a      	cmp	r2, r1
 800e224:	d100      	bne.n	800e228 <memmove+0x2a>
 800e226:	bd10      	pop	{r4, pc}
 800e228:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e22c:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e230:	e7f7      	b.n	800e222 <memmove+0x24>

0800e232 <_malloc_usable_size_r>:
 800e232:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e236:	1f18      	subs	r0, r3, #4
 800e238:	2b00      	cmp	r3, #0
 800e23a:	bfbc      	itt	lt
 800e23c:	580b      	ldrlt	r3, [r1, r0]
 800e23e:	18c0      	addlt	r0, r0, r3
 800e240:	4770      	bx	lr

0800e242 <__sfputc_r>:
 800e242:	6893      	ldr	r3, [r2, #8]
 800e244:	3b01      	subs	r3, #1
 800e246:	2b00      	cmp	r3, #0
 800e248:	b410      	push	{r4}
 800e24a:	6093      	str	r3, [r2, #8]
 800e24c:	da08      	bge.n	800e260 <__sfputc_r+0x1e>
 800e24e:	6994      	ldr	r4, [r2, #24]
 800e250:	42a3      	cmp	r3, r4
 800e252:	db01      	blt.n	800e258 <__sfputc_r+0x16>
 800e254:	290a      	cmp	r1, #10
 800e256:	d103      	bne.n	800e260 <__sfputc_r+0x1e>
 800e258:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e25c:	f000 b94a 	b.w	800e4f4 <__swbuf_r>
 800e260:	6813      	ldr	r3, [r2, #0]
 800e262:	1c58      	adds	r0, r3, #1
 800e264:	6010      	str	r0, [r2, #0]
 800e266:	7019      	strb	r1, [r3, #0]
 800e268:	4608      	mov	r0, r1
 800e26a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e26e:	4770      	bx	lr

0800e270 <__sfputs_r>:
 800e270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e272:	4606      	mov	r6, r0
 800e274:	460f      	mov	r7, r1
 800e276:	4614      	mov	r4, r2
 800e278:	18d5      	adds	r5, r2, r3
 800e27a:	42ac      	cmp	r4, r5
 800e27c:	d101      	bne.n	800e282 <__sfputs_r+0x12>
 800e27e:	2000      	movs	r0, #0
 800e280:	e007      	b.n	800e292 <__sfputs_r+0x22>
 800e282:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e286:	463a      	mov	r2, r7
 800e288:	4630      	mov	r0, r6
 800e28a:	f7ff ffda 	bl	800e242 <__sfputc_r>
 800e28e:	1c43      	adds	r3, r0, #1
 800e290:	d1f3      	bne.n	800e27a <__sfputs_r+0xa>
 800e292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e294 <_vfiprintf_r>:
 800e294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e298:	460d      	mov	r5, r1
 800e29a:	b09d      	sub	sp, #116	; 0x74
 800e29c:	4614      	mov	r4, r2
 800e29e:	4698      	mov	r8, r3
 800e2a0:	4606      	mov	r6, r0
 800e2a2:	b118      	cbz	r0, 800e2ac <_vfiprintf_r+0x18>
 800e2a4:	6983      	ldr	r3, [r0, #24]
 800e2a6:	b90b      	cbnz	r3, 800e2ac <_vfiprintf_r+0x18>
 800e2a8:	f000 fb14 	bl	800e8d4 <__sinit>
 800e2ac:	4b89      	ldr	r3, [pc, #548]	; (800e4d4 <_vfiprintf_r+0x240>)
 800e2ae:	429d      	cmp	r5, r3
 800e2b0:	d11b      	bne.n	800e2ea <_vfiprintf_r+0x56>
 800e2b2:	6875      	ldr	r5, [r6, #4]
 800e2b4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e2b6:	07d9      	lsls	r1, r3, #31
 800e2b8:	d405      	bmi.n	800e2c6 <_vfiprintf_r+0x32>
 800e2ba:	89ab      	ldrh	r3, [r5, #12]
 800e2bc:	059a      	lsls	r2, r3, #22
 800e2be:	d402      	bmi.n	800e2c6 <_vfiprintf_r+0x32>
 800e2c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e2c2:	f7ff ff88 	bl	800e1d6 <__retarget_lock_acquire_recursive>
 800e2c6:	89ab      	ldrh	r3, [r5, #12]
 800e2c8:	071b      	lsls	r3, r3, #28
 800e2ca:	d501      	bpl.n	800e2d0 <_vfiprintf_r+0x3c>
 800e2cc:	692b      	ldr	r3, [r5, #16]
 800e2ce:	b9eb      	cbnz	r3, 800e30c <_vfiprintf_r+0x78>
 800e2d0:	4629      	mov	r1, r5
 800e2d2:	4630      	mov	r0, r6
 800e2d4:	f000 f96e 	bl	800e5b4 <__swsetup_r>
 800e2d8:	b1c0      	cbz	r0, 800e30c <_vfiprintf_r+0x78>
 800e2da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e2dc:	07dc      	lsls	r4, r3, #31
 800e2de:	d50e      	bpl.n	800e2fe <_vfiprintf_r+0x6a>
 800e2e0:	f04f 30ff 	mov.w	r0, #4294967295
 800e2e4:	b01d      	add	sp, #116	; 0x74
 800e2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2ea:	4b7b      	ldr	r3, [pc, #492]	; (800e4d8 <_vfiprintf_r+0x244>)
 800e2ec:	429d      	cmp	r5, r3
 800e2ee:	d101      	bne.n	800e2f4 <_vfiprintf_r+0x60>
 800e2f0:	68b5      	ldr	r5, [r6, #8]
 800e2f2:	e7df      	b.n	800e2b4 <_vfiprintf_r+0x20>
 800e2f4:	4b79      	ldr	r3, [pc, #484]	; (800e4dc <_vfiprintf_r+0x248>)
 800e2f6:	429d      	cmp	r5, r3
 800e2f8:	bf08      	it	eq
 800e2fa:	68f5      	ldreq	r5, [r6, #12]
 800e2fc:	e7da      	b.n	800e2b4 <_vfiprintf_r+0x20>
 800e2fe:	89ab      	ldrh	r3, [r5, #12]
 800e300:	0598      	lsls	r0, r3, #22
 800e302:	d4ed      	bmi.n	800e2e0 <_vfiprintf_r+0x4c>
 800e304:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e306:	f7ff ff67 	bl	800e1d8 <__retarget_lock_release_recursive>
 800e30a:	e7e9      	b.n	800e2e0 <_vfiprintf_r+0x4c>
 800e30c:	2300      	movs	r3, #0
 800e30e:	9309      	str	r3, [sp, #36]	; 0x24
 800e310:	2320      	movs	r3, #32
 800e312:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e316:	f8cd 800c 	str.w	r8, [sp, #12]
 800e31a:	2330      	movs	r3, #48	; 0x30
 800e31c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800e4e0 <_vfiprintf_r+0x24c>
 800e320:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e324:	f04f 0901 	mov.w	r9, #1
 800e328:	4623      	mov	r3, r4
 800e32a:	469a      	mov	sl, r3
 800e32c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e330:	b10a      	cbz	r2, 800e336 <_vfiprintf_r+0xa2>
 800e332:	2a25      	cmp	r2, #37	; 0x25
 800e334:	d1f9      	bne.n	800e32a <_vfiprintf_r+0x96>
 800e336:	ebba 0b04 	subs.w	fp, sl, r4
 800e33a:	d00b      	beq.n	800e354 <_vfiprintf_r+0xc0>
 800e33c:	465b      	mov	r3, fp
 800e33e:	4622      	mov	r2, r4
 800e340:	4629      	mov	r1, r5
 800e342:	4630      	mov	r0, r6
 800e344:	f7ff ff94 	bl	800e270 <__sfputs_r>
 800e348:	3001      	adds	r0, #1
 800e34a:	f000 80aa 	beq.w	800e4a2 <_vfiprintf_r+0x20e>
 800e34e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e350:	445a      	add	r2, fp
 800e352:	9209      	str	r2, [sp, #36]	; 0x24
 800e354:	f89a 3000 	ldrb.w	r3, [sl]
 800e358:	2b00      	cmp	r3, #0
 800e35a:	f000 80a2 	beq.w	800e4a2 <_vfiprintf_r+0x20e>
 800e35e:	2300      	movs	r3, #0
 800e360:	f04f 32ff 	mov.w	r2, #4294967295
 800e364:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e368:	f10a 0a01 	add.w	sl, sl, #1
 800e36c:	9304      	str	r3, [sp, #16]
 800e36e:	9307      	str	r3, [sp, #28]
 800e370:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e374:	931a      	str	r3, [sp, #104]	; 0x68
 800e376:	4654      	mov	r4, sl
 800e378:	2205      	movs	r2, #5
 800e37a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e37e:	4858      	ldr	r0, [pc, #352]	; (800e4e0 <_vfiprintf_r+0x24c>)
 800e380:	f7f1 ff4e 	bl	8000220 <memchr>
 800e384:	9a04      	ldr	r2, [sp, #16]
 800e386:	b9d8      	cbnz	r0, 800e3c0 <_vfiprintf_r+0x12c>
 800e388:	06d1      	lsls	r1, r2, #27
 800e38a:	bf44      	itt	mi
 800e38c:	2320      	movmi	r3, #32
 800e38e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e392:	0713      	lsls	r3, r2, #28
 800e394:	bf44      	itt	mi
 800e396:	232b      	movmi	r3, #43	; 0x2b
 800e398:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e39c:	f89a 3000 	ldrb.w	r3, [sl]
 800e3a0:	2b2a      	cmp	r3, #42	; 0x2a
 800e3a2:	d015      	beq.n	800e3d0 <_vfiprintf_r+0x13c>
 800e3a4:	9a07      	ldr	r2, [sp, #28]
 800e3a6:	4654      	mov	r4, sl
 800e3a8:	2000      	movs	r0, #0
 800e3aa:	f04f 0c0a 	mov.w	ip, #10
 800e3ae:	4621      	mov	r1, r4
 800e3b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e3b4:	3b30      	subs	r3, #48	; 0x30
 800e3b6:	2b09      	cmp	r3, #9
 800e3b8:	d94e      	bls.n	800e458 <_vfiprintf_r+0x1c4>
 800e3ba:	b1b0      	cbz	r0, 800e3ea <_vfiprintf_r+0x156>
 800e3bc:	9207      	str	r2, [sp, #28]
 800e3be:	e014      	b.n	800e3ea <_vfiprintf_r+0x156>
 800e3c0:	eba0 0308 	sub.w	r3, r0, r8
 800e3c4:	fa09 f303 	lsl.w	r3, r9, r3
 800e3c8:	4313      	orrs	r3, r2
 800e3ca:	9304      	str	r3, [sp, #16]
 800e3cc:	46a2      	mov	sl, r4
 800e3ce:	e7d2      	b.n	800e376 <_vfiprintf_r+0xe2>
 800e3d0:	9b03      	ldr	r3, [sp, #12]
 800e3d2:	1d19      	adds	r1, r3, #4
 800e3d4:	681b      	ldr	r3, [r3, #0]
 800e3d6:	9103      	str	r1, [sp, #12]
 800e3d8:	2b00      	cmp	r3, #0
 800e3da:	bfbb      	ittet	lt
 800e3dc:	425b      	neglt	r3, r3
 800e3de:	f042 0202 	orrlt.w	r2, r2, #2
 800e3e2:	9307      	strge	r3, [sp, #28]
 800e3e4:	9307      	strlt	r3, [sp, #28]
 800e3e6:	bfb8      	it	lt
 800e3e8:	9204      	strlt	r2, [sp, #16]
 800e3ea:	7823      	ldrb	r3, [r4, #0]
 800e3ec:	2b2e      	cmp	r3, #46	; 0x2e
 800e3ee:	d10c      	bne.n	800e40a <_vfiprintf_r+0x176>
 800e3f0:	7863      	ldrb	r3, [r4, #1]
 800e3f2:	2b2a      	cmp	r3, #42	; 0x2a
 800e3f4:	d135      	bne.n	800e462 <_vfiprintf_r+0x1ce>
 800e3f6:	9b03      	ldr	r3, [sp, #12]
 800e3f8:	1d1a      	adds	r2, r3, #4
 800e3fa:	681b      	ldr	r3, [r3, #0]
 800e3fc:	9203      	str	r2, [sp, #12]
 800e3fe:	2b00      	cmp	r3, #0
 800e400:	bfb8      	it	lt
 800e402:	f04f 33ff 	movlt.w	r3, #4294967295
 800e406:	3402      	adds	r4, #2
 800e408:	9305      	str	r3, [sp, #20]
 800e40a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800e4f0 <_vfiprintf_r+0x25c>
 800e40e:	7821      	ldrb	r1, [r4, #0]
 800e410:	2203      	movs	r2, #3
 800e412:	4650      	mov	r0, sl
 800e414:	f7f1 ff04 	bl	8000220 <memchr>
 800e418:	b140      	cbz	r0, 800e42c <_vfiprintf_r+0x198>
 800e41a:	2340      	movs	r3, #64	; 0x40
 800e41c:	eba0 000a 	sub.w	r0, r0, sl
 800e420:	fa03 f000 	lsl.w	r0, r3, r0
 800e424:	9b04      	ldr	r3, [sp, #16]
 800e426:	4303      	orrs	r3, r0
 800e428:	3401      	adds	r4, #1
 800e42a:	9304      	str	r3, [sp, #16]
 800e42c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e430:	482c      	ldr	r0, [pc, #176]	; (800e4e4 <_vfiprintf_r+0x250>)
 800e432:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e436:	2206      	movs	r2, #6
 800e438:	f7f1 fef2 	bl	8000220 <memchr>
 800e43c:	2800      	cmp	r0, #0
 800e43e:	d03f      	beq.n	800e4c0 <_vfiprintf_r+0x22c>
 800e440:	4b29      	ldr	r3, [pc, #164]	; (800e4e8 <_vfiprintf_r+0x254>)
 800e442:	bb1b      	cbnz	r3, 800e48c <_vfiprintf_r+0x1f8>
 800e444:	9b03      	ldr	r3, [sp, #12]
 800e446:	3307      	adds	r3, #7
 800e448:	f023 0307 	bic.w	r3, r3, #7
 800e44c:	3308      	adds	r3, #8
 800e44e:	9303      	str	r3, [sp, #12]
 800e450:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e452:	443b      	add	r3, r7
 800e454:	9309      	str	r3, [sp, #36]	; 0x24
 800e456:	e767      	b.n	800e328 <_vfiprintf_r+0x94>
 800e458:	fb0c 3202 	mla	r2, ip, r2, r3
 800e45c:	460c      	mov	r4, r1
 800e45e:	2001      	movs	r0, #1
 800e460:	e7a5      	b.n	800e3ae <_vfiprintf_r+0x11a>
 800e462:	2300      	movs	r3, #0
 800e464:	3401      	adds	r4, #1
 800e466:	9305      	str	r3, [sp, #20]
 800e468:	4619      	mov	r1, r3
 800e46a:	f04f 0c0a 	mov.w	ip, #10
 800e46e:	4620      	mov	r0, r4
 800e470:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e474:	3a30      	subs	r2, #48	; 0x30
 800e476:	2a09      	cmp	r2, #9
 800e478:	d903      	bls.n	800e482 <_vfiprintf_r+0x1ee>
 800e47a:	2b00      	cmp	r3, #0
 800e47c:	d0c5      	beq.n	800e40a <_vfiprintf_r+0x176>
 800e47e:	9105      	str	r1, [sp, #20]
 800e480:	e7c3      	b.n	800e40a <_vfiprintf_r+0x176>
 800e482:	fb0c 2101 	mla	r1, ip, r1, r2
 800e486:	4604      	mov	r4, r0
 800e488:	2301      	movs	r3, #1
 800e48a:	e7f0      	b.n	800e46e <_vfiprintf_r+0x1da>
 800e48c:	ab03      	add	r3, sp, #12
 800e48e:	9300      	str	r3, [sp, #0]
 800e490:	462a      	mov	r2, r5
 800e492:	4b16      	ldr	r3, [pc, #88]	; (800e4ec <_vfiprintf_r+0x258>)
 800e494:	a904      	add	r1, sp, #16
 800e496:	4630      	mov	r0, r6
 800e498:	f7fd fec4 	bl	800c224 <_printf_float>
 800e49c:	4607      	mov	r7, r0
 800e49e:	1c78      	adds	r0, r7, #1
 800e4a0:	d1d6      	bne.n	800e450 <_vfiprintf_r+0x1bc>
 800e4a2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e4a4:	07d9      	lsls	r1, r3, #31
 800e4a6:	d405      	bmi.n	800e4b4 <_vfiprintf_r+0x220>
 800e4a8:	89ab      	ldrh	r3, [r5, #12]
 800e4aa:	059a      	lsls	r2, r3, #22
 800e4ac:	d402      	bmi.n	800e4b4 <_vfiprintf_r+0x220>
 800e4ae:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e4b0:	f7ff fe92 	bl	800e1d8 <__retarget_lock_release_recursive>
 800e4b4:	89ab      	ldrh	r3, [r5, #12]
 800e4b6:	065b      	lsls	r3, r3, #25
 800e4b8:	f53f af12 	bmi.w	800e2e0 <_vfiprintf_r+0x4c>
 800e4bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e4be:	e711      	b.n	800e2e4 <_vfiprintf_r+0x50>
 800e4c0:	ab03      	add	r3, sp, #12
 800e4c2:	9300      	str	r3, [sp, #0]
 800e4c4:	462a      	mov	r2, r5
 800e4c6:	4b09      	ldr	r3, [pc, #36]	; (800e4ec <_vfiprintf_r+0x258>)
 800e4c8:	a904      	add	r1, sp, #16
 800e4ca:	4630      	mov	r0, r6
 800e4cc:	f7fe f94e 	bl	800c76c <_printf_i>
 800e4d0:	e7e4      	b.n	800e49c <_vfiprintf_r+0x208>
 800e4d2:	bf00      	nop
 800e4d4:	08076cb4 	.word	0x08076cb4
 800e4d8:	08076cd4 	.word	0x08076cd4
 800e4dc:	08076c94 	.word	0x08076c94
 800e4e0:	08076b3c 	.word	0x08076b3c
 800e4e4:	08076b46 	.word	0x08076b46
 800e4e8:	0800c225 	.word	0x0800c225
 800e4ec:	0800e271 	.word	0x0800e271
 800e4f0:	08076b42 	.word	0x08076b42

0800e4f4 <__swbuf_r>:
 800e4f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e4f6:	460e      	mov	r6, r1
 800e4f8:	4614      	mov	r4, r2
 800e4fa:	4605      	mov	r5, r0
 800e4fc:	b118      	cbz	r0, 800e506 <__swbuf_r+0x12>
 800e4fe:	6983      	ldr	r3, [r0, #24]
 800e500:	b90b      	cbnz	r3, 800e506 <__swbuf_r+0x12>
 800e502:	f000 f9e7 	bl	800e8d4 <__sinit>
 800e506:	4b21      	ldr	r3, [pc, #132]	; (800e58c <__swbuf_r+0x98>)
 800e508:	429c      	cmp	r4, r3
 800e50a:	d12b      	bne.n	800e564 <__swbuf_r+0x70>
 800e50c:	686c      	ldr	r4, [r5, #4]
 800e50e:	69a3      	ldr	r3, [r4, #24]
 800e510:	60a3      	str	r3, [r4, #8]
 800e512:	89a3      	ldrh	r3, [r4, #12]
 800e514:	071a      	lsls	r2, r3, #28
 800e516:	d52f      	bpl.n	800e578 <__swbuf_r+0x84>
 800e518:	6923      	ldr	r3, [r4, #16]
 800e51a:	b36b      	cbz	r3, 800e578 <__swbuf_r+0x84>
 800e51c:	6923      	ldr	r3, [r4, #16]
 800e51e:	6820      	ldr	r0, [r4, #0]
 800e520:	1ac0      	subs	r0, r0, r3
 800e522:	6963      	ldr	r3, [r4, #20]
 800e524:	b2f6      	uxtb	r6, r6
 800e526:	4283      	cmp	r3, r0
 800e528:	4637      	mov	r7, r6
 800e52a:	dc04      	bgt.n	800e536 <__swbuf_r+0x42>
 800e52c:	4621      	mov	r1, r4
 800e52e:	4628      	mov	r0, r5
 800e530:	f000 f93c 	bl	800e7ac <_fflush_r>
 800e534:	bb30      	cbnz	r0, 800e584 <__swbuf_r+0x90>
 800e536:	68a3      	ldr	r3, [r4, #8]
 800e538:	3b01      	subs	r3, #1
 800e53a:	60a3      	str	r3, [r4, #8]
 800e53c:	6823      	ldr	r3, [r4, #0]
 800e53e:	1c5a      	adds	r2, r3, #1
 800e540:	6022      	str	r2, [r4, #0]
 800e542:	701e      	strb	r6, [r3, #0]
 800e544:	6963      	ldr	r3, [r4, #20]
 800e546:	3001      	adds	r0, #1
 800e548:	4283      	cmp	r3, r0
 800e54a:	d004      	beq.n	800e556 <__swbuf_r+0x62>
 800e54c:	89a3      	ldrh	r3, [r4, #12]
 800e54e:	07db      	lsls	r3, r3, #31
 800e550:	d506      	bpl.n	800e560 <__swbuf_r+0x6c>
 800e552:	2e0a      	cmp	r6, #10
 800e554:	d104      	bne.n	800e560 <__swbuf_r+0x6c>
 800e556:	4621      	mov	r1, r4
 800e558:	4628      	mov	r0, r5
 800e55a:	f000 f927 	bl	800e7ac <_fflush_r>
 800e55e:	b988      	cbnz	r0, 800e584 <__swbuf_r+0x90>
 800e560:	4638      	mov	r0, r7
 800e562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e564:	4b0a      	ldr	r3, [pc, #40]	; (800e590 <__swbuf_r+0x9c>)
 800e566:	429c      	cmp	r4, r3
 800e568:	d101      	bne.n	800e56e <__swbuf_r+0x7a>
 800e56a:	68ac      	ldr	r4, [r5, #8]
 800e56c:	e7cf      	b.n	800e50e <__swbuf_r+0x1a>
 800e56e:	4b09      	ldr	r3, [pc, #36]	; (800e594 <__swbuf_r+0xa0>)
 800e570:	429c      	cmp	r4, r3
 800e572:	bf08      	it	eq
 800e574:	68ec      	ldreq	r4, [r5, #12]
 800e576:	e7ca      	b.n	800e50e <__swbuf_r+0x1a>
 800e578:	4621      	mov	r1, r4
 800e57a:	4628      	mov	r0, r5
 800e57c:	f000 f81a 	bl	800e5b4 <__swsetup_r>
 800e580:	2800      	cmp	r0, #0
 800e582:	d0cb      	beq.n	800e51c <__swbuf_r+0x28>
 800e584:	f04f 37ff 	mov.w	r7, #4294967295
 800e588:	e7ea      	b.n	800e560 <__swbuf_r+0x6c>
 800e58a:	bf00      	nop
 800e58c:	08076cb4 	.word	0x08076cb4
 800e590:	08076cd4 	.word	0x08076cd4
 800e594:	08076c94 	.word	0x08076c94

0800e598 <__ascii_wctomb>:
 800e598:	b149      	cbz	r1, 800e5ae <__ascii_wctomb+0x16>
 800e59a:	2aff      	cmp	r2, #255	; 0xff
 800e59c:	bf85      	ittet	hi
 800e59e:	238a      	movhi	r3, #138	; 0x8a
 800e5a0:	6003      	strhi	r3, [r0, #0]
 800e5a2:	700a      	strbls	r2, [r1, #0]
 800e5a4:	f04f 30ff 	movhi.w	r0, #4294967295
 800e5a8:	bf98      	it	ls
 800e5aa:	2001      	movls	r0, #1
 800e5ac:	4770      	bx	lr
 800e5ae:	4608      	mov	r0, r1
 800e5b0:	4770      	bx	lr
	...

0800e5b4 <__swsetup_r>:
 800e5b4:	4b32      	ldr	r3, [pc, #200]	; (800e680 <__swsetup_r+0xcc>)
 800e5b6:	b570      	push	{r4, r5, r6, lr}
 800e5b8:	681d      	ldr	r5, [r3, #0]
 800e5ba:	4606      	mov	r6, r0
 800e5bc:	460c      	mov	r4, r1
 800e5be:	b125      	cbz	r5, 800e5ca <__swsetup_r+0x16>
 800e5c0:	69ab      	ldr	r3, [r5, #24]
 800e5c2:	b913      	cbnz	r3, 800e5ca <__swsetup_r+0x16>
 800e5c4:	4628      	mov	r0, r5
 800e5c6:	f000 f985 	bl	800e8d4 <__sinit>
 800e5ca:	4b2e      	ldr	r3, [pc, #184]	; (800e684 <__swsetup_r+0xd0>)
 800e5cc:	429c      	cmp	r4, r3
 800e5ce:	d10f      	bne.n	800e5f0 <__swsetup_r+0x3c>
 800e5d0:	686c      	ldr	r4, [r5, #4]
 800e5d2:	89a3      	ldrh	r3, [r4, #12]
 800e5d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e5d8:	0719      	lsls	r1, r3, #28
 800e5da:	d42c      	bmi.n	800e636 <__swsetup_r+0x82>
 800e5dc:	06dd      	lsls	r5, r3, #27
 800e5de:	d411      	bmi.n	800e604 <__swsetup_r+0x50>
 800e5e0:	2309      	movs	r3, #9
 800e5e2:	6033      	str	r3, [r6, #0]
 800e5e4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800e5e8:	81a3      	strh	r3, [r4, #12]
 800e5ea:	f04f 30ff 	mov.w	r0, #4294967295
 800e5ee:	e03e      	b.n	800e66e <__swsetup_r+0xba>
 800e5f0:	4b25      	ldr	r3, [pc, #148]	; (800e688 <__swsetup_r+0xd4>)
 800e5f2:	429c      	cmp	r4, r3
 800e5f4:	d101      	bne.n	800e5fa <__swsetup_r+0x46>
 800e5f6:	68ac      	ldr	r4, [r5, #8]
 800e5f8:	e7eb      	b.n	800e5d2 <__swsetup_r+0x1e>
 800e5fa:	4b24      	ldr	r3, [pc, #144]	; (800e68c <__swsetup_r+0xd8>)
 800e5fc:	429c      	cmp	r4, r3
 800e5fe:	bf08      	it	eq
 800e600:	68ec      	ldreq	r4, [r5, #12]
 800e602:	e7e6      	b.n	800e5d2 <__swsetup_r+0x1e>
 800e604:	0758      	lsls	r0, r3, #29
 800e606:	d512      	bpl.n	800e62e <__swsetup_r+0x7a>
 800e608:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e60a:	b141      	cbz	r1, 800e61e <__swsetup_r+0x6a>
 800e60c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e610:	4299      	cmp	r1, r3
 800e612:	d002      	beq.n	800e61a <__swsetup_r+0x66>
 800e614:	4630      	mov	r0, r6
 800e616:	f7fd fc85 	bl	800bf24 <_free_r>
 800e61a:	2300      	movs	r3, #0
 800e61c:	6363      	str	r3, [r4, #52]	; 0x34
 800e61e:	89a3      	ldrh	r3, [r4, #12]
 800e620:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800e624:	81a3      	strh	r3, [r4, #12]
 800e626:	2300      	movs	r3, #0
 800e628:	6063      	str	r3, [r4, #4]
 800e62a:	6923      	ldr	r3, [r4, #16]
 800e62c:	6023      	str	r3, [r4, #0]
 800e62e:	89a3      	ldrh	r3, [r4, #12]
 800e630:	f043 0308 	orr.w	r3, r3, #8
 800e634:	81a3      	strh	r3, [r4, #12]
 800e636:	6923      	ldr	r3, [r4, #16]
 800e638:	b94b      	cbnz	r3, 800e64e <__swsetup_r+0x9a>
 800e63a:	89a3      	ldrh	r3, [r4, #12]
 800e63c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800e640:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e644:	d003      	beq.n	800e64e <__swsetup_r+0x9a>
 800e646:	4621      	mov	r1, r4
 800e648:	4630      	mov	r0, r6
 800e64a:	f000 fa05 	bl	800ea58 <__smakebuf_r>
 800e64e:	89a0      	ldrh	r0, [r4, #12]
 800e650:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e654:	f010 0301 	ands.w	r3, r0, #1
 800e658:	d00a      	beq.n	800e670 <__swsetup_r+0xbc>
 800e65a:	2300      	movs	r3, #0
 800e65c:	60a3      	str	r3, [r4, #8]
 800e65e:	6963      	ldr	r3, [r4, #20]
 800e660:	425b      	negs	r3, r3
 800e662:	61a3      	str	r3, [r4, #24]
 800e664:	6923      	ldr	r3, [r4, #16]
 800e666:	b943      	cbnz	r3, 800e67a <__swsetup_r+0xc6>
 800e668:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800e66c:	d1ba      	bne.n	800e5e4 <__swsetup_r+0x30>
 800e66e:	bd70      	pop	{r4, r5, r6, pc}
 800e670:	0781      	lsls	r1, r0, #30
 800e672:	bf58      	it	pl
 800e674:	6963      	ldrpl	r3, [r4, #20]
 800e676:	60a3      	str	r3, [r4, #8]
 800e678:	e7f4      	b.n	800e664 <__swsetup_r+0xb0>
 800e67a:	2000      	movs	r0, #0
 800e67c:	e7f7      	b.n	800e66e <__swsetup_r+0xba>
 800e67e:	bf00      	nop
 800e680:	20004b48 	.word	0x20004b48
 800e684:	08076cb4 	.word	0x08076cb4
 800e688:	08076cd4 	.word	0x08076cd4
 800e68c:	08076c94 	.word	0x08076c94

0800e690 <abort>:
 800e690:	b508      	push	{r3, lr}
 800e692:	2006      	movs	r0, #6
 800e694:	f000 fa48 	bl	800eb28 <raise>
 800e698:	2001      	movs	r0, #1
 800e69a:	f000 fb4d 	bl	800ed38 <_exit>
	...

0800e6a0 <__sflush_r>:
 800e6a0:	898a      	ldrh	r2, [r1, #12]
 800e6a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6a6:	4605      	mov	r5, r0
 800e6a8:	0710      	lsls	r0, r2, #28
 800e6aa:	460c      	mov	r4, r1
 800e6ac:	d458      	bmi.n	800e760 <__sflush_r+0xc0>
 800e6ae:	684b      	ldr	r3, [r1, #4]
 800e6b0:	2b00      	cmp	r3, #0
 800e6b2:	dc05      	bgt.n	800e6c0 <__sflush_r+0x20>
 800e6b4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	dc02      	bgt.n	800e6c0 <__sflush_r+0x20>
 800e6ba:	2000      	movs	r0, #0
 800e6bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800e6c2:	2e00      	cmp	r6, #0
 800e6c4:	d0f9      	beq.n	800e6ba <__sflush_r+0x1a>
 800e6c6:	2300      	movs	r3, #0
 800e6c8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800e6cc:	682f      	ldr	r7, [r5, #0]
 800e6ce:	602b      	str	r3, [r5, #0]
 800e6d0:	d032      	beq.n	800e738 <__sflush_r+0x98>
 800e6d2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800e6d4:	89a3      	ldrh	r3, [r4, #12]
 800e6d6:	075a      	lsls	r2, r3, #29
 800e6d8:	d505      	bpl.n	800e6e6 <__sflush_r+0x46>
 800e6da:	6863      	ldr	r3, [r4, #4]
 800e6dc:	1ac0      	subs	r0, r0, r3
 800e6de:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800e6e0:	b10b      	cbz	r3, 800e6e6 <__sflush_r+0x46>
 800e6e2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e6e4:	1ac0      	subs	r0, r0, r3
 800e6e6:	2300      	movs	r3, #0
 800e6e8:	4602      	mov	r2, r0
 800e6ea:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800e6ec:	6a21      	ldr	r1, [r4, #32]
 800e6ee:	4628      	mov	r0, r5
 800e6f0:	47b0      	blx	r6
 800e6f2:	1c43      	adds	r3, r0, #1
 800e6f4:	89a3      	ldrh	r3, [r4, #12]
 800e6f6:	d106      	bne.n	800e706 <__sflush_r+0x66>
 800e6f8:	6829      	ldr	r1, [r5, #0]
 800e6fa:	291d      	cmp	r1, #29
 800e6fc:	d82c      	bhi.n	800e758 <__sflush_r+0xb8>
 800e6fe:	4a2a      	ldr	r2, [pc, #168]	; (800e7a8 <__sflush_r+0x108>)
 800e700:	40ca      	lsrs	r2, r1
 800e702:	07d6      	lsls	r6, r2, #31
 800e704:	d528      	bpl.n	800e758 <__sflush_r+0xb8>
 800e706:	2200      	movs	r2, #0
 800e708:	6062      	str	r2, [r4, #4]
 800e70a:	04d9      	lsls	r1, r3, #19
 800e70c:	6922      	ldr	r2, [r4, #16]
 800e70e:	6022      	str	r2, [r4, #0]
 800e710:	d504      	bpl.n	800e71c <__sflush_r+0x7c>
 800e712:	1c42      	adds	r2, r0, #1
 800e714:	d101      	bne.n	800e71a <__sflush_r+0x7a>
 800e716:	682b      	ldr	r3, [r5, #0]
 800e718:	b903      	cbnz	r3, 800e71c <__sflush_r+0x7c>
 800e71a:	6560      	str	r0, [r4, #84]	; 0x54
 800e71c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e71e:	602f      	str	r7, [r5, #0]
 800e720:	2900      	cmp	r1, #0
 800e722:	d0ca      	beq.n	800e6ba <__sflush_r+0x1a>
 800e724:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e728:	4299      	cmp	r1, r3
 800e72a:	d002      	beq.n	800e732 <__sflush_r+0x92>
 800e72c:	4628      	mov	r0, r5
 800e72e:	f7fd fbf9 	bl	800bf24 <_free_r>
 800e732:	2000      	movs	r0, #0
 800e734:	6360      	str	r0, [r4, #52]	; 0x34
 800e736:	e7c1      	b.n	800e6bc <__sflush_r+0x1c>
 800e738:	6a21      	ldr	r1, [r4, #32]
 800e73a:	2301      	movs	r3, #1
 800e73c:	4628      	mov	r0, r5
 800e73e:	47b0      	blx	r6
 800e740:	1c41      	adds	r1, r0, #1
 800e742:	d1c7      	bne.n	800e6d4 <__sflush_r+0x34>
 800e744:	682b      	ldr	r3, [r5, #0]
 800e746:	2b00      	cmp	r3, #0
 800e748:	d0c4      	beq.n	800e6d4 <__sflush_r+0x34>
 800e74a:	2b1d      	cmp	r3, #29
 800e74c:	d001      	beq.n	800e752 <__sflush_r+0xb2>
 800e74e:	2b16      	cmp	r3, #22
 800e750:	d101      	bne.n	800e756 <__sflush_r+0xb6>
 800e752:	602f      	str	r7, [r5, #0]
 800e754:	e7b1      	b.n	800e6ba <__sflush_r+0x1a>
 800e756:	89a3      	ldrh	r3, [r4, #12]
 800e758:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e75c:	81a3      	strh	r3, [r4, #12]
 800e75e:	e7ad      	b.n	800e6bc <__sflush_r+0x1c>
 800e760:	690f      	ldr	r7, [r1, #16]
 800e762:	2f00      	cmp	r7, #0
 800e764:	d0a9      	beq.n	800e6ba <__sflush_r+0x1a>
 800e766:	0793      	lsls	r3, r2, #30
 800e768:	680e      	ldr	r6, [r1, #0]
 800e76a:	bf08      	it	eq
 800e76c:	694b      	ldreq	r3, [r1, #20]
 800e76e:	600f      	str	r7, [r1, #0]
 800e770:	bf18      	it	ne
 800e772:	2300      	movne	r3, #0
 800e774:	eba6 0807 	sub.w	r8, r6, r7
 800e778:	608b      	str	r3, [r1, #8]
 800e77a:	f1b8 0f00 	cmp.w	r8, #0
 800e77e:	dd9c      	ble.n	800e6ba <__sflush_r+0x1a>
 800e780:	6a21      	ldr	r1, [r4, #32]
 800e782:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800e784:	4643      	mov	r3, r8
 800e786:	463a      	mov	r2, r7
 800e788:	4628      	mov	r0, r5
 800e78a:	47b0      	blx	r6
 800e78c:	2800      	cmp	r0, #0
 800e78e:	dc06      	bgt.n	800e79e <__sflush_r+0xfe>
 800e790:	89a3      	ldrh	r3, [r4, #12]
 800e792:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e796:	81a3      	strh	r3, [r4, #12]
 800e798:	f04f 30ff 	mov.w	r0, #4294967295
 800e79c:	e78e      	b.n	800e6bc <__sflush_r+0x1c>
 800e79e:	4407      	add	r7, r0
 800e7a0:	eba8 0800 	sub.w	r8, r8, r0
 800e7a4:	e7e9      	b.n	800e77a <__sflush_r+0xda>
 800e7a6:	bf00      	nop
 800e7a8:	20400001 	.word	0x20400001

0800e7ac <_fflush_r>:
 800e7ac:	b538      	push	{r3, r4, r5, lr}
 800e7ae:	690b      	ldr	r3, [r1, #16]
 800e7b0:	4605      	mov	r5, r0
 800e7b2:	460c      	mov	r4, r1
 800e7b4:	b913      	cbnz	r3, 800e7bc <_fflush_r+0x10>
 800e7b6:	2500      	movs	r5, #0
 800e7b8:	4628      	mov	r0, r5
 800e7ba:	bd38      	pop	{r3, r4, r5, pc}
 800e7bc:	b118      	cbz	r0, 800e7c6 <_fflush_r+0x1a>
 800e7be:	6983      	ldr	r3, [r0, #24]
 800e7c0:	b90b      	cbnz	r3, 800e7c6 <_fflush_r+0x1a>
 800e7c2:	f000 f887 	bl	800e8d4 <__sinit>
 800e7c6:	4b14      	ldr	r3, [pc, #80]	; (800e818 <_fflush_r+0x6c>)
 800e7c8:	429c      	cmp	r4, r3
 800e7ca:	d11b      	bne.n	800e804 <_fflush_r+0x58>
 800e7cc:	686c      	ldr	r4, [r5, #4]
 800e7ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e7d2:	2b00      	cmp	r3, #0
 800e7d4:	d0ef      	beq.n	800e7b6 <_fflush_r+0xa>
 800e7d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800e7d8:	07d0      	lsls	r0, r2, #31
 800e7da:	d404      	bmi.n	800e7e6 <_fflush_r+0x3a>
 800e7dc:	0599      	lsls	r1, r3, #22
 800e7de:	d402      	bmi.n	800e7e6 <_fflush_r+0x3a>
 800e7e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e7e2:	f7ff fcf8 	bl	800e1d6 <__retarget_lock_acquire_recursive>
 800e7e6:	4628      	mov	r0, r5
 800e7e8:	4621      	mov	r1, r4
 800e7ea:	f7ff ff59 	bl	800e6a0 <__sflush_r>
 800e7ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800e7f0:	07da      	lsls	r2, r3, #31
 800e7f2:	4605      	mov	r5, r0
 800e7f4:	d4e0      	bmi.n	800e7b8 <_fflush_r+0xc>
 800e7f6:	89a3      	ldrh	r3, [r4, #12]
 800e7f8:	059b      	lsls	r3, r3, #22
 800e7fa:	d4dd      	bmi.n	800e7b8 <_fflush_r+0xc>
 800e7fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800e7fe:	f7ff fceb 	bl	800e1d8 <__retarget_lock_release_recursive>
 800e802:	e7d9      	b.n	800e7b8 <_fflush_r+0xc>
 800e804:	4b05      	ldr	r3, [pc, #20]	; (800e81c <_fflush_r+0x70>)
 800e806:	429c      	cmp	r4, r3
 800e808:	d101      	bne.n	800e80e <_fflush_r+0x62>
 800e80a:	68ac      	ldr	r4, [r5, #8]
 800e80c:	e7df      	b.n	800e7ce <_fflush_r+0x22>
 800e80e:	4b04      	ldr	r3, [pc, #16]	; (800e820 <_fflush_r+0x74>)
 800e810:	429c      	cmp	r4, r3
 800e812:	bf08      	it	eq
 800e814:	68ec      	ldreq	r4, [r5, #12]
 800e816:	e7da      	b.n	800e7ce <_fflush_r+0x22>
 800e818:	08076cb4 	.word	0x08076cb4
 800e81c:	08076cd4 	.word	0x08076cd4
 800e820:	08076c94 	.word	0x08076c94

0800e824 <std>:
 800e824:	2300      	movs	r3, #0
 800e826:	b510      	push	{r4, lr}
 800e828:	4604      	mov	r4, r0
 800e82a:	e9c0 3300 	strd	r3, r3, [r0]
 800e82e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e832:	6083      	str	r3, [r0, #8]
 800e834:	8181      	strh	r1, [r0, #12]
 800e836:	6643      	str	r3, [r0, #100]	; 0x64
 800e838:	81c2      	strh	r2, [r0, #14]
 800e83a:	6183      	str	r3, [r0, #24]
 800e83c:	4619      	mov	r1, r3
 800e83e:	2208      	movs	r2, #8
 800e840:	305c      	adds	r0, #92	; 0x5c
 800e842:	f7fd fb67 	bl	800bf14 <memset>
 800e846:	4b05      	ldr	r3, [pc, #20]	; (800e85c <std+0x38>)
 800e848:	6263      	str	r3, [r4, #36]	; 0x24
 800e84a:	4b05      	ldr	r3, [pc, #20]	; (800e860 <std+0x3c>)
 800e84c:	62a3      	str	r3, [r4, #40]	; 0x28
 800e84e:	4b05      	ldr	r3, [pc, #20]	; (800e864 <std+0x40>)
 800e850:	62e3      	str	r3, [r4, #44]	; 0x2c
 800e852:	4b05      	ldr	r3, [pc, #20]	; (800e868 <std+0x44>)
 800e854:	6224      	str	r4, [r4, #32]
 800e856:	6323      	str	r3, [r4, #48]	; 0x30
 800e858:	bd10      	pop	{r4, pc}
 800e85a:	bf00      	nop
 800e85c:	0800eb61 	.word	0x0800eb61
 800e860:	0800eb83 	.word	0x0800eb83
 800e864:	0800ebbb 	.word	0x0800ebbb
 800e868:	0800ebdf 	.word	0x0800ebdf

0800e86c <_cleanup_r>:
 800e86c:	4901      	ldr	r1, [pc, #4]	; (800e874 <_cleanup_r+0x8>)
 800e86e:	f000 b8af 	b.w	800e9d0 <_fwalk_reent>
 800e872:	bf00      	nop
 800e874:	0800e7ad 	.word	0x0800e7ad

0800e878 <__sfmoreglue>:
 800e878:	b570      	push	{r4, r5, r6, lr}
 800e87a:	2268      	movs	r2, #104	; 0x68
 800e87c:	1e4d      	subs	r5, r1, #1
 800e87e:	4355      	muls	r5, r2
 800e880:	460e      	mov	r6, r1
 800e882:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800e886:	f7fd fbb9 	bl	800bffc <_malloc_r>
 800e88a:	4604      	mov	r4, r0
 800e88c:	b140      	cbz	r0, 800e8a0 <__sfmoreglue+0x28>
 800e88e:	2100      	movs	r1, #0
 800e890:	e9c0 1600 	strd	r1, r6, [r0]
 800e894:	300c      	adds	r0, #12
 800e896:	60a0      	str	r0, [r4, #8]
 800e898:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800e89c:	f7fd fb3a 	bl	800bf14 <memset>
 800e8a0:	4620      	mov	r0, r4
 800e8a2:	bd70      	pop	{r4, r5, r6, pc}

0800e8a4 <__sfp_lock_acquire>:
 800e8a4:	4801      	ldr	r0, [pc, #4]	; (800e8ac <__sfp_lock_acquire+0x8>)
 800e8a6:	f7ff bc96 	b.w	800e1d6 <__retarget_lock_acquire_recursive>
 800e8aa:	bf00      	nop
 800e8ac:	20005075 	.word	0x20005075

0800e8b0 <__sfp_lock_release>:
 800e8b0:	4801      	ldr	r0, [pc, #4]	; (800e8b8 <__sfp_lock_release+0x8>)
 800e8b2:	f7ff bc91 	b.w	800e1d8 <__retarget_lock_release_recursive>
 800e8b6:	bf00      	nop
 800e8b8:	20005075 	.word	0x20005075

0800e8bc <__sinit_lock_acquire>:
 800e8bc:	4801      	ldr	r0, [pc, #4]	; (800e8c4 <__sinit_lock_acquire+0x8>)
 800e8be:	f7ff bc8a 	b.w	800e1d6 <__retarget_lock_acquire_recursive>
 800e8c2:	bf00      	nop
 800e8c4:	20005076 	.word	0x20005076

0800e8c8 <__sinit_lock_release>:
 800e8c8:	4801      	ldr	r0, [pc, #4]	; (800e8d0 <__sinit_lock_release+0x8>)
 800e8ca:	f7ff bc85 	b.w	800e1d8 <__retarget_lock_release_recursive>
 800e8ce:	bf00      	nop
 800e8d0:	20005076 	.word	0x20005076

0800e8d4 <__sinit>:
 800e8d4:	b510      	push	{r4, lr}
 800e8d6:	4604      	mov	r4, r0
 800e8d8:	f7ff fff0 	bl	800e8bc <__sinit_lock_acquire>
 800e8dc:	69a3      	ldr	r3, [r4, #24]
 800e8de:	b11b      	cbz	r3, 800e8e8 <__sinit+0x14>
 800e8e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e8e4:	f7ff bff0 	b.w	800e8c8 <__sinit_lock_release>
 800e8e8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800e8ec:	6523      	str	r3, [r4, #80]	; 0x50
 800e8ee:	4b13      	ldr	r3, [pc, #76]	; (800e93c <__sinit+0x68>)
 800e8f0:	4a13      	ldr	r2, [pc, #76]	; (800e940 <__sinit+0x6c>)
 800e8f2:	681b      	ldr	r3, [r3, #0]
 800e8f4:	62a2      	str	r2, [r4, #40]	; 0x28
 800e8f6:	42a3      	cmp	r3, r4
 800e8f8:	bf04      	itt	eq
 800e8fa:	2301      	moveq	r3, #1
 800e8fc:	61a3      	streq	r3, [r4, #24]
 800e8fe:	4620      	mov	r0, r4
 800e900:	f000 f820 	bl	800e944 <__sfp>
 800e904:	6060      	str	r0, [r4, #4]
 800e906:	4620      	mov	r0, r4
 800e908:	f000 f81c 	bl	800e944 <__sfp>
 800e90c:	60a0      	str	r0, [r4, #8]
 800e90e:	4620      	mov	r0, r4
 800e910:	f000 f818 	bl	800e944 <__sfp>
 800e914:	2200      	movs	r2, #0
 800e916:	60e0      	str	r0, [r4, #12]
 800e918:	2104      	movs	r1, #4
 800e91a:	6860      	ldr	r0, [r4, #4]
 800e91c:	f7ff ff82 	bl	800e824 <std>
 800e920:	68a0      	ldr	r0, [r4, #8]
 800e922:	2201      	movs	r2, #1
 800e924:	2109      	movs	r1, #9
 800e926:	f7ff ff7d 	bl	800e824 <std>
 800e92a:	68e0      	ldr	r0, [r4, #12]
 800e92c:	2202      	movs	r2, #2
 800e92e:	2112      	movs	r1, #18
 800e930:	f7ff ff78 	bl	800e824 <std>
 800e934:	2301      	movs	r3, #1
 800e936:	61a3      	str	r3, [r4, #24]
 800e938:	e7d2      	b.n	800e8e0 <__sinit+0xc>
 800e93a:	bf00      	nop
 800e93c:	08076918 	.word	0x08076918
 800e940:	0800e86d 	.word	0x0800e86d

0800e944 <__sfp>:
 800e944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e946:	4607      	mov	r7, r0
 800e948:	f7ff ffac 	bl	800e8a4 <__sfp_lock_acquire>
 800e94c:	4b1e      	ldr	r3, [pc, #120]	; (800e9c8 <__sfp+0x84>)
 800e94e:	681e      	ldr	r6, [r3, #0]
 800e950:	69b3      	ldr	r3, [r6, #24]
 800e952:	b913      	cbnz	r3, 800e95a <__sfp+0x16>
 800e954:	4630      	mov	r0, r6
 800e956:	f7ff ffbd 	bl	800e8d4 <__sinit>
 800e95a:	3648      	adds	r6, #72	; 0x48
 800e95c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800e960:	3b01      	subs	r3, #1
 800e962:	d503      	bpl.n	800e96c <__sfp+0x28>
 800e964:	6833      	ldr	r3, [r6, #0]
 800e966:	b30b      	cbz	r3, 800e9ac <__sfp+0x68>
 800e968:	6836      	ldr	r6, [r6, #0]
 800e96a:	e7f7      	b.n	800e95c <__sfp+0x18>
 800e96c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800e970:	b9d5      	cbnz	r5, 800e9a8 <__sfp+0x64>
 800e972:	4b16      	ldr	r3, [pc, #88]	; (800e9cc <__sfp+0x88>)
 800e974:	60e3      	str	r3, [r4, #12]
 800e976:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e97a:	6665      	str	r5, [r4, #100]	; 0x64
 800e97c:	f7ff fc2a 	bl	800e1d4 <__retarget_lock_init_recursive>
 800e980:	f7ff ff96 	bl	800e8b0 <__sfp_lock_release>
 800e984:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800e988:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800e98c:	6025      	str	r5, [r4, #0]
 800e98e:	61a5      	str	r5, [r4, #24]
 800e990:	2208      	movs	r2, #8
 800e992:	4629      	mov	r1, r5
 800e994:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800e998:	f7fd fabc 	bl	800bf14 <memset>
 800e99c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800e9a0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800e9a4:	4620      	mov	r0, r4
 800e9a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e9a8:	3468      	adds	r4, #104	; 0x68
 800e9aa:	e7d9      	b.n	800e960 <__sfp+0x1c>
 800e9ac:	2104      	movs	r1, #4
 800e9ae:	4638      	mov	r0, r7
 800e9b0:	f7ff ff62 	bl	800e878 <__sfmoreglue>
 800e9b4:	4604      	mov	r4, r0
 800e9b6:	6030      	str	r0, [r6, #0]
 800e9b8:	2800      	cmp	r0, #0
 800e9ba:	d1d5      	bne.n	800e968 <__sfp+0x24>
 800e9bc:	f7ff ff78 	bl	800e8b0 <__sfp_lock_release>
 800e9c0:	230c      	movs	r3, #12
 800e9c2:	603b      	str	r3, [r7, #0]
 800e9c4:	e7ee      	b.n	800e9a4 <__sfp+0x60>
 800e9c6:	bf00      	nop
 800e9c8:	08076918 	.word	0x08076918
 800e9cc:	ffff0001 	.word	0xffff0001

0800e9d0 <_fwalk_reent>:
 800e9d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e9d4:	4606      	mov	r6, r0
 800e9d6:	4688      	mov	r8, r1
 800e9d8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800e9dc:	2700      	movs	r7, #0
 800e9de:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800e9e2:	f1b9 0901 	subs.w	r9, r9, #1
 800e9e6:	d505      	bpl.n	800e9f4 <_fwalk_reent+0x24>
 800e9e8:	6824      	ldr	r4, [r4, #0]
 800e9ea:	2c00      	cmp	r4, #0
 800e9ec:	d1f7      	bne.n	800e9de <_fwalk_reent+0xe>
 800e9ee:	4638      	mov	r0, r7
 800e9f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e9f4:	89ab      	ldrh	r3, [r5, #12]
 800e9f6:	2b01      	cmp	r3, #1
 800e9f8:	d907      	bls.n	800ea0a <_fwalk_reent+0x3a>
 800e9fa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800e9fe:	3301      	adds	r3, #1
 800ea00:	d003      	beq.n	800ea0a <_fwalk_reent+0x3a>
 800ea02:	4629      	mov	r1, r5
 800ea04:	4630      	mov	r0, r6
 800ea06:	47c0      	blx	r8
 800ea08:	4307      	orrs	r7, r0
 800ea0a:	3568      	adds	r5, #104	; 0x68
 800ea0c:	e7e9      	b.n	800e9e2 <_fwalk_reent+0x12>

0800ea0e <__swhatbuf_r>:
 800ea0e:	b570      	push	{r4, r5, r6, lr}
 800ea10:	460e      	mov	r6, r1
 800ea12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ea16:	2900      	cmp	r1, #0
 800ea18:	b096      	sub	sp, #88	; 0x58
 800ea1a:	4614      	mov	r4, r2
 800ea1c:	461d      	mov	r5, r3
 800ea1e:	da08      	bge.n	800ea32 <__swhatbuf_r+0x24>
 800ea20:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800ea24:	2200      	movs	r2, #0
 800ea26:	602a      	str	r2, [r5, #0]
 800ea28:	061a      	lsls	r2, r3, #24
 800ea2a:	d410      	bmi.n	800ea4e <__swhatbuf_r+0x40>
 800ea2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ea30:	e00e      	b.n	800ea50 <__swhatbuf_r+0x42>
 800ea32:	466a      	mov	r2, sp
 800ea34:	f000 f8fa 	bl	800ec2c <_fstat_r>
 800ea38:	2800      	cmp	r0, #0
 800ea3a:	dbf1      	blt.n	800ea20 <__swhatbuf_r+0x12>
 800ea3c:	9a01      	ldr	r2, [sp, #4]
 800ea3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800ea42:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800ea46:	425a      	negs	r2, r3
 800ea48:	415a      	adcs	r2, r3
 800ea4a:	602a      	str	r2, [r5, #0]
 800ea4c:	e7ee      	b.n	800ea2c <__swhatbuf_r+0x1e>
 800ea4e:	2340      	movs	r3, #64	; 0x40
 800ea50:	2000      	movs	r0, #0
 800ea52:	6023      	str	r3, [r4, #0]
 800ea54:	b016      	add	sp, #88	; 0x58
 800ea56:	bd70      	pop	{r4, r5, r6, pc}

0800ea58 <__smakebuf_r>:
 800ea58:	898b      	ldrh	r3, [r1, #12]
 800ea5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ea5c:	079d      	lsls	r5, r3, #30
 800ea5e:	4606      	mov	r6, r0
 800ea60:	460c      	mov	r4, r1
 800ea62:	d507      	bpl.n	800ea74 <__smakebuf_r+0x1c>
 800ea64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800ea68:	6023      	str	r3, [r4, #0]
 800ea6a:	6123      	str	r3, [r4, #16]
 800ea6c:	2301      	movs	r3, #1
 800ea6e:	6163      	str	r3, [r4, #20]
 800ea70:	b002      	add	sp, #8
 800ea72:	bd70      	pop	{r4, r5, r6, pc}
 800ea74:	ab01      	add	r3, sp, #4
 800ea76:	466a      	mov	r2, sp
 800ea78:	f7ff ffc9 	bl	800ea0e <__swhatbuf_r>
 800ea7c:	9900      	ldr	r1, [sp, #0]
 800ea7e:	4605      	mov	r5, r0
 800ea80:	4630      	mov	r0, r6
 800ea82:	f7fd fabb 	bl	800bffc <_malloc_r>
 800ea86:	b948      	cbnz	r0, 800ea9c <__smakebuf_r+0x44>
 800ea88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ea8c:	059a      	lsls	r2, r3, #22
 800ea8e:	d4ef      	bmi.n	800ea70 <__smakebuf_r+0x18>
 800ea90:	f023 0303 	bic.w	r3, r3, #3
 800ea94:	f043 0302 	orr.w	r3, r3, #2
 800ea98:	81a3      	strh	r3, [r4, #12]
 800ea9a:	e7e3      	b.n	800ea64 <__smakebuf_r+0xc>
 800ea9c:	4b0d      	ldr	r3, [pc, #52]	; (800ead4 <__smakebuf_r+0x7c>)
 800ea9e:	62b3      	str	r3, [r6, #40]	; 0x28
 800eaa0:	89a3      	ldrh	r3, [r4, #12]
 800eaa2:	6020      	str	r0, [r4, #0]
 800eaa4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800eaa8:	81a3      	strh	r3, [r4, #12]
 800eaaa:	9b00      	ldr	r3, [sp, #0]
 800eaac:	6163      	str	r3, [r4, #20]
 800eaae:	9b01      	ldr	r3, [sp, #4]
 800eab0:	6120      	str	r0, [r4, #16]
 800eab2:	b15b      	cbz	r3, 800eacc <__smakebuf_r+0x74>
 800eab4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800eab8:	4630      	mov	r0, r6
 800eaba:	f000 f8c9 	bl	800ec50 <_isatty_r>
 800eabe:	b128      	cbz	r0, 800eacc <__smakebuf_r+0x74>
 800eac0:	89a3      	ldrh	r3, [r4, #12]
 800eac2:	f023 0303 	bic.w	r3, r3, #3
 800eac6:	f043 0301 	orr.w	r3, r3, #1
 800eaca:	81a3      	strh	r3, [r4, #12]
 800eacc:	89a0      	ldrh	r0, [r4, #12]
 800eace:	4305      	orrs	r5, r0
 800ead0:	81a5      	strh	r5, [r4, #12]
 800ead2:	e7cd      	b.n	800ea70 <__smakebuf_r+0x18>
 800ead4:	0800e86d 	.word	0x0800e86d

0800ead8 <_raise_r>:
 800ead8:	291f      	cmp	r1, #31
 800eada:	b538      	push	{r3, r4, r5, lr}
 800eadc:	4604      	mov	r4, r0
 800eade:	460d      	mov	r5, r1
 800eae0:	d904      	bls.n	800eaec <_raise_r+0x14>
 800eae2:	2316      	movs	r3, #22
 800eae4:	6003      	str	r3, [r0, #0]
 800eae6:	f04f 30ff 	mov.w	r0, #4294967295
 800eaea:	bd38      	pop	{r3, r4, r5, pc}
 800eaec:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800eaee:	b112      	cbz	r2, 800eaf6 <_raise_r+0x1e>
 800eaf0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800eaf4:	b94b      	cbnz	r3, 800eb0a <_raise_r+0x32>
 800eaf6:	4620      	mov	r0, r4
 800eaf8:	f000 f830 	bl	800eb5c <_getpid_r>
 800eafc:	462a      	mov	r2, r5
 800eafe:	4601      	mov	r1, r0
 800eb00:	4620      	mov	r0, r4
 800eb02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb06:	f000 b817 	b.w	800eb38 <_kill_r>
 800eb0a:	2b01      	cmp	r3, #1
 800eb0c:	d00a      	beq.n	800eb24 <_raise_r+0x4c>
 800eb0e:	1c59      	adds	r1, r3, #1
 800eb10:	d103      	bne.n	800eb1a <_raise_r+0x42>
 800eb12:	2316      	movs	r3, #22
 800eb14:	6003      	str	r3, [r0, #0]
 800eb16:	2001      	movs	r0, #1
 800eb18:	e7e7      	b.n	800eaea <_raise_r+0x12>
 800eb1a:	2400      	movs	r4, #0
 800eb1c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800eb20:	4628      	mov	r0, r5
 800eb22:	4798      	blx	r3
 800eb24:	2000      	movs	r0, #0
 800eb26:	e7e0      	b.n	800eaea <_raise_r+0x12>

0800eb28 <raise>:
 800eb28:	4b02      	ldr	r3, [pc, #8]	; (800eb34 <raise+0xc>)
 800eb2a:	4601      	mov	r1, r0
 800eb2c:	6818      	ldr	r0, [r3, #0]
 800eb2e:	f7ff bfd3 	b.w	800ead8 <_raise_r>
 800eb32:	bf00      	nop
 800eb34:	20004b48 	.word	0x20004b48

0800eb38 <_kill_r>:
 800eb38:	b538      	push	{r3, r4, r5, lr}
 800eb3a:	4d07      	ldr	r5, [pc, #28]	; (800eb58 <_kill_r+0x20>)
 800eb3c:	2300      	movs	r3, #0
 800eb3e:	4604      	mov	r4, r0
 800eb40:	4608      	mov	r0, r1
 800eb42:	4611      	mov	r1, r2
 800eb44:	602b      	str	r3, [r5, #0]
 800eb46:	f000 f8d7 	bl	800ecf8 <_kill>
 800eb4a:	1c43      	adds	r3, r0, #1
 800eb4c:	d102      	bne.n	800eb54 <_kill_r+0x1c>
 800eb4e:	682b      	ldr	r3, [r5, #0]
 800eb50:	b103      	cbz	r3, 800eb54 <_kill_r+0x1c>
 800eb52:	6023      	str	r3, [r4, #0]
 800eb54:	bd38      	pop	{r3, r4, r5, pc}
 800eb56:	bf00      	nop
 800eb58:	20005070 	.word	0x20005070

0800eb5c <_getpid_r>:
 800eb5c:	f000 b8bc 	b.w	800ecd8 <_getpid>

0800eb60 <__sread>:
 800eb60:	b510      	push	{r4, lr}
 800eb62:	460c      	mov	r4, r1
 800eb64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800eb68:	f000 f894 	bl	800ec94 <_read_r>
 800eb6c:	2800      	cmp	r0, #0
 800eb6e:	bfab      	itete	ge
 800eb70:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800eb72:	89a3      	ldrhlt	r3, [r4, #12]
 800eb74:	181b      	addge	r3, r3, r0
 800eb76:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800eb7a:	bfac      	ite	ge
 800eb7c:	6563      	strge	r3, [r4, #84]	; 0x54
 800eb7e:	81a3      	strhlt	r3, [r4, #12]
 800eb80:	bd10      	pop	{r4, pc}

0800eb82 <__swrite>:
 800eb82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb86:	461f      	mov	r7, r3
 800eb88:	898b      	ldrh	r3, [r1, #12]
 800eb8a:	05db      	lsls	r3, r3, #23
 800eb8c:	4605      	mov	r5, r0
 800eb8e:	460c      	mov	r4, r1
 800eb90:	4616      	mov	r6, r2
 800eb92:	d505      	bpl.n	800eba0 <__swrite+0x1e>
 800eb94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800eb98:	2302      	movs	r3, #2
 800eb9a:	2200      	movs	r2, #0
 800eb9c:	f000 f868 	bl	800ec70 <_lseek_r>
 800eba0:	89a3      	ldrh	r3, [r4, #12]
 800eba2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800eba6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ebaa:	81a3      	strh	r3, [r4, #12]
 800ebac:	4632      	mov	r2, r6
 800ebae:	463b      	mov	r3, r7
 800ebb0:	4628      	mov	r0, r5
 800ebb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ebb6:	f000 b817 	b.w	800ebe8 <_write_r>

0800ebba <__sseek>:
 800ebba:	b510      	push	{r4, lr}
 800ebbc:	460c      	mov	r4, r1
 800ebbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ebc2:	f000 f855 	bl	800ec70 <_lseek_r>
 800ebc6:	1c43      	adds	r3, r0, #1
 800ebc8:	89a3      	ldrh	r3, [r4, #12]
 800ebca:	bf15      	itete	ne
 800ebcc:	6560      	strne	r0, [r4, #84]	; 0x54
 800ebce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800ebd2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800ebd6:	81a3      	strheq	r3, [r4, #12]
 800ebd8:	bf18      	it	ne
 800ebda:	81a3      	strhne	r3, [r4, #12]
 800ebdc:	bd10      	pop	{r4, pc}

0800ebde <__sclose>:
 800ebde:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ebe2:	f000 b813 	b.w	800ec0c <_close_r>
	...

0800ebe8 <_write_r>:
 800ebe8:	b538      	push	{r3, r4, r5, lr}
 800ebea:	4d07      	ldr	r5, [pc, #28]	; (800ec08 <_write_r+0x20>)
 800ebec:	4604      	mov	r4, r0
 800ebee:	4608      	mov	r0, r1
 800ebf0:	4611      	mov	r1, r2
 800ebf2:	2200      	movs	r2, #0
 800ebf4:	602a      	str	r2, [r5, #0]
 800ebf6:	461a      	mov	r2, r3
 800ebf8:	f000 f896 	bl	800ed28 <_write>
 800ebfc:	1c43      	adds	r3, r0, #1
 800ebfe:	d102      	bne.n	800ec06 <_write_r+0x1e>
 800ec00:	682b      	ldr	r3, [r5, #0]
 800ec02:	b103      	cbz	r3, 800ec06 <_write_r+0x1e>
 800ec04:	6023      	str	r3, [r4, #0]
 800ec06:	bd38      	pop	{r3, r4, r5, pc}
 800ec08:	20005070 	.word	0x20005070

0800ec0c <_close_r>:
 800ec0c:	b538      	push	{r3, r4, r5, lr}
 800ec0e:	4d06      	ldr	r5, [pc, #24]	; (800ec28 <_close_r+0x1c>)
 800ec10:	2300      	movs	r3, #0
 800ec12:	4604      	mov	r4, r0
 800ec14:	4608      	mov	r0, r1
 800ec16:	602b      	str	r3, [r5, #0]
 800ec18:	f000 f84e 	bl	800ecb8 <_close>
 800ec1c:	1c43      	adds	r3, r0, #1
 800ec1e:	d102      	bne.n	800ec26 <_close_r+0x1a>
 800ec20:	682b      	ldr	r3, [r5, #0]
 800ec22:	b103      	cbz	r3, 800ec26 <_close_r+0x1a>
 800ec24:	6023      	str	r3, [r4, #0]
 800ec26:	bd38      	pop	{r3, r4, r5, pc}
 800ec28:	20005070 	.word	0x20005070

0800ec2c <_fstat_r>:
 800ec2c:	b538      	push	{r3, r4, r5, lr}
 800ec2e:	4d07      	ldr	r5, [pc, #28]	; (800ec4c <_fstat_r+0x20>)
 800ec30:	2300      	movs	r3, #0
 800ec32:	4604      	mov	r4, r0
 800ec34:	4608      	mov	r0, r1
 800ec36:	4611      	mov	r1, r2
 800ec38:	602b      	str	r3, [r5, #0]
 800ec3a:	f000 f845 	bl	800ecc8 <_fstat>
 800ec3e:	1c43      	adds	r3, r0, #1
 800ec40:	d102      	bne.n	800ec48 <_fstat_r+0x1c>
 800ec42:	682b      	ldr	r3, [r5, #0]
 800ec44:	b103      	cbz	r3, 800ec48 <_fstat_r+0x1c>
 800ec46:	6023      	str	r3, [r4, #0]
 800ec48:	bd38      	pop	{r3, r4, r5, pc}
 800ec4a:	bf00      	nop
 800ec4c:	20005070 	.word	0x20005070

0800ec50 <_isatty_r>:
 800ec50:	b538      	push	{r3, r4, r5, lr}
 800ec52:	4d06      	ldr	r5, [pc, #24]	; (800ec6c <_isatty_r+0x1c>)
 800ec54:	2300      	movs	r3, #0
 800ec56:	4604      	mov	r4, r0
 800ec58:	4608      	mov	r0, r1
 800ec5a:	602b      	str	r3, [r5, #0]
 800ec5c:	f000 f844 	bl	800ece8 <_isatty>
 800ec60:	1c43      	adds	r3, r0, #1
 800ec62:	d102      	bne.n	800ec6a <_isatty_r+0x1a>
 800ec64:	682b      	ldr	r3, [r5, #0]
 800ec66:	b103      	cbz	r3, 800ec6a <_isatty_r+0x1a>
 800ec68:	6023      	str	r3, [r4, #0]
 800ec6a:	bd38      	pop	{r3, r4, r5, pc}
 800ec6c:	20005070 	.word	0x20005070

0800ec70 <_lseek_r>:
 800ec70:	b538      	push	{r3, r4, r5, lr}
 800ec72:	4d07      	ldr	r5, [pc, #28]	; (800ec90 <_lseek_r+0x20>)
 800ec74:	4604      	mov	r4, r0
 800ec76:	4608      	mov	r0, r1
 800ec78:	4611      	mov	r1, r2
 800ec7a:	2200      	movs	r2, #0
 800ec7c:	602a      	str	r2, [r5, #0]
 800ec7e:	461a      	mov	r2, r3
 800ec80:	f000 f842 	bl	800ed08 <_lseek>
 800ec84:	1c43      	adds	r3, r0, #1
 800ec86:	d102      	bne.n	800ec8e <_lseek_r+0x1e>
 800ec88:	682b      	ldr	r3, [r5, #0]
 800ec8a:	b103      	cbz	r3, 800ec8e <_lseek_r+0x1e>
 800ec8c:	6023      	str	r3, [r4, #0]
 800ec8e:	bd38      	pop	{r3, r4, r5, pc}
 800ec90:	20005070 	.word	0x20005070

0800ec94 <_read_r>:
 800ec94:	b538      	push	{r3, r4, r5, lr}
 800ec96:	4d07      	ldr	r5, [pc, #28]	; (800ecb4 <_read_r+0x20>)
 800ec98:	4604      	mov	r4, r0
 800ec9a:	4608      	mov	r0, r1
 800ec9c:	4611      	mov	r1, r2
 800ec9e:	2200      	movs	r2, #0
 800eca0:	602a      	str	r2, [r5, #0]
 800eca2:	461a      	mov	r2, r3
 800eca4:	f000 f838 	bl	800ed18 <_read>
 800eca8:	1c43      	adds	r3, r0, #1
 800ecaa:	d102      	bne.n	800ecb2 <_read_r+0x1e>
 800ecac:	682b      	ldr	r3, [r5, #0]
 800ecae:	b103      	cbz	r3, 800ecb2 <_read_r+0x1e>
 800ecb0:	6023      	str	r3, [r4, #0]
 800ecb2:	bd38      	pop	{r3, r4, r5, pc}
 800ecb4:	20005070 	.word	0x20005070

0800ecb8 <_close>:
 800ecb8:	4b02      	ldr	r3, [pc, #8]	; (800ecc4 <_close+0xc>)
 800ecba:	2258      	movs	r2, #88	; 0x58
 800ecbc:	601a      	str	r2, [r3, #0]
 800ecbe:	f04f 30ff 	mov.w	r0, #4294967295
 800ecc2:	4770      	bx	lr
 800ecc4:	20005070 	.word	0x20005070

0800ecc8 <_fstat>:
 800ecc8:	4b02      	ldr	r3, [pc, #8]	; (800ecd4 <_fstat+0xc>)
 800ecca:	2258      	movs	r2, #88	; 0x58
 800eccc:	601a      	str	r2, [r3, #0]
 800ecce:	f04f 30ff 	mov.w	r0, #4294967295
 800ecd2:	4770      	bx	lr
 800ecd4:	20005070 	.word	0x20005070

0800ecd8 <_getpid>:
 800ecd8:	4b02      	ldr	r3, [pc, #8]	; (800ece4 <_getpid+0xc>)
 800ecda:	2258      	movs	r2, #88	; 0x58
 800ecdc:	601a      	str	r2, [r3, #0]
 800ecde:	f04f 30ff 	mov.w	r0, #4294967295
 800ece2:	4770      	bx	lr
 800ece4:	20005070 	.word	0x20005070

0800ece8 <_isatty>:
 800ece8:	4b02      	ldr	r3, [pc, #8]	; (800ecf4 <_isatty+0xc>)
 800ecea:	2258      	movs	r2, #88	; 0x58
 800ecec:	601a      	str	r2, [r3, #0]
 800ecee:	2000      	movs	r0, #0
 800ecf0:	4770      	bx	lr
 800ecf2:	bf00      	nop
 800ecf4:	20005070 	.word	0x20005070

0800ecf8 <_kill>:
 800ecf8:	4b02      	ldr	r3, [pc, #8]	; (800ed04 <_kill+0xc>)
 800ecfa:	2258      	movs	r2, #88	; 0x58
 800ecfc:	601a      	str	r2, [r3, #0]
 800ecfe:	f04f 30ff 	mov.w	r0, #4294967295
 800ed02:	4770      	bx	lr
 800ed04:	20005070 	.word	0x20005070

0800ed08 <_lseek>:
 800ed08:	4b02      	ldr	r3, [pc, #8]	; (800ed14 <_lseek+0xc>)
 800ed0a:	2258      	movs	r2, #88	; 0x58
 800ed0c:	601a      	str	r2, [r3, #0]
 800ed0e:	f04f 30ff 	mov.w	r0, #4294967295
 800ed12:	4770      	bx	lr
 800ed14:	20005070 	.word	0x20005070

0800ed18 <_read>:
 800ed18:	4b02      	ldr	r3, [pc, #8]	; (800ed24 <_read+0xc>)
 800ed1a:	2258      	movs	r2, #88	; 0x58
 800ed1c:	601a      	str	r2, [r3, #0]
 800ed1e:	f04f 30ff 	mov.w	r0, #4294967295
 800ed22:	4770      	bx	lr
 800ed24:	20005070 	.word	0x20005070

0800ed28 <_write>:
 800ed28:	4b02      	ldr	r3, [pc, #8]	; (800ed34 <_write+0xc>)
 800ed2a:	2258      	movs	r2, #88	; 0x58
 800ed2c:	601a      	str	r2, [r3, #0]
 800ed2e:	f04f 30ff 	mov.w	r0, #4294967295
 800ed32:	4770      	bx	lr
 800ed34:	20005070 	.word	0x20005070

0800ed38 <_exit>:
 800ed38:	e7fe      	b.n	800ed38 <_exit>
	...

0800ed3c <_init>:
 800ed3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed3e:	bf00      	nop
 800ed40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ed42:	bc08      	pop	{r3}
 800ed44:	469e      	mov	lr, r3
 800ed46:	4770      	bx	lr

0800ed48 <_fini>:
 800ed48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed4a:	bf00      	nop
 800ed4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ed4e:	bc08      	pop	{r3}
 800ed50:	469e      	mov	lr, r3
 800ed52:	4770      	bx	lr
